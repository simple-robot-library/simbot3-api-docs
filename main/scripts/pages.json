[{"name":"abstract class BaseKFunctionListenerProcessor","description":"love.forte.simboot.core.listener.BaseKFunctionListenerProcessor","location":"simboot-core/love.forte.simboot.core.listener/-base-k-function-listener-processor/index.html","searchKeys":["BaseKFunctionListenerProcessor","abstract class BaseKFunctionListenerProcessor","love.forte.simboot.core.listener.BaseKFunctionListenerProcessor"]},{"name":"abstract fun <T : Any> bean(name: String, bean: Bean<out T>): Bean<out T>","description":"love.forte.simboot.core.application.BeanContainerBuilder.bean","location":"simboot-core/love.forte.simboot.core.application/-bean-container-builder/bean.html","searchKeys":["bean","abstract fun <T : Any> bean(name: String, bean: Bean<out T>): Bean<out T>","love.forte.simboot.core.application.BeanContainerBuilder.bean"]},{"name":"abstract fun <T : Any> bean(name: String, instance: T): Bean<out T>","description":"love.forte.simboot.core.application.BeanContainerBuilder.bean","location":"simboot-core/love.forte.simboot.core.application/-bean-container-builder/bean.html","searchKeys":["bean","abstract fun <T : Any> bean(name: String, instance: T): Bean<out T>","love.forte.simboot.core.application.BeanContainerBuilder.bean"]},{"name":"abstract fun <T : Any> bean(name: String, type: KClass<T>, factory: () -> T): Bean<out T>","description":"love.forte.simboot.core.application.BeanContainerBuilder.bean","location":"simboot-core/love.forte.simboot.core.application/-bean-container-builder/bean.html","searchKeys":["bean","abstract fun <T : Any> bean(name: String, type: KClass<T>, factory: () -> T): Bean<out T>","love.forte.simboot.core.application.BeanContainerBuilder.bean"]},{"name":"abstract fun beans(beanContainerBuilder: BeanContainerBuilder.() -> Unit)","description":"love.forte.simboot.core.application.BootApplicationBuilder.beans","location":"simboot-core/love.forte.simboot.core.application/-boot-application-builder/beans.html","searchKeys":["beans","abstract fun beans(beanContainerBuilder: BeanContainerBuilder.() -> Unit)","love.forte.simboot.core.application.BootApplicationBuilder.beans"]},{"name":"abstract fun binder(id: String? = null, binderFactory: ParameterBinderFactory)","description":"love.forte.simboot.core.application.ParameterBinderBuilder.binder","location":"simboot-core/love.forte.simboot.core.application/-parameter-binder-builder/binder.html","searchKeys":["binder","abstract fun binder(id: String? = null, binderFactory: ParameterBinderFactory)","love.forte.simboot.core.application.ParameterBinderBuilder.binder"]},{"name":"abstract fun binder(id: String? = null, function: KFunction<*>, instanceGetter: (ParameterBinderFactory.Context) -> Any?): ParameterBinderFactory","description":"love.forte.simboot.core.application.ParameterBinderBuilder.binder","location":"simboot-core/love.forte.simboot.core.application/-parameter-binder-builder/binder.html","searchKeys":["binder","abstract fun binder(id: String? = null, function: KFunction<*>, instanceGetter: (ParameterBinderFactory.Context) -> Any?): ParameterBinderFactory","love.forte.simboot.core.application.ParameterBinderBuilder.binder"]},{"name":"abstract fun binders(parameterBinderBuilder: ParameterBinderBuilder.() -> Unit)","description":"love.forte.simboot.core.application.BootApplicationBuilder.binders","location":"simboot-core/love.forte.simboot.core.application/-boot-application-builder/binders.html","searchKeys":["binders","abstract fun binders(parameterBinderBuilder: ParameterBinderBuilder.() -> Unit)","love.forte.simboot.core.application.BootApplicationBuilder.binders"]},{"name":"abstract fun getGlobals(): List<ParameterBinderFactory>","description":"love.forte.simboot.core.binder.BinderManager.getGlobals","location":"simboot-core/love.forte.simboot.core.binder/-binder-manager/get-globals.html","searchKeys":["getGlobals","abstract fun getGlobals(): List<ParameterBinderFactory>","love.forte.simboot.core.binder.BinderManager.getGlobals"]},{"name":"abstract fun postProcessor(processor: CoreBeanManagerBeanRegisterPostProcessor)","description":"love.forte.simboot.core.application.BeanContainerBuilder.postProcessor","location":"simboot-core/love.forte.simboot.core.application/-bean-container-builder/post-processor.html","searchKeys":["postProcessor","abstract fun postProcessor(processor: CoreBeanManagerBeanRegisterPostProcessor)","love.forte.simboot.core.application.BeanContainerBuilder.postProcessor"]},{"name":"abstract fun resolveFunctionToBinderFactory(function: KFunction<*>, instanceGetter: (ParameterBinderFactory.Context) -> Any?): ParameterBinderFactory","description":"love.forte.simboot.core.binder.BinderManager.resolveFunctionToBinderFactory","location":"simboot-core/love.forte.simboot.core.binder/-binder-manager/resolve-function-to-binder-factory.html","searchKeys":["resolveFunctionToBinderFactory","abstract fun resolveFunctionToBinderFactory(function: KFunction<*>, instanceGetter: (ParameterBinderFactory.Context) -> Any?): ParameterBinderFactory","love.forte.simboot.core.binder.BinderManager.resolveFunctionToBinderFactory"]},{"name":"abstract fun scan(classLoader: ClassLoader, targetPackages: List<String>)","description":"love.forte.simboot.core.application.BeanContainerBuilder.scan","location":"simboot-core/love.forte.simboot.core.application/-bean-container-builder/scan.html","searchKeys":["scan","abstract fun scan(classLoader: ClassLoader, targetPackages: List<String>)","love.forte.simboot.core.application.BeanContainerBuilder.scan"]},{"name":"abstract fun scan(classLoader: ClassLoader, vararg targetPackages: String)","description":"love.forte.simboot.core.application.BeanContainerBuilder.scan","location":"simboot-core/love.forte.simboot.core.application/-bean-container-builder/scan.html","searchKeys":["scan","abstract fun scan(classLoader: ClassLoader, vararg targetPackages: String)","love.forte.simboot.core.application.BeanContainerBuilder.scan"]},{"name":"abstract fun scan(targetPackages: List<String>)","description":"love.forte.simboot.core.application.BeanContainerBuilder.scan","location":"simboot-core/love.forte.simboot.core.application/-bean-container-builder/scan.html","searchKeys":["scan","abstract fun scan(targetPackages: List<String>)","love.forte.simboot.core.application.BeanContainerBuilder.scan"]},{"name":"abstract fun scan(vararg targetPackages: String)","description":"love.forte.simboot.core.application.BeanContainerBuilder.scan","location":"simboot-core/love.forte.simboot.core.application/-bean-container-builder/scan.html","searchKeys":["scan","abstract fun scan(vararg targetPackages: String)","love.forte.simboot.core.application.BeanContainerBuilder.scan"]},{"name":"abstract operator fun get(id: String): ParameterBinderFactory?","description":"love.forte.simboot.core.binder.BinderManager.get","location":"simboot-core/love.forte.simboot.core.binder/-binder-manager/get.html","searchKeys":["get","abstract operator fun get(id: String): ParameterBinderFactory?","love.forte.simboot.core.binder.BinderManager.get"]},{"name":"abstract override fun eventProcessor(configurator: SimpleListenerManagerConfiguration.(environment: Application.Environment) -> Unit)","description":"love.forte.simboot.core.application.BootApplicationBuilder.eventProcessor","location":"simboot-core/love.forte.simboot.core.application/-boot-application-builder/event-processor.html","searchKeys":["eventProcessor","abstract override fun eventProcessor(configurator: SimpleListenerManagerConfiguration.(environment: Application.Environment) -> Unit)","love.forte.simboot.core.application.BootApplicationBuilder.eventProcessor"]},{"name":"abstract suspend override fun join()","description":"love.forte.simboot.core.application.BootApplication.join","location":"simboot-core/love.forte.simboot.core.application/-boot-application/join.html","searchKeys":["join","abstract suspend override fun join()","love.forte.simboot.core.application.BootApplication.join"]},{"name":"abstract val beanContainer: BeanContainer","description":"love.forte.simboot.core.application.BootApplication.beanContainer","location":"simboot-core/love.forte.simboot.core.application/-boot-application/bean-container.html","searchKeys":["beanContainer","abstract val beanContainer: BeanContainer","love.forte.simboot.core.application.BootApplication.beanContainer"]},{"name":"abstract val globalBinderFactorySize: Int","description":"love.forte.simboot.core.binder.BinderManager.globalBinderFactorySize","location":"simboot-core/love.forte.simboot.core.binder/-binder-manager/global-binder-factory-size.html","searchKeys":["globalBinderFactorySize","abstract val globalBinderFactorySize: Int","love.forte.simboot.core.binder.BinderManager.globalBinderFactorySize"]},{"name":"abstract val normalBinderFactorySize: Int","description":"love.forte.simboot.core.binder.BinderManager.normalBinderFactorySize","location":"simboot-core/love.forte.simboot.core.binder/-binder-manager/normal-binder-factory-size.html","searchKeys":["normalBinderFactorySize","abstract val normalBinderFactorySize: Int","love.forte.simboot.core.binder.BinderManager.normalBinderFactorySize"]},{"name":"abstract val value: T","description":"love.forte.simboot.core.utils.ResourcesScanner.ResourceVisitValue.value","location":"simboot-core/love.forte.simboot.core.utils/-resources-scanner/-resource-visit-value/value.html","searchKeys":["value","abstract val value: T","love.forte.simboot.core.utils.ResourcesScanner.ResourceVisitValue.value"]},{"name":"abstract var parentContainer: BeanContainer","description":"love.forte.simboot.core.application.BeanContainerBuilder.parentContainer","location":"simboot-core/love.forte.simboot.core.application/-bean-container-builder/parent-container.html","searchKeys":["parentContainer","abstract var parentContainer: BeanContainer","love.forte.simboot.core.application.BeanContainerBuilder.parentContainer"]},{"name":"annotation class SimbootApplication(val classesPackages: Array<String> = [], val topListenerPackages: Array<String> = [], val classesPackagesForTopListener: Boolean = false, val topBinderPackages: Array<String> = [], val classesPackagesForTopBinder: Boolean = false, val botResources: Array<String> = [], val autoStartBots: Boolean = true)","description":"love.forte.simboot.core.SimbootApplication","location":"simboot-core/love.forte.simboot.core/-simboot-application/index.html","searchKeys":["SimbootApplication","annotation class SimbootApplication(val classesPackages: Array<String> = [], val topListenerPackages: Array<String> = [], val classesPackagesForTopListener: Boolean = false, val topBinderPackages: Array<String> = [], val classesPackagesForTopBinder: Boolean = false, val botResources: Array<String> = [], val autoStartBots: Boolean = true)","love.forte.simboot.core.SimbootApplication"]},{"name":"class CoreBinderManager(globalBinderFactories: List<ParameterBinderFactory> = emptyList(), idBinderFactories: MutableMap<String, ParameterBinderFactory> = mutableMapOf()) : BinderManager","description":"love.forte.simboot.core.binder.CoreBinderManager","location":"simboot-core/love.forte.simboot.core.binder/-core-binder-manager/index.html","searchKeys":["CoreBinderManager","class CoreBinderManager(globalBinderFactories: List<ParameterBinderFactory> = emptyList(), idBinderFactories: MutableMap<String, ParameterBinderFactory> = mutableMapOf()) : BinderManager","love.forte.simboot.core.binder.CoreBinderManager"]},{"name":"class KFunctionEventListener<R>(targets: Set<Event.Key<*>>, val binders: Array<ParameterBinder>, attributeMap: AttributeMutableMap, matcher: suspend (EventListenerProcessingContext) -> Boolean, caller: KFunction<R>) : FunctionalBindableEventListener<R> ","description":"love.forte.simboot.core.listener.KFunctionEventListener","location":"simboot-core/love.forte.simboot.core.listener/-k-function-event-listener/index.html","searchKeys":["KFunctionEventListener","class KFunctionEventListener<R>(targets: Set<Event.Key<*>>, val binders: Array<ParameterBinder>, attributeMap: AttributeMutableMap, matcher: suspend (EventListenerProcessingContext) -> Boolean, caller: KFunction<R>) : FunctionalBindableEventListener<R> ","love.forte.simboot.core.listener.KFunctionEventListener"]},{"name":"class KFunctionListenerProcessor(annotationTool: KAnnotationTool = KAnnotationTool()) : BaseKFunctionListenerProcessor","description":"love.forte.simboot.core.listener.KFunctionListenerProcessor","location":"simboot-core/love.forte.simboot.core.listener/-k-function-listener-processor/index.html","searchKeys":["KFunctionListenerProcessor","class KFunctionListenerProcessor(annotationTool: KAnnotationTool = KAnnotationTool()) : BaseKFunctionListenerProcessor","love.forte.simboot.core.listener.KFunctionListenerProcessor"]},{"name":"class ResourcesScanner<T>(var classLoader: ClassLoader = ResourcesScanner::class.java.classLoader) : Closeable","description":"love.forte.simboot.core.utils.ResourcesScanner","location":"simboot-core/love.forte.simboot.core.utils/-resources-scanner/index.html","searchKeys":["ResourcesScanner","class ResourcesScanner<T>(var classLoader: ClassLoader = ResourcesScanner::class.java.classLoader) : Closeable","love.forte.simboot.core.utils.ResourcesScanner"]},{"name":"const val DEFAULT_BOT_VERIFY_GLOB: String","description":"love.forte.simboot.core.application.BootApplicationConfiguration.Companion.DEFAULT_BOT_VERIFY_GLOB","location":"simboot-core/love.forte.simboot.core.application/-boot-application-configuration/-companion/-d-e-f-a-u-l-t_-b-o-t_-v-e-r-i-f-y_-g-l-o-b.html","searchKeys":["DEFAULT_BOT_VERIFY_GLOB","const val DEFAULT_BOT_VERIFY_GLOB: String","love.forte.simboot.core.application.BootApplicationConfiguration.Companion.DEFAULT_BOT_VERIFY_GLOB"]},{"name":"const val RAW_BINDERS_NAME: String","description":"love.forte.simboot.core.listener.BootListenerAttributes.RAW_BINDERS_NAME","location":"simboot-core/love.forte.simboot.core.listener/-boot-listener-attributes/-r-a-w_-b-i-n-d-e-r-s_-n-a-m-e.html","searchKeys":["RAW_BINDERS_NAME","const val RAW_BINDERS_NAME: String","love.forte.simboot.core.listener.BootListenerAttributes.RAW_BINDERS_NAME"]},{"name":"const val RAW_FUNCTION_NAME: String","description":"love.forte.simboot.core.listener.BootListenerAttributes.RAW_FUNCTION_NAME","location":"simboot-core/love.forte.simboot.core.listener/-boot-listener-attributes/-r-a-w_-f-u-n-c-t-i-o-n_-n-a-m-e.html","searchKeys":["RAW_FUNCTION_NAME","const val RAW_FUNCTION_NAME: String","love.forte.simboot.core.listener.BootListenerAttributes.RAW_FUNCTION_NAME"]},{"name":"const val RAW_LISTEN_TARGETS_NAME: String","description":"love.forte.simboot.core.listener.BootListenerAttributes.RAW_LISTEN_TARGETS_NAME","location":"simboot-core/love.forte.simboot.core.listener/-boot-listener-attributes/-r-a-w_-l-i-s-t-e-n_-t-a-r-g-e-t-s_-n-a-m-e.html","searchKeys":["RAW_LISTEN_TARGETS_NAME","const val RAW_LISTEN_TARGETS_NAME: String","love.forte.simboot.core.listener.BootListenerAttributes.RAW_LISTEN_TARGETS_NAME"]},{"name":"data class FiltersAnnotationProcessContext(val annotateElement: KAnnotatedElement, val filters: Filters, val listener: EventListener, val listenerAttributes: MutableAttributeMap, val context: FunctionalListenerProcessContext)","description":"love.forte.simboot.core.filter.FiltersAnnotationProcessContext","location":"simboot-core/love.forte.simboot.core.filter/-filters-annotation-process-context/index.html","searchKeys":["FiltersAnnotationProcessContext","data class FiltersAnnotationProcessContext(val annotateElement: KAnnotatedElement, val filters: Filters, val listener: EventListener, val listenerAttributes: MutableAttributeMap, val context: FunctionalListenerProcessContext)","love.forte.simboot.core.filter.FiltersAnnotationProcessContext"]},{"name":"data class FunctionalListenerProcessContext(val function: KFunction<*>, val binderManager: BinderManager, val beanContainer: BeanContainer)","description":"love.forte.simboot.core.listener.FunctionalListenerProcessContext","location":"simboot-core/love.forte.simboot.core.listener/-functional-listener-process-context/index.html","searchKeys":["FunctionalListenerProcessContext","data class FunctionalListenerProcessContext(val function: KFunction<*>, val binderManager: BinderManager, val beanContainer: BeanContainer)","love.forte.simboot.core.listener.FunctionalListenerProcessContext"]},{"name":"data class JarEntryValue : ResourcesScanner.ResourceVisitValue<JarEntry> ","description":"love.forte.simboot.core.utils.ResourcesScanner.ResourceVisitValue.JarEntryValue","location":"simboot-core/love.forte.simboot.core.utils/-resources-scanner/-resource-visit-value/-jar-entry-value/index.html","searchKeys":["JarEntryValue","data class JarEntryValue : ResourcesScanner.ResourceVisitValue<JarEntry> ","love.forte.simboot.core.utils.ResourcesScanner.ResourceVisitValue.JarEntryValue"]},{"name":"data class PathValue : ResourcesScanner.ResourceVisitValue<Path> ","description":"love.forte.simboot.core.utils.ResourcesScanner.ResourceVisitValue.PathValue","location":"simboot-core/love.forte.simboot.core.utils/-resources-scanner/-resource-visit-value/-path-value/index.html","searchKeys":["PathValue","data class PathValue : ResourcesScanner.ResourceVisitValue<Path> ","love.forte.simboot.core.utils.ResourcesScanner.ResourceVisitValue.PathValue"]},{"name":"fun <C : MutableCollection<T>> collect(allResources: Boolean, collection: C, classLoader: ClassLoader = this.classLoader): C","description":"love.forte.simboot.core.utils.ResourcesScanner.collect","location":"simboot-core/love.forte.simboot.core.utils/-resources-scanner/collect.html","searchKeys":["collect","fun <C : MutableCollection<T>> collect(allResources: Boolean, collection: C, classLoader: ClassLoader = this.classLoader): C","love.forte.simboot.core.utils.ResourcesScanner.collect"]},{"name":"fun <R> KFunctionEventListener(targets: Set<Event.Key<*>>, binders: Array<ParameterBinder>, attributeMap: AttributeMutableMap, matcher: suspend (EventListenerProcessingContext) -> Boolean, caller: KFunction<R>)","description":"love.forte.simboot.core.listener.KFunctionEventListener.KFunctionEventListener","location":"simboot-core/love.forte.simboot.core.listener/-k-function-event-listener/-k-function-event-listener.html","searchKeys":["KFunctionEventListener","fun <R> KFunctionEventListener(targets: Set<Event.Key<*>>, binders: Array<ParameterBinder>, attributeMap: AttributeMutableMap, matcher: suspend (EventListenerProcessingContext) -> Boolean, caller: KFunction<R>)","love.forte.simboot.core.listener.KFunctionEventListener.KFunctionEventListener"]},{"name":"fun <T> ResourcesScanner<T>.toList(allResources: Boolean): List<T>","description":"love.forte.simboot.core.utils.toList","location":"simboot-core/love.forte.simboot.core.utils/to-list.html","searchKeys":["toList","fun <T> ResourcesScanner<T>.toList(allResources: Boolean): List<T>","love.forte.simboot.core.utils.toList"]},{"name":"fun <T> ResourcesScanner<T>.toMutableList(allResources: Boolean): MutableList<T>","description":"love.forte.simboot.core.utils.toMutableList","location":"simboot-core/love.forte.simboot.core.utils/to-mutable-list.html","searchKeys":["toMutableList","fun <T> ResourcesScanner<T>.toMutableList(allResources: Boolean): MutableList<T>","love.forte.simboot.core.utils.toMutableList"]},{"name":"fun <T> ResourcesScanner<T>.visitJarEntry(visitor: (JarEntry, URL) -> Sequence<T>): ResourcesScanner<T>","description":"love.forte.simboot.core.utils.visitJarEntry","location":"simboot-core/love.forte.simboot.core.utils/visit-jar-entry.html","searchKeys":["visitJarEntry","fun <T> ResourcesScanner<T>.visitJarEntry(visitor: (JarEntry, URL) -> Sequence<T>): ResourcesScanner<T>","love.forte.simboot.core.utils.visitJarEntry"]},{"name":"fun <T> ResourcesScanner<T>.visitPath(visitor: (ResourcesScanner.ResourceVisitValue.PathValue) -> Sequence<T>): ResourcesScanner<T>","description":"love.forte.simboot.core.utils.visitPath","location":"simboot-core/love.forte.simboot.core.utils/visit-path.html","searchKeys":["visitPath","fun <T> ResourcesScanner<T>.visitPath(visitor: (ResourcesScanner.ResourceVisitValue.PathValue) -> Sequence<T>): ResourcesScanner<T>","love.forte.simboot.core.utils.visitPath"]},{"name":"fun <T> scanClass(classLoader: ClassLoader, targetPackages: List<String>, onFailure: (e: Throwable, className: String) -> Class<*>?, collector: Sequence<Class<*>>.() -> T): T","description":"love.forte.simboot.core.utils.scanClass","location":"simboot-core/love.forte.simboot.core.utils/scan-class.html","searchKeys":["scanClass","fun <T> scanClass(classLoader: ClassLoader, targetPackages: List<String>, onFailure: (e: Throwable, className: String) -> Class<*>?, collector: Sequence<Class<*>>.() -> T): T","love.forte.simboot.core.utils.scanClass"]},{"name":"fun <T> scanTopClass(classLoader: ClassLoader, targetPackages: List<String>, onFailure: (e: Throwable, className: String) -> Class<*>?, collector: Sequence<Class<*>>.() -> T): T","description":"love.forte.simboot.core.utils.scanTopClass","location":"simboot-core/love.forte.simboot.core.utils/scan-top-class.html","searchKeys":["scanTopClass","fun <T> scanTopClass(classLoader: ClassLoader, targetPackages: List<String>, onFailure: (e: Throwable, className: String) -> Class<*>?, collector: Sequence<Class<*>>.() -> T): T","love.forte.simboot.core.utils.scanTopClass"]},{"name":"fun BaseKFunctionListenerProcessor()","description":"love.forte.simboot.core.listener.BaseKFunctionListenerProcessor.BaseKFunctionListenerProcessor","location":"simboot-core/love.forte.simboot.core.listener/-base-k-function-listener-processor/-base-k-function-listener-processor.html","searchKeys":["BaseKFunctionListenerProcessor","fun BaseKFunctionListenerProcessor()","love.forte.simboot.core.listener.BaseKFunctionListenerProcessor.BaseKFunctionListenerProcessor"]},{"name":"fun BootApplicationConfiguration()","description":"love.forte.simboot.core.application.BootApplicationConfiguration.BootApplicationConfiguration","location":"simboot-core/love.forte.simboot.core.application/-boot-application-configuration/-boot-application-configuration.html","searchKeys":["BootApplicationConfiguration","fun BootApplicationConfiguration()","love.forte.simboot.core.application.BootApplicationConfiguration.BootApplicationConfiguration"]},{"name":"fun Class<*>.isTopClass(): Boolean","description":"love.forte.simboot.core.utils.isTopClass","location":"simboot-core/love.forte.simboot.core.utils/is-top-class.html","searchKeys":["isTopClass","fun Class<*>.isTopClass(): Boolean","love.forte.simboot.core.utils.isTopClass"]},{"name":"fun CoreBinderManager(globalBinderFactories: List<ParameterBinderFactory> = emptyList(), idBinderFactories: MutableMap<String, ParameterBinderFactory> = mutableMapOf())","description":"love.forte.simboot.core.binder.CoreBinderManager.CoreBinderManager","location":"simboot-core/love.forte.simboot.core.binder/-core-binder-manager/-core-binder-manager.html","searchKeys":["CoreBinderManager","fun CoreBinderManager(globalBinderFactories: List<ParameterBinderFactory> = emptyList(), idBinderFactories: MutableMap<String, ParameterBinderFactory> = mutableMapOf())","love.forte.simboot.core.binder.CoreBinderManager.CoreBinderManager"]},{"name":"fun FiltersAnnotationProcessContext(annotateElement: KAnnotatedElement, filters: Filters, listener: EventListener, listenerAttributes: MutableAttributeMap, context: FunctionalListenerProcessContext)","description":"love.forte.simboot.core.filter.FiltersAnnotationProcessContext.FiltersAnnotationProcessContext","location":"simboot-core/love.forte.simboot.core.filter/-filters-annotation-process-context/-filters-annotation-process-context.html","searchKeys":["FiltersAnnotationProcessContext","fun FiltersAnnotationProcessContext(annotateElement: KAnnotatedElement, filters: Filters, listener: EventListener, listenerAttributes: MutableAttributeMap, context: FunctionalListenerProcessContext)","love.forte.simboot.core.filter.FiltersAnnotationProcessContext.FiltersAnnotationProcessContext"]},{"name":"fun FunctionalListenerProcessContext(function: KFunction<*>, binderManager: BinderManager, beanContainer: BeanContainer)","description":"love.forte.simboot.core.listener.FunctionalListenerProcessContext.FunctionalListenerProcessContext","location":"simboot-core/love.forte.simboot.core.listener/-functional-listener-process-context/-functional-listener-process-context.html","searchKeys":["FunctionalListenerProcessContext","fun FunctionalListenerProcessContext(function: KFunction<*>, binderManager: BinderManager, beanContainer: BeanContainer)","love.forte.simboot.core.listener.FunctionalListenerProcessContext.FunctionalListenerProcessContext"]},{"name":"fun KFunction<*>.sign(): String","description":"love.forte.simboot.core.utils.sign","location":"simboot-core/love.forte.simboot.core.utils/sign.html","searchKeys":["sign","fun KFunction<*>.sign(): String","love.forte.simboot.core.utils.sign"]},{"name":"fun KFunctionListenerProcessor(annotationTool: KAnnotationTool = KAnnotationTool())","description":"love.forte.simboot.core.listener.KFunctionListenerProcessor.KFunctionListenerProcessor","location":"simboot-core/love.forte.simboot.core.listener/-k-function-listener-processor/-k-function-listener-processor.html","searchKeys":["KFunctionListenerProcessor","fun KFunctionListenerProcessor(annotationTool: KAnnotationTool = KAnnotationTool())","love.forte.simboot.core.listener.KFunctionListenerProcessor.KFunctionListenerProcessor"]},{"name":"fun ResourcesScanner(classLoader: ClassLoader = ResourcesScanner::class.java.classLoader)","description":"love.forte.simboot.core.utils.ResourcesScanner.ResourcesScanner","location":"simboot-core/love.forte.simboot.core.utils/-resources-scanner/-resources-scanner.html","searchKeys":["ResourcesScanner","fun ResourcesScanner(classLoader: ClassLoader = ResourcesScanner::class.java.classLoader)","love.forte.simboot.core.utils.ResourcesScanner.ResourcesScanner"]},{"name":"fun SimbootApplicationException()","description":"love.forte.simboot.core.SimbootApplicationException.SimbootApplicationException","location":"simboot-core/love.forte.simboot.core/-simboot-application-exception/-simboot-application-exception.html","searchKeys":["SimbootApplicationException","fun SimbootApplicationException()","love.forte.simboot.core.SimbootApplicationException.SimbootApplicationException"]},{"name":"fun SimbootApplicationException(cause: Throwable?)","description":"love.forte.simboot.core.SimbootApplicationException.SimbootApplicationException","location":"simboot-core/love.forte.simboot.core/-simboot-application-exception/-simboot-application-exception.html","searchKeys":["SimbootApplicationException","fun SimbootApplicationException(cause: Throwable?)","love.forte.simboot.core.SimbootApplicationException.SimbootApplicationException"]},{"name":"fun SimbootApplicationException(message: String?)","description":"love.forte.simboot.core.SimbootApplicationException.SimbootApplicationException","location":"simboot-core/love.forte.simboot.core/-simboot-application-exception/-simboot-application-exception.html","searchKeys":["SimbootApplicationException","fun SimbootApplicationException(message: String?)","love.forte.simboot.core.SimbootApplicationException.SimbootApplicationException"]},{"name":"fun SimbootApplicationException(message: String?, cause: Throwable?)","description":"love.forte.simboot.core.SimbootApplicationException.SimbootApplicationException","location":"simboot-core/love.forte.simboot.core/-simboot-application-exception/-simboot-application-exception.html","searchKeys":["SimbootApplicationException","fun SimbootApplicationException(message: String?, cause: Throwable?)","love.forte.simboot.core.SimbootApplicationException.SimbootApplicationException"]},{"name":"fun bootApplication(configurator: BootApplicationConfiguration.() -> Unit = {}, builder: BootApplicationBuilder.(BootApplicationConfiguration) -> Unit = {}): ApplicationLauncher<BootApplication>","description":"love.forte.simboot.core.application.bootApplication","location":"simboot-core/love.forte.simboot.core.application/boot-application.html","searchKeys":["bootApplication","fun bootApplication(configurator: BootApplicationConfiguration.() -> Unit = {}, builder: BootApplicationBuilder.(BootApplicationConfiguration) -> Unit = {}): ApplicationLauncher<BootApplication>","love.forte.simboot.core.application.bootApplication"]},{"name":"fun buildBootApplicationLauncher(block: ApplicationDslBuilder<BootApplicationConfiguration, BootApplicationBuilder, BootApplication>.() -> Unit = {}): ApplicationLauncher<BootApplication>","description":"love.forte.simboot.core.application.buildBootApplicationLauncher","location":"simboot-core/love.forte.simboot.core.application/build-boot-application-launcher.html","searchKeys":["buildBootApplicationLauncher","fun buildBootApplicationLauncher(block: ApplicationDslBuilder<BootApplicationConfiguration, BootApplicationBuilder, BootApplication>.() -> Unit = {}): ApplicationLauncher<BootApplication>","love.forte.simboot.core.application.buildBootApplicationLauncher"]},{"name":"fun clear()","description":"love.forte.simboot.core.utils.ResourcesScanner.clear","location":"simboot-core/love.forte.simboot.core.utils/-resources-scanner/clear.html","searchKeys":["clear","fun clear()","love.forte.simboot.core.utils.ResourcesScanner.clear"]},{"name":"fun collectSequence(allResources: Boolean, classLoader: ClassLoader = this.classLoader): Sequence<T>","description":"love.forte.simboot.core.utils.ResourcesScanner.collectSequence","location":"simboot-core/love.forte.simboot.core.utils/-resources-scanner/collect-sequence.html","searchKeys":["collectSequence","fun collectSequence(allResources: Boolean, classLoader: ClassLoader = this.classLoader): Sequence<T>","love.forte.simboot.core.utils.ResourcesScanner.collectSequence"]},{"name":"fun glob(glob: String): ResourcesScanner<T>","description":"love.forte.simboot.core.utils.ResourcesScanner.glob","location":"simboot-core/love.forte.simboot.core.utils/-resources-scanner/glob.html","searchKeys":["glob","fun glob(glob: String): ResourcesScanner<T>","love.forte.simboot.core.utils.ResourcesScanner.glob"]},{"name":"fun process(context: FiltersAnnotationProcessContext): List<EventFilter>","description":"love.forte.simboot.core.filter.CoreFiltersAnnotationProcessor.process","location":"simboot-core/love.forte.simboot.core.filter/-core-filters-annotation-processor/process.html","searchKeys":["process","fun process(context: FiltersAnnotationProcessContext): List<EventFilter>","love.forte.simboot.core.filter.CoreFiltersAnnotationProcessor.process"]},{"name":"fun process(context: FunctionalListenerProcessContext): EventListener","description":"love.forte.simboot.core.listener.KFunctionListenerProcessor.process","location":"simboot-core/love.forte.simboot.core.listener/-k-function-listener-processor/process.html","searchKeys":["process","fun process(context: FunctionalListenerProcessContext): EventListener","love.forte.simboot.core.listener.KFunctionListenerProcessor.process"]},{"name":"fun process(filters: Filters, filter: Filter, context: FiltersAnnotationProcessContext): EventFilter?","description":"love.forte.simboot.core.filter.CoreFilterAnnotationProcessor.process","location":"simboot-core/love.forte.simboot.core.filter/-core-filter-annotation-processor/process.html","searchKeys":["process","fun process(filters: Filters, filter: Filter, context: FiltersAnnotationProcessContext): EventFilter?","love.forte.simboot.core.filter.CoreFilterAnnotationProcessor.process"]},{"name":"fun run4J(entrance: Class<*>? = null, vararg args: String): ApplicationLauncher<BootApplication>","description":"love.forte.simboot.core.SimbootApp.run4J","location":"simboot-core/love.forte.simboot.core/-simboot-app/run4-j.html","searchKeys":["run4J","fun run4J(entrance: Class<*>? = null, vararg args: String): ApplicationLauncher<BootApplication>","love.forte.simboot.core.SimbootApp.run4J"]},{"name":"fun scan(resource: String): ResourcesScanner<T>","description":"love.forte.simboot.core.utils.ResourcesScanner.scan","location":"simboot-core/love.forte.simboot.core.utils/-resources-scanner/scan.html","searchKeys":["scan","fun scan(resource: String): ResourcesScanner<T>","love.forte.simboot.core.utils.ResourcesScanner.scan"]},{"name":"fun visit(visitor: (ResourcesScanner.ResourceVisitValue<*>) -> Sequence<T>): ResourcesScanner<T>","description":"love.forte.simboot.core.utils.ResourcesScanner.visit","location":"simboot-core/love.forte.simboot.core.utils/-resources-scanner/visit.html","searchKeys":["visit","fun visit(visitor: (ResourcesScanner.ResourceVisitValue<*>) -> Sequence<T>): ResourcesScanner<T>","love.forte.simboot.core.utils.ResourcesScanner.visit"]},{"name":"inline fun <T : Any> BeanContainerBuilder.beanBy(name: String, crossinline factory: () -> T): Bean<out T>","description":"love.forte.simboot.core.application.beanBy","location":"simboot-core/love.forte.simboot.core.application/bean-by.html","searchKeys":["beanBy","inline fun <T : Any> BeanContainerBuilder.beanBy(name: String, crossinline factory: () -> T): Bean<out T>","love.forte.simboot.core.application.beanBy"]},{"name":"inline suspend fun <T> simbootApp(vararg args: String, crossinline configurator: BootApplicationConfiguration.() -> Unit = {}): BootApplication","description":"love.forte.simboot.core.simbootApp","location":"simboot-core/love.forte.simboot.core/simboot-app.html","searchKeys":["simbootApp","inline suspend fun <T> simbootApp(vararg args: String, crossinline configurator: BootApplicationConfiguration.() -> Unit = {}): BootApplication","love.forte.simboot.core.simbootApp"]},{"name":"interface BeanContainerBuilder","description":"love.forte.simboot.core.application.BeanContainerBuilder","location":"simboot-core/love.forte.simboot.core.application/-bean-container-builder/index.html","searchKeys":["BeanContainerBuilder","interface BeanContainerBuilder","love.forte.simboot.core.application.BeanContainerBuilder"]},{"name":"interface BinderManager","description":"love.forte.simboot.core.binder.BinderManager","location":"simboot-core/love.forte.simboot.core.binder/-binder-manager/index.html","searchKeys":["BinderManager","interface BinderManager","love.forte.simboot.core.binder.BinderManager"]},{"name":"interface BootApplication : SimpleApplication, SimbootContext","description":"love.forte.simboot.core.application.BootApplication","location":"simboot-core/love.forte.simboot.core.application/-boot-application/index.html","searchKeys":["BootApplication","interface BootApplication : SimpleApplication, SimbootContext","love.forte.simboot.core.application.BootApplication"]},{"name":"interface BootApplicationBuilder : StandardApplicationBuilder<BootApplication> ","description":"love.forte.simboot.core.application.BootApplicationBuilder","location":"simboot-core/love.forte.simboot.core.application/-boot-application-builder/index.html","searchKeys":["BootApplicationBuilder","interface BootApplicationBuilder : StandardApplicationBuilder<BootApplication> ","love.forte.simboot.core.application.BootApplicationBuilder"]},{"name":"interface ParameterBinderBuilder","description":"love.forte.simboot.core.application.ParameterBinderBuilder","location":"simboot-core/love.forte.simboot.core.application/-parameter-binder-builder/index.html","searchKeys":["ParameterBinderBuilder","interface ParameterBinderBuilder","love.forte.simboot.core.application.ParameterBinderBuilder"]},{"name":"object AutoInjectBinderFactory : ParameterBinderFactory","description":"love.forte.simboot.core.binder.AutoInjectBinderFactory","location":"simboot-core/love.forte.simboot.core.binder/-auto-inject-binder-factory/index.html","searchKeys":["AutoInjectBinderFactory","object AutoInjectBinderFactory : ParameterBinderFactory","love.forte.simboot.core.binder.AutoInjectBinderFactory"]},{"name":"object Boot : ApplicationFactory<BootApplicationConfiguration, BootApplicationBuilder, BootApplication> ","description":"love.forte.simboot.core.application.Boot","location":"simboot-core/love.forte.simboot.core.application/-boot/index.html","searchKeys":["Boot","object Boot : ApplicationFactory<BootApplicationConfiguration, BootApplicationBuilder, BootApplication> ","love.forte.simboot.core.application.Boot"]},{"name":"object BootListenerAttributes","description":"love.forte.simboot.core.listener.BootListenerAttributes","location":"simboot-core/love.forte.simboot.core.listener/-boot-listener-attributes/index.html","searchKeys":["BootListenerAttributes","object BootListenerAttributes","love.forte.simboot.core.listener.BootListenerAttributes"]},{"name":"object Companion","description":"love.forte.simboot.core.application.BootApplicationConfiguration.Companion","location":"simboot-core/love.forte.simboot.core.application/-boot-application-configuration/-companion/index.html","searchKeys":["Companion","object Companion","love.forte.simboot.core.application.BootApplicationConfiguration.Companion"]},{"name":"object Companion","description":"love.forte.simboot.core.utils.ResourcesScanner.Companion","location":"simboot-core/love.forte.simboot.core.utils/-resources-scanner/-companion/index.html","searchKeys":["Companion","object Companion","love.forte.simboot.core.utils.ResourcesScanner.Companion"]},{"name":"object CoreAnnotationEventFilterFactory : AnnotationEventFilterFactory","description":"love.forte.simboot.core.filter.CoreAnnotationEventFilterFactory","location":"simboot-core/love.forte.simboot.core.filter/-core-annotation-event-filter-factory/index.html","searchKeys":["CoreAnnotationEventFilterFactory","object CoreAnnotationEventFilterFactory : AnnotationEventFilterFactory","love.forte.simboot.core.filter.CoreAnnotationEventFilterFactory"]},{"name":"object CoreFilterAnnotationProcessor","description":"love.forte.simboot.core.filter.CoreFilterAnnotationProcessor","location":"simboot-core/love.forte.simboot.core.filter/-core-filter-annotation-processor/index.html","searchKeys":["CoreFilterAnnotationProcessor","object CoreFilterAnnotationProcessor","love.forte.simboot.core.filter.CoreFilterAnnotationProcessor"]},{"name":"object CoreFiltersAnnotationProcessor","description":"love.forte.simboot.core.filter.CoreFiltersAnnotationProcessor","location":"simboot-core/love.forte.simboot.core.filter/-core-filters-annotation-processor/index.html","searchKeys":["CoreFiltersAnnotationProcessor","object CoreFiltersAnnotationProcessor","love.forte.simboot.core.filter.CoreFiltersAnnotationProcessor"]},{"name":"object EventParameterBinderFactory : ParameterBinderFactory","description":"love.forte.simboot.core.binder.EventParameterBinderFactory","location":"simboot-core/love.forte.simboot.core.binder/-event-parameter-binder-factory/index.html","searchKeys":["EventParameterBinderFactory","object EventParameterBinderFactory : ParameterBinderFactory","love.forte.simboot.core.binder.EventParameterBinderFactory"]},{"name":"object InstanceInjectBinderFactory : ParameterBinderFactory","description":"love.forte.simboot.core.binder.InstanceInjectBinderFactory","location":"simboot-core/love.forte.simboot.core.binder/-instance-inject-binder-factory/index.html","searchKeys":["InstanceInjectBinderFactory","object InstanceInjectBinderFactory : ParameterBinderFactory","love.forte.simboot.core.binder.InstanceInjectBinderFactory"]},{"name":"object KeywordBinderFactory : ParameterBinderFactory","description":"love.forte.simboot.core.binder.KeywordBinderFactory","location":"simboot-core/love.forte.simboot.core.binder/-keyword-binder-factory/index.html","searchKeys":["KeywordBinderFactory","object KeywordBinderFactory : ParameterBinderFactory","love.forte.simboot.core.binder.KeywordBinderFactory"]},{"name":"object SimbootApp","description":"love.forte.simboot.core.SimbootApp","location":"simboot-core/love.forte.simboot.core/-simboot-app/index.html","searchKeys":["SimbootApp","object SimbootApp","love.forte.simboot.core.SimbootApp"]},{"name":"open class BootApplicationConfiguration : SimpleApplicationConfiguration","description":"love.forte.simboot.core.application.BootApplicationConfiguration","location":"simboot-core/love.forte.simboot.core.application/-boot-application-configuration/index.html","searchKeys":["BootApplicationConfiguration","open class BootApplicationConfiguration : SimpleApplicationConfiguration","love.forte.simboot.core.application.BootApplicationConfiguration"]},{"name":"open class SimbootApplicationException : SimbotRuntimeException","description":"love.forte.simboot.core.SimbootApplicationException","location":"simboot-core/love.forte.simboot.core/-simboot-application-exception/index.html","searchKeys":["SimbootApplicationException","open class SimbootApplicationException : SimbotRuntimeException","love.forte.simboot.core.SimbootApplicationException"]},{"name":"open fun <C : Any, D : BotVerifyInfoDecoder> botVerifyInfoDecoderFactory(factory: BotVerifyInfoDecoderFactory<C, D>, configurator: C.() -> Unit = {})","description":"love.forte.simboot.core.application.BootApplicationConfiguration.botVerifyInfoDecoderFactory","location":"simboot-core/love.forte.simboot.core.application/-boot-application-configuration/bot-verify-info-decoder-factory.html","searchKeys":["botVerifyInfoDecoderFactory","open fun <C : Any, D : BotVerifyInfoDecoder> botVerifyInfoDecoderFactory(factory: BotVerifyInfoDecoderFactory<C, D>, configurator: C.() -> Unit = {})","love.forte.simboot.core.application.BootApplicationConfiguration.botVerifyInfoDecoderFactory"]},{"name":"open fun args(append: Boolean = true, vararg args: String)","description":"love.forte.simboot.core.application.BootApplicationConfiguration.args","location":"simboot-core/love.forte.simboot.core.application/-boot-application-configuration/args.html","searchKeys":["args","open fun args(append: Boolean = true, vararg args: String)","love.forte.simboot.core.application.BootApplicationConfiguration.args"]},{"name":"open operator override fun get(id: String): ParameterBinderFactory?","description":"love.forte.simboot.core.binder.CoreBinderManager.get","location":"simboot-core/love.forte.simboot.core.binder/-core-binder-manager/get.html","searchKeys":["get","open operator override fun get(id: String): ParameterBinderFactory?","love.forte.simboot.core.binder.CoreBinderManager.get"]},{"name":"open override fun <T : Any> getAttribute(attribute: Attribute<T>): T?","description":"love.forte.simboot.core.listener.KFunctionEventListener.getAttribute","location":"simboot-core/love.forte.simboot.core.listener/-k-function-event-listener/get-attribute.html","searchKeys":["getAttribute","open override fun <T : Any> getAttribute(attribute: Attribute<T>): T?","love.forte.simboot.core.listener.KFunctionEventListener.getAttribute"]},{"name":"open override fun close()","description":"love.forte.simboot.core.utils.ResourcesScanner.close","location":"simboot-core/love.forte.simboot.core.utils/-resources-scanner/close.html","searchKeys":["close","open override fun close()","love.forte.simboot.core.utils.ResourcesScanner.close"]},{"name":"open override fun getGlobals(): List<ParameterBinderFactory>","description":"love.forte.simboot.core.binder.CoreBinderManager.getGlobals","location":"simboot-core/love.forte.simboot.core.binder/-core-binder-manager/get-globals.html","searchKeys":["getGlobals","open override fun getGlobals(): List<ParameterBinderFactory>","love.forte.simboot.core.binder.CoreBinderManager.getGlobals"]},{"name":"open override fun isTarget(eventType: Event.Key<*>): Boolean","description":"love.forte.simboot.core.listener.KFunctionEventListener.isTarget","location":"simboot-core/love.forte.simboot.core.listener/-k-function-event-listener/is-target.html","searchKeys":["isTarget","open override fun isTarget(eventType: Event.Key<*>): Boolean","love.forte.simboot.core.listener.KFunctionEventListener.isTarget"]},{"name":"open override fun resolveFilter(listener: EventListener, listenerAttributes: MutableAttributeMap, filter: Filter, filters: Filters): EventFilter?","description":"love.forte.simboot.core.filter.CoreAnnotationEventFilterFactory.resolveFilter","location":"simboot-core/love.forte.simboot.core.filter/-core-annotation-event-filter-factory/resolve-filter.html","searchKeys":["resolveFilter","open override fun resolveFilter(listener: EventListener, listenerAttributes: MutableAttributeMap, filter: Filter, filters: Filters): EventFilter?","love.forte.simboot.core.filter.CoreAnnotationEventFilterFactory.resolveFilter"]},{"name":"open override fun resolveFunctionToBinderFactory(function: KFunction<*>, instanceGetter: (ParameterBinderFactory.Context) -> Any?): ParameterBinderFactory","description":"love.forte.simboot.core.binder.CoreBinderManager.resolveFunctionToBinderFactory","location":"simboot-core/love.forte.simboot.core.binder/-core-binder-manager/resolve-function-to-binder-factory.html","searchKeys":["resolveFunctionToBinderFactory","open override fun resolveFunctionToBinderFactory(function: KFunction<*>, instanceGetter: (ParameterBinderFactory.Context) -> Any?): ParameterBinderFactory","love.forte.simboot.core.binder.CoreBinderManager.resolveFunctionToBinderFactory"]},{"name":"open override fun resolveToBinder(context: ParameterBinderFactory.Context): ParameterBinderResult","description":"love.forte.simboot.core.binder.AutoInjectBinderFactory.resolveToBinder","location":"simboot-core/love.forte.simboot.core.binder/-auto-inject-binder-factory/resolve-to-binder.html","searchKeys":["resolveToBinder","open override fun resolveToBinder(context: ParameterBinderFactory.Context): ParameterBinderResult","love.forte.simboot.core.binder.AutoInjectBinderFactory.resolveToBinder"]},{"name":"open override fun resolveToBinder(context: ParameterBinderFactory.Context): ParameterBinderResult","description":"love.forte.simboot.core.binder.EventParameterBinderFactory.resolveToBinder","location":"simboot-core/love.forte.simboot.core.binder/-event-parameter-binder-factory/resolve-to-binder.html","searchKeys":["resolveToBinder","open override fun resolveToBinder(context: ParameterBinderFactory.Context): ParameterBinderResult","love.forte.simboot.core.binder.EventParameterBinderFactory.resolveToBinder"]},{"name":"open override fun resolveToBinder(context: ParameterBinderFactory.Context): ParameterBinderResult","description":"love.forte.simboot.core.binder.InstanceInjectBinderFactory.resolveToBinder","location":"simboot-core/love.forte.simboot.core.binder/-instance-inject-binder-factory/resolve-to-binder.html","searchKeys":["resolveToBinder","open override fun resolveToBinder(context: ParameterBinderFactory.Context): ParameterBinderResult","love.forte.simboot.core.binder.InstanceInjectBinderFactory.resolveToBinder"]},{"name":"open override fun resolveToBinder(context: ParameterBinderFactory.Context): ParameterBinderResult","description":"love.forte.simboot.core.binder.KeywordBinderFactory.resolveToBinder","location":"simboot-core/love.forte.simboot.core.binder/-keyword-binder-factory/resolve-to-binder.html","searchKeys":["resolveToBinder","open override fun resolveToBinder(context: ParameterBinderFactory.Context): ParameterBinderResult","love.forte.simboot.core.binder.KeywordBinderFactory.resolveToBinder"]},{"name":"open override fun toString(): String","description":"love.forte.simboot.core.listener.KFunctionEventListener.toString","location":"simboot-core/love.forte.simboot.core.listener/-k-function-event-listener/to-string.html","searchKeys":["toString","open override fun toString(): String","love.forte.simboot.core.listener.KFunctionEventListener.toString"]},{"name":"open override val globalBinderFactorySize: Int","description":"love.forte.simboot.core.binder.CoreBinderManager.globalBinderFactorySize","location":"simboot-core/love.forte.simboot.core.binder/-core-binder-manager/global-binder-factory-size.html","searchKeys":["globalBinderFactorySize","open override val globalBinderFactorySize: Int","love.forte.simboot.core.binder.CoreBinderManager.globalBinderFactorySize"]},{"name":"open override val isStarted: Boolean","description":"love.forte.simboot.core.application.BootApplication.isStarted","location":"simboot-core/love.forte.simboot.core.application/-boot-application/is-started.html","searchKeys":["isStarted","open override val isStarted: Boolean","love.forte.simboot.core.application.BootApplication.isStarted"]},{"name":"open override val normalBinderFactorySize: Int","description":"love.forte.simboot.core.binder.CoreBinderManager.normalBinderFactorySize","location":"simboot-core/love.forte.simboot.core.binder/-core-binder-manager/normal-binder-factory-size.html","searchKeys":["normalBinderFactorySize","open override val normalBinderFactorySize: Int","love.forte.simboot.core.binder.CoreBinderManager.normalBinderFactorySize"]},{"name":"open override val priority: Int","description":"love.forte.simboot.core.binder.InstanceInjectBinderFactory.priority","location":"simboot-core/love.forte.simboot.core.binder/-instance-inject-binder-factory/priority.html","searchKeys":["priority","open override val priority: Int","love.forte.simboot.core.binder.InstanceInjectBinderFactory.priority"]},{"name":"open override val value: JarEntry","description":"love.forte.simboot.core.utils.ResourcesScanner.ResourceVisitValue.JarEntryValue.value","location":"simboot-core/love.forte.simboot.core.utils/-resources-scanner/-resource-visit-value/-jar-entry-value/value.html","searchKeys":["value","open override val value: JarEntry","love.forte.simboot.core.utils.ResourcesScanner.ResourceVisitValue.JarEntryValue.value"]},{"name":"open override val value: Path","description":"love.forte.simboot.core.utils.ResourcesScanner.ResourceVisitValue.PathValue.value","location":"simboot-core/love.forte.simboot.core.utils/-resources-scanner/-resource-visit-value/-path-value/value.html","searchKeys":["value","open override val value: Path","love.forte.simboot.core.utils.ResourcesScanner.ResourceVisitValue.PathValue.value"]},{"name":"open suspend override fun create(configurator: BootApplicationConfiguration.() -> Unit, builder: suspend BootApplicationBuilder.(BootApplicationConfiguration) -> Unit): BootApplication","description":"love.forte.simboot.core.application.Boot.create","location":"simboot-core/love.forte.simboot.core.application/-boot/create.html","searchKeys":["create","open suspend override fun create(configurator: BootApplicationConfiguration.() -> Unit, builder: suspend BootApplicationBuilder.(BootApplicationConfiguration) -> Unit): BootApplication","love.forte.simboot.core.application.Boot.create"]},{"name":"open suspend override fun start(): Boolean","description":"love.forte.simboot.core.application.BootApplication.start","location":"simboot-core/love.forte.simboot.core.application/-boot-application/start.html","searchKeys":["start","open suspend override fun start(): Boolean","love.forte.simboot.core.application.BootApplication.start"]},{"name":"open var args: List<String>","description":"love.forte.simboot.core.application.BootApplicationConfiguration.args","location":"simboot-core/love.forte.simboot.core.application/-boot-application-configuration/args.html","searchKeys":["args","open var args: List<String>","love.forte.simboot.core.application.BootApplicationConfiguration.args"]},{"name":"open var botConfigurationResources: List<String>","description":"love.forte.simboot.core.application.BootApplicationConfiguration.botConfigurationResources","location":"simboot-core/love.forte.simboot.core.application/-boot-application-configuration/bot-configuration-resources.html","searchKeys":["botConfigurationResources","open var botConfigurationResources: List<String>","love.forte.simboot.core.application.BootApplicationConfiguration.botConfigurationResources"]},{"name":"open var botConfigurations: List<Resource>","description":"love.forte.simboot.core.application.BootApplicationConfiguration.botConfigurations","location":"simboot-core/love.forte.simboot.core.application/-boot-application-configuration/bot-configurations.html","searchKeys":["botConfigurations","open var botConfigurations: List<Resource>","love.forte.simboot.core.application.BootApplicationConfiguration.botConfigurations"]},{"name":"open var classLoader: ClassLoader","description":"love.forte.simboot.core.application.BootApplicationConfiguration.classLoader","location":"simboot-core/love.forte.simboot.core.application/-boot-application-configuration/class-loader.html","searchKeys":["classLoader","open var classLoader: ClassLoader","love.forte.simboot.core.application.BootApplicationConfiguration.classLoader"]},{"name":"open var classesScanPackage: List<String>","description":"love.forte.simboot.core.application.BootApplicationConfiguration.classesScanPackage","location":"simboot-core/love.forte.simboot.core.application/-boot-application-configuration/classes-scan-package.html","searchKeys":["classesScanPackage","open var classesScanPackage: List<String>","love.forte.simboot.core.application.BootApplicationConfiguration.classesScanPackage"]},{"name":"open var isAutoStartBots: Boolean = true","description":"love.forte.simboot.core.application.BootApplicationConfiguration.isAutoStartBots","location":"simboot-core/love.forte.simboot.core.application/-boot-application-configuration/is-auto-start-bots.html","searchKeys":["isAutoStartBots","open var isAutoStartBots: Boolean = true","love.forte.simboot.core.application.BootApplicationConfiguration.isAutoStartBots"]},{"name":"open var topLevelBinderScanPackage: List<String>","description":"love.forte.simboot.core.application.BootApplicationConfiguration.topLevelBinderScanPackage","location":"simboot-core/love.forte.simboot.core.application/-boot-application-configuration/top-level-binder-scan-package.html","searchKeys":["topLevelBinderScanPackage","open var topLevelBinderScanPackage: List<String>","love.forte.simboot.core.application.BootApplicationConfiguration.topLevelBinderScanPackage"]},{"name":"open var topLevelListenerScanPackage: List<String>","description":"love.forte.simboot.core.application.BootApplicationConfiguration.topLevelListenerScanPackage","location":"simboot-core/love.forte.simboot.core.application/-boot-application-configuration/top-level-listener-scan-package.html","searchKeys":["topLevelListenerScanPackage","open var topLevelListenerScanPackage: List<String>","love.forte.simboot.core.application.BootApplicationConfiguration.topLevelListenerScanPackage"]},{"name":"protected fun ResourceVisitValue()","description":"love.forte.simboot.core.utils.ResourcesScanner.ResourceVisitValue.ResourceVisitValue","location":"simboot-core/love.forte.simboot.core.utils/-resources-scanner/-resource-visit-value/-resource-visit-value.html","searchKeys":["ResourceVisitValue","protected fun ResourceVisitValue()","love.forte.simboot.core.utils.ResourcesScanner.ResourceVisitValue.ResourceVisitValue"]},{"name":"protected open fun KFunction<*>.checkLegal()","description":"love.forte.simboot.core.listener.BaseKFunctionListenerProcessor.checkLegal","location":"simboot-core/love.forte.simboot.core.listener/-base-k-function-listener-processor/check-legal.html","searchKeys":["checkLegal","protected open fun KFunction<*>.checkLegal()","love.forte.simboot.core.listener.BaseKFunctionListenerProcessor.checkLegal"]},{"name":"protected open override fun convertValue(value: Any?, parameter: KParameter): Any?","description":"love.forte.simboot.core.listener.KFunctionEventListener.convertValue","location":"simboot-core/love.forte.simboot.core.listener/-k-function-event-listener/convert-value.html","searchKeys":["convertValue","protected open override fun convertValue(value: Any?, parameter: KParameter): Any?","love.forte.simboot.core.listener.KFunctionEventListener.convertValue"]},{"name":"protected open override val binders: Array<ParameterBinder>","description":"love.forte.simboot.core.listener.KFunctionEventListener.binders","location":"simboot-core/love.forte.simboot.core.listener/-k-function-event-listener/binders.html","searchKeys":["binders","protected open override val binders: Array<ParameterBinder>","love.forte.simboot.core.listener.KFunctionEventListener.binders"]},{"name":"protected open val botVerifyInfoDecoderConfigurations: MutableMap<BotVerifyInfoDecoderFactory<*, *>, Any.() -> Unit>","description":"love.forte.simboot.core.application.BootApplicationConfiguration.botVerifyInfoDecoderConfigurations","location":"simboot-core/love.forte.simboot.core.application/-boot-application-configuration/bot-verify-info-decoder-configurations.html","searchKeys":["botVerifyInfoDecoderConfigurations","protected open val botVerifyInfoDecoderConfigurations: MutableMap<BotVerifyInfoDecoderFactory<*, *>, Any.() -> Unit>","love.forte.simboot.core.application.BootApplicationConfiguration.botVerifyInfoDecoderConfigurations"]},{"name":"protected open val botVerifyInfoDecoderFactories: MutableMap<BotVerifyInfoDecoderFactory<*, *>, () -> BotVerifyInfoDecoder>","description":"love.forte.simboot.core.application.BootApplicationConfiguration.botVerifyInfoDecoderFactories","location":"simboot-core/love.forte.simboot.core.application/-boot-application-configuration/bot-verify-info-decoder-factories.html","searchKeys":["botVerifyInfoDecoderFactories","protected open val botVerifyInfoDecoderFactories: MutableMap<BotVerifyInfoDecoderFactory<*, *>, () -> BotVerifyInfoDecoder>","love.forte.simboot.core.application.BootApplicationConfiguration.botVerifyInfoDecoderFactories"]},{"name":"sealed class ResourceVisitValue<T>","description":"love.forte.simboot.core.utils.ResourcesScanner.ResourceVisitValue","location":"simboot-core/love.forte.simboot.core.utils/-resources-scanner/-resource-visit-value/index.html","searchKeys":["ResourceVisitValue","sealed class ResourceVisitValue<T>","love.forte.simboot.core.utils.ResourcesScanner.ResourceVisitValue"]},{"name":"suspend fun buildBootApplication(block: ApplicationDslBuilder<BootApplicationConfiguration, BootApplicationBuilder, BootApplication>.() -> Unit = {}): BootApplication","description":"love.forte.simboot.core.application.buildBootApplication","location":"simboot-core/love.forte.simboot.core.application/build-boot-application.html","searchKeys":["buildBootApplication","suspend fun buildBootApplication(block: ApplicationDslBuilder<BootApplicationConfiguration, BootApplicationBuilder, BootApplication>.() -> Unit = {}): BootApplication","love.forte.simboot.core.application.buildBootApplication"]},{"name":"suspend fun createBootApplication(configurator: BootApplicationConfiguration.() -> Unit = {}, builder: BootApplicationBuilder.(BootApplicationConfiguration) -> Unit = {}): BootApplication","description":"love.forte.simboot.core.application.createBootApplication","location":"simboot-core/love.forte.simboot.core.application/create-boot-application.html","searchKeys":["createBootApplication","suspend fun createBootApplication(configurator: BootApplicationConfiguration.() -> Unit = {}, builder: BootApplicationBuilder.(BootApplicationConfiguration) -> Unit = {}): BootApplication","love.forte.simboot.core.application.createBootApplication"]},{"name":"suspend fun run(entrance: KClass<*>? = null, vararg args: String, configurator: BootApplicationConfiguration.() -> Unit = {}): BootApplication","description":"love.forte.simboot.core.SimbootApp.run","location":"simboot-core/love.forte.simboot.core/-simboot-app/run.html","searchKeys":["run","suspend fun run(entrance: KClass<*>? = null, vararg args: String, configurator: BootApplicationConfiguration.() -> Unit = {}): BootApplication","love.forte.simboot.core.SimbootApp.run"]},{"name":"val EventListener.rawBinders: Collection<ParameterBinder>","description":"love.forte.simboot.core.listener.BootListenerAttributes.rawBinders","location":"simboot-core/love.forte.simboot.core.listener/-boot-listener-attributes/raw-binders.html","searchKeys":["rawBinders","val EventListener.rawBinders: Collection<ParameterBinder>","love.forte.simboot.core.listener.BootListenerAttributes.rawBinders"]},{"name":"val EventListener.rawBindersOrNull: Collection<ParameterBinder>?","description":"love.forte.simboot.core.listener.BootListenerAttributes.rawBindersOrNull","location":"simboot-core/love.forte.simboot.core.listener/-boot-listener-attributes/raw-binders-or-null.html","searchKeys":["rawBindersOrNull","val EventListener.rawBindersOrNull: Collection<ParameterBinder>?","love.forte.simboot.core.listener.BootListenerAttributes.rawBindersOrNull"]},{"name":"val EventListener.rawFunction: KFunction<*>","description":"love.forte.simboot.core.listener.BootListenerAttributes.rawFunction","location":"simboot-core/love.forte.simboot.core.listener/-boot-listener-attributes/raw-function.html","searchKeys":["rawFunction","val EventListener.rawFunction: KFunction<*>","love.forte.simboot.core.listener.BootListenerAttributes.rawFunction"]},{"name":"val EventListener.rawFunctionOrNull: KFunction<*>?","description":"love.forte.simboot.core.listener.BootListenerAttributes.rawFunctionOrNull","location":"simboot-core/love.forte.simboot.core.listener/-boot-listener-attributes/raw-function-or-null.html","searchKeys":["rawFunctionOrNull","val EventListener.rawFunctionOrNull: KFunction<*>?","love.forte.simboot.core.listener.BootListenerAttributes.rawFunctionOrNull"]},{"name":"val EventListener.rawListenTargets: Collection<Event.Key<*>>","description":"love.forte.simboot.core.listener.BootListenerAttributes.rawListenTargets","location":"simboot-core/love.forte.simboot.core.listener/-boot-listener-attributes/raw-listen-targets.html","searchKeys":["rawListenTargets","val EventListener.rawListenTargets: Collection<Event.Key<*>>","love.forte.simboot.core.listener.BootListenerAttributes.rawListenTargets"]},{"name":"val EventListener.rawListenTargetsOrNull: Collection<Event.Key<*>>?","description":"love.forte.simboot.core.listener.BootListenerAttributes.rawListenTargetsOrNull","location":"simboot-core/love.forte.simboot.core.listener/-boot-listener-attributes/raw-listen-targets-or-null.html","searchKeys":["rawListenTargetsOrNull","val EventListener.rawListenTargetsOrNull: Collection<Event.Key<*>>?","love.forte.simboot.core.listener.BootListenerAttributes.rawListenTargetsOrNull"]},{"name":"val KeywordsAttribute: Attribute<MutableList<Keyword>>","description":"love.forte.simboot.core.filter.KeywordsAttribute","location":"simboot-core/love.forte.simboot.core.filter/-keywords-attribute.html","searchKeys":["KeywordsAttribute","val KeywordsAttribute: Attribute<MutableList<Keyword>>","love.forte.simboot.core.filter.KeywordsAttribute"]},{"name":"val RawBinders: Attribute<Collection<ParameterBinder>>","description":"love.forte.simboot.core.listener.BootListenerAttributes.RawBinders","location":"simboot-core/love.forte.simboot.core.listener/-boot-listener-attributes/-raw-binders.html","searchKeys":["RawBinders","val RawBinders: Attribute<Collection<ParameterBinder>>","love.forte.simboot.core.listener.BootListenerAttributes.RawBinders"]},{"name":"val RawFunction: Attribute<KFunction<*>>","description":"love.forte.simboot.core.listener.BootListenerAttributes.RawFunction","location":"simboot-core/love.forte.simboot.core.listener/-boot-listener-attributes/-raw-function.html","searchKeys":["RawFunction","val RawFunction: Attribute<KFunction<*>>","love.forte.simboot.core.listener.BootListenerAttributes.RawFunction"]},{"name":"val RawListenTargets: Attribute<Collection<Event.Key<*>>>","description":"love.forte.simboot.core.listener.BootListenerAttributes.RawListenTargets","location":"simboot-core/love.forte.simboot.core.listener/-boot-listener-attributes/-raw-listen-targets.html","searchKeys":["RawListenTargets","val RawListenTargets: Attribute<Collection<Event.Key<*>>>","love.forte.simboot.core.listener.BootListenerAttributes.RawListenTargets"]},{"name":"val annotateElement: KAnnotatedElement","description":"love.forte.simboot.core.filter.FiltersAnnotationProcessContext.annotateElement","location":"simboot-core/love.forte.simboot.core.filter/-filters-annotation-process-context/annotate-element.html","searchKeys":["annotateElement","val annotateElement: KAnnotatedElement","love.forte.simboot.core.filter.FiltersAnnotationProcessContext.annotateElement"]},{"name":"val autoStartBots: Boolean = true","description":"love.forte.simboot.core.SimbootApplication.autoStartBots","location":"simboot-core/love.forte.simboot.core/-simboot-application/auto-start-bots.html","searchKeys":["autoStartBots","val autoStartBots: Boolean = true","love.forte.simboot.core.SimbootApplication.autoStartBots"]},{"name":"val beanContainer: BeanContainer","description":"love.forte.simboot.core.listener.FunctionalListenerProcessContext.beanContainer","location":"simboot-core/love.forte.simboot.core.listener/-functional-listener-process-context/bean-container.html","searchKeys":["beanContainer","val beanContainer: BeanContainer","love.forte.simboot.core.listener.FunctionalListenerProcessContext.beanContainer"]},{"name":"val binderManager: BinderManager","description":"love.forte.simboot.core.listener.FunctionalListenerProcessContext.binderManager","location":"simboot-core/love.forte.simboot.core.listener/-functional-listener-process-context/binder-manager.html","searchKeys":["binderManager","val binderManager: BinderManager","love.forte.simboot.core.listener.FunctionalListenerProcessContext.binderManager"]},{"name":"val botResources: Array<String>","description":"love.forte.simboot.core.SimbootApplication.botResources","location":"simboot-core/love.forte.simboot.core/-simboot-application/bot-resources.html","searchKeys":["botResources","val botResources: Array<String>","love.forte.simboot.core.SimbootApplication.botResources"]},{"name":"val classesPackages: Array<String>","description":"love.forte.simboot.core.SimbootApplication.classesPackages","location":"simboot-core/love.forte.simboot.core/-simboot-application/classes-packages.html","searchKeys":["classesPackages","val classesPackages: Array<String>","love.forte.simboot.core.SimbootApplication.classesPackages"]},{"name":"val classesPackagesForTopBinder: Boolean = false","description":"love.forte.simboot.core.SimbootApplication.classesPackagesForTopBinder","location":"simboot-core/love.forte.simboot.core/-simboot-application/classes-packages-for-top-binder.html","searchKeys":["classesPackagesForTopBinder","val classesPackagesForTopBinder: Boolean = false","love.forte.simboot.core.SimbootApplication.classesPackagesForTopBinder"]},{"name":"val classesPackagesForTopListener: Boolean = false","description":"love.forte.simboot.core.SimbootApplication.classesPackagesForTopListener","location":"simboot-core/love.forte.simboot.core/-simboot-application/classes-packages-for-top-listener.html","searchKeys":["classesPackagesForTopListener","val classesPackagesForTopListener: Boolean = false","love.forte.simboot.core.SimbootApplication.classesPackagesForTopListener"]},{"name":"val context: FunctionalListenerProcessContext","description":"love.forte.simboot.core.filter.FiltersAnnotationProcessContext.context","location":"simboot-core/love.forte.simboot.core.filter/-filters-annotation-process-context/context.html","searchKeys":["context","val context: FunctionalListenerProcessContext","love.forte.simboot.core.filter.FiltersAnnotationProcessContext.context"]},{"name":"val filters: Filters","description":"love.forte.simboot.core.filter.FiltersAnnotationProcessContext.filters","location":"simboot-core/love.forte.simboot.core.filter/-filters-annotation-process-context/filters.html","searchKeys":["filters","val filters: Filters","love.forte.simboot.core.filter.FiltersAnnotationProcessContext.filters"]},{"name":"val function: KFunction<*>","description":"love.forte.simboot.core.listener.FunctionalListenerProcessContext.function","location":"simboot-core/love.forte.simboot.core.listener/-functional-listener-process-context/function.html","searchKeys":["function","val function: KFunction<*>","love.forte.simboot.core.listener.FunctionalListenerProcessContext.function"]},{"name":"val listener: EventListener","description":"love.forte.simboot.core.filter.FiltersAnnotationProcessContext.listener","location":"simboot-core/love.forte.simboot.core.filter/-filters-annotation-process-context/listener.html","searchKeys":["listener","val listener: EventListener","love.forte.simboot.core.filter.FiltersAnnotationProcessContext.listener"]},{"name":"val listenerAttributes: MutableAttributeMap","description":"love.forte.simboot.core.filter.FiltersAnnotationProcessContext.listenerAttributes","location":"simboot-core/love.forte.simboot.core.filter/-filters-annotation-process-context/listener-attributes.html","searchKeys":["listenerAttributes","val listenerAttributes: MutableAttributeMap","love.forte.simboot.core.filter.FiltersAnnotationProcessContext.listenerAttributes"]},{"name":"val resource: String","description":"love.forte.simboot.core.utils.ResourcesScanner.ResourceVisitValue.PathValue.resource","location":"simboot-core/love.forte.simboot.core.utils/-resources-scanner/-resource-visit-value/-path-value/resource.html","searchKeys":["resource","val resource: String","love.forte.simboot.core.utils.ResourcesScanner.ResourceVisitValue.PathValue.resource"]},{"name":"val topBinderPackages: Array<String>","description":"love.forte.simboot.core.SimbootApplication.topBinderPackages","location":"simboot-core/love.forte.simboot.core/-simboot-application/top-binder-packages.html","searchKeys":["topBinderPackages","val topBinderPackages: Array<String>","love.forte.simboot.core.SimbootApplication.topBinderPackages"]},{"name":"val topListenerPackages: Array<String>","description":"love.forte.simboot.core.SimbootApplication.topListenerPackages","location":"simboot-core/love.forte.simboot.core/-simboot-application/top-listener-packages.html","searchKeys":["topListenerPackages","val topListenerPackages: Array<String>","love.forte.simboot.core.SimbootApplication.topListenerPackages"]},{"name":"val url: URL","description":"love.forte.simboot.core.utils.ResourcesScanner.ResourceVisitValue.JarEntryValue.url","location":"simboot-core/love.forte.simboot.core.utils/-resources-scanner/-resource-visit-value/-jar-entry-value/url.html","searchKeys":["url","val url: URL","love.forte.simboot.core.utils.ResourcesScanner.ResourceVisitValue.JarEntryValue.url"]},{"name":"var classLoader: ClassLoader","description":"love.forte.simboot.core.utils.ResourcesScanner.classLoader","location":"simboot-core/love.forte.simboot.core.utils/-resources-scanner/class-loader.html","searchKeys":["classLoader","var classLoader: ClassLoader","love.forte.simboot.core.utils.ResourcesScanner.classLoader"]},{"name":"abstract fun clear()","description":"love.forte.di.core.CoreBeanClassRegistrar.clear","location":"simbot-util-di-core/love.forte.di.core/-core-bean-class-registrar/clear.html","searchKeys":["clear","abstract fun clear()","love.forte.di.core.CoreBeanClassRegistrar.clear"]},{"name":"abstract fun inject(beanManager: BeanManager)","description":"love.forte.di.core.CoreBeanClassRegistrar.inject","location":"simbot-util-di-core/love.forte.di.core/-core-bean-class-registrar/inject.html","searchKeys":["inject","abstract fun inject(beanManager: BeanManager)","love.forte.di.core.CoreBeanClassRegistrar.inject"]},{"name":"abstract fun process(bean: Bean<Any>, beanManager: CoreBeanManager): Bean<*>?","description":"love.forte.di.core.CoreBeanManagerBeanRegisterPostProcessor.process","location":"simbot-util-di-core/love.forte.di.core/-core-bean-manager-bean-register-post-processor/process.html","searchKeys":["process","abstract fun process(bean: Bean<Any>, beanManager: CoreBeanManager): Bean<*>?","love.forte.di.core.CoreBeanManagerBeanRegisterPostProcessor.process"]},{"name":"abstract fun register(vararg types: KClass<*>): CoreBeanClassRegistrar","description":"love.forte.di.core.CoreBeanClassRegistrar.register","location":"simbot-util-di-core/love.forte.di.core/-core-bean-class-registrar/register.html","searchKeys":["register","abstract fun register(vararg types: KClass<*>): CoreBeanClassRegistrar","love.forte.di.core.CoreBeanClassRegistrar.register"]},{"name":"abstract override fun <T : Any> getAll(type: KClass<T>?): List<String>","description":"love.forte.di.core.CoreBeanManager.getAll","location":"simbot-util-di-core/love.forte.di.core/-core-bean-manager/get-all.html","searchKeys":["getAll","abstract override fun <T : Any> getAll(type: KClass<T>?): List<String>","love.forte.di.core.CoreBeanManager.getAll"]},{"name":"abstract override fun <T : Any> getOrNull(type: KClass<T>): T?","description":"love.forte.di.core.CoreBeanManager.getOrNull","location":"simbot-util-di-core/love.forte.di.core/-core-bean-manager/get-or-null.html","searchKeys":["getOrNull","abstract override fun <T : Any> getOrNull(type: KClass<T>): T?","love.forte.di.core.CoreBeanManager.getOrNull"]},{"name":"abstract override fun getOrNull(name: String): Any?","description":"love.forte.di.core.CoreBeanManager.getOrNull","location":"simbot-util-di-core/love.forte.di.core/-core-bean-manager/get-or-null.html","searchKeys":["getOrNull","abstract override fun getOrNull(name: String): Any?","love.forte.di.core.CoreBeanManager.getOrNull"]},{"name":"abstract override fun getTypeOrNull(name: String): KClass<*>?","description":"love.forte.di.core.CoreBeanManager.getTypeOrNull","location":"simbot-util-di-core/love.forte.di.core/-core-bean-manager/get-type-or-null.html","searchKeys":["getTypeOrNull","abstract override fun getTypeOrNull(name: String): KClass<*>?","love.forte.di.core.CoreBeanManager.getTypeOrNull"]},{"name":"abstract override fun register(name: String, bean: Bean<*>)","description":"love.forte.di.core.CoreBeanManager.register","location":"simbot-util-di-core/love.forte.di.core/-core-bean-manager/register.html","searchKeys":["register","abstract override fun register(name: String, bean: Bean<*>)","love.forte.di.core.CoreBeanManager.register"]},{"name":"class CoreBeanManagerConfiguration","description":"love.forte.di.core.CoreBeanManagerConfiguration","location":"simbot-util-di-core/love.forte.di.core/-core-bean-manager-configuration/index.html","searchKeys":["CoreBeanManagerConfiguration","class CoreBeanManagerConfiguration","love.forte.di.core.CoreBeanManagerConfiguration"]},{"name":"class SimpleBeanBuilder<T : Any>(val type: KClass<T>)","description":"love.forte.di.core.SimpleBeanBuilder","location":"simbot-util-di-core/love.forte.di.core/-simple-bean-builder/index.html","searchKeys":["SimpleBeanBuilder","class SimpleBeanBuilder<T : Any>(val type: KClass<T>)","love.forte.di.core.SimpleBeanBuilder"]},{"name":"fun <T : Any> SimpleBeanBuilder(type: KClass<T>)","description":"love.forte.di.core.SimpleBeanBuilder.SimpleBeanBuilder","location":"simbot-util-di-core/love.forte.di.core/-simple-bean-builder/-simple-bean-builder.html","searchKeys":["SimpleBeanBuilder","fun <T : Any> SimpleBeanBuilder(type: KClass<T>)","love.forte.di.core.SimpleBeanBuilder.SimpleBeanBuilder"]},{"name":"fun CoreBeanManagerConfiguration()","description":"love.forte.di.core.CoreBeanManagerConfiguration.CoreBeanManagerConfiguration","location":"simbot-util-di-core/love.forte.di.core/-core-bean-manager-configuration/-core-bean-manager-configuration.html","searchKeys":["CoreBeanManagerConfiguration","fun CoreBeanManagerConfiguration()","love.forte.di.core.CoreBeanManagerConfiguration.CoreBeanManagerConfiguration"]},{"name":"fun build(): Bean<T>","description":"love.forte.di.core.SimpleBeanBuilder.build","location":"simbot-util-di-core/love.forte.di.core/-simple-bean-builder/build.html","searchKeys":["build","fun build(): Bean<T>","love.forte.di.core.SimpleBeanBuilder.build"]},{"name":"fun build(): CoreBeanManager","description":"love.forte.di.core.CoreBeanManagerConfiguration.build","location":"simbot-util-di-core/love.forte.di.core/-core-bean-manager-configuration/build.html","searchKeys":["build","fun build(): CoreBeanManager","love.forte.di.core.CoreBeanManagerConfiguration.build"]},{"name":"fun coreBeanClassRegistrar(annotationGetter: AnnotationGetter): CoreBeanClassRegistrar","description":"love.forte.di.core.coreBeanClassRegistrar","location":"simbot-util-di-core/love.forte.di.core/core-bean-class-registrar.html","searchKeys":["coreBeanClassRegistrar","fun coreBeanClassRegistrar(annotationGetter: AnnotationGetter): CoreBeanClassRegistrar","love.forte.di.core.coreBeanClassRegistrar"]},{"name":"fun factory(block: () -> T): SimpleBeanBuilder<T>","description":"love.forte.di.core.SimpleBeanBuilder.factory","location":"simbot-util-di-core/love.forte.di.core/-simple-bean-builder/factory.html","searchKeys":["factory","fun factory(block: () -> T): SimpleBeanBuilder<T>","love.forte.di.core.SimpleBeanBuilder.factory"]},{"name":"fun interface CoreBeanManagerBeanRegisterPostProcessor : Comparable<CoreBeanManagerBeanRegisterPostProcessor> ","description":"love.forte.di.core.CoreBeanManagerBeanRegisterPostProcessor","location":"simbot-util-di-core/love.forte.di.core/-core-bean-manager-bean-register-post-processor/index.html","searchKeys":["CoreBeanManagerBeanRegisterPostProcessor","fun interface CoreBeanManagerBeanRegisterPostProcessor : Comparable<CoreBeanManagerBeanRegisterPostProcessor> ","love.forte.di.core.CoreBeanManagerBeanRegisterPostProcessor"]},{"name":"fun newCoreBeanManager(parentContainer: BeanContainer, processors: List<CoreBeanManagerBeanRegisterPostProcessor>): CoreBeanManager","description":"love.forte.di.core.CoreBeanManager.Companion.newCoreBeanManager","location":"simbot-util-di-core/love.forte.di.core/-core-bean-manager/-companion/new-core-bean-manager.html","searchKeys":["newCoreBeanManager","fun newCoreBeanManager(parentContainer: BeanContainer, processors: List<CoreBeanManagerBeanRegisterPostProcessor>): CoreBeanManager","love.forte.di.core.CoreBeanManager.Companion.newCoreBeanManager"]},{"name":"fun newCoreBeanManager(parentContainer: BeanContainer, vararg processors: CoreBeanManagerBeanRegisterPostProcessor): CoreBeanManager","description":"love.forte.di.core.CoreBeanManager.Companion.newCoreBeanManager","location":"simbot-util-di-core/love.forte.di.core/-core-bean-manager/-companion/new-core-bean-manager.html","searchKeys":["newCoreBeanManager","fun newCoreBeanManager(parentContainer: BeanContainer, vararg processors: CoreBeanManagerBeanRegisterPostProcessor): CoreBeanManager","love.forte.di.core.CoreBeanManager.Companion.newCoreBeanManager"]},{"name":"fun plusProcessor(processor: CoreBeanManagerBeanRegisterPostProcessor): CoreBeanManagerConfiguration","description":"love.forte.di.core.CoreBeanManagerConfiguration.plusProcessor","location":"simbot-util-di-core/love.forte.di.core/-core-bean-manager-configuration/plus-processor.html","searchKeys":["plusProcessor","fun plusProcessor(processor: CoreBeanManagerBeanRegisterPostProcessor): CoreBeanManagerConfiguration","love.forte.di.core.CoreBeanManagerConfiguration.plusProcessor"]},{"name":"fun preferred(): SimpleBeanBuilder<T>","description":"love.forte.di.core.SimpleBeanBuilder.preferred","location":"simbot-util-di-core/love.forte.di.core/-simple-bean-builder/preferred.html","searchKeys":["preferred","fun preferred(): SimpleBeanBuilder<T>","love.forte.di.core.SimpleBeanBuilder.preferred"]},{"name":"fun process(processor: CoreBeanManagerBeanRegisterPostProcessor)","description":"love.forte.di.core.CoreBeanManagerConfiguration.process","location":"simbot-util-di-core/love.forte.di.core/-core-bean-manager-configuration/process.html","searchKeys":["process","fun process(processor: CoreBeanManagerBeanRegisterPostProcessor)","love.forte.di.core.CoreBeanManagerConfiguration.process"]},{"name":"fun singleton(): SimpleBeanBuilder<T>","description":"love.forte.di.core.SimpleBeanBuilder.singleton","location":"simbot-util-di-core/love.forte.di.core/-simple-bean-builder/singleton.html","searchKeys":["singleton","fun singleton(): SimpleBeanBuilder<T>","love.forte.di.core.SimpleBeanBuilder.singleton"]},{"name":"inline fun coreBeanManager(config: CoreBeanManagerConfiguration.() -> Unit): CoreBeanManager","description":"love.forte.di.core.coreBeanManager","location":"simbot-util-di-core/love.forte.di.core/core-bean-manager.html","searchKeys":["coreBeanManager","inline fun coreBeanManager(config: CoreBeanManagerConfiguration.() -> Unit): CoreBeanManager","love.forte.di.core.coreBeanManager"]},{"name":"interface CoreBeanClassRegistrar","description":"love.forte.di.core.CoreBeanClassRegistrar","location":"simbot-util-di-core/love.forte.di.core/-core-bean-class-registrar/index.html","searchKeys":["CoreBeanClassRegistrar","interface CoreBeanClassRegistrar","love.forte.di.core.CoreBeanClassRegistrar"]},{"name":"interface CoreBeanManager : BeanManager","description":"love.forte.di.core.CoreBeanManager","location":"simbot-util-di-core/love.forte.di.core/-core-bean-manager/index.html","searchKeys":["CoreBeanManager","interface CoreBeanManager : BeanManager","love.forte.di.core.CoreBeanManager"]},{"name":"object Companion","description":"love.forte.di.core.CoreBeanManager.Companion","location":"simbot-util-di-core/love.forte.di.core/-core-bean-manager/-companion/index.html","searchKeys":["Companion","object Companion","love.forte.di.core.CoreBeanManager.Companion"]},{"name":"open operator override fun compareTo(other: CoreBeanManagerBeanRegisterPostProcessor): Int","description":"love.forte.di.core.CoreBeanManagerBeanRegisterPostProcessor.compareTo","location":"simbot-util-di-core/love.forte.di.core/-core-bean-manager-bean-register-post-processor/compare-to.html","searchKeys":["compareTo","open operator override fun compareTo(other: CoreBeanManagerBeanRegisterPostProcessor): Int","love.forte.di.core.CoreBeanManagerBeanRegisterPostProcessor.compareTo"]},{"name":"open val priority: Int","description":"love.forte.di.core.CoreBeanManagerBeanRegisterPostProcessor.priority","location":"simbot-util-di-core/love.forte.di.core/-core-bean-manager-bean-register-post-processor/priority.html","searchKeys":["priority","open val priority: Int","love.forte.di.core.CoreBeanManagerBeanRegisterPostProcessor.priority"]},{"name":"val type: KClass<T>","description":"love.forte.di.core.SimpleBeanBuilder.type","location":"simbot-util-di-core/love.forte.di.core/-simple-bean-builder/type.html","searchKeys":["type","val type: KClass<T>","love.forte.di.core.SimpleBeanBuilder.type"]},{"name":"var factory: () -> T? = null","description":"love.forte.di.core.SimpleBeanBuilder.factory","location":"simbot-util-di-core/love.forte.di.core/-simple-bean-builder/factory.html","searchKeys":["factory","var factory: () -> T? = null","love.forte.di.core.SimpleBeanBuilder.factory"]},{"name":"var isPreferred: Boolean = false","description":"love.forte.di.core.SimpleBeanBuilder.isPreferred","location":"simbot-util-di-core/love.forte.di.core/-simple-bean-builder/is-preferred.html","searchKeys":["isPreferred","var isPreferred: Boolean = false","love.forte.di.core.SimpleBeanBuilder.isPreferred"]},{"name":"var isSingleton: Boolean = true","description":"love.forte.di.core.SimpleBeanBuilder.isSingleton","location":"simbot-util-di-core/love.forte.di.core/-simple-bean-builder/is-singleton.html","searchKeys":["isSingleton","var isSingleton: Boolean = true","love.forte.di.core.SimpleBeanBuilder.isSingleton"]},{"name":"var parentContainer: BeanContainer","description":"love.forte.di.core.CoreBeanManagerConfiguration.parentContainer","location":"simbot-util-di-core/love.forte.di.core/-core-bean-manager-configuration/parent-container.html","searchKeys":["parentContainer","var parentContainer: BeanContainer","love.forte.di.core.CoreBeanManagerConfiguration.parentContainer"]},{"name":"var priority: Int = 1000","description":"love.forte.di.core.SimpleBeanBuilder.priority","location":"simbot-util-di-core/love.forte.di.core/-simple-bean-builder/priority.html","searchKeys":["priority","var priority: Int = 1000","love.forte.di.core.SimpleBeanBuilder.priority"]},{"name":"var processors: MutableList<CoreBeanManagerBeanRegisterPostProcessor>","description":"love.forte.di.core.CoreBeanManagerConfiguration.processors","location":"simbot-util-di-core/love.forte.di.core/-core-bean-manager-configuration/processors.html","searchKeys":["processors","var processors: MutableList<CoreBeanManagerBeanRegisterPostProcessor>","love.forte.di.core.CoreBeanManagerConfiguration.processors"]},{"name":"AFTER_MATCH","description":"love.forte.simbot.event.EventListenerInterceptor.Point.AFTER_MATCH","location":"simbot-api/love.forte.simbot.event/-event-listener-interceptor/-point/-a-f-t-e-r_-m-a-t-c-h/index.html","searchKeys":["AFTER_MATCH","AFTER_MATCH","love.forte.simbot.event.EventListenerInterceptor.Point.AFTER_MATCH"]},{"name":"APPLICATION","description":"love.forte.simbot.event.RequestEvent.Type.APPLICATION","location":"simbot-api/love.forte.simbot.event/-request-event/-type/-a-p-p-l-i-c-a-t-i-o-n/index.html","searchKeys":["APPLICATION","APPLICATION","love.forte.simbot.event.RequestEvent.Type.APPLICATION"]},{"name":"DEFAULT","description":"love.forte.simbot.event.EventListenerInterceptor.Point.DEFAULT","location":"simbot-api/love.forte.simbot.event/-event-listener-interceptor/-point/-d-e-f-a-u-l-t/index.html","searchKeys":["DEFAULT","DEFAULT","love.forte.simbot.event.EventListenerInterceptor.Point.DEFAULT"]},{"name":"INVITATION","description":"love.forte.simbot.event.RequestEvent.Type.INVITATION","location":"simbot-api/love.forte.simbot.event/-request-event/-type/-i-n-v-i-t-a-t-i-o-n/index.html","searchKeys":["INVITATION","INVITATION","love.forte.simbot.event.RequestEvent.Type.INVITATION"]},{"name":"PASSIVE","description":"love.forte.simbot.action.ActionType.PASSIVE","location":"simbot-api/love.forte.simbot.action/-action-type/-p-a-s-s-i-v-e/index.html","searchKeys":["PASSIVE","PASSIVE","love.forte.simbot.action.ActionType.PASSIVE"]},{"name":"PROACTIVE","description":"love.forte.simbot.action.ActionType.PROACTIVE","location":"simbot-api/love.forte.simbot.action/-action-type/-p-r-o-a-c-t-i-v-e/index.html","searchKeys":["PROACTIVE","PROACTIVE","love.forte.simbot.action.ActionType.PROACTIVE"]},{"name":"abstract class AggregatedMessageReceipt : StandardMessageReceipt, Iterable<SingleMessageReceipt> ","description":"love.forte.simbot.message.AggregatedMessageReceipt","location":"simbot-api/love.forte.simbot.message/-aggregated-message-receipt/index.html","searchKeys":["AggregatedMessageReceipt","abstract class AggregatedMessageReceipt : StandardMessageReceipt, Iterable<SingleMessageReceipt> ","love.forte.simbot.message.AggregatedMessageReceipt"]},{"name":"abstract class AsyncEventResult : SpecialEventResult","description":"love.forte.simbot.event.AsyncEventResult","location":"simbot-api/love.forte.simbot.event/-async-event-result/index.html","searchKeys":["AsyncEventResult","abstract class AsyncEventResult : SpecialEventResult","love.forte.simbot.event.AsyncEventResult"]},{"name":"abstract class BaseEventKey<E : Event>(idValue: String, val parents: Set<Event.Key<*>> = emptySet()) : Event.Key<E> ","description":"love.forte.simbot.event.BaseEventKey","location":"simbot-api/love.forte.simbot.event/-base-event-key/index.html","searchKeys":["BaseEventKey","abstract class BaseEventKey<E : Event>(idValue: String, val parents: Set<Event.Key<*>> = emptySet()) : Event.Key<E> ","love.forte.simbot.event.BaseEventKey"]},{"name":"abstract class BaseItems<out T, out I : BaseItems<T, I>> : Items<T> ","description":"love.forte.simbot.utils.item.BaseItems","location":"simbot-api/love.forte.simbot.utils.item/-base-items/index.html","searchKeys":["BaseItems","abstract class BaseItems<out T, out I : BaseItems<T, I>> : Items<T> ","love.forte.simbot.utils.item.BaseItems"]},{"name":"abstract class BinaryFormatDeserializableResourceDecoder : SerialFormatDeserializableResourceDecoder","description":"love.forte.simbot.resources.BinaryFormatDeserializableResourceDecoder","location":"simbot-api/love.forte.simbot.resources/-binary-format-deserializable-resource-decoder/index.html","searchKeys":["BinaryFormatDeserializableResourceDecoder","abstract class BinaryFormatDeserializableResourceDecoder : SerialFormatDeserializableResourceDecoder","love.forte.simbot.resources.BinaryFormatDeserializableResourceDecoder"]},{"name":"abstract class BotManager<B : Bot> : BotRegistrar, ComponentContainer, EventProvider","description":"love.forte.simbot.bot.BotManager","location":"simbot-api/love.forte.simbot.bot/-bot-manager/index.html","searchKeys":["BotManager","abstract class BotManager<B : Bot> : BotRegistrar, ComponentContainer, EventProvider","love.forte.simbot.bot.BotManager"]},{"name":"abstract class ContinuousSessionContext : BaseContinuousSessionContext","description":"love.forte.simbot.event.ContinuousSessionContext","location":"simbot-api/love.forte.simbot.event/-continuous-session-context/index.html","searchKeys":["ContinuousSessionContext","abstract class ContinuousSessionContext : BaseContinuousSessionContext","love.forte.simbot.event.ContinuousSessionContext"]},{"name":"abstract class CyclicIterator<T> : Iterator<T> ","description":"love.forte.simbot.utils.CyclicIterator","location":"simbot-api/love.forte.simbot.utils/-cyclic-iterator/index.html","searchKeys":["CyclicIterator","abstract class CyclicIterator<T> : Iterator<T> ","love.forte.simbot.utils.CyclicIterator"]},{"name":"abstract class DecoderBotVerifyInfo : BotVerifyInfo","description":"love.forte.simbot.bot.DecoderBotVerifyInfo","location":"simbot-api/love.forte.simbot.bot/-decoder-bot-verify-info/index.html","searchKeys":["DecoderBotVerifyInfo","abstract class DecoderBotVerifyInfo : BotVerifyInfo","love.forte.simbot.bot.DecoderBotVerifyInfo"]},{"name":"abstract class DelayableCompletableFuture<T> : CompletableFuture<T> , DelayCompletionStage<T> ","description":"love.forte.simbot.ability.DelayableCompletableFuture","location":"simbot-api/love.forte.simbot.ability/-delayable-completable-future/index.html","searchKeys":["DelayableCompletableFuture","abstract class DelayableCompletableFuture<T> : CompletableFuture<T> , DelayCompletionStage<T> ","love.forte.simbot.ability.DelayableCompletableFuture"]},{"name":"abstract class EventListenerRegistrationDescription","description":"love.forte.simbot.event.EventListenerRegistrationDescription","location":"simbot-api/love.forte.simbot.event/-event-listener-registration-description/index.html","searchKeys":["EventListenerRegistrationDescription","abstract class EventListenerRegistrationDescription","love.forte.simbot.event.EventListenerRegistrationDescription"]},{"name":"abstract class LocalMessageContent : MessageContent","description":"love.forte.simbot.message.LocalMessageContent","location":"simbot-api/love.forte.simbot.message/-local-message-content/index.html","searchKeys":["LocalMessageContent","abstract class LocalMessageContent : MessageContent","love.forte.simbot.message.LocalMessageContent"]},{"name":"abstract class MessageContent","description":"love.forte.simbot.message.MessageContent","location":"simbot-api/love.forte.simbot.message/-message-content/index.html","searchKeys":["MessageContent","abstract class MessageContent","love.forte.simbot.message.MessageContent"]},{"name":"abstract class ObtainedMessageContent : RemoteMessageContent","description":"love.forte.simbot.message.ObtainedMessageContent","location":"simbot-api/love.forte.simbot.message/-obtained-message-content/index.html","searchKeys":["ObtainedMessageContent","abstract class ObtainedMessageContent : RemoteMessageContent","love.forte.simbot.message.ObtainedMessageContent"]},{"name":"abstract class ReactivelyCollectableEventResult : SpecialEventResult","description":"love.forte.simbot.event.ReactivelyCollectableEventResult","location":"simbot-api/love.forte.simbot.event/-reactively-collectable-event-result/index.html","searchKeys":["ReactivelyCollectableEventResult","abstract class ReactivelyCollectableEventResult : SpecialEventResult","love.forte.simbot.event.ReactivelyCollectableEventResult"]},{"name":"abstract class ReceivedMessageContent : RemoteMessageContent","description":"love.forte.simbot.message.ReceivedMessageContent","location":"simbot-api/love.forte.simbot.message/-received-message-content/index.html","searchKeys":["ReceivedMessageContent","abstract class ReceivedMessageContent : RemoteMessageContent","love.forte.simbot.message.ReceivedMessageContent"]},{"name":"abstract class SerialFormatDeserializableResourceDecoder : DeserializableResourceDecoder","description":"love.forte.simbot.resources.SerialFormatDeserializableResourceDecoder","location":"simbot-api/love.forte.simbot.resources/-serial-format-deserializable-resource-decoder/index.html","searchKeys":["SerialFormatDeserializableResourceDecoder","abstract class SerialFormatDeserializableResourceDecoder : DeserializableResourceDecoder","love.forte.simbot.resources.SerialFormatDeserializableResourceDecoder"]},{"name":"abstract class SingleMessageReceipt : StandardMessageReceipt, IDContainer","description":"love.forte.simbot.message.SingleMessageReceipt","location":"simbot-api/love.forte.simbot.message/-single-message-receipt/index.html","searchKeys":["SingleMessageReceipt","abstract class SingleMessageReceipt : StandardMessageReceipt, IDContainer","love.forte.simbot.message.SingleMessageReceipt"]},{"name":"abstract class StandardBinaryFormatBotVerifyInfoDecoder : StandardSerialFormatBotVerifyInfoDecoder<BinaryFormat, ByteArray> ","description":"love.forte.simbot.bot.StandardBinaryFormatBotVerifyInfoDecoder","location":"simbot-api/love.forte.simbot.bot/-standard-binary-format-bot-verify-info-decoder/index.html","searchKeys":["StandardBinaryFormatBotVerifyInfoDecoder","abstract class StandardBinaryFormatBotVerifyInfoDecoder : StandardSerialFormatBotVerifyInfoDecoder<BinaryFormat, ByteArray> ","love.forte.simbot.bot.StandardBinaryFormatBotVerifyInfoDecoder"]},{"name":"abstract class StandardSerialFormatBotVerifyInfoDecoder<F : SerialFormat, V : Any> : SerialFormatDeserializableResourceDecoder, BotVerifyInfoDecoder","description":"love.forte.simbot.bot.StandardSerialFormatBotVerifyInfoDecoder","location":"simbot-api/love.forte.simbot.bot/-standard-serial-format-bot-verify-info-decoder/index.html","searchKeys":["StandardSerialFormatBotVerifyInfoDecoder","abstract class StandardSerialFormatBotVerifyInfoDecoder<F : SerialFormat, V : Any> : SerialFormatDeserializableResourceDecoder, BotVerifyInfoDecoder","love.forte.simbot.bot.StandardSerialFormatBotVerifyInfoDecoder"]},{"name":"abstract class StandardStringFormatBotVerifyInfoDecoder : StandardSerialFormatBotVerifyInfoDecoder<StringFormat, String> ","description":"love.forte.simbot.bot.StandardStringFormatBotVerifyInfoDecoder","location":"simbot-api/love.forte.simbot.bot/-standard-string-format-bot-verify-info-decoder/index.html","searchKeys":["StandardStringFormatBotVerifyInfoDecoder","abstract class StandardStringFormatBotVerifyInfoDecoder : StandardSerialFormatBotVerifyInfoDecoder<StringFormat, String> ","love.forte.simbot.bot.StandardStringFormatBotVerifyInfoDecoder"]},{"name":"abstract class StringFormatDeserializableResourceDecoder : SerialFormatDeserializableResourceDecoder","description":"love.forte.simbot.resources.StringFormatDeserializableResourceDecoder","location":"simbot-api/love.forte.simbot.resources/-string-format-deserializable-resource-decoder/index.html","searchKeys":["StringFormatDeserializableResourceDecoder","abstract class StringFormatDeserializableResourceDecoder : SerialFormatDeserializableResourceDecoder","love.forte.simbot.resources.StringFormatDeserializableResourceDecoder"]},{"name":"abstract fun <C : Component, Config : Any> install(componentFactory: ComponentFactory<C, Config>, configurator: Config.(perceivable: CompletionPerceivable<A>) -> Unit = {})","description":"love.forte.simbot.application.ApplicationBuilder.install","location":"simbot-api/love.forte.simbot.application/-application-builder/install.html","searchKeys":["install","abstract fun <C : Component, Config : Any> install(componentFactory: ComponentFactory<C, Config>, configurator: Config.(perceivable: CompletionPerceivable<A>) -> Unit = {})","love.forte.simbot.application.ApplicationBuilder.install"]},{"name":"abstract fun <E : Message.Element<E>> getFirst(key: Message.Key<E>): E","description":"love.forte.simbot.message.Messages.getFirst","location":"simbot-api/love.forte.simbot.message/-messages/get-first.html","searchKeys":["getFirst","abstract fun <E : Message.Element<E>> getFirst(key: Message.Key<E>): E","love.forte.simbot.message.Messages.getFirst"]},{"name":"abstract fun <E : Message.Element<E>> getFirstOrNull(key: Message.Key<E>): E?","description":"love.forte.simbot.message.Messages.getFirstOrNull","location":"simbot-api/love.forte.simbot.message/-messages/get-first-or-null.html","searchKeys":["getFirstOrNull","abstract fun <E : Message.Element<E>> getFirstOrNull(key: Message.Key<E>): E?","love.forte.simbot.message.Messages.getFirstOrNull"]},{"name":"abstract fun <P : EventProvider, Config : Any> install(eventProviderFactory: EventProviderFactory<P, Config>, configurator: Config.(perceivable: CompletionPerceivable<A>) -> Unit = {})","description":"love.forte.simbot.application.ApplicationBuilder.install","location":"simbot-api/love.forte.simbot.application/-application-builder/install.html","searchKeys":["install","abstract fun <P : EventProvider, Config : Any> install(eventProviderFactory: EventProviderFactory<P, Config>, configurator: Config.(perceivable: CompletionPerceivable<A>) -> Unit = {})","love.forte.simbot.application.ApplicationBuilder.install"]},{"name":"abstract fun <T : Any> computeIfAbsent(attribute: Attribute<T>, mappingFunction: (Attribute<T>) -> T): T","description":"love.forte.simbot.MutableAttributeMap.computeIfAbsent","location":"simbot-api/love.forte.simbot/-mutable-attribute-map/compute-if-absent.html","searchKeys":["computeIfAbsent","abstract fun <T : Any> computeIfAbsent(attribute: Attribute<T>, mappingFunction: (Attribute<T>) -> T): T","love.forte.simbot.MutableAttributeMap.computeIfAbsent"]},{"name":"abstract fun <T : Any> computeIfPresent(attribute: Attribute<T>, remappingFunction: (Attribute<T>, T) -> T?): T?","description":"love.forte.simbot.MutableAttributeMap.computeIfPresent","location":"simbot-api/love.forte.simbot/-mutable-attribute-map/compute-if-present.html","searchKeys":["computeIfPresent","abstract fun <T : Any> computeIfPresent(attribute: Attribute<T>, remappingFunction: (Attribute<T>, T) -> T?): T?","love.forte.simbot.MutableAttributeMap.computeIfPresent"]},{"name":"abstract fun <T : Any> getAttribute(attribute: Attribute<T>): T?","description":"love.forte.simbot.AttributeContainer.getAttribute","location":"simbot-api/love.forte.simbot/-attribute-container/get-attribute.html","searchKeys":["getAttribute","abstract fun <T : Any> getAttribute(attribute: Attribute<T>): T?","love.forte.simbot.AttributeContainer.getAttribute"]},{"name":"abstract fun <T : Any> merge(attribute: Attribute<T>, value: T, remapping: (T, T) -> T): T","description":"love.forte.simbot.MutableAttributeMap.merge","location":"simbot-api/love.forte.simbot/-mutable-attribute-map/merge.html","searchKeys":["merge","abstract fun <T : Any> merge(attribute: Attribute<T>, value: T, remapping: (T, T) -> T): T","love.forte.simbot.MutableAttributeMap.merge"]},{"name":"abstract fun <T : Any> put(attribute: Attribute<T>, value: T): T?","description":"love.forte.simbot.MutableAttributeMap.put","location":"simbot-api/love.forte.simbot/-mutable-attribute-map/put.html","searchKeys":["put","abstract fun <T : Any> put(attribute: Attribute<T>, value: T): T?","love.forte.simbot.MutableAttributeMap.put"]},{"name":"abstract fun <T : Any> remove(attribute: Attribute<T>): T?","description":"love.forte.simbot.MutableAttributeMap.remove","location":"simbot-api/love.forte.simbot/-mutable-attribute-map/remove.html","searchKeys":["remove","abstract fun <T : Any> remove(attribute: Attribute<T>): T?","love.forte.simbot.MutableAttributeMap.remove"]},{"name":"abstract fun <T> decode(decoder: F, value: V, deserializer: DeserializationStrategy<T>): T","description":"love.forte.simbot.bot.StandardSerialFormatBotVerifyInfoDecoder.decode","location":"simbot-api/love.forte.simbot.bot/-standard-serial-format-bot-verify-info-decoder/decode.html","searchKeys":["decode","abstract fun <T> decode(decoder: F, value: V, deserializer: DeserializationStrategy<T>): T","love.forte.simbot.bot.StandardSerialFormatBotVerifyInfoDecoder.decode"]},{"name":"abstract fun <T> decode(deserializer: DeserializationStrategy<T>): T","description":"love.forte.simbot.resources.DeserializableResource.decode","location":"simbot-api/love.forte.simbot.resources/-deserializable-resource/decode.html","searchKeys":["decode","abstract fun <T> decode(deserializer: DeserializationStrategy<T>): T","love.forte.simbot.resources.DeserializableResource.decode"]},{"name":"abstract fun <T> decode(inputStream: InputStream, deserializer: DeserializationStrategy<T>): T","description":"love.forte.simbot.resources.DeserializableResourceDecoder.decode","location":"simbot-api/love.forte.simbot.resources/-deserializable-resource-decoder/decode.html","searchKeys":["decode","abstract fun <T> decode(inputStream: InputStream, deserializer: DeserializationStrategy<T>): T","love.forte.simbot.resources.DeserializableResourceDecoder.decode"]},{"name":"abstract fun <T> getProvider(id: String): ContinuousSessionProvider<T>?","description":"love.forte.simbot.event.ContinuousSessionContext.getProvider","location":"simbot-api/love.forte.simbot.event/-continuous-session-context/get-provider.html","searchKeys":["getProvider","abstract fun <T> getProvider(id: String): ContinuousSessionProvider<T>?","love.forte.simbot.event.ContinuousSessionContext.getProvider"]},{"name":"abstract fun <T> getReceiver(id: String): ContinuousSessionReceiver<T>?","description":"love.forte.simbot.event.ContinuousSessionContext.getReceiver","location":"simbot-api/love.forte.simbot.event/-continuous-session-context/get-receiver.html","searchKeys":["getReceiver","abstract fun <T> getReceiver(id: String): ContinuousSessionReceiver<T>?","love.forte.simbot.event.ContinuousSessionContext.getReceiver"]},{"name":"abstract fun <V> delayAndCompute(duration: JavaDuration, function: Function<T, V>): DelayCompletionStage<V>","description":"love.forte.simbot.ability.DelayCompletionStage.delayAndCompute","location":"simbot-api/love.forte.simbot.ability/-delay-completion-stage/delay-and-compute.html","searchKeys":["delayAndCompute","abstract fun <V> delayAndCompute(duration: JavaDuration, function: Function<T, V>): DelayCompletionStage<V>","love.forte.simbot.ability.DelayCompletionStage.delayAndCompute"]},{"name":"abstract fun <V> delayAndCompute(time: Long, function: Function<T, V>): DelayCompletionStage<V>","description":"love.forte.simbot.ability.DelayCompletionStage.delayAndCompute","location":"simbot-api/love.forte.simbot.ability/-delay-completion-stage/delay-and-compute.html","searchKeys":["delayAndCompute","abstract fun <V> delayAndCompute(time: Long, function: Function<T, V>): DelayCompletionStage<V>","love.forte.simbot.ability.DelayCompletionStage.delayAndCompute"]},{"name":"abstract fun <V> delayAndCompute(time: Long, timeUnit: TimeUnit, function: Function<T, V>): DelayCompletionStage<V>","description":"love.forte.simbot.ability.DelayCompletionStage.delayAndCompute","location":"simbot-api/love.forte.simbot.ability/-delay-completion-stage/delay-and-compute.html","searchKeys":["delayAndCompute","abstract fun <V> delayAndCompute(time: Long, timeUnit: TimeUnit, function: Function<T, V>): DelayCompletionStage<V>","love.forte.simbot.ability.DelayCompletionStage.delayAndCompute"]},{"name":"abstract fun accept(t1: T1, t2: T2, t3: T3)","description":"love.forte.simbot.utils.Consumer3.accept","location":"simbot-api/love.forte.simbot.utils/-consumer3/accept.html","searchKeys":["accept","abstract fun accept(t1: T1, t2: T2, t3: T3)","love.forte.simbot.utils.Consumer3.accept"]},{"name":"abstract fun accept(t1: T1, t2: T2, t3: T3, t4: T4)","description":"love.forte.simbot.utils.Consumer4.accept","location":"simbot-api/love.forte.simbot.utils/-consumer4/accept.html","searchKeys":["accept","abstract fun accept(t1: T1, t2: T2, t3: T3, t4: T4)","love.forte.simbot.utils.Consumer4.accept"]},{"name":"abstract fun accept(t1: T1, t2: T2, t3: T3, t4: T4, t5: T5)","description":"love.forte.simbot.utils.Consumer5.accept","location":"simbot-api/love.forte.simbot.utils/-consumer5/accept.html","searchKeys":["accept","abstract fun accept(t1: T1, t2: T2, t3: T3, t4: T4, t5: T5)","love.forte.simbot.utils.Consumer5.accept"]},{"name":"abstract fun all(): List<B>","description":"love.forte.simbot.bot.BotManager.all","location":"simbot-api/love.forte.simbot.bot/-bot-manager/all.html","searchKeys":["all","abstract fun all(): List<B>","love.forte.simbot.bot.BotManager.all"]},{"name":"abstract fun asFlow(): Flow<T>","description":"love.forte.simbot.utils.item.Items.asFlow","location":"simbot-api/love.forte.simbot.utils.item/-items/as-flow.html","searchKeys":["asFlow","abstract fun asFlow(): Flow<T>","love.forte.simbot.utils.item.Items.asFlow"]},{"name":"abstract fun asFuture(): Future<T>","description":"love.forte.simbot.event.ContinuousSessionReceiver.asFuture","location":"simbot-api/love.forte.simbot.event/-continuous-session-receiver/as-future.html","searchKeys":["asFuture","abstract fun asFuture(): Future<T>","love.forte.simbot.event.ContinuousSessionReceiver.asFuture"]},{"name":"abstract fun asSequence(): Sequence<T>","description":"love.forte.simbot.utils.item.Items.asSequence","location":"simbot-api/love.forte.simbot.utils.item/-items/as-sequence.html","searchKeys":["asSequence","abstract fun asSequence(): Sequence<T>","love.forte.simbot.utils.item.Items.asSequence"]},{"name":"abstract fun asStream(): Stream<out T>","description":"love.forte.simbot.utils.item.Items.asStream","location":"simbot-api/love.forte.simbot.utils.item/-items/as-stream.html","searchKeys":["asStream","abstract fun asStream(): Stream<out T>","love.forte.simbot.utils.item.Items.asStream"]},{"name":"abstract fun batch(size: Int): Items<T>","description":"love.forte.simbot.utils.item.Items.batch","location":"simbot-api/love.forte.simbot.utils.item/-items/batch.html","searchKeys":["batch","abstract fun batch(size: Int): Items<T>","love.forte.simbot.utils.item.Items.batch"]},{"name":"abstract fun bots(registrar: suspend BotRegistrar.() -> Unit)","description":"love.forte.simbot.application.ApplicationBuilder.bots","location":"simbot-api/love.forte.simbot.application/-application-builder/bots.html","searchKeys":["bots","abstract fun bots(registrar: suspend BotRegistrar.() -> Unit)","love.forte.simbot.application.ApplicationBuilder.bots"]},{"name":"abstract fun build(): EventListener","description":"love.forte.simbot.event.EventListenerBuilder.build","location":"simbot-api/love.forte.simbot.event/-event-listener-builder/build.html","searchKeys":["build","abstract fun build(): EventListener","love.forte.simbot.event.EventListenerBuilder.build"]},{"name":"abstract fun build(builder: suspend Builder.(Config) -> Unit): ApplicationDslBuilder<Config, Builder, A>","description":"love.forte.simbot.application.ApplicationDslBuilder.build","location":"simbot-api/love.forte.simbot.application/-application-dsl-builder/build.html","searchKeys":["build","abstract fun build(builder: suspend Builder.(Config) -> Unit): ApplicationDslBuilder<Config, Builder, A>","love.forte.simbot.application.ApplicationDslBuilder.build"]},{"name":"abstract fun buildDescription(): EventListenerRegistrationDescription","description":"love.forte.simbot.event.EventListenerRegistrationDescriptionBuilder.buildDescription","location":"simbot-api/love.forte.simbot.event/-event-listener-registration-description-builder/build-description.html","searchKeys":["buildDescription","abstract fun buildDescription(): EventListenerRegistrationDescription","love.forte.simbot.event.EventListenerRegistrationDescriptionBuilder.buildDescription"]},{"name":"abstract fun cancel(reason: Throwable? = null)","description":"love.forte.simbot.event.ContinuousSessionProvider.cancel","location":"simbot-api/love.forte.simbot.event/-continuous-session-provider/cancel.html","searchKeys":["cancel","abstract fun cancel(reason: Throwable? = null)","love.forte.simbot.event.ContinuousSessionProvider.cancel"]},{"name":"abstract fun cancel(reason: Throwable? = null)","description":"love.forte.simbot.event.ContinuousSessionReceiver.cancel","location":"simbot-api/love.forte.simbot.event/-continuous-session-receiver/cancel.html","searchKeys":["cancel","abstract fun cancel(reason: Throwable? = null)","love.forte.simbot.event.ContinuousSessionReceiver.cancel"]},{"name":"abstract fun collected(collectedContent: Any?): EventResult","description":"love.forte.simbot.event.ReactivelyCollectableEventResult.collected","location":"simbot-api/love.forte.simbot.event/-reactively-collectable-event-result/collected.html","searchKeys":["collected","abstract fun collected(collectedContent: Any?): EventResult","love.forte.simbot.event.ReactivelyCollectableEventResult.collected"]},{"name":"abstract fun config(config: ApplicationDslBuilder.ConfigFunction<Config>): ApplicationDslBuilder<Config, Builder, A>","description":"love.forte.simbot.application.ApplicationDslBuilder.config","location":"simbot-api/love.forte.simbot.application/-application-dsl-builder/config.html","searchKeys":["config","abstract fun config(config: ApplicationDslBuilder.ConfigFunction<Config>): ApplicationDslBuilder<Config, Builder, A>","love.forte.simbot.application.ApplicationDslBuilder.config"]},{"name":"abstract fun contentAsFuture(): CompletableFuture<EventResult>","description":"love.forte.simbot.event.AsyncEventResult.contentAsFuture","location":"simbot-api/love.forte.simbot.event/-async-event-result/content-as-future.html","searchKeys":["contentAsFuture","abstract fun contentAsFuture(): CompletableFuture<EventResult>","love.forte.simbot.event.AsyncEventResult.contentAsFuture"]},{"name":"abstract fun create(configurator: C.() -> Unit = {}): D","description":"love.forte.simbot.bot.BotVerifyInfoDecoderFactory.create","location":"simbot-api/love.forte.simbot.bot/-bot-verify-info-decoder-factory/create.html","searchKeys":["create","abstract fun create(configurator: C.() -> Unit = {}): D","love.forte.simbot.bot.BotVerifyInfoDecoderFactory.create"]},{"name":"abstract fun decodeComponentId(inputStream: InputStream): String?","description":"love.forte.simbot.bot.BotVerifyInfoDecoder.decodeComponentId","location":"simbot-api/love.forte.simbot.bot/-bot-verify-info-decoder/decode-component-id.html","searchKeys":["decodeComponentId","abstract fun decodeComponentId(inputStream: InputStream): String?","love.forte.simbot.bot.BotVerifyInfoDecoder.decodeComponentId"]},{"name":"abstract fun delay(duration: JavaDuration, runnable: Runnable): DelayCompletionStage<T>","description":"love.forte.simbot.ability.DelayCompletionStage.delay","location":"simbot-api/love.forte.simbot.ability/-delay-completion-stage/delay.html","searchKeys":["delay","abstract fun delay(duration: JavaDuration, runnable: Runnable): DelayCompletionStage<T>","love.forte.simbot.ability.DelayCompletionStage.delay"]},{"name":"abstract fun delay(time: Long, runnable: Runnable): DelayCompletionStage<T>","description":"love.forte.simbot.ability.DelayCompletionStage.delay","location":"simbot-api/love.forte.simbot.ability/-delay-completion-stage/delay.html","searchKeys":["delay","abstract fun delay(time: Long, runnable: Runnable): DelayCompletionStage<T>","love.forte.simbot.ability.DelayCompletionStage.delay"]},{"name":"abstract fun delay(time: Long, timeUnit: TimeUnit, runnable: Runnable): DelayCompletionStage<T>","description":"love.forte.simbot.ability.DelayCompletionStage.delay","location":"simbot-api/love.forte.simbot.ability/-delay-completion-stage/delay.html","searchKeys":["delay","abstract fun delay(time: Long, timeUnit: TimeUnit, runnable: Runnable): DelayCompletionStage<T>","love.forte.simbot.ability.DelayCompletionStage.delay"]},{"name":"abstract fun dispose(): Boolean","description":"love.forte.simbot.event.EventListenerHandle.dispose","location":"simbot-api/love.forte.simbot.event/-event-listener-handle/dispose.html","searchKeys":["dispose","abstract fun dispose(): Boolean","love.forte.simbot.event.EventListenerHandle.dispose"]},{"name":"abstract fun doIntercept(context: EventListenerInterceptor.Context): EventResult","description":"love.forte.simbot.event.BlockingEventListenerInterceptor.doIntercept","location":"simbot-api/love.forte.simbot.event/-blocking-event-listener-interceptor/do-intercept.html","searchKeys":["doIntercept","abstract fun doIntercept(context: EventListenerInterceptor.Context): EventResult","love.forte.simbot.event.BlockingEventListenerInterceptor.doIntercept"]},{"name":"abstract fun doIntercept(context: EventProcessingInterceptor.Context): EventProcessingResult","description":"love.forte.simbot.event.BlockingEventProcessingInterceptor.doIntercept","location":"simbot-api/love.forte.simbot.event/-blocking-event-processing-interceptor/do-intercept.html","searchKeys":["doIntercept","abstract fun doIntercept(context: EventProcessingInterceptor.Context): EventProcessingResult","love.forte.simbot.event.BlockingEventProcessingInterceptor.doIntercept"]},{"name":"abstract fun getComponent(id: String): Component","description":"love.forte.simbot.application.Application.Environment.getComponent","location":"simbot-api/love.forte.simbot.application/-application/-environment/get-component.html","searchKeys":["getComponent","abstract fun getComponent(id: String): Component","love.forte.simbot.application.Application.Environment.getComponent"]},{"name":"abstract fun getComponentOrNull(id: String): Component?","description":"love.forte.simbot.application.Application.Environment.getComponentOrNull","location":"simbot-api/love.forte.simbot.application/-application/-environment/get-component-or-null.html","searchKeys":["getComponentOrNull","abstract fun getComponentOrNull(id: String): Component?","love.forte.simbot.application.Application.Environment.getComponentOrNull"]},{"name":"abstract fun inputStream(): InputStream","description":"love.forte.simbot.bot.BotVerifyInfo.inputStream","location":"simbot-api/love.forte.simbot.bot/-bot-verify-info/input-stream.html","searchKeys":["inputStream","abstract fun inputStream(): InputStream","love.forte.simbot.bot.BotVerifyInfo.inputStream"]},{"name":"abstract fun invokeBlocking(context: EventListenerProcessingContext): EventResult","description":"love.forte.simbot.event.BlockingEventListenerFunction.invokeBlocking","location":"simbot-api/love.forte.simbot.event/-blocking-event-listener-function/invoke-blocking.html","searchKeys":["invokeBlocking","abstract fun invokeBlocking(context: EventListenerProcessingContext): EventResult","love.forte.simbot.event.BlockingEventListenerFunction.invokeBlocking"]},{"name":"abstract fun invokeOnCompletion(handler: CompletionHandler)","description":"love.forte.simbot.ability.Survivable.invokeOnCompletion","location":"simbot-api/love.forte.simbot.ability/-survivable/invoke-on-completion.html","searchKeys":["invokeOnCompletion","abstract fun invokeOnCompletion(handler: CompletionHandler)","love.forte.simbot.ability.Survivable.invokeOnCompletion"]},{"name":"abstract fun invokeOnCompletion(handler: CompletionHandler)","description":"love.forte.simbot.event.ContinuousSessionProvider.invokeOnCompletion","location":"simbot-api/love.forte.simbot.event/-continuous-session-provider/invoke-on-completion.html","searchKeys":["invokeOnCompletion","abstract fun invokeOnCompletion(handler: CompletionHandler)","love.forte.simbot.event.ContinuousSessionProvider.invokeOnCompletion"]},{"name":"abstract fun isEmpty(): Boolean","description":"love.forte.simbot.utils.view.View.isEmpty","location":"simbot-api/love.forte.simbot.utils.view/-view/is-empty.html","searchKeys":["isEmpty","abstract fun isEmpty(): Boolean","love.forte.simbot.utils.view.View.isEmpty"]},{"name":"abstract fun isProcessable(eventKey: Event.Key<*>): Boolean","description":"love.forte.simbot.event.EventProcessor.isProcessable","location":"simbot-api/love.forte.simbot.event/-event-processor/is-processable.html","searchKeys":["isProcessable","abstract fun isProcessable(eventKey: Event.Key<*>): Boolean","love.forte.simbot.event.EventProcessor.isProcessable"]},{"name":"abstract fun isSupport(): Boolean","description":"love.forte.simbot.Timestamp.isSupport","location":"simbot-api/love.forte.simbot/-timestamp/is-support.html","searchKeys":["isSupport","abstract fun isSupport(): Boolean","love.forte.simbot.Timestamp.isSupport"]},{"name":"abstract fun isTarget(eventType: Event.Key<*>): Boolean","description":"love.forte.simbot.event.EventListener.isTarget","location":"simbot-api/love.forte.simbot.event/-event-listener/is-target.html","searchKeys":["isTarget","abstract fun isTarget(eventType: Event.Key<*>): Boolean","love.forte.simbot.event.EventListener.isTarget"]},{"name":"abstract fun limit(count: Int): Items<T>","description":"love.forte.simbot.utils.item.Items.limit","location":"simbot-api/love.forte.simbot.utils.item/-items/limit.html","searchKeys":["limit","abstract fun limit(count: Int): Items<T>","love.forte.simbot.utils.item.Items.limit"]},{"name":"abstract fun match(verificationInfoName: String): Boolean","description":"love.forte.simbot.bot.BotVerifyInfoDecoderFactory.match","location":"simbot-api/love.forte.simbot.bot/-bot-verify-info-decoder-factory/match.html","searchKeys":["match","abstract fun match(verificationInfoName: String): Boolean","love.forte.simbot.bot.BotVerifyInfoDecoderFactory.match"]},{"name":"abstract fun offset(count: Int): Items<T>","description":"love.forte.simbot.utils.item.Items.offset","location":"simbot-api/love.forte.simbot.utils.item/-items/offset.html","searchKeys":["offset","abstract fun offset(count: Int): Items<T>","love.forte.simbot.utils.item.Items.offset"]},{"name":"abstract fun onCompletion(handle: suspend (application: T) -> Unit)","description":"love.forte.simbot.ability.CompletionPerceivable.onCompletion","location":"simbot-api/love.forte.simbot.ability/-completion-perceivable/on-completion.html","searchKeys":["onCompletion","abstract fun onCompletion(handle: suspend (application: T) -> Unit)","love.forte.simbot.ability.CompletionPerceivable.onCompletion"]},{"name":"abstract fun openStream(): InputStream","description":"love.forte.simbot.resources.Resource.openStream","location":"simbot-api/love.forte.simbot.resources/-resource/open-stream.html","searchKeys":["openStream","abstract fun openStream(): InputStream","love.forte.simbot.resources.Resource.openStream"]},{"name":"abstract fun push(value: T)","description":"love.forte.simbot.event.ContinuousSessionProvider.push","location":"simbot-api/love.forte.simbot.event/-continuous-session-provider/push.html","searchKeys":["push","abstract fun push(value: T)","love.forte.simbot.event.ContinuousSessionProvider.push"]},{"name":"abstract fun pushException(e: Throwable)","description":"love.forte.simbot.event.ContinuousSessionProvider.pushException","location":"simbot-api/love.forte.simbot.event/-continuous-session-provider/push-exception.html","searchKeys":["pushException","abstract fun pushException(e: Throwable)","love.forte.simbot.event.ContinuousSessionProvider.pushException"]},{"name":"abstract fun register(botVerifyInfo: BotVerifyInfo): Bot?","description":"love.forte.simbot.application.BotManagers.register","location":"simbot-api/love.forte.simbot.application/-bot-managers/register.html","searchKeys":["register","abstract fun register(botVerifyInfo: BotVerifyInfo): Bot?","love.forte.simbot.application.BotManagers.register"]},{"name":"abstract fun register(botVerifyInfo: BotVerifyInfo): Bot?","description":"love.forte.simbot.application.BotRegistrar.register","location":"simbot-api/love.forte.simbot.application/-bot-registrar/register.html","searchKeys":["register","abstract fun register(botVerifyInfo: BotVerifyInfo): Bot?","love.forte.simbot.application.BotRegistrar.register"]},{"name":"abstract fun register(listener: EventListener): EventListenerHandle","description":"love.forte.simbot.event.EventListenerRegistrar.register","location":"simbot-api/love.forte.simbot.event/-event-listener-registrar/register.html","searchKeys":["register","abstract fun register(listener: EventListener): EventListenerHandle","love.forte.simbot.event.EventListenerRegistrar.register"]},{"name":"abstract fun register(registrationDescription: EventListenerRegistrationDescription): EventListenerHandle","description":"love.forte.simbot.event.EventListenerRegistrar.register","location":"simbot-api/love.forte.simbot.event/-event-listener-registrar/register.html","searchKeys":["register","abstract fun register(registrationDescription: EventListenerRegistrationDescription): EventListenerHandle","love.forte.simbot.event.EventListenerRegistrar.register"]},{"name":"abstract fun register(verifyInfo: BotVerifyInfo): Bot","description":"love.forte.simbot.bot.BotRegistrar.register","location":"simbot-api/love.forte.simbot.bot/-bot-registrar/register.html","searchKeys":["register","abstract fun register(verifyInfo: BotVerifyInfo): Bot","love.forte.simbot.bot.BotRegistrar.register"]},{"name":"abstract fun safeCast(value: Any): E?","description":"love.forte.simbot.event.Event.Key.safeCast","location":"simbot-api/love.forte.simbot.event/-event/-key/safe-cast.html","searchKeys":["safeCast","abstract fun safeCast(value: Any): E?","love.forte.simbot.event.Event.Key.safeCast"]},{"name":"abstract fun safeCast(value: Any): E?","description":"love.forte.simbot.message.Message.Key.safeCast","location":"simbot-api/love.forte.simbot.message/-message/-key/safe-cast.html","searchKeys":["safeCast","abstract fun safeCast(value: Any): E?","love.forte.simbot.message.Message.Key.safeCast"]},{"name":"abstract fun size(): Int","description":"love.forte.simbot.AttributeMap.size","location":"simbot-api/love.forte.simbot/-attribute-map/size.html","searchKeys":["size","abstract fun size(): Int","love.forte.simbot.AttributeMap.size"]},{"name":"abstract fun testBlocking(t: T): Boolean","description":"love.forte.simbot.BlockingFilter.testBlocking","location":"simbot-api/love.forte.simbot/-blocking-filter/test-blocking.html","searchKeys":["testBlocking","abstract fun testBlocking(t: T): Boolean","love.forte.simbot.BlockingFilter.testBlocking"]},{"name":"abstract fun toList(): List<Message.Element<*>>","description":"love.forte.simbot.message.Messages.toList","location":"simbot-api/love.forte.simbot.message/-messages/to-list.html","searchKeys":["toList","abstract fun toList(): List<Message.Element<*>>","love.forte.simbot.message.Messages.toList"]},{"name":"abstract infix fun isMe(id: ID): Boolean","description":"love.forte.simbot.bot.Bot.isMe","location":"simbot-api/love.forte.simbot.bot/-bot/is-me.html","searchKeys":["isMe","abstract infix fun isMe(id: ID): Boolean","love.forte.simbot.bot.Bot.isMe"]},{"name":"abstract operator fun <E : Message.Element<E>> get(key: Message.Key<E>): List<E>","description":"love.forte.simbot.message.Messages.get","location":"simbot-api/love.forte.simbot.message/-messages/get.html","searchKeys":["get","abstract operator fun <E : Message.Element<E>> get(key: Message.Key<E>): List<E>","love.forte.simbot.message.Messages.get"]},{"name":"abstract operator fun <T : Any> contains(attribute: Attribute<T>): Boolean","description":"love.forte.simbot.AttributeMap.contains","location":"simbot-api/love.forte.simbot/-attribute-map/contains.html","searchKeys":["contains","abstract operator fun <T : Any> contains(attribute: Attribute<T>): Boolean","love.forte.simbot.AttributeMap.contains"]},{"name":"abstract operator fun <T : Any> get(attribute: Attribute<T>): T?","description":"love.forte.simbot.AttributeMap.get","location":"simbot-api/love.forte.simbot/-attribute-map/get.html","searchKeys":["get","abstract operator fun <T : Any> get(attribute: Attribute<T>): T?","love.forte.simbot.AttributeMap.get"]},{"name":"abstract operator fun <T> invoke(context: CoroutineContext, block: suspend () -> T): T","description":"love.forte.simbot.utils.RunInNoScopeBlockingStrategy.invoke","location":"simbot-api/love.forte.simbot.utils/-run-in-no-scope-blocking-strategy/invoke.html","searchKeys":["invoke","abstract operator fun <T> invoke(context: CoroutineContext, block: suspend () -> T): T","love.forte.simbot.utils.RunInNoScopeBlockingStrategy.invoke"]},{"name":"abstract operator fun <T> invoke(context: CoroutineContext, block: suspend CoroutineScope.() -> T): T","description":"love.forte.simbot.utils.RunInBlockingStrategy.invoke","location":"simbot-api/love.forte.simbot.utils/-run-in-blocking-strategy/invoke.html","searchKeys":["invoke","abstract operator fun <T> invoke(context: CoroutineContext, block: suspend CoroutineScope.() -> T): T","love.forte.simbot.utils.RunInBlockingStrategy.invoke"]},{"name":"abstract operator fun EventProcessingContext.invoke(event: E): Boolean","description":"love.forte.simbot.event.BlockingContinuousSessionEventMatcher.invoke","location":"simbot-api/love.forte.simbot.event/-blocking-continuous-session-event-matcher/invoke.html","searchKeys":["invoke","abstract operator fun EventProcessingContext.invoke(event: E): Boolean","love.forte.simbot.event.BlockingContinuousSessionEventMatcher.invoke"]},{"name":"abstract operator fun T.invoke()","description":"love.forte.simbot.application.ApplicationDslBuilder.ConfigFunction.invoke","location":"simbot-api/love.forte.simbot.application/-application-dsl-builder/-config-function/invoke.html","searchKeys":["invoke","abstract operator fun T.invoke()","love.forte.simbot.application.ApplicationDslBuilder.ConfigFunction.invoke"]},{"name":"abstract operator fun contains(element: T): Boolean","description":"love.forte.simbot.utils.view.View.contains","location":"simbot-api/love.forte.simbot.utils.view/-view/contains.html","searchKeys":["contains","abstract operator fun contains(element: T): Boolean","love.forte.simbot.utils.view.View.contains"]},{"name":"abstract operator fun get(id: ID): B?","description":"love.forte.simbot.bot.BotManager.get","location":"simbot-api/love.forte.simbot.bot/-bot-manager/get.html","searchKeys":["get","abstract operator fun get(id: ID): B?","love.forte.simbot.bot.BotManager.get"]},{"name":"abstract operator fun get(index: Int): Message.Element<*>","description":"love.forte.simbot.message.Messages.get","location":"simbot-api/love.forte.simbot.message/-messages/get.html","searchKeys":["get","abstract operator fun get(index: Int): Message.Element<*>","love.forte.simbot.message.Messages.get"]},{"name":"abstract operator fun get(index: Int): SingleMessageReceipt","description":"love.forte.simbot.message.AggregatedMessageReceipt.get","location":"simbot-api/love.forte.simbot.message/-aggregated-message-receipt/get.html","searchKeys":["get","abstract operator fun get(index: Int): SingleMessageReceipt","love.forte.simbot.message.AggregatedMessageReceipt.get"]},{"name":"abstract operator fun get(index: Int): T","description":"love.forte.simbot.utils.view.IndexAccessView.get","location":"simbot-api/love.forte.simbot.utils.view/-index-access-view/get.html","searchKeys":["get","abstract operator fun get(index: Int): T","love.forte.simbot.utils.view.IndexAccessView.get"]},{"name":"abstract operator fun invoke(application: A)","description":"love.forte.simbot.application.OnCompletion.invoke","location":"simbot-api/love.forte.simbot.application/-on-completion/invoke.html","searchKeys":["invoke","abstract operator fun invoke(application: A)","love.forte.simbot.application.OnCompletion.invoke"]},{"name":"abstract operator fun invoke(builder: JsonBuilder)","description":"love.forte.simbot.message.JsonBuilder4J.invoke","location":"simbot-api/love.forte.simbot.message/-json-builder4-j/invoke.html","searchKeys":["invoke","abstract operator fun invoke(builder: JsonBuilder)","love.forte.simbot.message.JsonBuilder4J.invoke"]},{"name":"abstract operator fun invoke(context: EventProcessingContext, provider: ContinuousSessionProvider<T>)","description":"love.forte.simbot.event.BlockingContinuousSessionSelector.invoke","location":"simbot-api/love.forte.simbot.event/-blocking-continuous-session-selector/invoke.html","searchKeys":["invoke","abstract operator fun invoke(context: EventProcessingContext, provider: ContinuousSessionProvider<T>)","love.forte.simbot.event.BlockingContinuousSessionSelector.invoke"]},{"name":"abstract operator fun plus(element: Message.Element<*>): Messages","description":"love.forte.simbot.message.Messages.plus","location":"simbot-api/love.forte.simbot.message/-messages/plus.html","searchKeys":["plus","abstract operator fun plus(element: Message.Element<*>): Messages","love.forte.simbot.message.Messages.plus"]},{"name":"abstract operator fun plus(messages: Iterable<Message.Element<*>>): Messages","description":"love.forte.simbot.message.Messages.plus","location":"simbot-api/love.forte.simbot.message/-messages/plus.html","searchKeys":["plus","abstract operator fun plus(messages: Iterable<Message.Element<*>>): Messages","love.forte.simbot.message.Messages.plus"]},{"name":"abstract operator override fun compareTo(other: ID): Int","description":"love.forte.simbot.ID.compareTo","location":"simbot-api/love.forte.simbot/-i-d/compare-to.html","searchKeys":["compareTo","abstract operator override fun compareTo(other: ID): Int","love.forte.simbot.ID.compareTo"]},{"name":"abstract operator override fun equals(other: Any?): Boolean","description":"love.forte.simbot.message.Message.Element.equals","location":"simbot-api/love.forte.simbot.message/-message/-element/equals.html","searchKeys":["equals","abstract operator override fun equals(other: Any?): Boolean","love.forte.simbot.message.Message.Element.equals"]},{"name":"abstract operator override fun iterator(): Iterator<T>","description":"love.forte.simbot.utils.view.View.iterator","location":"simbot-api/love.forte.simbot.utils.view/-view/iterator.html","searchKeys":["iterator","abstract operator override fun iterator(): Iterator<T>","love.forte.simbot.utils.view.View.iterator"]},{"name":"abstract operator override fun next(): T","description":"love.forte.simbot.utils.CyclicIterator.next","location":"simbot-api/love.forte.simbot.utils/-cyclic-iterator/next.html","searchKeys":["next","abstract operator override fun next(): T","love.forte.simbot.utils.CyclicIterator.next"]},{"name":"abstract override fun <T : Any> getAttribute(attribute: Attribute<T>): T?","description":"love.forte.simbot.event.EventListener.getAttribute","location":"simbot-api/love.forte.simbot.event/-event-listener/get-attribute.html","searchKeys":["getAttribute","abstract override fun <T : Any> getAttribute(attribute: Attribute<T>): T?","love.forte.simbot.event.EventListener.getAttribute"]},{"name":"abstract override fun <T : Any> getAttribute(attribute: Attribute<T>): T?","description":"love.forte.simbot.event.EventListenerProcessingContext.getAttribute","location":"simbot-api/love.forte.simbot.event/-event-listener-processing-context/get-attribute.html","searchKeys":["getAttribute","abstract override fun <T : Any> getAttribute(attribute: Attribute<T>): T?","love.forte.simbot.event.EventListenerProcessingContext.getAttribute"]},{"name":"abstract override fun <T : Any> getAttribute(attribute: Attribute<T>): T?","description":"love.forte.simbot.event.EventProcessingContext.getAttribute","location":"simbot-api/love.forte.simbot.event/-event-processing-context/get-attribute.html","searchKeys":["getAttribute","abstract override fun <T : Any> getAttribute(attribute: Attribute<T>): T?","love.forte.simbot.event.EventProcessingContext.getAttribute"]},{"name":"abstract override fun <T> decode(deserializer: DeserializationStrategy<T>): T","description":"love.forte.simbot.bot.BotVerifyInfo.decode","location":"simbot-api/love.forte.simbot.bot/-bot-verify-info/decode.html","searchKeys":["decode","abstract override fun <T> decode(deserializer: DeserializationStrategy<T>): T","love.forte.simbot.bot.BotVerifyInfo.decode"]},{"name":"abstract override fun <T> decode(inputStream: InputStream, deserializer: DeserializationStrategy<T>): T","description":"love.forte.simbot.bot.BotVerifyInfoDecoder.decode","location":"simbot-api/love.forte.simbot.bot/-bot-verify-info-decoder/decode.html","searchKeys":["decode","abstract override fun <T> decode(inputStream: InputStream, deserializer: DeserializationStrategy<T>): T","love.forte.simbot.bot.BotVerifyInfoDecoder.decode"]},{"name":"abstract override fun <U, V> thenCombine(other: CompletionStage<out U>, fn: BiFunction<in T, in U, out V>): DelayCompletionStage<V>","description":"love.forte.simbot.ability.DelayCompletionStage.thenCombine","location":"simbot-api/love.forte.simbot.ability/-delay-completion-stage/then-combine.html","searchKeys":["thenCombine","abstract override fun <U, V> thenCombine(other: CompletionStage<out U>, fn: BiFunction<in T, in U, out V>): DelayCompletionStage<V>","love.forte.simbot.ability.DelayCompletionStage.thenCombine"]},{"name":"abstract override fun <U, V> thenCombine(other: CompletionStage<out U>, fn: BiFunction<in T, in U, out V>): DelayableCompletableFuture<V>","description":"love.forte.simbot.ability.DelayableCompletableFuture.thenCombine","location":"simbot-api/love.forte.simbot.ability/-delayable-completable-future/then-combine.html","searchKeys":["thenCombine","abstract override fun <U, V> thenCombine(other: CompletionStage<out U>, fn: BiFunction<in T, in U, out V>): DelayableCompletableFuture<V>","love.forte.simbot.ability.DelayableCompletableFuture.thenCombine"]},{"name":"abstract override fun <U, V> thenCombineAsync(other: CompletionStage<out U>, fn: BiFunction<in T, in U, out V>): DelayCompletionStage<V>","description":"love.forte.simbot.ability.DelayCompletionStage.thenCombineAsync","location":"simbot-api/love.forte.simbot.ability/-delay-completion-stage/then-combine-async.html","searchKeys":["thenCombineAsync","abstract override fun <U, V> thenCombineAsync(other: CompletionStage<out U>, fn: BiFunction<in T, in U, out V>): DelayCompletionStage<V>","love.forte.simbot.ability.DelayCompletionStage.thenCombineAsync"]},{"name":"abstract override fun <U, V> thenCombineAsync(other: CompletionStage<out U>, fn: BiFunction<in T, in U, out V>): DelayableCompletableFuture<V>","description":"love.forte.simbot.ability.DelayableCompletableFuture.thenCombineAsync","location":"simbot-api/love.forte.simbot.ability/-delayable-completable-future/then-combine-async.html","searchKeys":["thenCombineAsync","abstract override fun <U, V> thenCombineAsync(other: CompletionStage<out U>, fn: BiFunction<in T, in U, out V>): DelayableCompletableFuture<V>","love.forte.simbot.ability.DelayableCompletableFuture.thenCombineAsync"]},{"name":"abstract override fun <U, V> thenCombineAsync(other: CompletionStage<out U>, fn: BiFunction<in T, in U, out V>, executor: Executor): DelayCompletionStage<V>","description":"love.forte.simbot.ability.DelayCompletionStage.thenCombineAsync","location":"simbot-api/love.forte.simbot.ability/-delay-completion-stage/then-combine-async.html","searchKeys":["thenCombineAsync","abstract override fun <U, V> thenCombineAsync(other: CompletionStage<out U>, fn: BiFunction<in T, in U, out V>, executor: Executor): DelayCompletionStage<V>","love.forte.simbot.ability.DelayCompletionStage.thenCombineAsync"]},{"name":"abstract override fun <U, V> thenCombineAsync(other: CompletionStage<out U>, fn: BiFunction<in T, in U, out V>, executor: Executor): DelayableCompletableFuture<V>","description":"love.forte.simbot.ability.DelayableCompletableFuture.thenCombineAsync","location":"simbot-api/love.forte.simbot.ability/-delayable-completable-future/then-combine-async.html","searchKeys":["thenCombineAsync","abstract override fun <U, V> thenCombineAsync(other: CompletionStage<out U>, fn: BiFunction<in T, in U, out V>, executor: Executor): DelayableCompletableFuture<V>","love.forte.simbot.ability.DelayableCompletableFuture.thenCombineAsync"]},{"name":"abstract override fun <U> applyToEither(other: CompletionStage<out T>, fn: Function<in T, U>): DelayCompletionStage<U>","description":"love.forte.simbot.ability.DelayCompletionStage.applyToEither","location":"simbot-api/love.forte.simbot.ability/-delay-completion-stage/apply-to-either.html","searchKeys":["applyToEither","abstract override fun <U> applyToEither(other: CompletionStage<out T>, fn: Function<in T, U>): DelayCompletionStage<U>","love.forte.simbot.ability.DelayCompletionStage.applyToEither"]},{"name":"abstract override fun <U> applyToEither(other: CompletionStage<out T>, fn: Function<in T, U>): DelayableCompletableFuture<U>","description":"love.forte.simbot.ability.DelayableCompletableFuture.applyToEither","location":"simbot-api/love.forte.simbot.ability/-delayable-completable-future/apply-to-either.html","searchKeys":["applyToEither","abstract override fun <U> applyToEither(other: CompletionStage<out T>, fn: Function<in T, U>): DelayableCompletableFuture<U>","love.forte.simbot.ability.DelayableCompletableFuture.applyToEither"]},{"name":"abstract override fun <U> applyToEitherAsync(other: CompletionStage<out T>, fn: Function<in T, U>): DelayCompletionStage<U>","description":"love.forte.simbot.ability.DelayCompletionStage.applyToEitherAsync","location":"simbot-api/love.forte.simbot.ability/-delay-completion-stage/apply-to-either-async.html","searchKeys":["applyToEitherAsync","abstract override fun <U> applyToEitherAsync(other: CompletionStage<out T>, fn: Function<in T, U>): DelayCompletionStage<U>","love.forte.simbot.ability.DelayCompletionStage.applyToEitherAsync"]},{"name":"abstract override fun <U> applyToEitherAsync(other: CompletionStage<out T>, fn: Function<in T, U>): DelayableCompletableFuture<U>","description":"love.forte.simbot.ability.DelayableCompletableFuture.applyToEitherAsync","location":"simbot-api/love.forte.simbot.ability/-delayable-completable-future/apply-to-either-async.html","searchKeys":["applyToEitherAsync","abstract override fun <U> applyToEitherAsync(other: CompletionStage<out T>, fn: Function<in T, U>): DelayableCompletableFuture<U>","love.forte.simbot.ability.DelayableCompletableFuture.applyToEitherAsync"]},{"name":"abstract override fun <U> applyToEitherAsync(other: CompletionStage<out T>, fn: Function<in T, U>, executor: Executor): DelayCompletionStage<U>","description":"love.forte.simbot.ability.DelayCompletionStage.applyToEitherAsync","location":"simbot-api/love.forte.simbot.ability/-delay-completion-stage/apply-to-either-async.html","searchKeys":["applyToEitherAsync","abstract override fun <U> applyToEitherAsync(other: CompletionStage<out T>, fn: Function<in T, U>, executor: Executor): DelayCompletionStage<U>","love.forte.simbot.ability.DelayCompletionStage.applyToEitherAsync"]},{"name":"abstract override fun <U> applyToEitherAsync(other: CompletionStage<out T>, fn: Function<in T, U>, executor: Executor): DelayableCompletableFuture<U>","description":"love.forte.simbot.ability.DelayableCompletableFuture.applyToEitherAsync","location":"simbot-api/love.forte.simbot.ability/-delayable-completable-future/apply-to-either-async.html","searchKeys":["applyToEitherAsync","abstract override fun <U> applyToEitherAsync(other: CompletionStage<out T>, fn: Function<in T, U>, executor: Executor): DelayableCompletableFuture<U>","love.forte.simbot.ability.DelayableCompletableFuture.applyToEitherAsync"]},{"name":"abstract override fun <U> handle(fn: BiFunction<in T?, Throwable?, out U>): DelayCompletionStage<U>","description":"love.forte.simbot.ability.DelayCompletionStage.handle","location":"simbot-api/love.forte.simbot.ability/-delay-completion-stage/handle.html","searchKeys":["handle","abstract override fun <U> handle(fn: BiFunction<in T?, Throwable?, out U>): DelayCompletionStage<U>","love.forte.simbot.ability.DelayCompletionStage.handle"]},{"name":"abstract override fun <U> handle(fn: BiFunction<in T?, Throwable?, out U>): DelayableCompletableFuture<U>","description":"love.forte.simbot.ability.DelayableCompletableFuture.handle","location":"simbot-api/love.forte.simbot.ability/-delayable-completable-future/handle.html","searchKeys":["handle","abstract override fun <U> handle(fn: BiFunction<in T?, Throwable?, out U>): DelayableCompletableFuture<U>","love.forte.simbot.ability.DelayableCompletableFuture.handle"]},{"name":"abstract override fun <U> handleAsync(fn: BiFunction<in T?, Throwable?, out U>): DelayCompletionStage<U>","description":"love.forte.simbot.ability.DelayCompletionStage.handleAsync","location":"simbot-api/love.forte.simbot.ability/-delay-completion-stage/handle-async.html","searchKeys":["handleAsync","abstract override fun <U> handleAsync(fn: BiFunction<in T?, Throwable?, out U>): DelayCompletionStage<U>","love.forte.simbot.ability.DelayCompletionStage.handleAsync"]},{"name":"abstract override fun <U> handleAsync(fn: BiFunction<in T?, Throwable?, out U>): DelayableCompletableFuture<U>","description":"love.forte.simbot.ability.DelayableCompletableFuture.handleAsync","location":"simbot-api/love.forte.simbot.ability/-delayable-completable-future/handle-async.html","searchKeys":["handleAsync","abstract override fun <U> handleAsync(fn: BiFunction<in T?, Throwable?, out U>): DelayableCompletableFuture<U>","love.forte.simbot.ability.DelayableCompletableFuture.handleAsync"]},{"name":"abstract override fun <U> handleAsync(fn: BiFunction<in T?, Throwable?, out U>, executor: Executor): DelayCompletionStage<U>","description":"love.forte.simbot.ability.DelayCompletionStage.handleAsync","location":"simbot-api/love.forte.simbot.ability/-delay-completion-stage/handle-async.html","searchKeys":["handleAsync","abstract override fun <U> handleAsync(fn: BiFunction<in T?, Throwable?, out U>, executor: Executor): DelayCompletionStage<U>","love.forte.simbot.ability.DelayCompletionStage.handleAsync"]},{"name":"abstract override fun <U> handleAsync(fn: BiFunction<in T?, Throwable?, out U>, executor: Executor): DelayableCompletableFuture<U>","description":"love.forte.simbot.ability.DelayableCompletableFuture.handleAsync","location":"simbot-api/love.forte.simbot.ability/-delayable-completable-future/handle-async.html","searchKeys":["handleAsync","abstract override fun <U> handleAsync(fn: BiFunction<in T?, Throwable?, out U>, executor: Executor): DelayableCompletableFuture<U>","love.forte.simbot.ability.DelayableCompletableFuture.handleAsync"]},{"name":"abstract override fun <U> thenAcceptBoth(other: CompletionStage<out U>, action: BiConsumer<in T, in U>): DelayCompletionStage<Void?>","description":"love.forte.simbot.ability.DelayCompletionStage.thenAcceptBoth","location":"simbot-api/love.forte.simbot.ability/-delay-completion-stage/then-accept-both.html","searchKeys":["thenAcceptBoth","abstract override fun <U> thenAcceptBoth(other: CompletionStage<out U>, action: BiConsumer<in T, in U>): DelayCompletionStage<Void?>","love.forte.simbot.ability.DelayCompletionStage.thenAcceptBoth"]},{"name":"abstract override fun <U> thenAcceptBoth(other: CompletionStage<out U>, action: BiConsumer<in T, in U>): DelayableCompletableFuture<Void?>","description":"love.forte.simbot.ability.DelayableCompletableFuture.thenAcceptBoth","location":"simbot-api/love.forte.simbot.ability/-delayable-completable-future/then-accept-both.html","searchKeys":["thenAcceptBoth","abstract override fun <U> thenAcceptBoth(other: CompletionStage<out U>, action: BiConsumer<in T, in U>): DelayableCompletableFuture<Void?>","love.forte.simbot.ability.DelayableCompletableFuture.thenAcceptBoth"]},{"name":"abstract override fun <U> thenAcceptBothAsync(other: CompletionStage<out U>, action: BiConsumer<in T, in U>): DelayCompletionStage<Void?>","description":"love.forte.simbot.ability.DelayCompletionStage.thenAcceptBothAsync","location":"simbot-api/love.forte.simbot.ability/-delay-completion-stage/then-accept-both-async.html","searchKeys":["thenAcceptBothAsync","abstract override fun <U> thenAcceptBothAsync(other: CompletionStage<out U>, action: BiConsumer<in T, in U>): DelayCompletionStage<Void?>","love.forte.simbot.ability.DelayCompletionStage.thenAcceptBothAsync"]},{"name":"abstract override fun <U> thenAcceptBothAsync(other: CompletionStage<out U>, action: BiConsumer<in T, in U>): DelayableCompletableFuture<Void?>","description":"love.forte.simbot.ability.DelayableCompletableFuture.thenAcceptBothAsync","location":"simbot-api/love.forte.simbot.ability/-delayable-completable-future/then-accept-both-async.html","searchKeys":["thenAcceptBothAsync","abstract override fun <U> thenAcceptBothAsync(other: CompletionStage<out U>, action: BiConsumer<in T, in U>): DelayableCompletableFuture<Void?>","love.forte.simbot.ability.DelayableCompletableFuture.thenAcceptBothAsync"]},{"name":"abstract override fun <U> thenAcceptBothAsync(other: CompletionStage<out U>, action: BiConsumer<in T, in U>, executor: Executor): DelayCompletionStage<Void?>","description":"love.forte.simbot.ability.DelayCompletionStage.thenAcceptBothAsync","location":"simbot-api/love.forte.simbot.ability/-delay-completion-stage/then-accept-both-async.html","searchKeys":["thenAcceptBothAsync","abstract override fun <U> thenAcceptBothAsync(other: CompletionStage<out U>, action: BiConsumer<in T, in U>, executor: Executor): DelayCompletionStage<Void?>","love.forte.simbot.ability.DelayCompletionStage.thenAcceptBothAsync"]},{"name":"abstract override fun <U> thenAcceptBothAsync(other: CompletionStage<out U>, action: BiConsumer<in T, in U>, executor: Executor): DelayableCompletableFuture<Void?>","description":"love.forte.simbot.ability.DelayableCompletableFuture.thenAcceptBothAsync","location":"simbot-api/love.forte.simbot.ability/-delayable-completable-future/then-accept-both-async.html","searchKeys":["thenAcceptBothAsync","abstract override fun <U> thenAcceptBothAsync(other: CompletionStage<out U>, action: BiConsumer<in T, in U>, executor: Executor): DelayableCompletableFuture<Void?>","love.forte.simbot.ability.DelayableCompletableFuture.thenAcceptBothAsync"]},{"name":"abstract override fun <U> thenApply(fn: Function<in T, out U>): DelayCompletionStage<U>","description":"love.forte.simbot.ability.DelayCompletionStage.thenApply","location":"simbot-api/love.forte.simbot.ability/-delay-completion-stage/then-apply.html","searchKeys":["thenApply","abstract override fun <U> thenApply(fn: Function<in T, out U>): DelayCompletionStage<U>","love.forte.simbot.ability.DelayCompletionStage.thenApply"]},{"name":"abstract override fun <U> thenApply(fn: Function<in T, out U>): DelayableCompletableFuture<U>","description":"love.forte.simbot.ability.DelayableCompletableFuture.thenApply","location":"simbot-api/love.forte.simbot.ability/-delayable-completable-future/then-apply.html","searchKeys":["thenApply","abstract override fun <U> thenApply(fn: Function<in T, out U>): DelayableCompletableFuture<U>","love.forte.simbot.ability.DelayableCompletableFuture.thenApply"]},{"name":"abstract override fun <U> thenApplyAsync(fn: Function<in T, out U>): DelayCompletionStage<U>","description":"love.forte.simbot.ability.DelayCompletionStage.thenApplyAsync","location":"simbot-api/love.forte.simbot.ability/-delay-completion-stage/then-apply-async.html","searchKeys":["thenApplyAsync","abstract override fun <U> thenApplyAsync(fn: Function<in T, out U>): DelayCompletionStage<U>","love.forte.simbot.ability.DelayCompletionStage.thenApplyAsync"]},{"name":"abstract override fun <U> thenApplyAsync(fn: Function<in T, out U>): DelayableCompletableFuture<U>","description":"love.forte.simbot.ability.DelayableCompletableFuture.thenApplyAsync","location":"simbot-api/love.forte.simbot.ability/-delayable-completable-future/then-apply-async.html","searchKeys":["thenApplyAsync","abstract override fun <U> thenApplyAsync(fn: Function<in T, out U>): DelayableCompletableFuture<U>","love.forte.simbot.ability.DelayableCompletableFuture.thenApplyAsync"]},{"name":"abstract override fun <U> thenApplyAsync(fn: Function<in T, out U>, executor: Executor): DelayCompletionStage<U>","description":"love.forte.simbot.ability.DelayCompletionStage.thenApplyAsync","location":"simbot-api/love.forte.simbot.ability/-delay-completion-stage/then-apply-async.html","searchKeys":["thenApplyAsync","abstract override fun <U> thenApplyAsync(fn: Function<in T, out U>, executor: Executor): DelayCompletionStage<U>","love.forte.simbot.ability.DelayCompletionStage.thenApplyAsync"]},{"name":"abstract override fun <U> thenApplyAsync(fn: Function<in T, out U>, executor: Executor): DelayableCompletableFuture<U>","description":"love.forte.simbot.ability.DelayableCompletableFuture.thenApplyAsync","location":"simbot-api/love.forte.simbot.ability/-delayable-completable-future/then-apply-async.html","searchKeys":["thenApplyAsync","abstract override fun <U> thenApplyAsync(fn: Function<in T, out U>, executor: Executor): DelayableCompletableFuture<U>","love.forte.simbot.ability.DelayableCompletableFuture.thenApplyAsync"]},{"name":"abstract override fun <U> thenCompose(fn: Function<in T, out CompletionStage<U>>): DelayCompletionStage<U>","description":"love.forte.simbot.ability.DelayCompletionStage.thenCompose","location":"simbot-api/love.forte.simbot.ability/-delay-completion-stage/then-compose.html","searchKeys":["thenCompose","abstract override fun <U> thenCompose(fn: Function<in T, out CompletionStage<U>>): DelayCompletionStage<U>","love.forte.simbot.ability.DelayCompletionStage.thenCompose"]},{"name":"abstract override fun <U> thenCompose(fn: Function<in T, out CompletionStage<U>>): DelayableCompletableFuture<U>","description":"love.forte.simbot.ability.DelayableCompletableFuture.thenCompose","location":"simbot-api/love.forte.simbot.ability/-delayable-completable-future/then-compose.html","searchKeys":["thenCompose","abstract override fun <U> thenCompose(fn: Function<in T, out CompletionStage<U>>): DelayableCompletableFuture<U>","love.forte.simbot.ability.DelayableCompletableFuture.thenCompose"]},{"name":"abstract override fun <U> thenComposeAsync(fn: Function<in T, out CompletionStage<U>>): DelayCompletionStage<U>","description":"love.forte.simbot.ability.DelayCompletionStage.thenComposeAsync","location":"simbot-api/love.forte.simbot.ability/-delay-completion-stage/then-compose-async.html","searchKeys":["thenComposeAsync","abstract override fun <U> thenComposeAsync(fn: Function<in T, out CompletionStage<U>>): DelayCompletionStage<U>","love.forte.simbot.ability.DelayCompletionStage.thenComposeAsync"]},{"name":"abstract override fun <U> thenComposeAsync(fn: Function<in T, out CompletionStage<U>>): DelayableCompletableFuture<U>","description":"love.forte.simbot.ability.DelayableCompletableFuture.thenComposeAsync","location":"simbot-api/love.forte.simbot.ability/-delayable-completable-future/then-compose-async.html","searchKeys":["thenComposeAsync","abstract override fun <U> thenComposeAsync(fn: Function<in T, out CompletionStage<U>>): DelayableCompletableFuture<U>","love.forte.simbot.ability.DelayableCompletableFuture.thenComposeAsync"]},{"name":"abstract override fun <U> thenComposeAsync(fn: Function<in T, out CompletionStage<U>>, executor: Executor): DelayCompletionStage<U>","description":"love.forte.simbot.ability.DelayCompletionStage.thenComposeAsync","location":"simbot-api/love.forte.simbot.ability/-delay-completion-stage/then-compose-async.html","searchKeys":["thenComposeAsync","abstract override fun <U> thenComposeAsync(fn: Function<in T, out CompletionStage<U>>, executor: Executor): DelayCompletionStage<U>","love.forte.simbot.ability.DelayCompletionStage.thenComposeAsync"]},{"name":"abstract override fun <U> thenComposeAsync(fn: Function<in T, out CompletionStage<U>>, executor: Executor): DelayableCompletableFuture<U>","description":"love.forte.simbot.ability.DelayableCompletableFuture.thenComposeAsync","location":"simbot-api/love.forte.simbot.ability/-delayable-completable-future/then-compose-async.html","searchKeys":["thenComposeAsync","abstract override fun <U> thenComposeAsync(fn: Function<in T, out CompletionStage<U>>, executor: Executor): DelayableCompletableFuture<U>","love.forte.simbot.ability.DelayableCompletableFuture.thenComposeAsync"]},{"name":"abstract override fun <V> delayAndCompute(duration: JavaDuration, function: Function<T, V>): DelayableCompletableFuture<V>","description":"love.forte.simbot.ability.DelayableCompletableFuture.delayAndCompute","location":"simbot-api/love.forte.simbot.ability/-delayable-completable-future/delay-and-compute.html","searchKeys":["delayAndCompute","abstract override fun <V> delayAndCompute(duration: JavaDuration, function: Function<T, V>): DelayableCompletableFuture<V>","love.forte.simbot.ability.DelayableCompletableFuture.delayAndCompute"]},{"name":"abstract override fun <V> delayAndCompute(time: Long, function: Function<T, V>): DelayableCompletableFuture<V>","description":"love.forte.simbot.ability.DelayableCompletableFuture.delayAndCompute","location":"simbot-api/love.forte.simbot.ability/-delayable-completable-future/delay-and-compute.html","searchKeys":["delayAndCompute","abstract override fun <V> delayAndCompute(time: Long, function: Function<T, V>): DelayableCompletableFuture<V>","love.forte.simbot.ability.DelayableCompletableFuture.delayAndCompute"]},{"name":"abstract override fun <V> delayAndCompute(time: Long, timeUnit: TimeUnit, function: Function<T, V>): DelayableCompletableFuture<V>","description":"love.forte.simbot.ability.DelayableCompletableFuture.delayAndCompute","location":"simbot-api/love.forte.simbot.ability/-delayable-completable-future/delay-and-compute.html","searchKeys":["delayAndCompute","abstract override fun <V> delayAndCompute(time: Long, timeUnit: TimeUnit, function: Function<T, V>): DelayableCompletableFuture<V>","love.forte.simbot.ability.DelayableCompletableFuture.delayAndCompute"]},{"name":"abstract override fun acceptEither(other: CompletionStage<out T>, action: Consumer<in T>): DelayCompletionStage<Void?>","description":"love.forte.simbot.ability.DelayCompletionStage.acceptEither","location":"simbot-api/love.forte.simbot.ability/-delay-completion-stage/accept-either.html","searchKeys":["acceptEither","abstract override fun acceptEither(other: CompletionStage<out T>, action: Consumer<in T>): DelayCompletionStage<Void?>","love.forte.simbot.ability.DelayCompletionStage.acceptEither"]},{"name":"abstract override fun acceptEither(other: CompletionStage<out T>, action: Consumer<in T>): DelayableCompletableFuture<Void?>","description":"love.forte.simbot.ability.DelayableCompletableFuture.acceptEither","location":"simbot-api/love.forte.simbot.ability/-delayable-completable-future/accept-either.html","searchKeys":["acceptEither","abstract override fun acceptEither(other: CompletionStage<out T>, action: Consumer<in T>): DelayableCompletableFuture<Void?>","love.forte.simbot.ability.DelayableCompletableFuture.acceptEither"]},{"name":"abstract override fun acceptEitherAsync(other: CompletionStage<out T>, action: Consumer<in T>): DelayCompletionStage<Void?>","description":"love.forte.simbot.ability.DelayCompletionStage.acceptEitherAsync","location":"simbot-api/love.forte.simbot.ability/-delay-completion-stage/accept-either-async.html","searchKeys":["acceptEitherAsync","abstract override fun acceptEitherAsync(other: CompletionStage<out T>, action: Consumer<in T>): DelayCompletionStage<Void?>","love.forte.simbot.ability.DelayCompletionStage.acceptEitherAsync"]},{"name":"abstract override fun acceptEitherAsync(other: CompletionStage<out T>, action: Consumer<in T>): DelayableCompletableFuture<Void?>","description":"love.forte.simbot.ability.DelayableCompletableFuture.acceptEitherAsync","location":"simbot-api/love.forte.simbot.ability/-delayable-completable-future/accept-either-async.html","searchKeys":["acceptEitherAsync","abstract override fun acceptEitherAsync(other: CompletionStage<out T>, action: Consumer<in T>): DelayableCompletableFuture<Void?>","love.forte.simbot.ability.DelayableCompletableFuture.acceptEitherAsync"]},{"name":"abstract override fun acceptEitherAsync(other: CompletionStage<out T>, action: Consumer<in T>, executor: Executor): DelayCompletionStage<Void?>","description":"love.forte.simbot.ability.DelayCompletionStage.acceptEitherAsync","location":"simbot-api/love.forte.simbot.ability/-delay-completion-stage/accept-either-async.html","searchKeys":["acceptEitherAsync","abstract override fun acceptEitherAsync(other: CompletionStage<out T>, action: Consumer<in T>, executor: Executor): DelayCompletionStage<Void?>","love.forte.simbot.ability.DelayCompletionStage.acceptEitherAsync"]},{"name":"abstract override fun acceptEitherAsync(other: CompletionStage<out T>, action: Consumer<in T>, executor: Executor): DelayableCompletableFuture<Void?>","description":"love.forte.simbot.ability.DelayableCompletableFuture.acceptEitherAsync","location":"simbot-api/love.forte.simbot.ability/-delayable-completable-future/accept-either-async.html","searchKeys":["acceptEitherAsync","abstract override fun acceptEitherAsync(other: CompletionStage<out T>, action: Consumer<in T>, executor: Executor): DelayableCompletableFuture<Void?>","love.forte.simbot.ability.DelayableCompletableFuture.acceptEitherAsync"]},{"name":"abstract override fun close()","description":"love.forte.simbot.resources.Resource.close","location":"simbot-api/love.forte.simbot.resources/-resource/close.html","searchKeys":["close","abstract override fun close()","love.forte.simbot.resources.Resource.close"]},{"name":"abstract override fun delay(duration: JavaDuration, runnable: Runnable): DelayableCompletableFuture<T>","description":"love.forte.simbot.ability.DelayableCompletableFuture.delay","location":"simbot-api/love.forte.simbot.ability/-delayable-completable-future/delay.html","searchKeys":["delay","abstract override fun delay(duration: JavaDuration, runnable: Runnable): DelayableCompletableFuture<T>","love.forte.simbot.ability.DelayableCompletableFuture.delay"]},{"name":"abstract override fun delay(time: Long, runnable: Runnable): DelayableCompletableFuture<T>","description":"love.forte.simbot.ability.DelayableCompletableFuture.delay","location":"simbot-api/love.forte.simbot.ability/-delayable-completable-future/delay.html","searchKeys":["delay","abstract override fun delay(time: Long, runnable: Runnable): DelayableCompletableFuture<T>","love.forte.simbot.ability.DelayableCompletableFuture.delay"]},{"name":"abstract override fun delay(time: Long, timeUnit: TimeUnit, runnable: Runnable): DelayableCompletableFuture<T>","description":"love.forte.simbot.ability.DelayableCompletableFuture.delay","location":"simbot-api/love.forte.simbot.ability/-delayable-completable-future/delay.html","searchKeys":["delay","abstract override fun delay(time: Long, timeUnit: TimeUnit, runnable: Runnable): DelayableCompletableFuture<T>","love.forte.simbot.ability.DelayableCompletableFuture.delay"]},{"name":"abstract override fun exceptionally(fn: Function<Throwable, out T>): DelayCompletionStage<T>","description":"love.forte.simbot.ability.DelayCompletionStage.exceptionally","location":"simbot-api/love.forte.simbot.ability/-delay-completion-stage/exceptionally.html","searchKeys":["exceptionally","abstract override fun exceptionally(fn: Function<Throwable, out T>): DelayCompletionStage<T>","love.forte.simbot.ability.DelayCompletionStage.exceptionally"]},{"name":"abstract override fun exceptionally(fn: Function<Throwable, out T>): DelayableCompletableFuture<T>","description":"love.forte.simbot.ability.DelayableCompletableFuture.exceptionally","location":"simbot-api/love.forte.simbot.ability/-delayable-completable-future/exceptionally.html","searchKeys":["exceptionally","abstract override fun exceptionally(fn: Function<Throwable, out T>): DelayableCompletableFuture<T>","love.forte.simbot.ability.DelayableCompletableFuture.exceptionally"]},{"name":"abstract override fun hashCode(): Int","description":"love.forte.simbot.ID.hashCode","location":"simbot-api/love.forte.simbot/-i-d/hash-code.html","searchKeys":["hashCode","abstract override fun hashCode(): Int","love.forte.simbot.ID.hashCode"]},{"name":"abstract override fun invokeBlocking(context: EventListenerProcessingContext): EventResult","description":"love.forte.simbot.event.BlockingEventListener.invokeBlocking","location":"simbot-api/love.forte.simbot.event/-blocking-event-listener/invoke-blocking.html","searchKeys":["invokeBlocking","abstract override fun invokeBlocking(context: EventListenerProcessingContext): EventResult","love.forte.simbot.event.BlockingEventListener.invokeBlocking"]},{"name":"abstract override fun isTarget(eventType: Event.Key<*>): Boolean","description":"love.forte.simbot.event.BlockingEventListener.isTarget","location":"simbot-api/love.forte.simbot.event/-blocking-event-listener/is-target.html","searchKeys":["isTarget","abstract override fun isTarget(eventType: Event.Key<*>): Boolean","love.forte.simbot.event.BlockingEventListener.isTarget"]},{"name":"abstract override fun onCompletion(handle: suspend (application: A) -> Unit)","description":"love.forte.simbot.application.ApplicationBuilder.onCompletion","location":"simbot-api/love.forte.simbot.application/-application-builder/on-completion.html","searchKeys":["onCompletion","abstract override fun onCompletion(handle: suspend (application: A) -> Unit)","love.forte.simbot.application.ApplicationBuilder.onCompletion"]},{"name":"abstract override fun register(verifyInfo: BotVerifyInfo): Bot","description":"love.forte.simbot.bot.BotManager.register","location":"simbot-api/love.forte.simbot.bot/-bot-manager/register.html","searchKeys":["register","abstract override fun register(verifyInfo: BotVerifyInfo): Bot","love.forte.simbot.bot.BotManager.register"]},{"name":"abstract override fun runAfterBoth(other: CompletionStage<*>, action: Runnable): DelayCompletionStage<Void?>","description":"love.forte.simbot.ability.DelayCompletionStage.runAfterBoth","location":"simbot-api/love.forte.simbot.ability/-delay-completion-stage/run-after-both.html","searchKeys":["runAfterBoth","abstract override fun runAfterBoth(other: CompletionStage<*>, action: Runnable): DelayCompletionStage<Void?>","love.forte.simbot.ability.DelayCompletionStage.runAfterBoth"]},{"name":"abstract override fun runAfterBoth(other: CompletionStage<*>, action: Runnable): DelayableCompletableFuture<Void?>","description":"love.forte.simbot.ability.DelayableCompletableFuture.runAfterBoth","location":"simbot-api/love.forte.simbot.ability/-delayable-completable-future/run-after-both.html","searchKeys":["runAfterBoth","abstract override fun runAfterBoth(other: CompletionStage<*>, action: Runnable): DelayableCompletableFuture<Void?>","love.forte.simbot.ability.DelayableCompletableFuture.runAfterBoth"]},{"name":"abstract override fun runAfterBothAsync(other: CompletionStage<*>, action: Runnable): DelayCompletionStage<Void?>","description":"love.forte.simbot.ability.DelayCompletionStage.runAfterBothAsync","location":"simbot-api/love.forte.simbot.ability/-delay-completion-stage/run-after-both-async.html","searchKeys":["runAfterBothAsync","abstract override fun runAfterBothAsync(other: CompletionStage<*>, action: Runnable): DelayCompletionStage<Void?>","love.forte.simbot.ability.DelayCompletionStage.runAfterBothAsync"]},{"name":"abstract override fun runAfterBothAsync(other: CompletionStage<*>, action: Runnable): DelayableCompletableFuture<Void?>","description":"love.forte.simbot.ability.DelayableCompletableFuture.runAfterBothAsync","location":"simbot-api/love.forte.simbot.ability/-delayable-completable-future/run-after-both-async.html","searchKeys":["runAfterBothAsync","abstract override fun runAfterBothAsync(other: CompletionStage<*>, action: Runnable): DelayableCompletableFuture<Void?>","love.forte.simbot.ability.DelayableCompletableFuture.runAfterBothAsync"]},{"name":"abstract override fun runAfterBothAsync(other: CompletionStage<*>, action: Runnable, executor: Executor): DelayCompletionStage<Void?>","description":"love.forte.simbot.ability.DelayCompletionStage.runAfterBothAsync","location":"simbot-api/love.forte.simbot.ability/-delay-completion-stage/run-after-both-async.html","searchKeys":["runAfterBothAsync","abstract override fun runAfterBothAsync(other: CompletionStage<*>, action: Runnable, executor: Executor): DelayCompletionStage<Void?>","love.forte.simbot.ability.DelayCompletionStage.runAfterBothAsync"]},{"name":"abstract override fun runAfterBothAsync(other: CompletionStage<*>, action: Runnable, executor: Executor): DelayableCompletableFuture<Void?>","description":"love.forte.simbot.ability.DelayableCompletableFuture.runAfterBothAsync","location":"simbot-api/love.forte.simbot.ability/-delayable-completable-future/run-after-both-async.html","searchKeys":["runAfterBothAsync","abstract override fun runAfterBothAsync(other: CompletionStage<*>, action: Runnable, executor: Executor): DelayableCompletableFuture<Void?>","love.forte.simbot.ability.DelayableCompletableFuture.runAfterBothAsync"]},{"name":"abstract override fun runAfterEither(other: CompletionStage<*>, action: Runnable): DelayCompletionStage<Void?>","description":"love.forte.simbot.ability.DelayCompletionStage.runAfterEither","location":"simbot-api/love.forte.simbot.ability/-delay-completion-stage/run-after-either.html","searchKeys":["runAfterEither","abstract override fun runAfterEither(other: CompletionStage<*>, action: Runnable): DelayCompletionStage<Void?>","love.forte.simbot.ability.DelayCompletionStage.runAfterEither"]},{"name":"abstract override fun runAfterEither(other: CompletionStage<*>, action: Runnable): DelayableCompletableFuture<Void?>","description":"love.forte.simbot.ability.DelayableCompletableFuture.runAfterEither","location":"simbot-api/love.forte.simbot.ability/-delayable-completable-future/run-after-either.html","searchKeys":["runAfterEither","abstract override fun runAfterEither(other: CompletionStage<*>, action: Runnable): DelayableCompletableFuture<Void?>","love.forte.simbot.ability.DelayableCompletableFuture.runAfterEither"]},{"name":"abstract override fun runAfterEitherAsync(other: CompletionStage<*>, action: Runnable): DelayCompletionStage<Void?>","description":"love.forte.simbot.ability.DelayCompletionStage.runAfterEitherAsync","location":"simbot-api/love.forte.simbot.ability/-delay-completion-stage/run-after-either-async.html","searchKeys":["runAfterEitherAsync","abstract override fun runAfterEitherAsync(other: CompletionStage<*>, action: Runnable): DelayCompletionStage<Void?>","love.forte.simbot.ability.DelayCompletionStage.runAfterEitherAsync"]},{"name":"abstract override fun runAfterEitherAsync(other: CompletionStage<*>, action: Runnable): DelayableCompletableFuture<Void?>","description":"love.forte.simbot.ability.DelayableCompletableFuture.runAfterEitherAsync","location":"simbot-api/love.forte.simbot.ability/-delayable-completable-future/run-after-either-async.html","searchKeys":["runAfterEitherAsync","abstract override fun runAfterEitherAsync(other: CompletionStage<*>, action: Runnable): DelayableCompletableFuture<Void?>","love.forte.simbot.ability.DelayableCompletableFuture.runAfterEitherAsync"]},{"name":"abstract override fun runAfterEitherAsync(other: CompletionStage<*>, action: Runnable, executor: Executor): DelayCompletionStage<Void?>","description":"love.forte.simbot.ability.DelayCompletionStage.runAfterEitherAsync","location":"simbot-api/love.forte.simbot.ability/-delay-completion-stage/run-after-either-async.html","searchKeys":["runAfterEitherAsync","abstract override fun runAfterEitherAsync(other: CompletionStage<*>, action: Runnable, executor: Executor): DelayCompletionStage<Void?>","love.forte.simbot.ability.DelayCompletionStage.runAfterEitherAsync"]},{"name":"abstract override fun runAfterEitherAsync(other: CompletionStage<*>, action: Runnable, executor: Executor): DelayableCompletableFuture<Void?>","description":"love.forte.simbot.ability.DelayableCompletableFuture.runAfterEitherAsync","location":"simbot-api/love.forte.simbot.ability/-delayable-completable-future/run-after-either-async.html","searchKeys":["runAfterEitherAsync","abstract override fun runAfterEitherAsync(other: CompletionStage<*>, action: Runnable, executor: Executor): DelayableCompletableFuture<Void?>","love.forte.simbot.ability.DelayableCompletableFuture.runAfterEitherAsync"]},{"name":"abstract override fun testBlocking(context: EventListenerProcessingContext): Boolean","description":"love.forte.simbot.event.BlockingEventFilter.testBlocking","location":"simbot-api/love.forte.simbot.event/-blocking-event-filter/test-blocking.html","searchKeys":["testBlocking","abstract override fun testBlocking(context: EventListenerProcessingContext): Boolean","love.forte.simbot.event.BlockingEventFilter.testBlocking"]},{"name":"abstract override fun thenAccept(action: Consumer<in T>): DelayCompletionStage<Void?>","description":"love.forte.simbot.ability.DelayCompletionStage.thenAccept","location":"simbot-api/love.forte.simbot.ability/-delay-completion-stage/then-accept.html","searchKeys":["thenAccept","abstract override fun thenAccept(action: Consumer<in T>): DelayCompletionStage<Void?>","love.forte.simbot.ability.DelayCompletionStage.thenAccept"]},{"name":"abstract override fun thenAccept(action: Consumer<in T>): DelayableCompletableFuture<Void?>","description":"love.forte.simbot.ability.DelayableCompletableFuture.thenAccept","location":"simbot-api/love.forte.simbot.ability/-delayable-completable-future/then-accept.html","searchKeys":["thenAccept","abstract override fun thenAccept(action: Consumer<in T>): DelayableCompletableFuture<Void?>","love.forte.simbot.ability.DelayableCompletableFuture.thenAccept"]},{"name":"abstract override fun thenAcceptAsync(action: Consumer<in T>): DelayCompletionStage<Void?>","description":"love.forte.simbot.ability.DelayCompletionStage.thenAcceptAsync","location":"simbot-api/love.forte.simbot.ability/-delay-completion-stage/then-accept-async.html","searchKeys":["thenAcceptAsync","abstract override fun thenAcceptAsync(action: Consumer<in T>): DelayCompletionStage<Void?>","love.forte.simbot.ability.DelayCompletionStage.thenAcceptAsync"]},{"name":"abstract override fun thenAcceptAsync(action: Consumer<in T>): DelayableCompletableFuture<Void?>","description":"love.forte.simbot.ability.DelayableCompletableFuture.thenAcceptAsync","location":"simbot-api/love.forte.simbot.ability/-delayable-completable-future/then-accept-async.html","searchKeys":["thenAcceptAsync","abstract override fun thenAcceptAsync(action: Consumer<in T>): DelayableCompletableFuture<Void?>","love.forte.simbot.ability.DelayableCompletableFuture.thenAcceptAsync"]},{"name":"abstract override fun thenAcceptAsync(action: Consumer<in T>, executor: Executor): DelayCompletionStage<Void?>","description":"love.forte.simbot.ability.DelayCompletionStage.thenAcceptAsync","location":"simbot-api/love.forte.simbot.ability/-delay-completion-stage/then-accept-async.html","searchKeys":["thenAcceptAsync","abstract override fun thenAcceptAsync(action: Consumer<in T>, executor: Executor): DelayCompletionStage<Void?>","love.forte.simbot.ability.DelayCompletionStage.thenAcceptAsync"]},{"name":"abstract override fun thenAcceptAsync(action: Consumer<in T>, executor: Executor): DelayableCompletableFuture<Void?>","description":"love.forte.simbot.ability.DelayableCompletableFuture.thenAcceptAsync","location":"simbot-api/love.forte.simbot.ability/-delayable-completable-future/then-accept-async.html","searchKeys":["thenAcceptAsync","abstract override fun thenAcceptAsync(action: Consumer<in T>, executor: Executor): DelayableCompletableFuture<Void?>","love.forte.simbot.ability.DelayableCompletableFuture.thenAcceptAsync"]},{"name":"abstract override fun thenRun(action: Runnable): DelayCompletionStage<Void?>","description":"love.forte.simbot.ability.DelayCompletionStage.thenRun","location":"simbot-api/love.forte.simbot.ability/-delay-completion-stage/then-run.html","searchKeys":["thenRun","abstract override fun thenRun(action: Runnable): DelayCompletionStage<Void?>","love.forte.simbot.ability.DelayCompletionStage.thenRun"]},{"name":"abstract override fun thenRun(action: Runnable): DelayableCompletableFuture<Void?>","description":"love.forte.simbot.ability.DelayableCompletableFuture.thenRun","location":"simbot-api/love.forte.simbot.ability/-delayable-completable-future/then-run.html","searchKeys":["thenRun","abstract override fun thenRun(action: Runnable): DelayableCompletableFuture<Void?>","love.forte.simbot.ability.DelayableCompletableFuture.thenRun"]},{"name":"abstract override fun thenRunAsync(action: Runnable): DelayCompletionStage<Void?>","description":"love.forte.simbot.ability.DelayCompletionStage.thenRunAsync","location":"simbot-api/love.forte.simbot.ability/-delay-completion-stage/then-run-async.html","searchKeys":["thenRunAsync","abstract override fun thenRunAsync(action: Runnable): DelayCompletionStage<Void?>","love.forte.simbot.ability.DelayCompletionStage.thenRunAsync"]},{"name":"abstract override fun thenRunAsync(action: Runnable): DelayableCompletableFuture<Void?>","description":"love.forte.simbot.ability.DelayableCompletableFuture.thenRunAsync","location":"simbot-api/love.forte.simbot.ability/-delayable-completable-future/then-run-async.html","searchKeys":["thenRunAsync","abstract override fun thenRunAsync(action: Runnable): DelayableCompletableFuture<Void?>","love.forte.simbot.ability.DelayableCompletableFuture.thenRunAsync"]},{"name":"abstract override fun thenRunAsync(action: Runnable, executor: Executor): DelayCompletionStage<Void?>","description":"love.forte.simbot.ability.DelayCompletionStage.thenRunAsync","location":"simbot-api/love.forte.simbot.ability/-delay-completion-stage/then-run-async.html","searchKeys":["thenRunAsync","abstract override fun thenRunAsync(action: Runnable, executor: Executor): DelayCompletionStage<Void?>","love.forte.simbot.ability.DelayCompletionStage.thenRunAsync"]},{"name":"abstract override fun thenRunAsync(action: Runnable, executor: Executor): DelayableCompletableFuture<Void?>","description":"love.forte.simbot.ability.DelayableCompletableFuture.thenRunAsync","location":"simbot-api/love.forte.simbot.ability/-delayable-completable-future/then-run-async.html","searchKeys":["thenRunAsync","abstract override fun thenRunAsync(action: Runnable, executor: Executor): DelayableCompletableFuture<Void?>","love.forte.simbot.ability.DelayableCompletableFuture.thenRunAsync"]},{"name":"abstract override fun toCompletableFuture(): DelayableCompletableFuture<T>","description":"love.forte.simbot.ability.DelayCompletionStage.toCompletableFuture","location":"simbot-api/love.forte.simbot.ability/-delay-completion-stage/to-completable-future.html","searchKeys":["toCompletableFuture","abstract override fun toCompletableFuture(): DelayableCompletableFuture<T>","love.forte.simbot.ability.DelayCompletionStage.toCompletableFuture"]},{"name":"abstract override fun toCompletableFuture(): DelayableCompletableFuture<T>","description":"love.forte.simbot.ability.DelayableCompletableFuture.toCompletableFuture","location":"simbot-api/love.forte.simbot.ability/-delayable-completable-future/to-completable-future.html","searchKeys":["toCompletableFuture","abstract override fun toCompletableFuture(): DelayableCompletableFuture<T>","love.forte.simbot.ability.DelayableCompletableFuture.toCompletableFuture"]},{"name":"abstract override fun toString(): String","description":"love.forte.simbot.ID.toString","location":"simbot-api/love.forte.simbot/-i-d/to-string.html","searchKeys":["toString","abstract override fun toString(): String","love.forte.simbot.ID.toString"]},{"name":"abstract override fun toString(): String","description":"love.forte.simbot.message.Message.Element.toString","location":"simbot-api/love.forte.simbot.message/-message/-element/to-string.html","searchKeys":["toString","abstract override fun toString(): String","love.forte.simbot.message.Message.Element.toString"]},{"name":"abstract override fun whenComplete(action: BiConsumer<in T?, in Throwable?>): DelayCompletionStage<T>","description":"love.forte.simbot.ability.DelayCompletionStage.whenComplete","location":"simbot-api/love.forte.simbot.ability/-delay-completion-stage/when-complete.html","searchKeys":["whenComplete","abstract override fun whenComplete(action: BiConsumer<in T?, in Throwable?>): DelayCompletionStage<T>","love.forte.simbot.ability.DelayCompletionStage.whenComplete"]},{"name":"abstract override fun whenComplete(action: BiConsumer<in T?, in Throwable?>): DelayableCompletableFuture<T>","description":"love.forte.simbot.ability.DelayableCompletableFuture.whenComplete","location":"simbot-api/love.forte.simbot.ability/-delayable-completable-future/when-complete.html","searchKeys":["whenComplete","abstract override fun whenComplete(action: BiConsumer<in T?, in Throwable?>): DelayableCompletableFuture<T>","love.forte.simbot.ability.DelayableCompletableFuture.whenComplete"]},{"name":"abstract override fun whenCompleteAsync(action: BiConsumer<in T?, in Throwable?>): DelayCompletionStage<T>","description":"love.forte.simbot.ability.DelayCompletionStage.whenCompleteAsync","location":"simbot-api/love.forte.simbot.ability/-delay-completion-stage/when-complete-async.html","searchKeys":["whenCompleteAsync","abstract override fun whenCompleteAsync(action: BiConsumer<in T?, in Throwable?>): DelayCompletionStage<T>","love.forte.simbot.ability.DelayCompletionStage.whenCompleteAsync"]},{"name":"abstract override fun whenCompleteAsync(action: BiConsumer<in T?, in Throwable?>): DelayableCompletableFuture<T>","description":"love.forte.simbot.ability.DelayableCompletableFuture.whenCompleteAsync","location":"simbot-api/love.forte.simbot.ability/-delayable-completable-future/when-complete-async.html","searchKeys":["whenCompleteAsync","abstract override fun whenCompleteAsync(action: BiConsumer<in T?, in Throwable?>): DelayableCompletableFuture<T>","love.forte.simbot.ability.DelayableCompletableFuture.whenCompleteAsync"]},{"name":"abstract override fun whenCompleteAsync(action: BiConsumer<in T?, in Throwable?>, executor: Executor): DelayCompletionStage<T>","description":"love.forte.simbot.ability.DelayCompletionStage.whenCompleteAsync","location":"simbot-api/love.forte.simbot.ability/-delay-completion-stage/when-complete-async.html","searchKeys":["whenCompleteAsync","abstract override fun whenCompleteAsync(action: BiConsumer<in T?, in Throwable?>, executor: Executor): DelayCompletionStage<T>","love.forte.simbot.ability.DelayCompletionStage.whenCompleteAsync"]},{"name":"abstract override fun whenCompleteAsync(action: BiConsumer<in T?, in Throwable?>, executor: Executor): DelayableCompletableFuture<T>","description":"love.forte.simbot.ability.DelayableCompletableFuture.whenCompleteAsync","location":"simbot-api/love.forte.simbot.ability/-delayable-completable-future/when-complete-async.html","searchKeys":["whenCompleteAsync","abstract override fun whenCompleteAsync(action: BiConsumer<in T?, in Throwable?>, executor: Executor): DelayableCompletableFuture<T>","love.forte.simbot.ability.DelayableCompletableFuture.whenCompleteAsync"]},{"name":"abstract override val avatar: String","description":"love.forte.simbot.bot.Bot.avatar","location":"simbot-api/love.forte.simbot.bot/-bot/avatar.html","searchKeys":["avatar","abstract override val avatar: String","love.forte.simbot.bot.Bot.avatar"]},{"name":"abstract override val avatar: String","description":"love.forte.simbot.bot.BotInfo.avatar","location":"simbot-api/love.forte.simbot.bot/-bot-info/avatar.html","searchKeys":["avatar","abstract override val avatar: String","love.forte.simbot.bot.BotInfo.avatar"]},{"name":"abstract override val avatar: String","description":"love.forte.simbot.definition.Friend.avatar","location":"simbot-api/love.forte.simbot.definition/-friend/avatar.html","searchKeys":["avatar","abstract override val avatar: String","love.forte.simbot.definition.Friend.avatar"]},{"name":"abstract override val avatar: String","description":"love.forte.simbot.definition.FriendInfo.avatar","location":"simbot-api/love.forte.simbot.definition/-friend-info/avatar.html","searchKeys":["avatar","abstract override val avatar: String","love.forte.simbot.definition.FriendInfo.avatar"]},{"name":"abstract override val avatar: String","description":"love.forte.simbot.definition.MemberInfo.avatar","location":"simbot-api/love.forte.simbot.definition/-member-info/avatar.html","searchKeys":["avatar","abstract override val avatar: String","love.forte.simbot.definition.MemberInfo.avatar"]},{"name":"abstract override val avatar: String","description":"love.forte.simbot.definition.User.avatar","location":"simbot-api/love.forte.simbot.definition/-user/avatar.html","searchKeys":["avatar","abstract override val avatar: String","love.forte.simbot.definition.User.avatar"]},{"name":"abstract override val bot: Bot","description":"love.forte.simbot.definition.Contact.bot","location":"simbot-api/love.forte.simbot.definition/-contact/bot.html","searchKeys":["bot","abstract override val bot: Bot","love.forte.simbot.definition.Contact.bot"]},{"name":"abstract override val bot: Bot","description":"love.forte.simbot.definition.Friend.bot","location":"simbot-api/love.forte.simbot.definition/-friend/bot.html","searchKeys":["bot","abstract override val bot: Bot","love.forte.simbot.definition.Friend.bot"]},{"name":"abstract override val bot: Bot","description":"love.forte.simbot.definition.Member.bot","location":"simbot-api/love.forte.simbot.definition/-member/bot.html","searchKeys":["bot","abstract override val bot: Bot","love.forte.simbot.definition.Member.bot"]},{"name":"abstract override val bot: Bot","description":"love.forte.simbot.definition.Objective.bot","location":"simbot-api/love.forte.simbot.definition/-objective/bot.html","searchKeys":["bot","abstract override val bot: Bot","love.forte.simbot.definition.Objective.bot"]},{"name":"abstract override val bot: Bot","description":"love.forte.simbot.definition.Stranger.bot","location":"simbot-api/love.forte.simbot.definition/-stranger/bot.html","searchKeys":["bot","abstract override val bot: Bot","love.forte.simbot.definition.Stranger.bot"]},{"name":"abstract override val bot: Bot","description":"love.forte.simbot.definition.User.bot","location":"simbot-api/love.forte.simbot.definition/-user/bot.html","searchKeys":["bot","abstract override val bot: Bot","love.forte.simbot.definition.User.bot"]},{"name":"abstract override val bot: Bot","description":"love.forte.simbot.event.Event.bot","location":"simbot-api/love.forte.simbot.event/-event/bot.html","searchKeys":["bot","abstract override val bot: Bot","love.forte.simbot.event.Event.bot"]},{"name":"abstract override val bot: Bot","description":"love.forte.simbot.event.MessageEvent.bot","location":"simbot-api/love.forte.simbot.event/-message-event/bot.html","searchKeys":["bot","abstract override val bot: Bot","love.forte.simbot.event.MessageEvent.bot"]},{"name":"abstract override val bot: Bot","description":"love.forte.simbot.event.ObjectiveEvent.bot","location":"simbot-api/love.forte.simbot.event/-objective-event/bot.html","searchKeys":["bot","abstract override val bot: Bot","love.forte.simbot.event.ObjectiveEvent.bot"]},{"name":"abstract override val bot: Bot","description":"love.forte.simbot.event.RequestEvent.bot","location":"simbot-api/love.forte.simbot.event/-request-event/bot.html","searchKeys":["bot","abstract override val bot: Bot","love.forte.simbot.event.RequestEvent.bot"]},{"name":"abstract override val bot: GroupBot","description":"love.forte.simbot.definition.Group.bot","location":"simbot-api/love.forte.simbot.definition/-group/bot.html","searchKeys":["bot","abstract override val bot: GroupBot","love.forte.simbot.definition.Group.bot"]},{"name":"abstract override val bot: GuildBot","description":"love.forte.simbot.definition.Channel.bot","location":"simbot-api/love.forte.simbot.definition/-channel/bot.html","searchKeys":["bot","abstract override val bot: GuildBot","love.forte.simbot.definition.Channel.bot"]},{"name":"abstract override val bot: GuildBot","description":"love.forte.simbot.definition.Guild.bot","location":"simbot-api/love.forte.simbot.definition/-guild/bot.html","searchKeys":["bot","abstract override val bot: GuildBot","love.forte.simbot.definition.Guild.bot"]},{"name":"abstract override val bot: OrganizationBot","description":"love.forte.simbot.definition.Organization.bot","location":"simbot-api/love.forte.simbot.definition/-organization/bot.html","searchKeys":["bot","abstract override val bot: OrganizationBot","love.forte.simbot.definition.Organization.bot"]},{"name":"abstract override val children: Items<Channel>","description":"love.forte.simbot.definition.Guild.children","location":"simbot-api/love.forte.simbot.definition/-guild/children.html","searchKeys":["children","abstract override val children: Items<Channel>","love.forte.simbot.definition.Guild.children"]},{"name":"abstract override val component: Component","description":"love.forte.simbot.bot.Bot.component","location":"simbot-api/love.forte.simbot.bot/-bot/component.html","searchKeys":["component","abstract override val component: Component","love.forte.simbot.bot.Bot.component"]},{"name":"abstract override val content: Any?","description":"love.forte.simbot.event.AsyncEventResult.content","location":"simbot-api/love.forte.simbot.event/-async-event-result/content.html","searchKeys":["content","abstract override val content: Any?","love.forte.simbot.event.AsyncEventResult.content"]},{"name":"abstract override val content: Any?","description":"love.forte.simbot.event.ReactivelyCollectableEventResult.content","location":"simbot-api/love.forte.simbot.event/-reactively-collectable-event-result/content.html","searchKeys":["content","abstract override val content: Any?","love.forte.simbot.event.ReactivelyCollectableEventResult.content"]},{"name":"abstract override val coroutineContext: CoroutineContext","description":"love.forte.simbot.bot.Bot.coroutineContext","location":"simbot-api/love.forte.simbot.bot/-bot/coroutine-context.html","searchKeys":["coroutineContext","abstract override val coroutineContext: CoroutineContext","love.forte.simbot.bot.Bot.coroutineContext"]},{"name":"abstract override val createTime: Timestamp","description":"love.forte.simbot.definition.Channel.createTime","location":"simbot-api/love.forte.simbot.definition/-channel/create-time.html","searchKeys":["createTime","abstract override val createTime: Timestamp","love.forte.simbot.definition.Channel.createTime"]},{"name":"abstract override val createTime: Timestamp","description":"love.forte.simbot.definition.Group.createTime","location":"simbot-api/love.forte.simbot.definition/-group/create-time.html","searchKeys":["createTime","abstract override val createTime: Timestamp","love.forte.simbot.definition.Group.createTime"]},{"name":"abstract override val createTime: Timestamp","description":"love.forte.simbot.definition.Guild.createTime","location":"simbot-api/love.forte.simbot.definition/-guild/create-time.html","searchKeys":["createTime","abstract override val createTime: Timestamp","love.forte.simbot.definition.Guild.createTime"]},{"name":"abstract override val createTime: Timestamp","description":"love.forte.simbot.definition.Organization.createTime","location":"simbot-api/love.forte.simbot.definition/-organization/create-time.html","searchKeys":["createTime","abstract override val createTime: Timestamp","love.forte.simbot.definition.Organization.createTime"]},{"name":"abstract override val currentMember: Int","description":"love.forte.simbot.definition.Channel.currentMember","location":"simbot-api/love.forte.simbot.definition/-channel/current-member.html","searchKeys":["currentMember","abstract override val currentMember: Int","love.forte.simbot.definition.Channel.currentMember"]},{"name":"abstract override val currentMember: Int","description":"love.forte.simbot.definition.Group.currentMember","location":"simbot-api/love.forte.simbot.definition/-group/current-member.html","searchKeys":["currentMember","abstract override val currentMember: Int","love.forte.simbot.definition.Group.currentMember"]},{"name":"abstract override val currentMember: Int","description":"love.forte.simbot.definition.Guild.currentMember","location":"simbot-api/love.forte.simbot.definition/-guild/current-member.html","searchKeys":["currentMember","abstract override val currentMember: Int","love.forte.simbot.definition.Guild.currentMember"]},{"name":"abstract override val currentMember: Int","description":"love.forte.simbot.definition.Organization.currentMember","location":"simbot-api/love.forte.simbot.definition/-organization/current-member.html","searchKeys":["currentMember","abstract override val currentMember: Int","love.forte.simbot.definition.Organization.currentMember"]},{"name":"abstract override val description: String","description":"love.forte.simbot.definition.Channel.description","location":"simbot-api/love.forte.simbot.definition/-channel/description.html","searchKeys":["description","abstract override val description: String","love.forte.simbot.definition.Channel.description"]},{"name":"abstract override val description: String","description":"love.forte.simbot.definition.Group.description","location":"simbot-api/love.forte.simbot.definition/-group/description.html","searchKeys":["description","abstract override val description: String","love.forte.simbot.definition.Group.description"]},{"name":"abstract override val description: String","description":"love.forte.simbot.definition.Guild.description","location":"simbot-api/love.forte.simbot.definition/-guild/description.html","searchKeys":["description","abstract override val description: String","love.forte.simbot.definition.Guild.description"]},{"name":"abstract override val description: String","description":"love.forte.simbot.definition.Organization.description","location":"simbot-api/love.forte.simbot.definition/-organization/description.html","searchKeys":["description","abstract override val description: String","love.forte.simbot.definition.Organization.description"]},{"name":"abstract override val event: Event","description":"love.forte.simbot.event.EventListenerProcessingContext.event","location":"simbot-api/love.forte.simbot.event/-event-listener-processing-context/event.html","searchKeys":["event","abstract override val event: Event","love.forte.simbot.event.EventListenerProcessingContext.event"]},{"name":"abstract override val eventContext: EventListenerProcessingContext","description":"love.forte.simbot.event.EventListenerInterceptor.Context.eventContext","location":"simbot-api/love.forte.simbot.event/-event-listener-interceptor/-context/event-context.html","searchKeys":["eventContext","abstract override val eventContext: EventListenerProcessingContext","love.forte.simbot.event.EventListenerInterceptor.Context.eventContext"]},{"name":"abstract override val eventContext: EventProcessingContext","description":"love.forte.simbot.event.EventProcessingInterceptor.Context.eventContext","location":"simbot-api/love.forte.simbot.event/-event-processing-interceptor/-context/event-context.html","searchKeys":["eventContext","abstract override val eventContext: EventProcessingContext","love.forte.simbot.event.EventProcessingInterceptor.Context.eventContext"]},{"name":"abstract override val format: BinaryFormat","description":"love.forte.simbot.resources.BinaryFormatDeserializableResourceDecoder.format","location":"simbot-api/love.forte.simbot.resources/-binary-format-deserializable-resource-decoder/format.html","searchKeys":["format","abstract override val format: BinaryFormat","love.forte.simbot.resources.BinaryFormatDeserializableResourceDecoder.format"]},{"name":"abstract override val format: F","description":"love.forte.simbot.bot.StandardSerialFormatBotVerifyInfoDecoder.format","location":"simbot-api/love.forte.simbot.bot/-standard-serial-format-bot-verify-info-decoder/format.html","searchKeys":["format","abstract override val format: F","love.forte.simbot.bot.StandardSerialFormatBotVerifyInfoDecoder.format"]},{"name":"abstract override val format: StringFormat","description":"love.forte.simbot.resources.StringFormatDeserializableResourceDecoder.format","location":"simbot-api/love.forte.simbot.resources/-string-format-deserializable-resource-decoder/format.html","searchKeys":["format","abstract override val format: StringFormat","love.forte.simbot.resources.StringFormatDeserializableResourceDecoder.format"]},{"name":"abstract override val guildId: ID","description":"love.forte.simbot.definition.Channel.guildId","location":"simbot-api/love.forte.simbot.definition/-channel/guild-id.html","searchKeys":["guildId","abstract override val guildId: ID","love.forte.simbot.definition.Channel.guildId"]},{"name":"abstract override val icon: String","description":"love.forte.simbot.definition.Channel.icon","location":"simbot-api/love.forte.simbot.definition/-channel/icon.html","searchKeys":["icon","abstract override val icon: String","love.forte.simbot.definition.Channel.icon"]},{"name":"abstract override val icon: String","description":"love.forte.simbot.definition.Group.icon","location":"simbot-api/love.forte.simbot.definition/-group/icon.html","searchKeys":["icon","abstract override val icon: String","love.forte.simbot.definition.Group.icon"]},{"name":"abstract override val icon: String","description":"love.forte.simbot.definition.Guild.icon","location":"simbot-api/love.forte.simbot.definition/-guild/icon.html","searchKeys":["icon","abstract override val icon: String","love.forte.simbot.definition.Guild.icon"]},{"name":"abstract override val icon: String","description":"love.forte.simbot.definition.Organization.icon","location":"simbot-api/love.forte.simbot.definition/-organization/icon.html","searchKeys":["icon","abstract override val icon: String","love.forte.simbot.definition.Organization.icon"]},{"name":"abstract override val id: ID","description":"love.forte.simbot.bot.Bot.id","location":"simbot-api/love.forte.simbot.bot/-bot/id.html","searchKeys":["id","abstract override val id: ID","love.forte.simbot.bot.Bot.id"]},{"name":"abstract override val id: ID","description":"love.forte.simbot.bot.BotInfo.id","location":"simbot-api/love.forte.simbot.bot/-bot-info/id.html","searchKeys":["id","abstract override val id: ID","love.forte.simbot.bot.BotInfo.id"]},{"name":"abstract override val id: ID","description":"love.forte.simbot.definition.Category.id","location":"simbot-api/love.forte.simbot.definition/-category/id.html","searchKeys":["id","abstract override val id: ID","love.forte.simbot.definition.Category.id"]},{"name":"abstract override val id: ID","description":"love.forte.simbot.definition.Channel.id","location":"simbot-api/love.forte.simbot.definition/-channel/id.html","searchKeys":["id","abstract override val id: ID","love.forte.simbot.definition.Channel.id"]},{"name":"abstract override val id: ID","description":"love.forte.simbot.definition.Friend.id","location":"simbot-api/love.forte.simbot.definition/-friend/id.html","searchKeys":["id","abstract override val id: ID","love.forte.simbot.definition.Friend.id"]},{"name":"abstract override val id: ID","description":"love.forte.simbot.definition.FriendInfo.id","location":"simbot-api/love.forte.simbot.definition/-friend-info/id.html","searchKeys":["id","abstract override val id: ID","love.forte.simbot.definition.FriendInfo.id"]},{"name":"abstract override val id: ID","description":"love.forte.simbot.definition.Group.id","location":"simbot-api/love.forte.simbot.definition/-group/id.html","searchKeys":["id","abstract override val id: ID","love.forte.simbot.definition.Group.id"]},{"name":"abstract override val id: ID","description":"love.forte.simbot.definition.Guild.id","location":"simbot-api/love.forte.simbot.definition/-guild/id.html","searchKeys":["id","abstract override val id: ID","love.forte.simbot.definition.Guild.id"]},{"name":"abstract override val id: ID","description":"love.forte.simbot.definition.Member.id","location":"simbot-api/love.forte.simbot.definition/-member/id.html","searchKeys":["id","abstract override val id: ID","love.forte.simbot.definition.Member.id"]},{"name":"abstract override val id: ID","description":"love.forte.simbot.definition.MemberInfo.id","location":"simbot-api/love.forte.simbot.definition/-member-info/id.html","searchKeys":["id","abstract override val id: ID","love.forte.simbot.definition.MemberInfo.id"]},{"name":"abstract override val id: ID","description":"love.forte.simbot.definition.Objective.id","location":"simbot-api/love.forte.simbot.definition/-objective/id.html","searchKeys":["id","abstract override val id: ID","love.forte.simbot.definition.Objective.id"]},{"name":"abstract override val id: ID","description":"love.forte.simbot.definition.Organization.id","location":"simbot-api/love.forte.simbot.definition/-organization/id.html","searchKeys":["id","abstract override val id: ID","love.forte.simbot.definition.Organization.id"]},{"name":"abstract override val id: ID","description":"love.forte.simbot.definition.OrganizationInfo.id","location":"simbot-api/love.forte.simbot.definition/-organization-info/id.html","searchKeys":["id","abstract override val id: ID","love.forte.simbot.definition.OrganizationInfo.id"]},{"name":"abstract override val id: ID","description":"love.forte.simbot.definition.Role.id","location":"simbot-api/love.forte.simbot.definition/-role/id.html","searchKeys":["id","abstract override val id: ID","love.forte.simbot.definition.Role.id"]},{"name":"abstract override val id: ID","description":"love.forte.simbot.definition.Stranger.id","location":"simbot-api/love.forte.simbot.definition/-stranger/id.html","searchKeys":["id","abstract override val id: ID","love.forte.simbot.definition.Stranger.id"]},{"name":"abstract override val id: ID","description":"love.forte.simbot.definition.User.id","location":"simbot-api/love.forte.simbot.definition/-user/id.html","searchKeys":["id","abstract override val id: ID","love.forte.simbot.definition.User.id"]},{"name":"abstract override val id: ID","description":"love.forte.simbot.definition.UserInfo.id","location":"simbot-api/love.forte.simbot.definition/-user-info/id.html","searchKeys":["id","abstract override val id: ID","love.forte.simbot.definition.UserInfo.id"]},{"name":"abstract override val id: ID","description":"love.forte.simbot.event.ChangeEvent.id","location":"simbot-api/love.forte.simbot.event/-change-event/id.html","searchKeys":["id","abstract override val id: ID","love.forte.simbot.event.ChangeEvent.id"]},{"name":"abstract override val id: ID","description":"love.forte.simbot.event.ChatRoomMessageEvent.id","location":"simbot-api/love.forte.simbot.event/-chat-room-message-event/id.html","searchKeys":["id","abstract override val id: ID","love.forte.simbot.event.ChatRoomMessageEvent.id"]},{"name":"abstract override val id: ID","description":"love.forte.simbot.event.ContactMessageEvent.id","location":"simbot-api/love.forte.simbot.event/-contact-message-event/id.html","searchKeys":["id","abstract override val id: ID","love.forte.simbot.event.ContactMessageEvent.id"]},{"name":"abstract override val id: ID","description":"love.forte.simbot.event.Event.id","location":"simbot-api/love.forte.simbot.event/-event/id.html","searchKeys":["id","abstract override val id: ID","love.forte.simbot.event.Event.id"]},{"name":"abstract override val id: ID","description":"love.forte.simbot.event.MessageEvent.id","location":"simbot-api/love.forte.simbot.event/-message-event/id.html","searchKeys":["id","abstract override val id: ID","love.forte.simbot.event.MessageEvent.id"]},{"name":"abstract override val id: ID","description":"love.forte.simbot.event.RequestEvent.id","location":"simbot-api/love.forte.simbot.event/-request-event/id.html","searchKeys":["id","abstract override val id: ID","love.forte.simbot.event.RequestEvent.id"]},{"name":"abstract override val id: ID","description":"love.forte.simbot.message.Image.id","location":"simbot-api/love.forte.simbot.message/-image/id.html","searchKeys":["id","abstract override val id: ID","love.forte.simbot.message.Image.id"]},{"name":"abstract override val id: ID","description":"love.forte.simbot.message.RemoteResource.id","location":"simbot-api/love.forte.simbot.message/-remote-resource/id.html","searchKeys":["id","abstract override val id: ID","love.forte.simbot.message.RemoteResource.id"]},{"name":"abstract override val id: ID","description":"love.forte.simbot.message.SingleMessageReceipt.id","location":"simbot-api/love.forte.simbot.message/-single-message-receipt/id.html","searchKeys":["id","abstract override val id: ID","love.forte.simbot.message.SingleMessageReceipt.id"]},{"name":"abstract override val id: String","description":"love.forte.simbot.Component.id","location":"simbot-api/love.forte.simbot/-component/id.html","searchKeys":["id","abstract override val id: String","love.forte.simbot.Component.id"]},{"name":"abstract override val isActive: Boolean","description":"love.forte.simbot.bot.Bot.isActive","location":"simbot-api/love.forte.simbot.bot/-bot/is-active.html","searchKeys":["isActive","abstract override val isActive: Boolean","love.forte.simbot.bot.Bot.isActive"]},{"name":"abstract override val isCancelled: Boolean","description":"love.forte.simbot.bot.Bot.isCancelled","location":"simbot-api/love.forte.simbot.bot/-bot/is-cancelled.html","searchKeys":["isCancelled","abstract override val isCancelled: Boolean","love.forte.simbot.bot.Bot.isCancelled"]},{"name":"abstract override val isStarted: Boolean","description":"love.forte.simbot.bot.Bot.isStarted","location":"simbot-api/love.forte.simbot.bot/-bot/is-started.html","searchKeys":["isStarted","abstract override val isStarted: Boolean","love.forte.simbot.bot.Bot.isStarted"]},{"name":"abstract override val isSuccess: Boolean","description":"love.forte.simbot.message.AggregatedMessageReceipt.isSuccess","location":"simbot-api/love.forte.simbot.message/-aggregated-message-receipt/is-success.html","searchKeys":["isSuccess","abstract override val isSuccess: Boolean","love.forte.simbot.message.AggregatedMessageReceipt.isSuccess"]},{"name":"abstract override val key: Event.Key<out GroupMemberDecreaseEvent>","description":"love.forte.simbot.event.GroupMemberDecreaseEvent.key","location":"simbot-api/love.forte.simbot.event/-group-member-decrease-event/key.html","searchKeys":["key","abstract override val key: Event.Key<out GroupMemberDecreaseEvent>","love.forte.simbot.event.GroupMemberDecreaseEvent.key"]},{"name":"abstract override val key: Event.Key<out GroupMemberIncreaseEvent>","description":"love.forte.simbot.event.GroupMemberIncreaseEvent.key","location":"simbot-api/love.forte.simbot.event/-group-member-increase-event/key.html","searchKeys":["key","abstract override val key: Event.Key<out GroupMemberIncreaseEvent>","love.forte.simbot.event.GroupMemberIncreaseEvent.key"]},{"name":"abstract override val key: Event.Key<out GuildMemberDecreaseEvent>","description":"love.forte.simbot.event.GuildMemberDecreaseEvent.key","location":"simbot-api/love.forte.simbot.event/-guild-member-decrease-event/key.html","searchKeys":["key","abstract override val key: Event.Key<out GuildMemberDecreaseEvent>","love.forte.simbot.event.GuildMemberDecreaseEvent.key"]},{"name":"abstract override val key: Event.Key<out GuildMemberIncreaseEvent>","description":"love.forte.simbot.event.GuildMemberIncreaseEvent.key","location":"simbot-api/love.forte.simbot.event/-guild-member-increase-event/key.html","searchKeys":["key","abstract override val key: Event.Key<out GuildMemberIncreaseEvent>","love.forte.simbot.event.GuildMemberIncreaseEvent.key"]},{"name":"abstract override val logger: Logger","description":"love.forte.simbot.bot.Bot.logger","location":"simbot-api/love.forte.simbot.bot/-bot/logger.html","searchKeys":["logger","abstract override val logger: Logger","love.forte.simbot.bot.Bot.logger"]},{"name":"abstract override val maximumMember: Int","description":"love.forte.simbot.definition.Channel.maximumMember","location":"simbot-api/love.forte.simbot.definition/-channel/maximum-member.html","searchKeys":["maximumMember","abstract override val maximumMember: Int","love.forte.simbot.definition.Channel.maximumMember"]},{"name":"abstract override val maximumMember: Int","description":"love.forte.simbot.definition.Group.maximumMember","location":"simbot-api/love.forte.simbot.definition/-group/maximum-member.html","searchKeys":["maximumMember","abstract override val maximumMember: Int","love.forte.simbot.definition.Group.maximumMember"]},{"name":"abstract override val maximumMember: Int","description":"love.forte.simbot.definition.Guild.maximumMember","location":"simbot-api/love.forte.simbot.definition/-guild/maximum-member.html","searchKeys":["maximumMember","abstract override val maximumMember: Int","love.forte.simbot.definition.Guild.maximumMember"]},{"name":"abstract override val maximumMember: Int","description":"love.forte.simbot.definition.Organization.maximumMember","location":"simbot-api/love.forte.simbot.definition/-organization/maximum-member.html","searchKeys":["maximumMember","abstract override val maximumMember: Int","love.forte.simbot.definition.Organization.maximumMember"]},{"name":"abstract override val members: Items<GroupMember>","description":"love.forte.simbot.definition.Group.members","location":"simbot-api/love.forte.simbot.definition/-group/members.html","searchKeys":["members","abstract override val members: Items<GroupMember>","love.forte.simbot.definition.Group.members"]},{"name":"abstract override val members: Items<GuildMember>","description":"love.forte.simbot.definition.Channel.members","location":"simbot-api/love.forte.simbot.definition/-channel/members.html","searchKeys":["members","abstract override val members: Items<GuildMember>","love.forte.simbot.definition.Channel.members"]},{"name":"abstract override val members: Items<GuildMember>","description":"love.forte.simbot.definition.Guild.members","location":"simbot-api/love.forte.simbot.definition/-guild/members.html","searchKeys":["members","abstract override val members: Items<GuildMember>","love.forte.simbot.definition.Guild.members"]},{"name":"abstract override val messageContent: ReceivedMessageContent","description":"love.forte.simbot.event.MessageEvent.messageContent","location":"simbot-api/love.forte.simbot.event/-message-event/message-content.html","searchKeys":["messageContent","abstract override val messageContent: ReceivedMessageContent","love.forte.simbot.event.MessageEvent.messageContent"]},{"name":"abstract override val messageContent: RemoteMessageContent","description":"love.forte.simbot.message.RemoteMessageContainer.messageContent","location":"simbot-api/love.forte.simbot.message/-remote-message-container/message-content.html","searchKeys":["messageContent","abstract override val messageContent: RemoteMessageContent","love.forte.simbot.message.RemoteMessageContainer.messageContent"]},{"name":"abstract override val messageId: ID","description":"love.forte.simbot.message.RemoteMessageContent.messageId","location":"simbot-api/love.forte.simbot.message/-remote-message-content/message-id.html","searchKeys":["messageId","abstract override val messageId: ID","love.forte.simbot.message.RemoteMessageContent.messageId"]},{"name":"abstract override val name: String","description":"love.forte.simbot.bot.BotVerifyInfo.name","location":"simbot-api/love.forte.simbot.bot/-bot-verify-info/name.html","searchKeys":["name","abstract override val name: String","love.forte.simbot.bot.BotVerifyInfo.name"]},{"name":"abstract override val name: String","description":"love.forte.simbot.definition.Channel.name","location":"simbot-api/love.forte.simbot.definition/-channel/name.html","searchKeys":["name","abstract override val name: String","love.forte.simbot.definition.Channel.name"]},{"name":"abstract override val name: String","description":"love.forte.simbot.definition.Group.name","location":"simbot-api/love.forte.simbot.definition/-group/name.html","searchKeys":["name","abstract override val name: String","love.forte.simbot.definition.Group.name"]},{"name":"abstract override val name: String","description":"love.forte.simbot.definition.Guild.name","location":"simbot-api/love.forte.simbot.definition/-guild/name.html","searchKeys":["name","abstract override val name: String","love.forte.simbot.definition.Guild.name"]},{"name":"abstract override val name: String","description":"love.forte.simbot.definition.Organization.name","location":"simbot-api/love.forte.simbot.definition/-organization/name.html","searchKeys":["name","abstract override val name: String","love.forte.simbot.definition.Organization.name"]},{"name":"abstract override val ownerId: ID","description":"love.forte.simbot.definition.Channel.ownerId","location":"simbot-api/love.forte.simbot.definition/-channel/owner-id.html","searchKeys":["ownerId","abstract override val ownerId: ID","love.forte.simbot.definition.Channel.ownerId"]},{"name":"abstract override val ownerId: ID","description":"love.forte.simbot.definition.Group.ownerId","location":"simbot-api/love.forte.simbot.definition/-group/owner-id.html","searchKeys":["ownerId","abstract override val ownerId: ID","love.forte.simbot.definition.Group.ownerId"]},{"name":"abstract override val ownerId: ID","description":"love.forte.simbot.definition.Guild.ownerId","location":"simbot-api/love.forte.simbot.definition/-guild/owner-id.html","searchKeys":["ownerId","abstract override val ownerId: ID","love.forte.simbot.definition.Guild.ownerId"]},{"name":"abstract override val ownerId: ID","description":"love.forte.simbot.definition.Organization.ownerId","location":"simbot-api/love.forte.simbot.definition/-organization/owner-id.html","searchKeys":["ownerId","abstract override val ownerId: ID","love.forte.simbot.definition.Organization.ownerId"]},{"name":"abstract override val remark: String?","description":"love.forte.simbot.definition.Friend.remark","location":"simbot-api/love.forte.simbot.definition/-friend/remark.html","searchKeys":["remark","abstract override val remark: String?","love.forte.simbot.definition.Friend.remark"]},{"name":"abstract override val username: String","description":"love.forte.simbot.bot.Bot.username","location":"simbot-api/love.forte.simbot.bot/-bot/username.html","searchKeys":["username","abstract override val username: String","love.forte.simbot.bot.Bot.username"]},{"name":"abstract override val username: String","description":"love.forte.simbot.bot.BotInfo.username","location":"simbot-api/love.forte.simbot.bot/-bot-info/username.html","searchKeys":["username","abstract override val username: String","love.forte.simbot.bot.BotInfo.username"]},{"name":"abstract override val username: String","description":"love.forte.simbot.definition.Friend.username","location":"simbot-api/love.forte.simbot.definition/-friend/username.html","searchKeys":["username","abstract override val username: String","love.forte.simbot.definition.Friend.username"]},{"name":"abstract override val username: String","description":"love.forte.simbot.definition.FriendInfo.username","location":"simbot-api/love.forte.simbot.definition/-friend-info/username.html","searchKeys":["username","abstract override val username: String","love.forte.simbot.definition.FriendInfo.username"]},{"name":"abstract override val username: String","description":"love.forte.simbot.definition.MemberInfo.username","location":"simbot-api/love.forte.simbot.definition/-member-info/username.html","searchKeys":["username","abstract override val username: String","love.forte.simbot.definition.MemberInfo.username"]},{"name":"abstract override val username: String","description":"love.forte.simbot.definition.User.username","location":"simbot-api/love.forte.simbot.definition/-user/username.html","searchKeys":["username","abstract override val username: String","love.forte.simbot.definition.User.username"]},{"name":"abstract suspend fun <T> waiting(id: String = randomIdStr(), listener: ContinuousSessionSelector<T>): T","description":"love.forte.simbot.event.BaseContinuousSessionContext.waiting","location":"simbot-api/love.forte.simbot.event/-base-continuous-session-context/waiting.html","searchKeys":["waiting","abstract suspend fun <T> waiting(id: String = randomIdStr(), listener: ContinuousSessionSelector<T>): T","love.forte.simbot.event.BaseContinuousSessionContext.waiting"]},{"name":"abstract suspend fun accept(): Boolean","description":"love.forte.simbot.event.RequestEvent.accept","location":"simbot-api/love.forte.simbot.event/-request-event/accept.html","searchKeys":["accept","abstract suspend fun accept(): Boolean","love.forte.simbot.event.RequestEvent.accept"]},{"name":"abstract suspend fun after(): Any?","description":"love.forte.simbot.event.ChangeEvent.after","location":"simbot-api/love.forte.simbot.event/-change-event/after.html","searchKeys":["after","abstract suspend fun after(): Any?","love.forte.simbot.event.ChangeEvent.after"]},{"name":"abstract suspend fun asMember(): Member","description":"love.forte.simbot.definition.OrganizationBot.asMember","location":"simbot-api/love.forte.simbot.definition/-organization-bot/as-member.html","searchKeys":["asMember","abstract suspend fun asMember(): Member","love.forte.simbot.definition.OrganizationBot.asMember"]},{"name":"abstract suspend fun author(): Member","description":"love.forte.simbot.event.ChatRoomMessageEvent.author","location":"simbot-api/love.forte.simbot.event/-chat-room-message-event/author.html","searchKeys":["author","abstract suspend fun author(): Member","love.forte.simbot.event.ChatRoomMessageEvent.author"]},{"name":"abstract suspend fun await(): T","description":"love.forte.simbot.event.ContinuousSessionReceiver.await","location":"simbot-api/love.forte.simbot.event/-continuous-session-receiver/await.html","searchKeys":["await","abstract suspend fun await(): T","love.forte.simbot.event.ContinuousSessionReceiver.await"]},{"name":"abstract suspend fun await(): T","description":"love.forte.simbot.utils.LazyValue.await","location":"simbot-api/love.forte.simbot.utils/-lazy-value/await.html","searchKeys":["await","abstract suspend fun await(): T","love.forte.simbot.utils.LazyValue.await"]},{"name":"abstract suspend fun awaitContent(): EventResult","description":"love.forte.simbot.event.AsyncEventResult.awaitContent","location":"simbot-api/love.forte.simbot.event/-async-event-result/await-content.html","searchKeys":["awaitContent","abstract suspend fun awaitContent(): EventResult","love.forte.simbot.event.AsyncEventResult.awaitContent"]},{"name":"abstract suspend fun before(): Any?","description":"love.forte.simbot.event.ChangeEvent.before","location":"simbot-api/love.forte.simbot.event/-change-event/before.html","searchKeys":["before","abstract suspend fun before(): Any?","love.forte.simbot.event.ChangeEvent.before"]},{"name":"abstract suspend fun cancel(reason: Throwable? = null): Boolean","description":"love.forte.simbot.ability.Switchable.cancel","location":"simbot-api/love.forte.simbot.ability/-switchable/cancel.html","searchKeys":["cancel","abstract suspend fun cancel(reason: Throwable? = null): Boolean","love.forte.simbot.ability.Switchable.cancel"]},{"name":"abstract suspend fun channel(): Channel","description":"love.forte.simbot.event.ChannelEvent.channel","location":"simbot-api/love.forte.simbot.event/-channel-event/channel.html","searchKeys":["channel","abstract suspend fun channel(): Channel","love.forte.simbot.event.ChannelEvent.channel"]},{"name":"abstract suspend fun channel(): ChannelInfo","description":"love.forte.simbot.definition.ChannelInfoContainer.channel","location":"simbot-api/love.forte.simbot.definition/-channel-info-container/channel.html","searchKeys":["channel","abstract suspend fun channel(): ChannelInfo","love.forte.simbot.definition.ChannelInfoContainer.channel"]},{"name":"abstract suspend fun channel(id: ID): Channel?","description":"love.forte.simbot.definition.Guild.channel","location":"simbot-api/love.forte.simbot.definition/-guild/channel.html","searchKeys":["channel","abstract suspend fun channel(id: ID): Channel?","love.forte.simbot.definition.Guild.channel"]},{"name":"abstract suspend fun child(id: ID): Organization?","description":"love.forte.simbot.definition.Organization.child","location":"simbot-api/love.forte.simbot.definition/-organization/child.html","searchKeys":["child","abstract suspend fun child(id: ID): Organization?","love.forte.simbot.definition.Organization.child"]},{"name":"abstract suspend fun collect(collector: suspend (T) -> Unit)","description":"love.forte.simbot.utils.item.Items.collect","location":"simbot-api/love.forte.simbot.utils.item/-items/collect.html","searchKeys":["collect","abstract suspend fun collect(collector: suspend (T) -> Unit)","love.forte.simbot.utils.item.Items.collect"]},{"name":"abstract suspend fun contact(id: ID): Contact?","description":"love.forte.simbot.definition.ContactsContainer.contact","location":"simbot-api/love.forte.simbot.definition/-contacts-container/contact.html","searchKeys":["contact","abstract suspend fun contact(id: ID): Contact?","love.forte.simbot.definition.ContactsContainer.contact"]},{"name":"abstract suspend fun create(): A","description":"love.forte.simbot.application.ApplicationDslBuilder.create","location":"simbot-api/love.forte.simbot.application/-application-dsl-builder/create.html","searchKeys":["create","abstract suspend fun create(): A","love.forte.simbot.application.ApplicationDslBuilder.create"]},{"name":"abstract suspend fun create(configurator: Config.() -> Unit): C","description":"love.forte.simbot.ComponentFactory.create","location":"simbot-api/love.forte.simbot/-component-factory/create.html","searchKeys":["create","abstract suspend fun create(configurator: Config.() -> Unit): C","love.forte.simbot.ComponentFactory.create"]},{"name":"abstract suspend fun create(configurator: Config.() -> Unit, builder: suspend Builder.(Config) -> Unit): A","description":"love.forte.simbot.application.ApplicationFactory.create","location":"simbot-api/love.forte.simbot.application/-application-factory/create.html","searchKeys":["create","abstract suspend fun create(configurator: Config.() -> Unit, builder: suspend Builder.(Config) -> Unit): A","love.forte.simbot.application.ApplicationFactory.create"]},{"name":"abstract suspend fun create(eventProcessor: EventProcessor, components: List<Component>, applicationConfiguration: ApplicationConfiguration, configurator: Config.() -> Unit): P","description":"love.forte.simbot.application.EventProviderFactory.create","location":"simbot-api/love.forte.simbot.application/-event-provider-factory/create.html","searchKeys":["create","abstract suspend fun create(eventProcessor: EventProcessor, components: List<Component>, applicationConfiguration: ApplicationConfiguration, configurator: Config.() -> Unit): P","love.forte.simbot.application.EventProviderFactory.create"]},{"name":"abstract suspend fun delete(): Boolean","description":"love.forte.simbot.action.DeleteSupport.delete","location":"simbot-api/love.forte.simbot.action/-delete-support/delete.html","searchKeys":["delete","abstract suspend fun delete(): Boolean","love.forte.simbot.action.DeleteSupport.delete"]},{"name":"abstract suspend fun friend(): FriendInfo","description":"love.forte.simbot.definition.FriendInfoContainer.friend","location":"simbot-api/love.forte.simbot.definition/-friend-info-container/friend.html","searchKeys":["friend","abstract suspend fun friend(): FriendInfo","love.forte.simbot.definition.FriendInfoContainer.friend"]},{"name":"abstract suspend fun friend(id: ID): Friend?","description":"love.forte.simbot.definition.FriendsContainer.friend","location":"simbot-api/love.forte.simbot.definition/-friends-container/friend.html","searchKeys":["friend","abstract suspend fun friend(id: ID): Friend?","love.forte.simbot.definition.FriendsContainer.friend"]},{"name":"abstract suspend fun group(): Group","description":"love.forte.simbot.definition.GroupMember.group","location":"simbot-api/love.forte.simbot.definition/-group-member/group.html","searchKeys":["group","abstract suspend fun group(): Group","love.forte.simbot.definition.GroupMember.group"]},{"name":"abstract suspend fun group(): GroupInfo","description":"love.forte.simbot.definition.GroupInfoContainer.group","location":"simbot-api/love.forte.simbot.definition/-group-info-container/group.html","searchKeys":["group","abstract suspend fun group(): GroupInfo","love.forte.simbot.definition.GroupInfoContainer.group"]},{"name":"abstract suspend fun group(id: ID): Group?","description":"love.forte.simbot.definition.GroupsContainer.group","location":"simbot-api/love.forte.simbot.definition/-groups-container/group.html","searchKeys":["group","abstract suspend fun group(id: ID): Group?","love.forte.simbot.definition.GroupsContainer.group"]},{"name":"abstract suspend fun guild(): Guild","description":"love.forte.simbot.definition.Channel.guild","location":"simbot-api/love.forte.simbot.definition/-channel/guild.html","searchKeys":["guild","abstract suspend fun guild(): Guild","love.forte.simbot.definition.Channel.guild"]},{"name":"abstract suspend fun guild(): Guild","description":"love.forte.simbot.definition.GuildMember.guild","location":"simbot-api/love.forte.simbot.definition/-guild-member/guild.html","searchKeys":["guild","abstract suspend fun guild(): Guild","love.forte.simbot.definition.GuildMember.guild"]},{"name":"abstract suspend fun guild(): Guild","description":"love.forte.simbot.event.GuildEvent.guild","location":"simbot-api/love.forte.simbot.event/-guild-event/guild.html","searchKeys":["guild","abstract suspend fun guild(): Guild","love.forte.simbot.event.GuildEvent.guild"]},{"name":"abstract suspend fun guild(): GuildInfo","description":"love.forte.simbot.definition.GuildInfoContainer.guild","location":"simbot-api/love.forte.simbot.definition/-guild-info-container/guild.html","searchKeys":["guild","abstract suspend fun guild(): GuildInfo","love.forte.simbot.definition.GuildInfoContainer.guild"]},{"name":"abstract suspend fun guild(id: ID): Guild?","description":"love.forte.simbot.definition.GuildsContainer.guild","location":"simbot-api/love.forte.simbot.definition/-guilds-container/guild.html","searchKeys":["guild","abstract suspend fun guild(id: ID): Guild?","love.forte.simbot.definition.GuildsContainer.guild"]},{"name":"abstract suspend fun intercept(context: C): R","description":"love.forte.simbot.Interceptor.intercept","location":"simbot-api/love.forte.simbot/-interceptor/intercept.html","searchKeys":["intercept","abstract suspend fun intercept(context: C): R","love.forte.simbot.Interceptor.intercept"]},{"name":"abstract suspend fun inviter(): UserInfo?","description":"love.forte.simbot.event.JoinRequestEvent.inviter","location":"simbot-api/love.forte.simbot.event/-join-request-event/inviter.html","searchKeys":["inviter","abstract suspend fun inviter(): UserInfo?","love.forte.simbot.event.JoinRequestEvent.inviter"]},{"name":"abstract suspend fun join()","description":"love.forte.simbot.ability.Survivable.join","location":"simbot-api/love.forte.simbot.ability/-survivable/join.html","searchKeys":["join","abstract suspend fun join()","love.forte.simbot.ability.Survivable.join"]},{"name":"abstract suspend fun join()","description":"love.forte.simbot.application.Application.join","location":"simbot-api/love.forte.simbot.application/-application/join.html","searchKeys":["join","abstract suspend fun join()","love.forte.simbot.application.Application.join"]},{"name":"abstract suspend fun launch(): A","description":"love.forte.simbot.application.ApplicationLauncher.launch","location":"simbot-api/love.forte.simbot.application/-application-launcher/launch.html","searchKeys":["launch","abstract suspend fun launch(): A","love.forte.simbot.application.ApplicationLauncher.launch"]},{"name":"abstract suspend fun match(context: EventListenerProcessingContext): Boolean","description":"love.forte.simbot.event.EventListener.match","location":"simbot-api/love.forte.simbot.event/-event-listener/match.html","searchKeys":["match","abstract suspend fun match(context: EventListenerProcessingContext): Boolean","love.forte.simbot.event.EventListener.match"]},{"name":"abstract suspend fun member(): MemberInfo","description":"love.forte.simbot.definition.MemberInfoContainer.member","location":"simbot-api/love.forte.simbot.definition/-member-info-container/member.html","searchKeys":["member","abstract suspend fun member(): MemberInfo","love.forte.simbot.definition.MemberInfoContainer.member"]},{"name":"abstract suspend fun member(id: ID): Member?","description":"love.forte.simbot.definition.Organization.member","location":"simbot-api/love.forte.simbot.definition/-organization/member.html","searchKeys":["member","abstract suspend fun member(id: ID): Member?","love.forte.simbot.definition.Organization.member"]},{"name":"abstract suspend fun mute(duration: Duration = DEFAULT_DURATION): Boolean","description":"love.forte.simbot.action.MuteSupport.mute","location":"simbot-api/love.forte.simbot.action/-mute-support/mute.html","searchKeys":["mute","abstract suspend fun mute(duration: Duration = DEFAULT_DURATION): Boolean","love.forte.simbot.action.MuteSupport.mute"]},{"name":"abstract suspend fun operator(): MemberInfo?","description":"love.forte.simbot.event.MemberChangedEvent.operator","location":"simbot-api/love.forte.simbot.event/-member-changed-event/operator.html","searchKeys":["operator","abstract suspend fun operator(): MemberInfo?","love.forte.simbot.event.MemberChangedEvent.operator"]},{"name":"abstract suspend fun organization(): Organization","description":"love.forte.simbot.definition.Member.organization","location":"simbot-api/love.forte.simbot.definition/-member/organization.html","searchKeys":["organization","abstract suspend fun organization(): Organization","love.forte.simbot.definition.Member.organization"]},{"name":"abstract suspend fun organization(): Organization","description":"love.forte.simbot.event.OrganizationEvent.organization","location":"simbot-api/love.forte.simbot.event/-organization-event/organization.html","searchKeys":["organization","abstract suspend fun organization(): Organization","love.forte.simbot.event.OrganizationEvent.organization"]},{"name":"abstract suspend fun owner(): Member","description":"love.forte.simbot.definition.Organization.owner","location":"simbot-api/love.forte.simbot.definition/-organization/owner.html","searchKeys":["owner","abstract suspend fun owner(): Member","love.forte.simbot.definition.Organization.owner"]},{"name":"abstract suspend fun previous(): Organization?","description":"love.forte.simbot.definition.Organization.previous","location":"simbot-api/love.forte.simbot.definition/-organization/previous.html","searchKeys":["previous","abstract suspend fun previous(): Organization?","love.forte.simbot.definition.Organization.previous"]},{"name":"abstract suspend fun proceed(): R","description":"love.forte.simbot.Interceptor.Context.proceed","location":"simbot-api/love.forte.simbot/-interceptor/-context/proceed.html","searchKeys":["proceed","abstract suspend fun proceed(): R","love.forte.simbot.Interceptor.Context.proceed"]},{"name":"abstract suspend fun process(target: T): R","description":"love.forte.simbot.Processor.process","location":"simbot-api/love.forte.simbot/-processor/process.html","searchKeys":["process","abstract suspend fun process(target: T): R","love.forte.simbot.Processor.process"]},{"name":"abstract suspend fun push(event: Event): EventProcessingResult","description":"love.forte.simbot.event.EventProcessor.push","location":"simbot-api/love.forte.simbot.event/-event-processor/push.html","searchKeys":["push","abstract suspend fun push(event: Event): EventProcessingResult","love.forte.simbot.event.EventProcessor.push"]},{"name":"abstract suspend fun react(message: Message): MessageReceipt","description":"love.forte.simbot.action.MessageReactSupport.react","location":"simbot-api/love.forte.simbot.action/-message-react-support/react.html","searchKeys":["react","abstract suspend fun react(message: Message): MessageReceipt","love.forte.simbot.action.MessageReactSupport.react"]},{"name":"abstract suspend fun reject(): Boolean","description":"love.forte.simbot.event.RequestEvent.reject","location":"simbot-api/love.forte.simbot.event/-request-event/reject.html","searchKeys":["reject","abstract suspend fun reject(): Boolean","love.forte.simbot.event.RequestEvent.reject"]},{"name":"abstract suspend fun reply(message: Message): MessageReceipt","description":"love.forte.simbot.action.ReplySupport.reply","location":"simbot-api/love.forte.simbot.action/-reply-support/reply.html","searchKeys":["reply","abstract suspend fun reply(message: Message): MessageReceipt","love.forte.simbot.action.ReplySupport.reply"]},{"name":"abstract suspend fun requester(): UserInfo","description":"love.forte.simbot.event.RequestEvent.requester","location":"simbot-api/love.forte.simbot.event/-request-event/requester.html","searchKeys":["requester","abstract suspend fun requester(): UserInfo","love.forte.simbot.event.RequestEvent.requester"]},{"name":"abstract suspend fun resolveImage(id: ID): Image<*>","description":"love.forte.simbot.bot.Bot.resolveImage","location":"simbot-api/love.forte.simbot.bot/-bot/resolve-image.html","searchKeys":["resolveImage","abstract suspend fun resolveImage(id: ID): Image<*>","love.forte.simbot.bot.Bot.resolveImage"]},{"name":"abstract suspend fun resource(): Resource","description":"love.forte.simbot.definition.ResourceContainer.resource","location":"simbot-api/love.forte.simbot.definition/-resource-container/resource.html","searchKeys":["resource","abstract suspend fun resource(): Resource","love.forte.simbot.definition.ResourceContainer.resource"]},{"name":"abstract suspend fun send(message: Message): MessageReceipt","description":"love.forte.simbot.action.SendSupport.send","location":"simbot-api/love.forte.simbot.action/-send-support/send.html","searchKeys":["send","abstract suspend fun send(message: Message): MessageReceipt","love.forte.simbot.action.SendSupport.send"]},{"name":"abstract suspend fun shutdown(reason: Throwable? = null)","description":"love.forte.simbot.application.Application.shutdown","location":"simbot-api/love.forte.simbot.application/-application/shutdown.html","searchKeys":["shutdown","abstract suspend fun shutdown(reason: Throwable? = null)","love.forte.simbot.application.Application.shutdown"]},{"name":"abstract suspend fun source(): Any","description":"love.forte.simbot.event.ChangeEvent.source","location":"simbot-api/love.forte.simbot.event/-change-event/source.html","searchKeys":["source","abstract suspend fun source(): Any","love.forte.simbot.event.ChangeEvent.source"]},{"name":"abstract suspend fun source(): Objective","description":"love.forte.simbot.event.MessageEvent.source","location":"simbot-api/love.forte.simbot.event/-message-event/source.html","searchKeys":["source","abstract suspend fun source(): Objective","love.forte.simbot.event.MessageEvent.source"]},{"name":"abstract suspend fun start(): Boolean","description":"love.forte.simbot.ability.Switchable.start","location":"simbot-api/love.forte.simbot.ability/-switchable/start.html","searchKeys":["start","abstract suspend fun start(): Boolean","love.forte.simbot.ability.Switchable.start"]},{"name":"abstract suspend fun test(t: T): Boolean","description":"love.forte.simbot.Filter.test","location":"simbot-api/love.forte.simbot/-filter/test.html","searchKeys":["test","abstract suspend fun test(t: T): Boolean","love.forte.simbot.Filter.test"]},{"name":"abstract suspend fun unmute(): Boolean","description":"love.forte.simbot.action.MuteSupport.unmute","location":"simbot-api/love.forte.simbot.action/-mute-support/unmute.html","searchKeys":["unmute","abstract suspend fun unmute(): Boolean","love.forte.simbot.action.MuteSupport.unmute"]},{"name":"abstract suspend fun user(): UserInfo","description":"love.forte.simbot.definition.UserInfoContainer.user","location":"simbot-api/love.forte.simbot.definition/-user-info-container/user.html","searchKeys":["user","abstract suspend fun user(): UserInfo","love.forte.simbot.definition.UserInfoContainer.user"]},{"name":"abstract suspend operator fun EventProcessingContext.invoke(event: E): Boolean","description":"love.forte.simbot.event.ContinuousSessionEventMatcher.invoke","location":"simbot-api/love.forte.simbot.event/-continuous-session-event-matcher/invoke.html","searchKeys":["invoke","abstract suspend operator fun EventProcessingContext.invoke(event: E): Boolean","love.forte.simbot.event.ContinuousSessionEventMatcher.invoke"]},{"name":"abstract suspend operator fun EventProcessingContext.invoke(provider: ContinuousSessionProvider<T>)","description":"love.forte.simbot.event.ContinuousSessionSelector.invoke","location":"simbot-api/love.forte.simbot.event/-continuous-session-selector/invoke.html","searchKeys":["invoke","abstract suspend operator fun EventProcessingContext.invoke(provider: ContinuousSessionProvider<T>)","love.forte.simbot.event.ContinuousSessionSelector.invoke"]},{"name":"abstract suspend operator override fun invoke(context: EventListenerProcessingContext): EventResult","description":"love.forte.simbot.event.EventListener.invoke","location":"simbot-api/love.forte.simbot.event/-event-listener/invoke.html","searchKeys":["invoke","abstract suspend operator override fun invoke(context: EventListenerProcessingContext): EventResult","love.forte.simbot.event.EventListener.invoke"]},{"name":"abstract suspend operator override fun invoke(context: EventListenerProcessingContext): EventResult","description":"love.forte.simbot.event.EventListenerFunction.invoke","location":"simbot-api/love.forte.simbot.event/-event-listener-function/invoke.html","searchKeys":["invoke","abstract suspend operator override fun invoke(context: EventListenerProcessingContext): EventResult","love.forte.simbot.event.EventListenerFunction.invoke"]},{"name":"abstract suspend override fun <T> waiting(id: String, listener: ContinuousSessionSelector<T>): T","description":"love.forte.simbot.event.ContinuousSessionContext.waiting","location":"simbot-api/love.forte.simbot.event/-continuous-session-context/waiting.html","searchKeys":["waiting","abstract suspend override fun <T> waiting(id: String, listener: ContinuousSessionSelector<T>): T","love.forte.simbot.event.ContinuousSessionContext.waiting"]},{"name":"abstract suspend override fun after(): Friend","description":"love.forte.simbot.event.FriendIncreaseEvent.after","location":"simbot-api/love.forte.simbot.event/-friend-increase-event/after.html","searchKeys":["after","abstract suspend override fun after(): Friend","love.forte.simbot.event.FriendIncreaseEvent.after"]},{"name":"abstract suspend override fun after(): GroupMember","description":"love.forte.simbot.event.GroupMemberIncreaseEvent.after","location":"simbot-api/love.forte.simbot.event/-group-member-increase-event/after.html","searchKeys":["after","abstract suspend override fun after(): GroupMember","love.forte.simbot.event.GroupMemberIncreaseEvent.after"]},{"name":"abstract suspend override fun after(): GuildMember","description":"love.forte.simbot.event.GuildMemberIncreaseEvent.after","location":"simbot-api/love.forte.simbot.event/-guild-member-increase-event/after.html","searchKeys":["after","abstract suspend override fun after(): GuildMember","love.forte.simbot.event.GuildMemberIncreaseEvent.after"]},{"name":"abstract suspend override fun after(): Member","description":"love.forte.simbot.event.MemberIncreaseEvent.after","location":"simbot-api/love.forte.simbot.event/-member-increase-event/after.html","searchKeys":["after","abstract suspend override fun after(): Member","love.forte.simbot.event.MemberIncreaseEvent.after"]},{"name":"abstract suspend override fun asMember(): GroupMember","description":"love.forte.simbot.definition.GroupBot.asMember","location":"simbot-api/love.forte.simbot.definition/-group-bot/as-member.html","searchKeys":["asMember","abstract suspend override fun asMember(): GroupMember","love.forte.simbot.definition.GroupBot.asMember"]},{"name":"abstract suspend override fun asMember(): GuildMember","description":"love.forte.simbot.definition.GuildBot.asMember","location":"simbot-api/love.forte.simbot.definition/-guild-bot/as-member.html","searchKeys":["asMember","abstract suspend override fun asMember(): GuildMember","love.forte.simbot.definition.GuildBot.asMember"]},{"name":"abstract suspend override fun before(): Friend","description":"love.forte.simbot.event.FriendDecreaseEvent.before","location":"simbot-api/love.forte.simbot.event/-friend-decrease-event/before.html","searchKeys":["before","abstract suspend override fun before(): Friend","love.forte.simbot.event.FriendDecreaseEvent.before"]},{"name":"abstract suspend override fun before(): GroupMember","description":"love.forte.simbot.event.GroupMemberDecreaseEvent.before","location":"simbot-api/love.forte.simbot.event/-group-member-decrease-event/before.html","searchKeys":["before","abstract suspend override fun before(): GroupMember","love.forte.simbot.event.GroupMemberDecreaseEvent.before"]},{"name":"abstract suspend override fun before(): GuildMember","description":"love.forte.simbot.event.GuildMemberDecreaseEvent.before","location":"simbot-api/love.forte.simbot.event/-guild-member-decrease-event/before.html","searchKeys":["before","abstract suspend override fun before(): GuildMember","love.forte.simbot.event.GuildMemberDecreaseEvent.before"]},{"name":"abstract suspend override fun before(): Member","description":"love.forte.simbot.event.MemberDecreaseEvent.before","location":"simbot-api/love.forte.simbot.event/-member-decrease-event/before.html","searchKeys":["before","abstract suspend override fun before(): Member","love.forte.simbot.event.MemberDecreaseEvent.before"]},{"name":"abstract suspend override fun cancel(reason: Throwable?): Boolean","description":"love.forte.simbot.bot.Bot.cancel","location":"simbot-api/love.forte.simbot.bot/-bot/cancel.html","searchKeys":["cancel","abstract suspend override fun cancel(reason: Throwable?): Boolean","love.forte.simbot.bot.Bot.cancel"]},{"name":"abstract suspend override fun child(id: ID): Channel?","description":"love.forte.simbot.definition.Guild.child","location":"simbot-api/love.forte.simbot.definition/-guild/child.html","searchKeys":["child","abstract suspend override fun child(id: ID): Channel?","love.forte.simbot.definition.Guild.child"]},{"name":"abstract suspend override fun delete(): Boolean","description":"love.forte.simbot.message.MessageReceipt.delete","location":"simbot-api/love.forte.simbot.message/-message-receipt/delete.html","searchKeys":["delete","abstract suspend override fun delete(): Boolean","love.forte.simbot.message.MessageReceipt.delete"]},{"name":"abstract suspend override fun delete(): Boolean","description":"love.forte.simbot.message.RemoteMessageContent.delete","location":"simbot-api/love.forte.simbot.message/-remote-message-content/delete.html","searchKeys":["delete","abstract suspend override fun delete(): Boolean","love.forte.simbot.message.RemoteMessageContent.delete"]},{"name":"abstract suspend override fun friend(): Friend","description":"love.forte.simbot.event.FriendChangedEvent.friend","location":"simbot-api/love.forte.simbot.event/-friend-changed-event/friend.html","searchKeys":["friend","abstract suspend override fun friend(): Friend","love.forte.simbot.event.FriendChangedEvent.friend"]},{"name":"abstract suspend override fun friend(): Friend","description":"love.forte.simbot.event.FriendEvent.friend","location":"simbot-api/love.forte.simbot.event/-friend-event/friend.html","searchKeys":["friend","abstract suspend override fun friend(): Friend","love.forte.simbot.event.FriendEvent.friend"]},{"name":"abstract suspend override fun friend(): Friend","description":"love.forte.simbot.event.FriendMessageEvent.friend","location":"simbot-api/love.forte.simbot.event/-friend-message-event/friend.html","searchKeys":["friend","abstract suspend override fun friend(): Friend","love.forte.simbot.event.FriendMessageEvent.friend"]},{"name":"abstract suspend override fun group(): Group","description":"love.forte.simbot.event.GroupEvent.group","location":"simbot-api/love.forte.simbot.event/-group-event/group.html","searchKeys":["group","abstract suspend override fun group(): Group","love.forte.simbot.event.GroupEvent.group"]},{"name":"abstract suspend override fun group(): Group","description":"love.forte.simbot.event.GroupMemberDecreaseEvent.group","location":"simbot-api/love.forte.simbot.event/-group-member-decrease-event/group.html","searchKeys":["group","abstract suspend override fun group(): Group","love.forte.simbot.event.GroupMemberDecreaseEvent.group"]},{"name":"abstract suspend override fun group(): Group","description":"love.forte.simbot.event.GroupMemberIncreaseEvent.group","location":"simbot-api/love.forte.simbot.event/-group-member-increase-event/group.html","searchKeys":["group","abstract suspend override fun group(): Group","love.forte.simbot.event.GroupMemberIncreaseEvent.group"]},{"name":"abstract suspend override fun guild(): Guild","description":"love.forte.simbot.event.GuildMemberDecreaseEvent.guild","location":"simbot-api/love.forte.simbot.event/-guild-member-decrease-event/guild.html","searchKeys":["guild","abstract suspend override fun guild(): Guild","love.forte.simbot.event.GuildMemberDecreaseEvent.guild"]},{"name":"abstract suspend override fun guild(): Guild","description":"love.forte.simbot.event.GuildMemberIncreaseEvent.guild","location":"simbot-api/love.forte.simbot.event/-guild-member-increase-event/guild.html","searchKeys":["guild","abstract suspend override fun guild(): Guild","love.forte.simbot.event.GuildMemberIncreaseEvent.guild"]},{"name":"abstract suspend override fun intercept(context: EventListenerInterceptor.Context): EventResult","description":"love.forte.simbot.event.EventListenerInterceptor.intercept","location":"simbot-api/love.forte.simbot.event/-event-listener-interceptor/intercept.html","searchKeys":["intercept","abstract suspend override fun intercept(context: EventListenerInterceptor.Context): EventResult","love.forte.simbot.event.EventListenerInterceptor.intercept"]},{"name":"abstract suspend override fun intercept(context: EventProcessingInterceptor.Context): EventProcessingResult","description":"love.forte.simbot.event.EventProcessingInterceptor.intercept","location":"simbot-api/love.forte.simbot.event/-event-processing-interceptor/intercept.html","searchKeys":["intercept","abstract suspend override fun intercept(context: EventProcessingInterceptor.Context): EventProcessingResult","love.forte.simbot.event.EventProcessingInterceptor.intercept"]},{"name":"abstract suspend override fun join()","description":"love.forte.simbot.bot.Bot.join","location":"simbot-api/love.forte.simbot.bot/-bot/join.html","searchKeys":["join","abstract suspend override fun join()","love.forte.simbot.bot.Bot.join"]},{"name":"abstract suspend override fun member(): GroupMember","description":"love.forte.simbot.event.GroupMemberDecreaseEvent.member","location":"simbot-api/love.forte.simbot.event/-group-member-decrease-event/member.html","searchKeys":["member","abstract suspend override fun member(): GroupMember","love.forte.simbot.event.GroupMemberDecreaseEvent.member"]},{"name":"abstract suspend override fun member(): GroupMember","description":"love.forte.simbot.event.GroupMemberIncreaseEvent.member","location":"simbot-api/love.forte.simbot.event/-group-member-increase-event/member.html","searchKeys":["member","abstract suspend override fun member(): GroupMember","love.forte.simbot.event.GroupMemberIncreaseEvent.member"]},{"name":"abstract suspend override fun member(): GuildMember","description":"love.forte.simbot.event.GuildMemberDecreaseEvent.member","location":"simbot-api/love.forte.simbot.event/-guild-member-decrease-event/member.html","searchKeys":["member","abstract suspend override fun member(): GuildMember","love.forte.simbot.event.GuildMemberDecreaseEvent.member"]},{"name":"abstract suspend override fun member(): GuildMember","description":"love.forte.simbot.event.GuildMemberIncreaseEvent.member","location":"simbot-api/love.forte.simbot.event/-guild-member-increase-event/member.html","searchKeys":["member","abstract suspend override fun member(): GuildMember","love.forte.simbot.event.GuildMemberIncreaseEvent.member"]},{"name":"abstract suspend override fun member(): Member","description":"love.forte.simbot.event.MemberEvent.member","location":"simbot-api/love.forte.simbot.event/-member-event/member.html","searchKeys":["member","abstract suspend override fun member(): Member","love.forte.simbot.event.MemberEvent.member"]},{"name":"abstract suspend override fun member(id: ID): GroupMember?","description":"love.forte.simbot.definition.Group.member","location":"simbot-api/love.forte.simbot.definition/-group/member.html","searchKeys":["member","abstract suspend override fun member(id: ID): GroupMember?","love.forte.simbot.definition.Group.member"]},{"name":"abstract suspend override fun member(id: ID): GuildMember?","description":"love.forte.simbot.definition.Channel.member","location":"simbot-api/love.forte.simbot.definition/-channel/member.html","searchKeys":["member","abstract suspend override fun member(id: ID): GuildMember?","love.forte.simbot.definition.Channel.member"]},{"name":"abstract suspend override fun member(id: ID): GuildMember?","description":"love.forte.simbot.definition.Guild.member","location":"simbot-api/love.forte.simbot.definition/-guild/member.html","searchKeys":["member","abstract suspend override fun member(id: ID): GuildMember?","love.forte.simbot.definition.Guild.member"]},{"name":"abstract suspend override fun mute(duration: Duration): Boolean","description":"love.forte.simbot.definition.Member.mute","location":"simbot-api/love.forte.simbot.definition/-member/mute.html","searchKeys":["mute","abstract suspend override fun mute(duration: Duration): Boolean","love.forte.simbot.definition.Member.mute"]},{"name":"abstract suspend override fun mute(duration: Duration): Boolean","description":"love.forte.simbot.definition.Organization.mute","location":"simbot-api/love.forte.simbot.definition/-organization/mute.html","searchKeys":["mute","abstract suspend override fun mute(duration: Duration): Boolean","love.forte.simbot.definition.Organization.mute"]},{"name":"abstract suspend override fun organization(): Channel","description":"love.forte.simbot.event.ChannelEvent.organization","location":"simbot-api/love.forte.simbot.event/-channel-event/organization.html","searchKeys":["organization","abstract suspend override fun organization(): Channel","love.forte.simbot.event.ChannelEvent.organization"]},{"name":"abstract suspend override fun organization(): Group","description":"love.forte.simbot.event.GroupEvent.organization","location":"simbot-api/love.forte.simbot.event/-group-event/organization.html","searchKeys":["organization","abstract suspend override fun organization(): Group","love.forte.simbot.event.GroupEvent.organization"]},{"name":"abstract suspend override fun organization(): Guild","description":"love.forte.simbot.event.GuildEvent.organization","location":"simbot-api/love.forte.simbot.event/-guild-event/organization.html","searchKeys":["organization","abstract suspend override fun organization(): Guild","love.forte.simbot.event.GuildEvent.organization"]},{"name":"abstract suspend override fun owner(): GroupMember","description":"love.forte.simbot.definition.Group.owner","location":"simbot-api/love.forte.simbot.definition/-group/owner.html","searchKeys":["owner","abstract suspend override fun owner(): GroupMember","love.forte.simbot.definition.Group.owner"]},{"name":"abstract suspend override fun owner(): GuildMember","description":"love.forte.simbot.definition.Channel.owner","location":"simbot-api/love.forte.simbot.definition/-channel/owner.html","searchKeys":["owner","abstract suspend override fun owner(): GuildMember","love.forte.simbot.definition.Channel.owner"]},{"name":"abstract suspend override fun owner(): GuildMember","description":"love.forte.simbot.definition.Guild.owner","location":"simbot-api/love.forte.simbot.definition/-guild/owner.html","searchKeys":["owner","abstract suspend override fun owner(): GuildMember","love.forte.simbot.definition.Guild.owner"]},{"name":"abstract suspend override fun reply(message: Message): MessageReceipt","description":"love.forte.simbot.event.MessageEvent.reply","location":"simbot-api/love.forte.simbot.event/-message-event/reply.html","searchKeys":["reply","abstract suspend override fun reply(message: Message): MessageReceipt","love.forte.simbot.event.MessageEvent.reply"]},{"name":"abstract suspend override fun requester(): UserInfo","description":"love.forte.simbot.event.GroupJoinRequestEvent.requester","location":"simbot-api/love.forte.simbot.event/-group-join-request-event/requester.html","searchKeys":["requester","abstract suspend override fun requester(): UserInfo","love.forte.simbot.event.GroupJoinRequestEvent.requester"]},{"name":"abstract suspend override fun requester(): UserInfo","description":"love.forte.simbot.event.GuildJoinRequestEvent.requester","location":"simbot-api/love.forte.simbot.event/-guild-join-request-event/requester.html","searchKeys":["requester","abstract suspend override fun requester(): UserInfo","love.forte.simbot.event.GuildJoinRequestEvent.requester"]},{"name":"abstract suspend override fun requester(): UserInfo","description":"love.forte.simbot.event.JoinRequestEvent.requester","location":"simbot-api/love.forte.simbot.event/-join-request-event/requester.html","searchKeys":["requester","abstract suspend override fun requester(): UserInfo","love.forte.simbot.event.JoinRequestEvent.requester"]},{"name":"abstract suspend override fun resource(): Resource","description":"love.forte.simbot.message.Image.resource","location":"simbot-api/love.forte.simbot.message/-image/resource.html","searchKeys":["resource","abstract suspend override fun resource(): Resource","love.forte.simbot.message.Image.resource"]},{"name":"abstract suspend override fun send(message: Message): MessageReceipt","description":"love.forte.simbot.definition.Contact.send","location":"simbot-api/love.forte.simbot.definition/-contact/send.html","searchKeys":["send","abstract suspend override fun send(message: Message): MessageReceipt","love.forte.simbot.definition.Contact.send"]},{"name":"abstract suspend override fun source(): Bot","description":"love.forte.simbot.event.FriendChangedEvent.source","location":"simbot-api/love.forte.simbot.event/-friend-changed-event/source.html","searchKeys":["source","abstract suspend override fun source(): Bot","love.forte.simbot.event.FriendChangedEvent.source"]},{"name":"abstract suspend override fun source(): Channel","description":"love.forte.simbot.event.ChannelMessageEvent.source","location":"simbot-api/love.forte.simbot.event/-channel-message-event/source.html","searchKeys":["source","abstract suspend override fun source(): Channel","love.forte.simbot.event.ChannelMessageEvent.source"]},{"name":"abstract suspend override fun source(): ChatRoom","description":"love.forte.simbot.event.ChatRoomMessageEvent.source","location":"simbot-api/love.forte.simbot.event/-chat-room-message-event/source.html","searchKeys":["source","abstract suspend override fun source(): ChatRoom","love.forte.simbot.event.ChatRoomMessageEvent.source"]},{"name":"abstract suspend override fun source(): Contact","description":"love.forte.simbot.event.ContactMessageEvent.source","location":"simbot-api/love.forte.simbot.event/-contact-message-event/source.html","searchKeys":["source","abstract suspend override fun source(): Contact","love.forte.simbot.event.ContactMessageEvent.source"]},{"name":"abstract suspend override fun source(): Friend","description":"love.forte.simbot.event.FriendMessageEvent.source","location":"simbot-api/love.forte.simbot.event/-friend-message-event/source.html","searchKeys":["source","abstract suspend override fun source(): Friend","love.forte.simbot.event.FriendMessageEvent.source"]},{"name":"abstract suspend override fun source(): Group","description":"love.forte.simbot.event.GroupMemberDecreaseEvent.source","location":"simbot-api/love.forte.simbot.event/-group-member-decrease-event/source.html","searchKeys":["source","abstract suspend override fun source(): Group","love.forte.simbot.event.GroupMemberDecreaseEvent.source"]},{"name":"abstract suspend override fun source(): Group","description":"love.forte.simbot.event.GroupMemberIncreaseEvent.source","location":"simbot-api/love.forte.simbot.event/-group-member-increase-event/source.html","searchKeys":["source","abstract suspend override fun source(): Group","love.forte.simbot.event.GroupMemberIncreaseEvent.source"]},{"name":"abstract suspend override fun source(): Group","description":"love.forte.simbot.event.GroupMessageEvent.source","location":"simbot-api/love.forte.simbot.event/-group-message-event/source.html","searchKeys":["source","abstract suspend override fun source(): Group","love.forte.simbot.event.GroupMessageEvent.source"]},{"name":"abstract suspend override fun source(): Guild","description":"love.forte.simbot.event.GuildMemberDecreaseEvent.source","location":"simbot-api/love.forte.simbot.event/-guild-member-decrease-event/source.html","searchKeys":["source","abstract suspend override fun source(): Guild","love.forte.simbot.event.GuildMemberDecreaseEvent.source"]},{"name":"abstract suspend override fun source(): Guild","description":"love.forte.simbot.event.GuildMemberIncreaseEvent.source","location":"simbot-api/love.forte.simbot.event/-guild-member-increase-event/source.html","searchKeys":["source","abstract suspend override fun source(): Guild","love.forte.simbot.event.GuildMemberIncreaseEvent.source"]},{"name":"abstract suspend override fun source(): Organization","description":"love.forte.simbot.event.MemberIncreaseEvent.source","location":"simbot-api/love.forte.simbot.event/-member-increase-event/source.html","searchKeys":["source","abstract suspend override fun source(): Organization","love.forte.simbot.event.MemberIncreaseEvent.source"]},{"name":"abstract suspend override fun start(): Boolean","description":"love.forte.simbot.bot.Bot.start","location":"simbot-api/love.forte.simbot.bot/-bot/start.html","searchKeys":["start","abstract suspend override fun start(): Boolean","love.forte.simbot.bot.Bot.start"]},{"name":"abstract suspend override fun test(context: EventListenerProcessingContext): Boolean","description":"love.forte.simbot.event.EventFilter.test","location":"simbot-api/love.forte.simbot.event/-event-filter/test.html","searchKeys":["test","abstract suspend override fun test(context: EventListenerProcessingContext): Boolean","love.forte.simbot.event.EventFilter.test"]},{"name":"abstract suspend override fun unmute(): Boolean","description":"love.forte.simbot.definition.Organization.unmute","location":"simbot-api/love.forte.simbot.definition/-organization/unmute.html","searchKeys":["unmute","abstract suspend override fun unmute(): Boolean","love.forte.simbot.definition.Organization.unmute"]},{"name":"abstract suspend override fun user(): Contact","description":"love.forte.simbot.event.ContactMessageEvent.user","location":"simbot-api/love.forte.simbot.event/-contact-message-event/user.html","searchKeys":["user","abstract suspend override fun user(): Contact","love.forte.simbot.event.ContactMessageEvent.user"]},{"name":"abstract suspend override fun user(): Friend","description":"love.forte.simbot.event.FriendEvent.user","location":"simbot-api/love.forte.simbot.event/-friend-event/user.html","searchKeys":["user","abstract suspend override fun user(): Friend","love.forte.simbot.event.FriendEvent.user"]},{"name":"abstract suspend override fun user(): Friend","description":"love.forte.simbot.event.FriendMessageEvent.user","location":"simbot-api/love.forte.simbot.event/-friend-message-event/user.html","searchKeys":["user","abstract suspend override fun user(): Friend","love.forte.simbot.event.FriendMessageEvent.user"]},{"name":"abstract suspend override fun user(): Member","description":"love.forte.simbot.event.MemberEvent.user","location":"simbot-api/love.forte.simbot.event/-member-event/user.html","searchKeys":["user","abstract suspend override fun user(): Member","love.forte.simbot.event.MemberEvent.user"]},{"name":"abstract suspend override fun user(): User","description":"love.forte.simbot.event.UserEvent.user","location":"simbot-api/love.forte.simbot.event/-user-event/user.html","searchKeys":["user","abstract suspend override fun user(): User","love.forte.simbot.event.UserEvent.user"]},{"name":"abstract suspend override fun user(): UserInfo","description":"love.forte.simbot.event.RequestEvent.user","location":"simbot-api/love.forte.simbot.event/-request-event/user.html","searchKeys":["user","abstract suspend override fun user(): UserInfo","love.forte.simbot.event.RequestEvent.user"]},{"name":"abstract val actionType: ActionType","description":"love.forte.simbot.event.MemberDecreaseEvent.actionType","location":"simbot-api/love.forte.simbot.event/-member-decrease-event/action-type.html","searchKeys":["actionType","abstract val actionType: ActionType","love.forte.simbot.event.MemberDecreaseEvent.actionType"]},{"name":"abstract val actionType: ActionType","description":"love.forte.simbot.event.MemberIncreaseEvent.actionType","location":"simbot-api/love.forte.simbot.event/-member-increase-event/action-type.html","searchKeys":["actionType","abstract val actionType: ActionType","love.forte.simbot.event.MemberIncreaseEvent.actionType"]},{"name":"abstract val avatar: String","description":"love.forte.simbot.definition.UserInfo.avatar","location":"simbot-api/love.forte.simbot.definition/-user-info/avatar.html","searchKeys":["avatar","abstract val avatar: String","love.forte.simbot.definition.UserInfo.avatar"]},{"name":"abstract val batchSize: Int","description":"love.forte.simbot.Limiter.batchSize","location":"simbot-api/love.forte.simbot/-limiter/batch-size.html","searchKeys":["batchSize","abstract val batchSize: Int","love.forte.simbot.Limiter.batchSize"]},{"name":"abstract val bot: Bot","description":"love.forte.simbot.definition.BotContainer.bot","location":"simbot-api/love.forte.simbot.definition/-bot-container/bot.html","searchKeys":["bot","abstract val bot: Bot","love.forte.simbot.definition.BotContainer.bot"]},{"name":"abstract val botManagers: BotManagers","description":"love.forte.simbot.application.Application.botManagers","location":"simbot-api/love.forte.simbot.application/-application/bot-managers.html","searchKeys":["botManagers","abstract val botManagers: BotManagers","love.forte.simbot.application.Application.botManagers"]},{"name":"abstract val cause: Throwable?","description":"love.forte.simbot.SimbotError.cause","location":"simbot-api/love.forte.simbot/-simbot-error/cause.html","searchKeys":["cause","abstract val cause: Throwable?","love.forte.simbot.SimbotError.cause"]},{"name":"abstract val changedTime: Timestamp","description":"love.forte.simbot.event.ChangedEvent.changedTime","location":"simbot-api/love.forte.simbot.event/-changed-event/changed-time.html","searchKeys":["changedTime","abstract val changedTime: Timestamp","love.forte.simbot.event.ChangedEvent.changedTime"]},{"name":"abstract val channels: Items<Channel>","description":"love.forte.simbot.definition.Guild.channels","location":"simbot-api/love.forte.simbot.definition/-guild/channels.html","searchKeys":["channels","abstract val channels: Items<Channel>","love.forte.simbot.definition.Guild.channels"]},{"name":"abstract val children: Items<Organization>","description":"love.forte.simbot.definition.Organization.children","location":"simbot-api/love.forte.simbot.definition/-organization/children.html","searchKeys":["children","abstract val children: Items<Organization>","love.forte.simbot.definition.Organization.children"]},{"name":"abstract val component: Component","description":"love.forte.simbot.ComponentContainer.component","location":"simbot-api/love.forte.simbot/-component-container/component.html","searchKeys":["component","abstract val component: Component","love.forte.simbot.ComponentContainer.component"]},{"name":"abstract val componentId: String","description":"love.forte.simbot.bot.BotVerifyInfo.componentId","location":"simbot-api/love.forte.simbot.bot/-bot-verify-info/component-id.html","searchKeys":["componentId","abstract val componentId: String","love.forte.simbot.bot.BotVerifyInfo.componentId"]},{"name":"abstract val componentSerializersModule: SerializersModule","description":"love.forte.simbot.Component.componentSerializersModule","location":"simbot-api/love.forte.simbot/-component/component-serializers-module.html","searchKeys":["componentSerializersModule","abstract val componentSerializersModule: SerializersModule","love.forte.simbot.Component.componentSerializersModule"]},{"name":"abstract val components: List<Component>","description":"love.forte.simbot.application.Application.Environment.components","location":"simbot-api/love.forte.simbot.application/-application/-environment/components.html","searchKeys":["components","abstract val components: List<Component>","love.forte.simbot.application.Application.Environment.components"]},{"name":"abstract val configuration: ApplicationConfiguration","description":"love.forte.simbot.application.Application.configuration","location":"simbot-api/love.forte.simbot.application/-application/configuration.html","searchKeys":["configuration","abstract val configuration: ApplicationConfiguration","love.forte.simbot.application.Application.configuration"]},{"name":"abstract val contacts: Items<Contact>","description":"love.forte.simbot.definition.ContactsContainer.contacts","location":"simbot-api/love.forte.simbot.definition/-contacts-container/contacts.html","searchKeys":["contacts","abstract val contacts: Items<Contact>","love.forte.simbot.definition.ContactsContainer.contacts"]},{"name":"abstract val container: EventListenerContainer","description":"love.forte.simbot.event.EventListenerHandle.container","location":"simbot-api/love.forte.simbot.event/-event-listener-handle/container.html","searchKeys":["container","abstract val container: EventListenerContainer","love.forte.simbot.event.EventListenerHandle.container"]},{"name":"abstract val content: Any?","description":"love.forte.simbot.event.EventResult.content","location":"simbot-api/love.forte.simbot.event/-event-result/content.html","searchKeys":["content","abstract val content: Any?","love.forte.simbot.event.EventResult.content"]},{"name":"abstract val createTime: Timestamp","description":"love.forte.simbot.definition.OrganizationInfo.createTime","location":"simbot-api/love.forte.simbot.definition/-organization-info/create-time.html","searchKeys":["createTime","abstract val createTime: Timestamp","love.forte.simbot.definition.OrganizationInfo.createTime"]},{"name":"abstract val currentChannel: Int","description":"love.forte.simbot.definition.GuildInfo.currentChannel","location":"simbot-api/love.forte.simbot.definition/-guild-info/current-channel.html","searchKeys":["currentChannel","abstract val currentChannel: Int","love.forte.simbot.definition.GuildInfo.currentChannel"]},{"name":"abstract val currentMember: Int","description":"love.forte.simbot.definition.OrganizationInfo.currentMember","location":"simbot-api/love.forte.simbot.definition/-organization-info/current-member.html","searchKeys":["currentMember","abstract val currentMember: Int","love.forte.simbot.definition.OrganizationInfo.currentMember"]},{"name":"abstract val description: String","description":"love.forte.simbot.definition.OrganizationInfo.description","location":"simbot-api/love.forte.simbot.definition/-organization-info/description.html","searchKeys":["description","abstract val description: String","love.forte.simbot.definition.OrganizationInfo.description"]},{"name":"abstract val environment: Application.Environment","description":"love.forte.simbot.application.Application.environment","location":"simbot-api/love.forte.simbot.application/-application/environment.html","searchKeys":["environment","abstract val environment: Application.Environment","love.forte.simbot.application.Application.environment"]},{"name":"abstract val event: Event","description":"love.forte.simbot.event.EventProcessingContext.event","location":"simbot-api/love.forte.simbot.event/-event-processing-context/event.html","searchKeys":["event","abstract val event: Event","love.forte.simbot.event.EventProcessingContext.event"]},{"name":"abstract val eventContext: EventProcessingContext","description":"love.forte.simbot.event.EventInterceptor.Context.eventContext","location":"simbot-api/love.forte.simbot.event/-event-interceptor/-context/event-context.html","searchKeys":["eventContext","abstract val eventContext: EventProcessingContext","love.forte.simbot.event.EventInterceptor.Context.eventContext"]},{"name":"abstract val eventListenerManager: EventListenerManager","description":"love.forte.simbot.application.Application.eventListenerManager","location":"simbot-api/love.forte.simbot.application/-application/event-listener-manager.html","searchKeys":["eventListenerManager","abstract val eventListenerManager: EventListenerManager","love.forte.simbot.application.Application.eventListenerManager"]},{"name":"abstract val eventProcessor: EventProcessor","description":"love.forte.simbot.bot.Bot.eventProcessor","location":"simbot-api/love.forte.simbot.bot/-bot/event-processor.html","searchKeys":["eventProcessor","abstract val eventProcessor: EventProcessor","love.forte.simbot.bot.Bot.eventProcessor"]},{"name":"abstract val format: SerialFormat","description":"love.forte.simbot.resources.SerialFormatDeserializableResourceDecoder.format","location":"simbot-api/love.forte.simbot.resources/-serial-format-deserializable-resource-decoder/format.html","searchKeys":["format","abstract val format: SerialFormat","love.forte.simbot.resources.SerialFormatDeserializableResourceDecoder.format"]},{"name":"abstract val friends: Items<Friend>","description":"love.forte.simbot.definition.FriendsContainer.friends","location":"simbot-api/love.forte.simbot.definition/-friends-container/friends.html","searchKeys":["friends","abstract val friends: Items<Friend>","love.forte.simbot.definition.FriendsContainer.friends"]},{"name":"abstract val groups: Items<Group>","description":"love.forte.simbot.definition.GroupsContainer.groups","location":"simbot-api/love.forte.simbot.definition/-groups-container/groups.html","searchKeys":["groups","abstract val groups: Items<Group>","love.forte.simbot.definition.GroupsContainer.groups"]},{"name":"abstract val guildId: ID","description":"love.forte.simbot.definition.ChannelInfo.guildId","location":"simbot-api/love.forte.simbot.definition/-channel-info/guild-id.html","searchKeys":["guildId","abstract val guildId: ID","love.forte.simbot.definition.ChannelInfo.guildId"]},{"name":"abstract val guilds: Items<Guild>","description":"love.forte.simbot.definition.GuildsContainer.guilds","location":"simbot-api/love.forte.simbot.definition/-guilds-container/guilds.html","searchKeys":["guilds","abstract val guilds: Items<Guild>","love.forte.simbot.definition.GuildsContainer.guilds"]},{"name":"abstract val icon: String","description":"love.forte.simbot.definition.OrganizationInfo.icon","location":"simbot-api/love.forte.simbot.definition/-organization-info/icon.html","searchKeys":["icon","abstract val icon: String","love.forte.simbot.definition.OrganizationInfo.icon"]},{"name":"abstract val id: CharSequenceID","description":"love.forte.simbot.event.Event.Key.id","location":"simbot-api/love.forte.simbot.event/-event/-key/id.html","searchKeys":["id","abstract val id: CharSequenceID","love.forte.simbot.event.Event.Key.id"]},{"name":"abstract val id: ID","description":"love.forte.simbot.definition.IDContainer.id","location":"simbot-api/love.forte.simbot.definition/-i-d-container/id.html","searchKeys":["id","abstract val id: ID","love.forte.simbot.definition.IDContainer.id"]},{"name":"abstract val id: String","description":"love.forte.simbot.definition.IdValueContainer.id","location":"simbot-api/love.forte.simbot.definition/-id-value-container/id.html","searchKeys":["id","abstract val id: String","love.forte.simbot.definition.IdValueContainer.id"]},{"name":"abstract val isActive: Boolean","description":"love.forte.simbot.ability.Switchable.isActive","location":"simbot-api/love.forte.simbot.ability/-switchable/is-active.html","searchKeys":["isActive","abstract val isActive: Boolean","love.forte.simbot.ability.Switchable.isActive"]},{"name":"abstract val isAdmin: Boolean","description":"love.forte.simbot.definition.Role.isAdmin","location":"simbot-api/love.forte.simbot.definition/-role/is-admin.html","searchKeys":["isAdmin","abstract val isAdmin: Boolean","love.forte.simbot.definition.Role.isAdmin"]},{"name":"abstract val isCancelled: Boolean","description":"love.forte.simbot.ability.Switchable.isCancelled","location":"simbot-api/love.forte.simbot.ability/-switchable/is-cancelled.html","searchKeys":["isCancelled","abstract val isCancelled: Boolean","love.forte.simbot.ability.Switchable.isCancelled"]},{"name":"abstract val isCompleted: Boolean","description":"love.forte.simbot.event.ContinuousSessionProvider.isCompleted","location":"simbot-api/love.forte.simbot.event/-continuous-session-provider/is-completed.html","searchKeys":["isCompleted","abstract val isCompleted: Boolean","love.forte.simbot.event.ContinuousSessionProvider.isCompleted"]},{"name":"abstract val isCompleted: Boolean","description":"love.forte.simbot.utils.LazyValue.isCompleted","location":"simbot-api/love.forte.simbot.utils/-lazy-value/is-completed.html","searchKeys":["isCompleted","abstract val isCompleted: Boolean","love.forte.simbot.utils.LazyValue.isCompleted"]},{"name":"abstract val isExists: Boolean","description":"love.forte.simbot.event.EventListenerHandle.isExists","location":"simbot-api/love.forte.simbot.event/-event-listener-handle/is-exists.html","searchKeys":["isExists","abstract val isExists: Boolean","love.forte.simbot.event.EventListenerHandle.isExists"]},{"name":"abstract val isStarted: Boolean","description":"love.forte.simbot.ability.Switchable.isStarted","location":"simbot-api/love.forte.simbot.ability/-switchable/is-started.html","searchKeys":["isStarted","abstract val isStarted: Boolean","love.forte.simbot.ability.Switchable.isStarted"]},{"name":"abstract val isSuccess: Boolean","description":"love.forte.simbot.message.MessageReceipt.isSuccess","location":"simbot-api/love.forte.simbot.message/-message-receipt/is-success.html","searchKeys":["isSuccess","abstract val isSuccess: Boolean","love.forte.simbot.message.MessageReceipt.isSuccess"]},{"name":"abstract val isTruncated: Boolean","description":"love.forte.simbot.event.EventResult.isTruncated","location":"simbot-api/love.forte.simbot.event/-event-result/is-truncated.html","searchKeys":["isTruncated","abstract val isTruncated: Boolean","love.forte.simbot.event.EventResult.isTruncated"]},{"name":"abstract val joinTime: Timestamp","description":"love.forte.simbot.definition.MemberInfo.joinTime","location":"simbot-api/love.forte.simbot.definition/-member-info/join-time.html","searchKeys":["joinTime","abstract val joinTime: Timestamp","love.forte.simbot.definition.MemberInfo.joinTime"]},{"name":"abstract val key: Attribute<C>","description":"love.forte.simbot.ComponentFactory.key","location":"simbot-api/love.forte.simbot/-component-factory/key.html","searchKeys":["key","abstract val key: Attribute<C>","love.forte.simbot.ComponentFactory.key"]},{"name":"abstract val key: Attribute<P>","description":"love.forte.simbot.application.EventProviderFactory.key","location":"simbot-api/love.forte.simbot.application/-event-provider-factory/key.html","searchKeys":["key","abstract val key: Attribute<P>","love.forte.simbot.application.EventProviderFactory.key"]},{"name":"abstract val key: Event.Key<out Event>","description":"love.forte.simbot.event.Event.key","location":"simbot-api/love.forte.simbot.event/-event/key.html","searchKeys":["key","abstract val key: Event.Key<out Event>","love.forte.simbot.event.Event.key"]},{"name":"abstract val key: Message.Key<E>","description":"love.forte.simbot.message.Message.Element.key","location":"simbot-api/love.forte.simbot.message/-message/-element/key.html","searchKeys":["key","abstract val key: Message.Key<E>","love.forte.simbot.message.Message.Element.key"]},{"name":"abstract val limit: Int","description":"love.forte.simbot.Limiter.limit","location":"simbot-api/love.forte.simbot/-limiter/limit.html","searchKeys":["limit","abstract val limit: Int","love.forte.simbot.Limiter.limit"]},{"name":"abstract val listener: EventListener","description":"love.forte.simbot.event.EventListenerProcessingContext.listener","location":"simbot-api/love.forte.simbot.event/-event-listener-processing-context/listener.html","searchKeys":["listener","abstract val listener: EventListener","love.forte.simbot.event.EventListenerProcessingContext.listener"]},{"name":"abstract val listener: EventListener","description":"love.forte.simbot.event.EventListenerRegistrationDescription.listener","location":"simbot-api/love.forte.simbot.event/-event-listener-registration-description/listener.html","searchKeys":["listener","abstract val listener: EventListener","love.forte.simbot.event.EventListenerRegistrationDescription.listener"]},{"name":"abstract val listenerHandle: EventListenerHandle","description":"love.forte.simbot.event.EventListenerProcessingContext.listenerHandle","location":"simbot-api/love.forte.simbot.event/-event-listener-processing-context/listener-handle.html","searchKeys":["listenerHandle","abstract val listenerHandle: EventListenerHandle","love.forte.simbot.event.EventListenerProcessingContext.listenerHandle"]},{"name":"abstract val listeners: Sequence<EventListener>","description":"love.forte.simbot.event.EventListenerContainer.listeners","location":"simbot-api/love.forte.simbot.event/-event-listener-container/listeners.html","searchKeys":["listeners","abstract val listeners: Sequence<EventListener>","love.forte.simbot.event.EventListenerContainer.listeners"]},{"name":"abstract val logger: Logger","description":"love.forte.simbot.LoggerContainer.logger","location":"simbot-api/love.forte.simbot/-logger-container/logger.html","searchKeys":["logger","abstract val logger: Logger","love.forte.simbot.LoggerContainer.logger"]},{"name":"abstract val manager: BotManager<out Bot>","description":"love.forte.simbot.bot.Bot.manager","location":"simbot-api/love.forte.simbot.bot/-bot/manager.html","searchKeys":["manager","abstract val manager: BotManager<out Bot>","love.forte.simbot.bot.Bot.manager"]},{"name":"abstract val maximumChannel: Int","description":"love.forte.simbot.definition.GuildInfo.maximumChannel","location":"simbot-api/love.forte.simbot.definition/-guild-info/maximum-channel.html","searchKeys":["maximumChannel","abstract val maximumChannel: Int","love.forte.simbot.definition.GuildInfo.maximumChannel"]},{"name":"abstract val maximumMember: Int","description":"love.forte.simbot.definition.OrganizationInfo.maximumMember","location":"simbot-api/love.forte.simbot.definition/-organization-info/maximum-member.html","searchKeys":["maximumMember","abstract val maximumMember: Int","love.forte.simbot.definition.OrganizationInfo.maximumMember"]},{"name":"abstract val members: Items<Member>","description":"love.forte.simbot.definition.Organization.members","location":"simbot-api/love.forte.simbot.definition/-organization/members.html","searchKeys":["members","abstract val members: Items<Member>","love.forte.simbot.definition.Organization.members"]},{"name":"abstract val message: String?","description":"love.forte.simbot.SimbotError.message","location":"simbot-api/love.forte.simbot/-simbot-error/message.html","searchKeys":["message","abstract val message: String?","love.forte.simbot.SimbotError.message"]},{"name":"abstract val message: String?","description":"love.forte.simbot.event.RequestEvent.message","location":"simbot-api/love.forte.simbot.event/-request-event/message.html","searchKeys":["message","abstract val message: String?","love.forte.simbot.event.RequestEvent.message"]},{"name":"abstract val messageContent: MessageContent","description":"love.forte.simbot.message.MessageContainer.messageContent","location":"simbot-api/love.forte.simbot.message/-message-container/message-content.html","searchKeys":["messageContent","abstract val messageContent: MessageContent","love.forte.simbot.message.MessageContainer.messageContent"]},{"name":"abstract val messageId: ID","description":"love.forte.simbot.message.MessageContent.messageId","location":"simbot-api/love.forte.simbot.message/-message-content/message-id.html","searchKeys":["messageId","abstract val messageId: ID","love.forte.simbot.message.MessageContent.messageId"]},{"name":"abstract val messages: Messages","description":"love.forte.simbot.message.MessageContent.messages","location":"simbot-api/love.forte.simbot.message/-message-content/messages.html","searchKeys":["messages","abstract val messages: Messages","love.forte.simbot.message.MessageContent.messages"]},{"name":"abstract val messagesSerializersModule: SerializersModule","description":"love.forte.simbot.event.EventProcessingContext.messagesSerializersModule","location":"simbot-api/love.forte.simbot.event/-event-processing-context/messages-serializers-module.html","searchKeys":["messagesSerializersModule","abstract val messagesSerializersModule: SerializersModule","love.forte.simbot.event.EventProcessingContext.messagesSerializersModule"]},{"name":"abstract val millisecond: Long","description":"love.forte.simbot.Timestamp.millisecond","location":"simbot-api/love.forte.simbot/-timestamp/millisecond.html","searchKeys":["millisecond","abstract val millisecond: Long","love.forte.simbot.Timestamp.millisecond"]},{"name":"abstract val name: String","description":"love.forte.simbot.definition.Category.name","location":"simbot-api/love.forte.simbot.definition/-category/name.html","searchKeys":["name","abstract val name: String","love.forte.simbot.definition.Category.name"]},{"name":"abstract val name: String","description":"love.forte.simbot.definition.OrganizationInfo.name","location":"simbot-api/love.forte.simbot.definition/-organization-info/name.html","searchKeys":["name","abstract val name: String","love.forte.simbot.definition.OrganizationInfo.name"]},{"name":"abstract val name: String","description":"love.forte.simbot.definition.Role.name","location":"simbot-api/love.forte.simbot.definition/-role/name.html","searchKeys":["name","abstract val name: String","love.forte.simbot.definition.Role.name"]},{"name":"abstract val name: String","description":"love.forte.simbot.resources.Resource.name","location":"simbot-api/love.forte.simbot.resources/-resource/name.html","searchKeys":["name","abstract val name: String","love.forte.simbot.resources.Resource.name"]},{"name":"abstract val nickname: String","description":"love.forte.simbot.definition.MemberInfo.nickname","location":"simbot-api/love.forte.simbot.definition/-member-info/nickname.html","searchKeys":["nickname","abstract val nickname: String","love.forte.simbot.definition.MemberInfo.nickname"]},{"name":"abstract val offset: Int","description":"love.forte.simbot.Limiter.offset","location":"simbot-api/love.forte.simbot/-limiter/offset.html","searchKeys":["offset","abstract val offset: Int","love.forte.simbot.Limiter.offset"]},{"name":"abstract val ownerId: ID","description":"love.forte.simbot.definition.OrganizationInfo.ownerId","location":"simbot-api/love.forte.simbot.definition/-organization-info/owner-id.html","searchKeys":["ownerId","abstract val ownerId: ID","love.forte.simbot.definition.OrganizationInfo.ownerId"]},{"name":"abstract val parents: Set<Event.Key<*>>","description":"love.forte.simbot.event.Event.Key.parents","location":"simbot-api/love.forte.simbot.event/-event/-key/parents.html","searchKeys":["parents","abstract val parents: Set<Event.Key<*>>","love.forte.simbot.event.Event.Key.parents"]},{"name":"abstract val providers: List<EventProvider>","description":"love.forte.simbot.application.Application.providers","location":"simbot-api/love.forte.simbot.application/-application/providers.html","searchKeys":["providers","abstract val providers: List<EventProvider>","love.forte.simbot.application.Application.providers"]},{"name":"abstract val providers: List<EventProvider>","description":"love.forte.simbot.application.BotRegistrar.providers","location":"simbot-api/love.forte.simbot.application/-bot-registrar/providers.html","searchKeys":["providers","abstract val providers: List<EventProvider>","love.forte.simbot.application.BotRegistrar.providers"]},{"name":"abstract val reactedId: ID","description":"love.forte.simbot.event.MessageReactedEvent.reactedId","location":"simbot-api/love.forte.simbot.event/-message-reacted-event/reacted-id.html","searchKeys":["reactedId","abstract val reactedId: ID","love.forte.simbot.event.MessageReactedEvent.reactedId"]},{"name":"abstract val reactorId: ID","description":"love.forte.simbot.event.MessageReactedEvent.reactorId","location":"simbot-api/love.forte.simbot.event/-message-reacted-event/reactor-id.html","searchKeys":["reactorId","abstract val reactorId: ID","love.forte.simbot.event.MessageReactedEvent.reactorId"]},{"name":"abstract val registrar: ComponentFactory<C, Config>","description":"love.forte.simbot.ComponentAutoRegistrarFactory.registrar","location":"simbot-api/love.forte.simbot/-component-auto-registrar-factory/registrar.html","searchKeys":["registrar","abstract val registrar: ComponentFactory<C, Config>","love.forte.simbot.ComponentAutoRegistrarFactory.registrar"]},{"name":"abstract val registrar: EventProviderFactory<P, Config>","description":"love.forte.simbot.application.EventProviderAutoRegistrarFactory.registrar","location":"simbot-api/love.forte.simbot.application/-event-provider-auto-registrar-factory/registrar.html","searchKeys":["registrar","abstract val registrar: EventProviderFactory<P, Config>","love.forte.simbot.application.EventProviderAutoRegistrarFactory.registrar"]},{"name":"abstract val remark: String?","description":"love.forte.simbot.definition.FriendInfo.remark","location":"simbot-api/love.forte.simbot.definition/-friend-info/remark.html","searchKeys":["remark","abstract val remark: String?","love.forte.simbot.definition.FriendInfo.remark"]},{"name":"abstract val resultsView: IndexAccessView<EventResult>","description":"love.forte.simbot.event.EventProcessingContext.resultsView","location":"simbot-api/love.forte.simbot.event/-event-processing-context/results-view.html","searchKeys":["resultsView","abstract val resultsView: IndexAccessView<EventResult>","love.forte.simbot.event.EventProcessingContext.resultsView"]},{"name":"abstract val resultsView: IndexAccessView<EventResult>","description":"love.forte.simbot.event.EventProcessingResult.resultsView","location":"simbot-api/love.forte.simbot.event/-event-processing-result/results-view.html","searchKeys":["resultsView","abstract val resultsView: IndexAccessView<EventResult>","love.forte.simbot.event.EventProcessingResult.resultsView"]},{"name":"abstract val roles: Items<Role>","description":"love.forte.simbot.definition.Member.roles","location":"simbot-api/love.forte.simbot.definition/-member/roles.html","searchKeys":["roles","abstract val roles: Items<Role>","love.forte.simbot.definition.Member.roles"]},{"name":"abstract val roles: Items<Role>","description":"love.forte.simbot.definition.Organization.roles","location":"simbot-api/love.forte.simbot.definition/-organization/roles.html","searchKeys":["roles","abstract val roles: Items<Role>","love.forte.simbot.definition.Organization.roles"]},{"name":"abstract val second: Long","description":"love.forte.simbot.Timestamp.second","location":"simbot-api/love.forte.simbot/-timestamp/second.html","searchKeys":["second","abstract val second: Long","love.forte.simbot.Timestamp.second"]},{"name":"abstract val serializersModule: SerializersModule","description":"love.forte.simbot.application.Application.Environment.serializersModule","location":"simbot-api/love.forte.simbot.application/-application/-environment/serializers-module.html","searchKeys":["serializersModule","abstract val serializersModule: SerializersModule","love.forte.simbot.application.Application.Environment.serializersModule"]},{"name":"abstract val size: Int","description":"love.forte.simbot.message.AggregatedMessageReceipt.size","location":"simbot-api/love.forte.simbot.message/-aggregated-message-receipt/size.html","searchKeys":["size","abstract val size: Int","love.forte.simbot.message.AggregatedMessageReceipt.size"]},{"name":"abstract val size: Int","description":"love.forte.simbot.utils.view.View.size","location":"simbot-api/love.forte.simbot.utils.view/-view/size.html","searchKeys":["size","abstract val size: Int","love.forte.simbot.utils.view.View.size"]},{"name":"abstract val text: String","description":"love.forte.simbot.message.PlainText.text","location":"simbot-api/love.forte.simbot.message/-plain-text/text.html","searchKeys":["text","abstract val text: String","love.forte.simbot.message.PlainText.text"]},{"name":"abstract val timestamp: Timestamp","description":"love.forte.simbot.event.Event.timestamp","location":"simbot-api/love.forte.simbot.event/-event/timestamp.html","searchKeys":["timestamp","abstract val timestamp: Timestamp","love.forte.simbot.event.Event.timestamp"]},{"name":"abstract val type: RequestEvent.Type","description":"love.forte.simbot.event.RequestEvent.type","location":"simbot-api/love.forte.simbot.event/-request-event/type.html","searchKeys":["type","abstract val type: RequestEvent.Type","love.forte.simbot.event.RequestEvent.type"]},{"name":"abstract val url: String","description":"love.forte.simbot.message.RemoteResource.url","location":"simbot-api/love.forte.simbot.message/-remote-resource/url.html","searchKeys":["url","abstract val url: String","love.forte.simbot.message.RemoteResource.url"]},{"name":"abstract val username: String","description":"love.forte.simbot.definition.UserInfo.username","location":"simbot-api/love.forte.simbot.definition/-user-info/username.html","searchKeys":["username","abstract val username: String","love.forte.simbot.definition.UserInfo.username"]},{"name":"abstract val value: N","description":"love.forte.simbot.NumericalID.value","location":"simbot-api/love.forte.simbot/-numerical-i-d/value.html","searchKeys":["value","abstract val value: N","love.forte.simbot.NumericalID.value"]},{"name":"abstract val value: Result<T>","description":"love.forte.simbot.utils.LazyValue.value","location":"simbot-api/love.forte.simbot.utils/-lazy-value/value.html","searchKeys":["value","abstract val value: Result<T>","love.forte.simbot.utils.LazyValue.value"]},{"name":"abstract var textContent: String?","description":"love.forte.simbot.event.EventListenerProcessingContext.textContent","location":"simbot-api/love.forte.simbot.event/-event-listener-processing-context/text-content.html","searchKeys":["textContent","abstract var textContent: String?","love.forte.simbot.event.EventListenerProcessingContext.textContent"]},{"name":"annotation class Api4J","description":"love.forte.simbot.Api4J","location":"simbot-api/love.forte.simbot/-api4-j/index.html","searchKeys":["Api4J","annotation class Api4J","love.forte.simbot.Api4J"]},{"name":"annotation class ApplicationBuilderDsl","description":"love.forte.simbot.application.ApplicationBuilderDsl","location":"simbot-api/love.forte.simbot.application/-application-builder-dsl/index.html","searchKeys":["ApplicationBuilderDsl","annotation class ApplicationBuilderDsl","love.forte.simbot.application.ApplicationBuilderDsl"]},{"name":"annotation class ApplicationDslBuilderDsl","description":"love.forte.simbot.application.ApplicationDslBuilderDsl","location":"simbot-api/love.forte.simbot.application/-application-dsl-builder-dsl/index.html","searchKeys":["ApplicationDslBuilderDsl","annotation class ApplicationDslBuilderDsl","love.forte.simbot.application.ApplicationDslBuilderDsl"]},{"name":"annotation class BaseEvent","description":"love.forte.simbot.event.BaseEvent","location":"simbot-api/love.forte.simbot.event/-base-event/index.html","searchKeys":["BaseEvent","annotation class BaseEvent","love.forte.simbot.event.BaseEvent"]},{"name":"annotation class BlockingApi","description":"love.forte.simbot.BlockingApi","location":"simbot-api/love.forte.simbot/-blocking-api/index.html","searchKeys":["BlockingApi","annotation class BlockingApi","love.forte.simbot.BlockingApi"]},{"name":"annotation class Bonus","description":"love.forte.simbot.Bonus","location":"simbot-api/love.forte.simbot/-bonus/index.html","searchKeys":["Bonus","annotation class Bonus","love.forte.simbot.Bonus"]},{"name":"annotation class DiscreetSimbotApi","description":"love.forte.simbot.DiscreetSimbotApi","location":"simbot-api/love.forte.simbot/-discreet-simbot-api/index.html","searchKeys":["DiscreetSimbotApi","annotation class DiscreetSimbotApi","love.forte.simbot.DiscreetSimbotApi"]},{"name":"annotation class EventKey(val id: String, val type: KClass<out Event>, val parents: Array<KClass<out Event>>)","description":"love.forte.simbot.event.EventKey","location":"simbot-api/love.forte.simbot.event/-event-key/index.html","searchKeys":["EventKey","annotation class EventKey(val id: String, val type: KClass<out Event>, val parents: Array<KClass<out Event>>)","love.forte.simbot.event.EventKey"]},{"name":"annotation class ExperimentalSimbotApi","description":"love.forte.simbot.ExperimentalSimbotApi","location":"simbot-api/love.forte.simbot/-experimental-simbot-api/index.html","searchKeys":["ExperimentalSimbotApi","annotation class ExperimentalSimbotApi","love.forte.simbot.ExperimentalSimbotApi"]},{"name":"annotation class FragileSimbotApi","description":"love.forte.simbot.FragileSimbotApi","location":"simbot-api/love.forte.simbot/-fragile-simbot-api/index.html","searchKeys":["FragileSimbotApi","annotation class FragileSimbotApi","love.forte.simbot.FragileSimbotApi"]},{"name":"annotation class InternalSimbotApi","description":"love.forte.simbot.InternalSimbotApi","location":"simbot-api/love.forte.simbot/-internal-simbot-api/index.html","searchKeys":["InternalSimbotApi","annotation class InternalSimbotApi","love.forte.simbot.InternalSimbotApi"]},{"name":"annotation class JvmSuspendTrans(val blockingBaseName: String = \"\", val blockingSuffix: String = \"Blocking\", val blockingAsProperty: Boolean = false, val asyncBaseName: String = \"\", val asyncSuffix: String = \"Async\", val asyncAsProperty: Boolean = false)","description":"love.forte.simbot.JvmSuspendTrans","location":"simbot-api/love.forte.simbot/-jvm-suspend-trans/index.html","searchKeys":["JvmSuspendTrans","annotation class JvmSuspendTrans(val blockingBaseName: String = \"\", val blockingSuffix: String = \"Blocking\", val blockingAsProperty: Boolean = false, val asyncBaseName: String = \"\", val asyncSuffix: String = \"Async\", val asyncAsProperty: Boolean = false)","love.forte.simbot.JvmSuspendTrans"]},{"name":"annotation class JvmSuspendTransProperty(val blockingBaseName: String = \"\", val blockingSuffix: String = \"\", val blockingAsProperty: Boolean = true, val asyncBaseName: String = \"\", val asyncSuffix: String = \"Async\", val asyncAsProperty: Boolean = true)","description":"love.forte.simbot.JvmSuspendTransProperty","location":"simbot-api/love.forte.simbot/-jvm-suspend-trans-property/index.html","searchKeys":["JvmSuspendTransProperty","annotation class JvmSuspendTransProperty(val blockingBaseName: String = \"\", val blockingSuffix: String = \"\", val blockingAsProperty: Boolean = true, val asyncBaseName: String = \"\", val asyncSuffix: String = \"Async\", val asyncAsProperty: Boolean = true)","love.forte.simbot.JvmSuspendTransProperty"]},{"name":"annotation class NotSuggestedEvent","description":"love.forte.simbot.NotSuggestedEvent","location":"simbot-api/love.forte.simbot/-not-suggested-event/index.html","searchKeys":["NotSuggestedEvent","annotation class NotSuggestedEvent","love.forte.simbot.NotSuggestedEvent"]},{"name":"class Attribute<T : Any>","description":"love.forte.simbot.Attribute","location":"simbot-api/love.forte.simbot/-attribute/index.html","searchKeys":["Attribute","class Attribute<T : Any>","love.forte.simbot.Attribute"]},{"name":"class AttributeMutableMap(values: MutableMap<Attribute<*>, Any> = mutableMapOf()) : MutableAttributeMap","description":"love.forte.simbot.AttributeMutableMap","location":"simbot-api/love.forte.simbot/-attribute-mutable-map/index.html","searchKeys":["AttributeMutableMap","class AttributeMutableMap(values: MutableMap<Attribute<*>, Any> = mutableMapOf()) : MutableAttributeMap","love.forte.simbot.AttributeMutableMap"]},{"name":"class BigDecimalID(val value: BigDecimal) : ArbitraryNumericalID<BigDecimal> ","description":"love.forte.simbot.BigDecimalID","location":"simbot-api/love.forte.simbot/-big-decimal-i-d/index.html","searchKeys":["BigDecimalID","class BigDecimalID(val value: BigDecimal) : ArbitraryNumericalID<BigDecimal> ","love.forte.simbot.BigDecimalID"]},{"name":"class BigIntegerID(val value: BigInteger) : ArbitraryNumericalID<BigInteger> ","description":"love.forte.simbot.BigIntegerID","location":"simbot-api/love.forte.simbot/-big-integer-i-d/index.html","searchKeys":["BigIntegerID","class BigIntegerID(val value: BigInteger) : ArbitraryNumericalID<BigInteger> ","love.forte.simbot.BigIntegerID"]},{"name":"class ByteArrayBotVerifyInfo(val decoder: BotVerifyInfoDecoder, val name: String, value: ByteArray) : DecoderBotVerifyInfo","description":"love.forte.simbot.bot.ByteArrayBotVerifyInfo","location":"simbot-api/love.forte.simbot.bot/-byte-array-bot-verify-info/index.html","searchKeys":["ByteArrayBotVerifyInfo","class ByteArrayBotVerifyInfo(val decoder: BotVerifyInfoDecoder, val name: String, value: ByteArray) : DecoderBotVerifyInfo","love.forte.simbot.bot.ByteArrayBotVerifyInfo"]},{"name":"class ByteArrayResource(val name: String, byteArray: ByteArray) : StandardResource","description":"love.forte.simbot.resources.ByteArrayResource","location":"simbot-api/love.forte.simbot.resources/-byte-array-resource/index.html","searchKeys":["ByteArrayResource","class ByteArrayResource(val name: String, byteArray: ByteArray) : StandardResource","love.forte.simbot.resources.ByteArrayResource"]},{"name":"class CollectionItems<T>(collection: Collection<T>) : BaseItems<T, CollectionItems<T>> ","description":"love.forte.simbot.utils.item.CollectionItems","location":"simbot-api/love.forte.simbot.utils.item/-collection-items/index.html","searchKeys":["CollectionItems","class CollectionItems<T>(collection: Collection<T>) : BaseItems<T, CollectionItems<T>> ","love.forte.simbot.utils.item.CollectionItems"]},{"name":"class ComponentAlreadyExistsException : SimbotRuntimeException","description":"love.forte.simbot.ComponentAlreadyExistsException","location":"simbot-api/love.forte.simbot/-component-already-exists-exception/index.html","searchKeys":["ComponentAlreadyExistsException","class ComponentAlreadyExistsException : SimbotRuntimeException","love.forte.simbot.ComponentAlreadyExistsException"]},{"name":"class EventListenerProcessingException : EventProcessingException","description":"love.forte.simbot.event.EventListenerProcessingException","location":"simbot-api/love.forte.simbot.event/-event-listener-processing-exception/index.html","searchKeys":["EventListenerProcessingException","class EventListenerProcessingException : EventProcessingException","love.forte.simbot.event.EventListenerProcessingException"]},{"name":"class FileResource(val file: File, val name: String = file.toString(), doClose: () -> Unit = {}) : StandardResource","description":"love.forte.simbot.resources.FileResource","location":"simbot-api/love.forte.simbot.resources/-file-resource/index.html","searchKeys":["FileResource","class FileResource(val file: File, val name: String = file.toString(), doClose: () -> Unit = {}) : StandardResource","love.forte.simbot.resources.FileResource"]},{"name":"class FlowItems<T>(produceScope: CoroutineScope, flowFactory: (Items.PreprocessingProperties) -> Flow<T>) : BaseItems<T, FlowItems<T>> ","description":"love.forte.simbot.utils.item.FlowItems","location":"simbot-api/love.forte.simbot.utils.item/-flow-items/index.html","searchKeys":["FlowItems","class FlowItems<T>(produceScope: CoroutineScope, flowFactory: (Items.PreprocessingProperties) -> Flow<T>) : BaseItems<T, FlowItems<T>> ","love.forte.simbot.utils.item.FlowItems"]},{"name":"class InstantTimestamp : Timestamp","description":"love.forte.simbot.InstantTimestamp","location":"simbot-api/love.forte.simbot/-instant-timestamp/index.html","searchKeys":["InstantTimestamp","class InstantTimestamp : Timestamp","love.forte.simbot.InstantTimestamp"]},{"name":"class JsonBotVerifyInfoDecoder(val format: Json) : StandardStringFormatBotVerifyInfoDecoder","description":"love.forte.simbot.bot.JsonBotVerifyInfoDecoder","location":"simbot-api/love.forte.simbot.bot/-json-bot-verify-info-decoder/index.html","searchKeys":["JsonBotVerifyInfoDecoder","class JsonBotVerifyInfoDecoder(val format: Json) : StandardStringFormatBotVerifyInfoDecoder","love.forte.simbot.bot.JsonBotVerifyInfoDecoder"]},{"name":"class MessagesBuilder constructor(collection: MutableCollection<Message.Element<*>>? = null)","description":"love.forte.simbot.message.MessagesBuilder","location":"simbot-api/love.forte.simbot.message/-messages-builder/index.html","searchKeys":["MessagesBuilder","class MessagesBuilder constructor(collection: MutableCollection<Message.Element<*>>? = null)","love.forte.simbot.message.MessagesBuilder"]},{"name":"class NoSuchComponentException : SimbotRuntimeException","description":"love.forte.simbot.NoSuchComponentException","location":"simbot-api/love.forte.simbot/-no-such-component-exception/index.html","searchKeys":["NoSuchComponentException","class NoSuchComponentException : SimbotRuntimeException","love.forte.simbot.NoSuchComponentException"]},{"name":"class NoSuchEventKeyDefineException : SimbotIllegalStateException","description":"love.forte.simbot.event.NoSuchEventKeyDefineException","location":"simbot-api/love.forte.simbot.event/-no-such-event-key-define-exception/index.html","searchKeys":["NoSuchEventKeyDefineException","class NoSuchEventKeyDefineException : SimbotIllegalStateException","love.forte.simbot.event.NoSuchEventKeyDefineException"]},{"name":"class NotInitializedException : IllegalStateException","description":"love.forte.simbot.utils.LazyValue.NotInitializedException","location":"simbot-api/love.forte.simbot.utils/-lazy-value/-not-initialized-exception/index.html","searchKeys":["NotInitializedException","class NotInitializedException : IllegalStateException","love.forte.simbot.utils.LazyValue.NotInitializedException"]},{"name":"class PathResource(val path: Path, val name: String = path.toString(), doClose: () -> Unit = {}) : StandardResource","description":"love.forte.simbot.resources.PathResource","location":"simbot-api/love.forte.simbot.resources/-path-resource/index.html","searchKeys":["PathResource","class PathResource(val path: Path, val name: String = path.toString(), doClose: () -> Unit = {}) : StandardResource","love.forte.simbot.resources.PathResource"]},{"name":"class PropertiesBotVerifyInfoDecoder(val format: Properties) : StandardSerialFormatBotVerifyInfoDecoder<Properties, Map<String, String>> ","description":"love.forte.simbot.bot.PropertiesBotVerifyInfoDecoder","location":"simbot-api/love.forte.simbot.bot/-properties-bot-verify-info-decoder/index.html","searchKeys":["PropertiesBotVerifyInfoDecoder","class PropertiesBotVerifyInfoDecoder(val format: Properties) : StandardSerialFormatBotVerifyInfoDecoder<Properties, Map<String, String>> ","love.forte.simbot.bot.PropertiesBotVerifyInfoDecoder"]},{"name":"class SequenceItems<T>(sequenceFactory: (Items.PreprocessingProperties) -> Sequence<T>) : BaseItems<T, SequenceItems<T>> ","description":"love.forte.simbot.utils.item.SequenceItems","location":"simbot-api/love.forte.simbot.utils.item/-sequence-items/index.html","searchKeys":["SequenceItems","class SequenceItems<T>(sequenceFactory: (Items.PreprocessingProperties) -> Sequence<T>) : BaseItems<T, SequenceItems<T>> ","love.forte.simbot.utils.item.SequenceItems"]},{"name":"class SimpleBinaryFormatDeserializableResourceDecoder<F : BinaryFormat>(val format: F) : BinaryFormatDeserializableResourceDecoder","description":"love.forte.simbot.resources.SimpleBinaryFormatDeserializableResourceDecoder","location":"simbot-api/love.forte.simbot.resources/-simple-binary-format-deserializable-resource-decoder/index.html","searchKeys":["SimpleBinaryFormatDeserializableResourceDecoder","class SimpleBinaryFormatDeserializableResourceDecoder<F : BinaryFormat>(val format: F) : BinaryFormatDeserializableResourceDecoder","love.forte.simbot.resources.SimpleBinaryFormatDeserializableResourceDecoder"]},{"name":"class SimpleChannelIteratorItems<out T>(channelIteratorFactory: (Items.PreprocessingProperties) -> ChannelIterator<T>) : BaseItems<T, SimpleChannelIteratorItems<T>> ","description":"love.forte.simbot.utils.item.SimpleChannelIteratorItems","location":"simbot-api/love.forte.simbot.utils.item/-simple-channel-iterator-items/index.html","searchKeys":["SimpleChannelIteratorItems","class SimpleChannelIteratorItems<out T>(channelIteratorFactory: (Items.PreprocessingProperties) -> ChannelIterator<T>) : BaseItems<T, SimpleChannelIteratorItems<T>> ","love.forte.simbot.utils.item.SimpleChannelIteratorItems"]},{"name":"class SimpleIteratorItems<out T>(iteratorFactory: (Items.PreprocessingProperties) -> Iterator<T>) : BaseItems<T, SimpleIteratorItems<T>> ","description":"love.forte.simbot.utils.item.SimpleIteratorItems","location":"simbot-api/love.forte.simbot.utils.item/-simple-iterator-items/index.html","searchKeys":["SimpleIteratorItems","class SimpleIteratorItems<out T>(iteratorFactory: (Items.PreprocessingProperties) -> Iterator<T>) : BaseItems<T, SimpleIteratorItems<T>> ","love.forte.simbot.utils.item.SimpleIteratorItems"]},{"name":"class SimpleStringFormatDeserializableResourceDecoder<F : StringFormat>(val format: F) : StringFormatDeserializableResourceDecoder","description":"love.forte.simbot.resources.SimpleStringFormatDeserializableResourceDecoder","location":"simbot-api/love.forte.simbot.resources/-simple-string-format-deserializable-resource-decoder/index.html","searchKeys":["SimpleStringFormatDeserializableResourceDecoder","class SimpleStringFormatDeserializableResourceDecoder<F : StringFormat>(val format: F) : StringFormatDeserializableResourceDecoder","love.forte.simbot.resources.SimpleStringFormatDeserializableResourceDecoder"]},{"name":"class SingleValueItems<T>(value: T) : Items<T> ","description":"love.forte.simbot.utils.item.SingleValueItems","location":"simbot-api/love.forte.simbot.utils.item/-single-value-items/index.html","searchKeys":["SingleValueItems","class SingleValueItems<T>(value: T) : Items<T> ","love.forte.simbot.utils.item.SingleValueItems"]},{"name":"class StreamItems<T> : BaseItems<T, StreamItems<T>> ","description":"love.forte.simbot.utils.item.StreamItems","location":"simbot-api/love.forte.simbot.utils.item/-stream-items/index.html","searchKeys":["StreamItems","class StreamItems<T> : BaseItems<T, StreamItems<T>> ","love.forte.simbot.utils.item.StreamItems"]},{"name":"class TransformItems<B, T>(baseItems: Items<B>, transform: suspend (B) -> T) : Items<T> ","description":"love.forte.simbot.utils.item.TransformItems","location":"simbot-api/love.forte.simbot.utils.item/-transform-items/index.html","searchKeys":["TransformItems","class TransformItems<B, T>(baseItems: Items<B>, transform: suspend (B) -> T) : Items<T> ","love.forte.simbot.utils.item.TransformItems"]},{"name":"class URLResource(val url: URL, val name: String = url.toString()) : StandardResource","description":"love.forte.simbot.resources.URLResource","location":"simbot-api/love.forte.simbot.resources/-u-r-l-resource/index.html","searchKeys":["URLResource","class URLResource(val url: URL, val name: String = url.toString()) : StandardResource","love.forte.simbot.resources.URLResource"]},{"name":"class UnsupportedActionException : ActionException","description":"love.forte.simbot.action.UnsupportedActionException","location":"simbot-api/love.forte.simbot.action/-unsupported-action-exception/index.html","searchKeys":["UnsupportedActionException","class UnsupportedActionException : ActionException","love.forte.simbot.action.UnsupportedActionException"]},{"name":"class WeakMap<K, V>(delegateMap: MutableMap<K, WeakReference<V>>) : MutableMap<K, V> ","description":"love.forte.simbot.utils.WeakMap","location":"simbot-api/love.forte.simbot.utils/-weak-map/index.html","searchKeys":["WeakMap","class WeakMap<K, V>(delegateMap: MutableMap<K, WeakReference<V>>) : MutableMap<K, V> ","love.forte.simbot.utils.WeakMap"]},{"name":"class YamlBotVerifyInfoDecoder(val format: Yaml) : StandardStringFormatBotVerifyInfoDecoder","description":"love.forte.simbot.bot.YamlBotVerifyInfoDecoder","location":"simbot-api/love.forte.simbot.bot/-yaml-bot-verify-info-decoder/index.html","searchKeys":["YamlBotVerifyInfoDecoder","class YamlBotVerifyInfoDecoder(val format: Yaml) : StandardStringFormatBotVerifyInfoDecoder","love.forte.simbot.bot.YamlBotVerifyInfoDecoder"]},{"name":"const val AFTER_1: Int = 1100","description":"love.forte.simbot.PriorityConstant.AFTER_1","location":"simbot-api/love.forte.simbot/-priority-constant/-a-f-t-e-r_1.html","searchKeys":["AFTER_1","const val AFTER_1: Int = 1100","love.forte.simbot.PriorityConstant.AFTER_1"]},{"name":"const val AFTER_2: Int","description":"love.forte.simbot.PriorityConstant.AFTER_2","location":"simbot-api/love.forte.simbot/-priority-constant/-a-f-t-e-r_2.html","searchKeys":["AFTER_2","const val AFTER_2: Int","love.forte.simbot.PriorityConstant.AFTER_2"]},{"name":"const val AFTER_3: Int","description":"love.forte.simbot.PriorityConstant.AFTER_3","location":"simbot-api/love.forte.simbot/-priority-constant/-a-f-t-e-r_3.html","searchKeys":["AFTER_3","const val AFTER_3: Int","love.forte.simbot.PriorityConstant.AFTER_3"]},{"name":"const val AFTER_4: Int","description":"love.forte.simbot.PriorityConstant.AFTER_4","location":"simbot-api/love.forte.simbot/-priority-constant/-a-f-t-e-r_4.html","searchKeys":["AFTER_4","const val AFTER_4: Int","love.forte.simbot.PriorityConstant.AFTER_4"]},{"name":"const val AFTER_5: Int","description":"love.forte.simbot.PriorityConstant.AFTER_5","location":"simbot-api/love.forte.simbot/-priority-constant/-a-f-t-e-r_5.html","searchKeys":["AFTER_5","const val AFTER_5: Int","love.forte.simbot.PriorityConstant.AFTER_5"]},{"name":"const val AFTER_6: Int","description":"love.forte.simbot.PriorityConstant.AFTER_6","location":"simbot-api/love.forte.simbot/-priority-constant/-a-f-t-e-r_6.html","searchKeys":["AFTER_6","const val AFTER_6: Int","love.forte.simbot.PriorityConstant.AFTER_6"]},{"name":"const val AFTER_7: Int","description":"love.forte.simbot.PriorityConstant.AFTER_7","location":"simbot-api/love.forte.simbot/-priority-constant/-a-f-t-e-r_7.html","searchKeys":["AFTER_7","const val AFTER_7: Int","love.forte.simbot.PriorityConstant.AFTER_7"]},{"name":"const val AFTER_8: Int","description":"love.forte.simbot.PriorityConstant.AFTER_8","location":"simbot-api/love.forte.simbot/-priority-constant/-a-f-t-e-r_8.html","searchKeys":["AFTER_8","const val AFTER_8: Int","love.forte.simbot.PriorityConstant.AFTER_8"]},{"name":"const val AFTER_9: Int","description":"love.forte.simbot.PriorityConstant.AFTER_9","location":"simbot-api/love.forte.simbot/-priority-constant/-a-f-t-e-r_9.html","searchKeys":["AFTER_9","const val AFTER_9: Int","love.forte.simbot.PriorityConstant.AFTER_9"]},{"name":"const val COMPONENT_PROPERTIES_KEY: String","description":"love.forte.simbot.bot.BotVerifyInfo.Companion.COMPONENT_PROPERTIES_KEY","location":"simbot-api/love.forte.simbot.bot/-bot-verify-info/-companion/-c-o-m-p-o-n-e-n-t_-p-r-o-p-e-r-t-i-e-s_-k-e-y.html","searchKeys":["COMPONENT_PROPERTIES_KEY","const val COMPONENT_PROPERTIES_KEY: String","love.forte.simbot.bot.BotVerifyInfo.Companion.COMPONENT_PROPERTIES_KEY"]},{"name":"const val DEFAULT_ASYNC: Boolean = false","description":"love.forte.simbot.event.EventListenerRegistrationDescription.Companion.DEFAULT_ASYNC","location":"simbot-api/love.forte.simbot.event/-event-listener-registration-description/-companion/-d-e-f-a-u-l-t_-a-s-y-n-c.html","searchKeys":["DEFAULT_ASYNC","const val DEFAULT_ASYNC: Boolean = false","love.forte.simbot.event.EventListenerRegistrationDescription.Companion.DEFAULT_ASYNC"]},{"name":"const val DEFAULT_PRIORITY: Int","description":"love.forte.simbot.event.EventListenerRegistrationDescription.Companion.DEFAULT_PRIORITY","location":"simbot-api/love.forte.simbot.event/-event-listener-registration-description/-companion/-d-e-f-a-u-l-t_-p-r-i-o-r-i-t-y.html","searchKeys":["DEFAULT_PRIORITY","const val DEFAULT_PRIORITY: Int","love.forte.simbot.event.EventListenerRegistrationDescription.Companion.DEFAULT_PRIORITY"]},{"name":"const val FIRST: Int = 0","description":"love.forte.simbot.PriorityConstant.FIRST","location":"simbot-api/love.forte.simbot/-priority-constant/-f-i-r-s-t.html","searchKeys":["FIRST","const val FIRST: Int = 0","love.forte.simbot.PriorityConstant.FIRST"]},{"name":"const val ID_VALUE: String","description":"love.forte.simbot.event.Event.Root.ID_VALUE","location":"simbot-api/love.forte.simbot.event/-event/-root/-i-d_-v-a-l-u-e.html","searchKeys":["ID_VALUE","const val ID_VALUE: String","love.forte.simbot.event.Event.Root.ID_VALUE"]},{"name":"const val LAST: Int","description":"love.forte.simbot.PriorityConstant.LAST","location":"simbot-api/love.forte.simbot/-priority-constant/-l-a-s-t.html","searchKeys":["LAST","const val LAST: Int","love.forte.simbot.PriorityConstant.LAST"]},{"name":"const val NORMAL: Int = 500","description":"love.forte.simbot.PriorityConstant.NORMAL","location":"simbot-api/love.forte.simbot/-priority-constant/-n-o-r-m-a-l.html","searchKeys":["NORMAL","const val NORMAL: Int = 500","love.forte.simbot.PriorityConstant.NORMAL"]},{"name":"const val PRIORITIZED_1: Int = 10","description":"love.forte.simbot.PriorityConstant.PRIORITIZED_1","location":"simbot-api/love.forte.simbot/-priority-constant/-p-r-i-o-r-i-t-i-z-e-d_1.html","searchKeys":["PRIORITIZED_1","const val PRIORITIZED_1: Int = 10","love.forte.simbot.PriorityConstant.PRIORITIZED_1"]},{"name":"const val PRIORITIZED_2: Int","description":"love.forte.simbot.PriorityConstant.PRIORITIZED_2","location":"simbot-api/love.forte.simbot/-priority-constant/-p-r-i-o-r-i-t-i-z-e-d_2.html","searchKeys":["PRIORITIZED_2","const val PRIORITIZED_2: Int","love.forte.simbot.PriorityConstant.PRIORITIZED_2"]},{"name":"const val PRIORITIZED_3: Int","description":"love.forte.simbot.PriorityConstant.PRIORITIZED_3","location":"simbot-api/love.forte.simbot/-priority-constant/-p-r-i-o-r-i-t-i-z-e-d_3.html","searchKeys":["PRIORITIZED_3","const val PRIORITIZED_3: Int","love.forte.simbot.PriorityConstant.PRIORITIZED_3"]},{"name":"const val PRIORITIZED_4: Int","description":"love.forte.simbot.PriorityConstant.PRIORITIZED_4","location":"simbot-api/love.forte.simbot/-priority-constant/-p-r-i-o-r-i-t-i-z-e-d_4.html","searchKeys":["PRIORITIZED_4","const val PRIORITIZED_4: Int","love.forte.simbot.PriorityConstant.PRIORITIZED_4"]},{"name":"const val PRIORITIZED_5: Int","description":"love.forte.simbot.PriorityConstant.PRIORITIZED_5","location":"simbot-api/love.forte.simbot/-priority-constant/-p-r-i-o-r-i-t-i-z-e-d_5.html","searchKeys":["PRIORITIZED_5","const val PRIORITIZED_5: Int","love.forte.simbot.PriorityConstant.PRIORITIZED_5"]},{"name":"const val PRIORITIZED_6: Int","description":"love.forte.simbot.PriorityConstant.PRIORITIZED_6","location":"simbot-api/love.forte.simbot/-priority-constant/-p-r-i-o-r-i-t-i-z-e-d_6.html","searchKeys":["PRIORITIZED_6","const val PRIORITIZED_6: Int","love.forte.simbot.PriorityConstant.PRIORITIZED_6"]},{"name":"const val PRIORITIZED_7: Int","description":"love.forte.simbot.PriorityConstant.PRIORITIZED_7","location":"simbot-api/love.forte.simbot/-priority-constant/-p-r-i-o-r-i-t-i-z-e-d_7.html","searchKeys":["PRIORITIZED_7","const val PRIORITIZED_7: Int","love.forte.simbot.PriorityConstant.PRIORITIZED_7"]},{"name":"const val PRIORITIZED_8: Int","description":"love.forte.simbot.PriorityConstant.PRIORITIZED_8","location":"simbot-api/love.forte.simbot/-priority-constant/-p-r-i-o-r-i-t-i-z-e-d_8.html","searchKeys":["PRIORITIZED_8","const val PRIORITIZED_8: Int","love.forte.simbot.PriorityConstant.PRIORITIZED_8"]},{"name":"const val PRIORITIZED_9: Int","description":"love.forte.simbot.PriorityConstant.PRIORITIZED_9","location":"simbot-api/love.forte.simbot/-priority-constant/-p-r-i-o-r-i-t-i-z-e-d_9.html","searchKeys":["PRIORITIZED_9","const val PRIORITIZED_9: Int","love.forte.simbot.PriorityConstant.PRIORITIZED_9"]},{"name":"data class At constructor(val target: ID, val type: String = \"user\", val originContent: String = \"@\") : BaseStandardMessage<At> ","description":"love.forte.simbot.message.At","location":"simbot-api/love.forte.simbot.message/-at/index.html","searchKeys":["At","data class At constructor(val target: ID, val type: String = \"user\", val originContent: String = \"@\") : BaseStandardMessage<At> ","love.forte.simbot.message.At"]},{"name":"data class CharSequenceID(val value: CharSequence) : ID","description":"love.forte.simbot.CharSequenceID","location":"simbot-api/love.forte.simbot/-char-sequence-i-d/index.html","searchKeys":["CharSequenceID","data class CharSequenceID(val value: CharSequence) : ID","love.forte.simbot.CharSequenceID"]},{"name":"data class ComponentModel(val component: String? = null)","description":"love.forte.simbot.bot.ComponentModel","location":"simbot-api/love.forte.simbot.bot/-component-model/index.html","searchKeys":["ComponentModel","data class ComponentModel(val component: String? = null)","love.forte.simbot.bot.ComponentModel"]},{"name":"data class DoubleID(val number: Double) : NumericalID<Double> ","description":"love.forte.simbot.DoubleID","location":"simbot-api/love.forte.simbot/-double-i-d/index.html","searchKeys":["DoubleID","data class DoubleID(val number: Double) : NumericalID<Double> ","love.forte.simbot.DoubleID"]},{"name":"data class Emoji(val id: ID) : StandardMessage<Emoji> ","description":"love.forte.simbot.message.Emoji","location":"simbot-api/love.forte.simbot.message/-emoji/index.html","searchKeys":["Emoji","data class Emoji(val id: ID) : StandardMessage<Emoji> ","love.forte.simbot.message.Emoji"]},{"name":"data class Face(val id: ID) : StandardMessage<Face> ","description":"love.forte.simbot.message.Face","location":"simbot-api/love.forte.simbot.message/-face/index.html","searchKeys":["Face","data class Face(val id: ID) : StandardMessage<Face> ","love.forte.simbot.message.Face"]},{"name":"data class FloatID(val number: Float) : NumericalID<Float> ","description":"love.forte.simbot.FloatID","location":"simbot-api/love.forte.simbot/-float-i-d/index.html","searchKeys":["FloatID","data class FloatID(val number: Float) : NumericalID<Float> ","love.forte.simbot.FloatID"]},{"name":"data class IntID(val number: Int) : NumericalID<Int> ","description":"love.forte.simbot.IntID","location":"simbot-api/love.forte.simbot/-int-i-d/index.html","searchKeys":["IntID","data class IntID(val number: Int) : NumericalID<Int> ","love.forte.simbot.IntID"]},{"name":"data class LongID(val number: Long) : NumericalID<Long> ","description":"love.forte.simbot.LongID","location":"simbot-api/love.forte.simbot/-long-i-d/index.html","searchKeys":["LongID","data class LongID(val number: Long) : NumericalID<Long> ","love.forte.simbot.LongID"]},{"name":"data class PreprocessingProperties","description":"love.forte.simbot.utils.item.Items.PreprocessingProperties","location":"simbot-api/love.forte.simbot.utils.item/-items/-preprocessing-properties/index.html","searchKeys":["PreprocessingProperties","data class PreprocessingProperties","love.forte.simbot.utils.item.Items.PreprocessingProperties"]},{"name":"data class ResourceImage constructor(val id: ID, _resource: Resource) : Image<ResourceImage> ","description":"love.forte.simbot.message.ResourceImage","location":"simbot-api/love.forte.simbot.message/-resource-image/index.html","searchKeys":["ResourceImage","data class ResourceImage constructor(val id: ID, _resource: Resource) : Image<ResourceImage> ","love.forte.simbot.message.ResourceImage"]},{"name":"data class SimpleCategory : Category","description":"love.forte.simbot.definition.SimpleCategory","location":"simbot-api/love.forte.simbot.definition/-simple-category/index.html","searchKeys":["SimpleCategory","data class SimpleCategory : Category","love.forte.simbot.definition.SimpleCategory"]},{"name":"enum ActionType : Enum<ActionType> ","description":"love.forte.simbot.action.ActionType","location":"simbot-api/love.forte.simbot.action/-action-type/index.html","searchKeys":["ActionType","enum ActionType : Enum<ActionType> ","love.forte.simbot.action.ActionType"]},{"name":"enum Point : Enum<EventListenerInterceptor.Point> ","description":"love.forte.simbot.event.EventListenerInterceptor.Point","location":"simbot-api/love.forte.simbot.event/-event-listener-interceptor/-point/index.html","searchKeys":["Point","enum Point : Enum<EventListenerInterceptor.Point> ","love.forte.simbot.event.EventListenerInterceptor.Point"]},{"name":"enum Type : Enum<RequestEvent.Type> ","description":"love.forte.simbot.event.RequestEvent.Type","location":"simbot-api/love.forte.simbot.event/-request-event/-type/index.html","searchKeys":["Type","enum Type : Enum<RequestEvent.Type> ","love.forte.simbot.event.RequestEvent.Type"]},{"name":"fun $(value: AtomicInteger): ID","description":"love.forte.simbot.ID.Companion.$","location":"simbot-api/love.forte.simbot/-i-d/-companion/$.html","searchKeys":["$","fun $(value: AtomicInteger): ID","love.forte.simbot.ID.Companion.$"]},{"name":"fun $(value: Char): ID","description":"love.forte.simbot.ID.Companion.$","location":"simbot-api/love.forte.simbot/-i-d/-companion/$.html","searchKeys":["$","fun $(value: Char): ID","love.forte.simbot.ID.Companion.$"]},{"name":"fun $(value: CharSequence): ID","description":"love.forte.simbot.ID.Companion.$","location":"simbot-api/love.forte.simbot/-i-d/-companion/$.html","searchKeys":["$","fun $(value: CharSequence): ID","love.forte.simbot.ID.Companion.$"]},{"name":"fun $(value: Double): ID","description":"love.forte.simbot.ID.Companion.$","location":"simbot-api/love.forte.simbot/-i-d/-companion/$.html","searchKeys":["$","fun $(value: Double): ID","love.forte.simbot.ID.Companion.$"]},{"name":"fun $(value: Float): ID","description":"love.forte.simbot.ID.Companion.$","location":"simbot-api/love.forte.simbot/-i-d/-companion/$.html","searchKeys":["$","fun $(value: Float): ID","love.forte.simbot.ID.Companion.$"]},{"name":"fun $(value: Int): ID","description":"love.forte.simbot.ID.Companion.$","location":"simbot-api/love.forte.simbot/-i-d/-companion/$.html","searchKeys":["$","fun $(value: Int): ID","love.forte.simbot.ID.Companion.$"]},{"name":"fun $(value: Long): ID","description":"love.forte.simbot.ID.Companion.$","location":"simbot-api/love.forte.simbot/-i-d/-companion/$.html","searchKeys":["$","fun $(value: Long): ID","love.forte.simbot.ID.Companion.$"]},{"name":"fun $(value: LongAccumulator): ID","description":"love.forte.simbot.ID.Companion.$","location":"simbot-api/love.forte.simbot/-i-d/-companion/$.html","searchKeys":["$","fun $(value: LongAccumulator): ID","love.forte.simbot.ID.Companion.$"]},{"name":"fun $(value: LongAdder): ID","description":"love.forte.simbot.ID.Companion.$","location":"simbot-api/love.forte.simbot/-i-d/-companion/$.html","searchKeys":["$","fun $(value: LongAdder): ID","love.forte.simbot.ID.Companion.$"]},{"name":"fun $(value: UUID): ID","description":"love.forte.simbot.ID.Companion.$","location":"simbot-api/love.forte.simbot/-i-d/-companion/$.html","searchKeys":["$","fun $(value: UUID): ID","love.forte.simbot.ID.Companion.$"]},{"name":"fun <A : Application> ApplicationBuilder<A>.installAllComponents(classLoader: ClassLoader = ComponentAutoRegistrarFactory::class.java.classLoader)","description":"love.forte.simbot.installAllComponents","location":"simbot-api/love.forte.simbot/install-all-components.html","searchKeys":["installAllComponents","fun <A : Application> ApplicationBuilder<A>.installAllComponents(classLoader: ClassLoader = ComponentAutoRegistrarFactory::class.java.classLoader)","love.forte.simbot.installAllComponents"]},{"name":"fun <A : Application> ApplicationBuilder<A>.installAllEventProviders(classLoader: ClassLoader = EventProviderAutoRegistrarFactory::class.java.classLoader)","description":"love.forte.simbot.application.installAllEventProviders","location":"simbot-api/love.forte.simbot.application/install-all-event-providers.html","searchKeys":["installAllEventProviders","fun <A : Application> ApplicationBuilder<A>.installAllEventProviders(classLoader: ClassLoader = EventProviderAutoRegistrarFactory::class.java.classLoader)","love.forte.simbot.application.installAllEventProviders"]},{"name":"fun <A : Application> CoroutineScope.applicationLauncher(create: suspend () -> A): ApplicationLauncher<A>","description":"love.forte.simbot.application.applicationLauncher","location":"simbot-api/love.forte.simbot.application/application-launcher.html","searchKeys":["applicationLauncher","fun <A : Application> CoroutineScope.applicationLauncher(create: suspend () -> A): ApplicationLauncher<A>","love.forte.simbot.application.applicationLauncher"]},{"name":"fun <A : Application> applicationLauncher(context: CoroutineContext = EmptyCoroutineContext, create: suspend () -> A): ApplicationLauncher<A>","description":"love.forte.simbot.application.applicationLauncher","location":"simbot-api/love.forte.simbot.application/application-launcher.html","searchKeys":["applicationLauncher","fun <A : Application> applicationLauncher(context: CoroutineContext = EmptyCoroutineContext, create: suspend () -> A): ApplicationLauncher<A>","love.forte.simbot.application.applicationLauncher"]},{"name":"fun <B, T> Items<B>.transform(transform: suspend (B) -> T): Items<T>","description":"love.forte.simbot.utils.item.transform","location":"simbot-api/love.forte.simbot.utils.item/transform.html","searchKeys":["transform","fun <B, T> Items<B>.transform(transform: suspend (B) -> T): Items<T>","love.forte.simbot.utils.item.transform"]},{"name":"fun <B, T> Items<B>.transformBlocking(transform: (B) -> T): Items<T>","description":"love.forte.simbot.utils.item.Items.Companion.transformBlocking","location":"simbot-api/love.forte.simbot.utils.item/-items/-companion/transform-blocking.html","searchKeys":["transformBlocking","fun <B, T> Items<B>.transformBlocking(transform: (B) -> T): Items<T>","love.forte.simbot.utils.item.Items.Companion.transformBlocking"]},{"name":"fun <B, T> TransformItems(baseItems: Items<B>, transform: suspend (B) -> T)","description":"love.forte.simbot.utils.item.TransformItems.TransformItems","location":"simbot-api/love.forte.simbot.utils.item/-transform-items/-transform-items.html","searchKeys":["TransformItems","fun <B, T> TransformItems(baseItems: Items<B>, transform: suspend (B) -> T)","love.forte.simbot.utils.item.TransformItems.TransformItems"]},{"name":"fun <C : Any> InputStream.toBotVerifyInfo(factory: BotVerifyInfoDecoderFactory<C, *>, infoName: String, configurator: C.() -> Unit = {}): BotVerifyInfo","description":"love.forte.simbot.bot.toBotVerifyInfo","location":"simbot-api/love.forte.simbot.bot/to-bot-verify-info.html","searchKeys":["toBotVerifyInfo","fun <C : Any> InputStream.toBotVerifyInfo(factory: BotVerifyInfoDecoderFactory<C, *>, infoName: String, configurator: C.() -> Unit = {}): BotVerifyInfo","love.forte.simbot.bot.toBotVerifyInfo"]},{"name":"fun <C : Any> Path.toBotVerifyInfo(factory: BotVerifyInfoDecoderFactory<C, *>, configurator: C.() -> Unit = {}): BotVerifyInfo","description":"love.forte.simbot.bot.toBotVerifyInfo","location":"simbot-api/love.forte.simbot.bot/to-bot-verify-info.html","searchKeys":["toBotVerifyInfo","fun <C : Any> Path.toBotVerifyInfo(factory: BotVerifyInfoDecoderFactory<C, *>, configurator: C.() -> Unit = {}): BotVerifyInfo","love.forte.simbot.bot.toBotVerifyInfo"]},{"name":"fun <C : Any> URL.toBotVerifyInfo(factory: BotVerifyInfoDecoderFactory<C, *>, configurator: C.() -> Unit = {}): BotVerifyInfo","description":"love.forte.simbot.bot.toBotVerifyInfo","location":"simbot-api/love.forte.simbot.bot/to-bot-verify-info.html","searchKeys":["toBotVerifyInfo","fun <C : Any> URL.toBotVerifyInfo(factory: BotVerifyInfoDecoderFactory<C, *>, configurator: C.() -> Unit = {}): BotVerifyInfo","love.forte.simbot.bot.toBotVerifyInfo"]},{"name":"fun <Config : ApplicationConfiguration, Builder : ApplicationBuilder<A>, A : Application> buildSimbotApplicationLauncher(factory: ApplicationFactory<Config, Builder, A>, block: ApplicationDslBuilder<Config, Builder, A>.() -> Unit = {}): ApplicationLauncher<A>","description":"love.forte.simbot.application.buildSimbotApplicationLauncher","location":"simbot-api/love.forte.simbot.application/build-simbot-application-launcher.html","searchKeys":["buildSimbotApplicationLauncher","fun <Config : ApplicationConfiguration, Builder : ApplicationBuilder<A>, A : Application> buildSimbotApplicationLauncher(factory: ApplicationFactory<Config, Builder, A>, block: ApplicationDslBuilder<Config, Builder, A>.() -> Unit = {}): ApplicationLauncher<A>","love.forte.simbot.application.buildSimbotApplicationLauncher"]},{"name":"fun <Config : ApplicationConfiguration, Builder : ApplicationBuilder<A>, A : Application> createApplicationDslBuilder(factory: ApplicationFactory<Config, Builder, A>): ApplicationDslBuilder<Config, Builder, A>","description":"love.forte.simbot.application.createApplicationDslBuilder","location":"simbot-api/love.forte.simbot.application/create-application-dsl-builder.html","searchKeys":["createApplicationDslBuilder","fun <Config : ApplicationConfiguration, Builder : ApplicationBuilder<A>, A : Application> createApplicationDslBuilder(factory: ApplicationFactory<Config, Builder, A>): ApplicationDslBuilder<Config, Builder, A>","love.forte.simbot.application.createApplicationDslBuilder"]},{"name":"fun <Config : ApplicationConfiguration, Builder : ApplicationBuilder<A>, A : Application> createSimbotApplication4J(factory: ApplicationFactory<Config, Builder, A>, configurator: Consumer<Config>? = null, builder: BiConsumer<Builder, Config>? = null): A","description":"love.forte.simbot.application.createSimbotApplication4J","location":"simbot-api/love.forte.simbot.application/create-simbot-application4-j.html","searchKeys":["createSimbotApplication4J","fun <Config : ApplicationConfiguration, Builder : ApplicationBuilder<A>, A : Application> createSimbotApplication4J(factory: ApplicationFactory<Config, Builder, A>, configurator: Consumer<Config>? = null, builder: BiConsumer<Builder, Config>? = null): A","love.forte.simbot.application.createSimbotApplication4J"]},{"name":"fun <Config : ApplicationConfiguration, Builder : ApplicationBuilder<A>, A : Application> simbotApplication(factory: ApplicationFactory<Config, Builder, A>, configurator: Config.() -> Unit = {}, builder: suspend Builder.(Config) -> Unit = {}): ApplicationLauncher<A>","description":"love.forte.simbot.application.simbotApplication","location":"simbot-api/love.forte.simbot.application/simbot-application.html","searchKeys":["simbotApplication","fun <Config : ApplicationConfiguration, Builder : ApplicationBuilder<A>, A : Application> simbotApplication(factory: ApplicationFactory<Config, Builder, A>, configurator: Config.() -> Unit = {}, builder: suspend Builder.(Config) -> Unit = {}): ApplicationLauncher<A>","love.forte.simbot.application.simbotApplication"]},{"name":"fun <Config : ApplicationConfiguration, Builder : ApplicationBuilder<A>, A : Application> simbotApplication4J(factory: ApplicationFactory<Config, Builder, A>, configurator: Consumer<Config>? = null, builder: BiConsumer<Builder, Config>? = null): ApplicationLauncher<A>","description":"love.forte.simbot.application.simbotApplication4J","location":"simbot-api/love.forte.simbot.application/simbot-application4-j.html","searchKeys":["simbotApplication4J","fun <Config : ApplicationConfiguration, Builder : ApplicationBuilder<A>, A : Application> simbotApplication4J(factory: ApplicationFactory<Config, Builder, A>, configurator: Consumer<Config>? = null, builder: BiConsumer<Builder, Config>? = null): ApplicationLauncher<A>","love.forte.simbot.application.simbotApplication4J"]},{"name":"fun <E : Event> Event.nextBlocking(id: String = randomIdStr(), key: Event.Key<E>, timeout: Long, timeUnit: TimeUnit): E","description":"love.forte.simbot.event.ContinuousSessionContext.nextBlocking","location":"simbot-api/love.forte.simbot.event/-continuous-session-context/next-blocking.html","searchKeys":["nextBlocking","fun <E : Event> Event.nextBlocking(id: String = randomIdStr(), key: Event.Key<E>, timeout: Long, timeUnit: TimeUnit): E","love.forte.simbot.event.ContinuousSessionContext.nextBlocking"]},{"name":"fun <E : Event> Event.nextBlocking(id: String, key: Event.Key<E>, timeout: JavaDuration = JavaDuration.ZERO): E","description":"love.forte.simbot.event.ContinuousSessionContext.nextBlocking","location":"simbot-api/love.forte.simbot.event/-continuous-session-context/next-blocking.html","searchKeys":["nextBlocking","fun <E : Event> Event.nextBlocking(id: String, key: Event.Key<E>, timeout: JavaDuration = JavaDuration.ZERO): E","love.forte.simbot.event.ContinuousSessionContext.nextBlocking"]},{"name":"fun <E : Event> Event.nextBlocking(key: Event.Key<E>, timeout: JavaDuration = JavaDuration.ZERO): E","description":"love.forte.simbot.event.ContinuousSessionContext.nextBlocking","location":"simbot-api/love.forte.simbot.event/-continuous-session-context/next-blocking.html","searchKeys":["nextBlocking","fun <E : Event> Event.nextBlocking(key: Event.Key<E>, timeout: JavaDuration = JavaDuration.ZERO): E","love.forte.simbot.event.ContinuousSessionContext.nextBlocking"]},{"name":"fun <E : Event> EventProcessingContext.nextBlocking(id: String = randomIdStr(), key: Event.Key<E>, timeout: JavaDuration = JavaDuration.ZERO): E","description":"love.forte.simbot.event.ContinuousSessionContext.nextBlocking","location":"simbot-api/love.forte.simbot.event/-continuous-session-context/next-blocking.html","searchKeys":["nextBlocking","fun <E : Event> EventProcessingContext.nextBlocking(id: String = randomIdStr(), key: Event.Key<E>, timeout: JavaDuration = JavaDuration.ZERO): E","love.forte.simbot.event.ContinuousSessionContext.nextBlocking"]},{"name":"fun <E : Event> EventProcessingContext.nextBlocking(id: String = randomIdStr(), key: Event.Key<E>, timeout: Long, timeUnit: TimeUnit): E","description":"love.forte.simbot.event.ContinuousSessionContext.nextBlocking","location":"simbot-api/love.forte.simbot.event/-continuous-session-context/next-blocking.html","searchKeys":["nextBlocking","fun <E : Event> EventProcessingContext.nextBlocking(id: String = randomIdStr(), key: Event.Key<E>, timeout: Long, timeUnit: TimeUnit): E","love.forte.simbot.event.ContinuousSessionContext.nextBlocking"]},{"name":"fun <E : Event> EventProcessingContext.nextBlocking(key: Event.Key<E>, timeout: JavaDuration = JavaDuration.ZERO): E","description":"love.forte.simbot.event.ContinuousSessionContext.nextBlocking","location":"simbot-api/love.forte.simbot.event/-continuous-session-context/next-blocking.html","searchKeys":["nextBlocking","fun <E : Event> EventProcessingContext.nextBlocking(key: Event.Key<E>, timeout: JavaDuration = JavaDuration.ZERO): E","love.forte.simbot.event.ContinuousSessionContext.nextBlocking"]},{"name":"fun <E : Event> getKey(type: KClass<E>): Event.Key<E>","description":"love.forte.simbot.event.Event.Key.Companion.getKey","location":"simbot-api/love.forte.simbot.event/-event/-key/-companion/get-key.html","searchKeys":["getKey","fun <E : Event> getKey(type: KClass<E>): Event.Key<E>","love.forte.simbot.event.Event.Key.Companion.getKey"]},{"name":"fun <E : Event> waitForNextBlocking(id: String, key: Event.Key<E>, matcher: BlockingContinuousSessionEventMatcher<E>): E","description":"love.forte.simbot.event.ContinuousSessionContext.waitForNextBlocking","location":"simbot-api/love.forte.simbot.event/-continuous-session-context/wait-for-next-blocking.html","searchKeys":["waitForNextBlocking","fun <E : Event> waitForNextBlocking(id: String, key: Event.Key<E>, matcher: BlockingContinuousSessionEventMatcher<E>): E","love.forte.simbot.event.ContinuousSessionContext.waitForNextBlocking"]},{"name":"fun <E : Event> waitForNextBlocking(id: String, key: Event.Key<E>, timeout: Long, timeUnit: TimeUnit, matcher: BlockingContinuousSessionEventMatcher<E> = BlockingContinuousSessionEventMatcher): E","description":"love.forte.simbot.event.ContinuousSessionContext.waitForNextBlocking","location":"simbot-api/love.forte.simbot.event/-continuous-session-context/wait-for-next-blocking.html","searchKeys":["waitForNextBlocking","fun <E : Event> waitForNextBlocking(id: String, key: Event.Key<E>, timeout: Long, timeUnit: TimeUnit, matcher: BlockingContinuousSessionEventMatcher<E> = BlockingContinuousSessionEventMatcher): E","love.forte.simbot.event.ContinuousSessionContext.waitForNextBlocking"]},{"name":"fun <E : Event> waitForNextBlocking(id: String, key: Event.Key<E>, timeoutDuration: JavaDuration = JavaDuration.ZERO, matcher: BlockingContinuousSessionEventMatcher<E> = BlockingContinuousSessionEventMatcher): E","description":"love.forte.simbot.event.ContinuousSessionContext.waitForNextBlocking","location":"simbot-api/love.forte.simbot.event/-continuous-session-context/wait-for-next-blocking.html","searchKeys":["waitForNextBlocking","fun <E : Event> waitForNextBlocking(id: String, key: Event.Key<E>, timeoutDuration: JavaDuration = JavaDuration.ZERO, matcher: BlockingContinuousSessionEventMatcher<E> = BlockingContinuousSessionEventMatcher): E","love.forte.simbot.event.ContinuousSessionContext.waitForNextBlocking"]},{"name":"fun <E : Event> waitForNextBlocking(key: Event.Key<E>, matcher: BlockingContinuousSessionEventMatcher<E>): E","description":"love.forte.simbot.event.ContinuousSessionContext.waitForNextBlocking","location":"simbot-api/love.forte.simbot.event/-continuous-session-context/wait-for-next-blocking.html","searchKeys":["waitForNextBlocking","fun <E : Event> waitForNextBlocking(key: Event.Key<E>, matcher: BlockingContinuousSessionEventMatcher<E>): E","love.forte.simbot.event.ContinuousSessionContext.waitForNextBlocking"]},{"name":"fun <E : Event> waitForNextBlocking(key: Event.Key<E>, timeout: Long, timeUnit: TimeUnit, matcher: BlockingContinuousSessionEventMatcher<E> = BlockingContinuousSessionEventMatcher): E","description":"love.forte.simbot.event.ContinuousSessionContext.waitForNextBlocking","location":"simbot-api/love.forte.simbot.event/-continuous-session-context/wait-for-next-blocking.html","searchKeys":["waitForNextBlocking","fun <E : Event> waitForNextBlocking(key: Event.Key<E>, timeout: Long, timeUnit: TimeUnit, matcher: BlockingContinuousSessionEventMatcher<E> = BlockingContinuousSessionEventMatcher): E","love.forte.simbot.event.ContinuousSessionContext.waitForNextBlocking"]},{"name":"fun <E : Event> waitForNextBlocking(key: Event.Key<E>, timeoutDuration: JavaDuration = JavaDuration.ZERO, matcher: BlockingContinuousSessionEventMatcher<E> = BlockingContinuousSessionEventMatcher): E","description":"love.forte.simbot.event.ContinuousSessionContext.waitForNextBlocking","location":"simbot-api/love.forte.simbot.event/-continuous-session-context/wait-for-next-blocking.html","searchKeys":["waitForNextBlocking","fun <E : Event> waitForNextBlocking(key: Event.Key<E>, timeoutDuration: JavaDuration = JavaDuration.ZERO, matcher: BlockingContinuousSessionEventMatcher<E> = BlockingContinuousSessionEventMatcher): E","love.forte.simbot.event.ContinuousSessionContext.waitForNextBlocking"]},{"name":"fun <E : Message.Element<E>> Iterable<Message.Element<*>>.filter(key: Message.Key<E>): Sequence<E>","description":"love.forte.simbot.message.filter","location":"simbot-api/love.forte.simbot.message/filter.html","searchKeys":["filter","fun <E : Message.Element<E>> Iterable<Message.Element<*>>.filter(key: Message.Key<E>): Sequence<E>","love.forte.simbot.message.filter"]},{"name":"fun <E : Message.Element<E>> Sequence<Message.Element<*>>.filter(key: Message.Key<E>): Sequence<E>","description":"love.forte.simbot.message.filter","location":"simbot-api/love.forte.simbot.message/filter.html","searchKeys":["filter","fun <E : Message.Element<E>> Sequence<Message.Element<*>>.filter(key: Message.Key<E>): Sequence<E>","love.forte.simbot.message.filter"]},{"name":"fun <E : MessageEvent> waitForNextMessageBlocking(id: String = randomIdStr(), key: Event.Key<E>, matcher: BlockingContinuousSessionEventMatcher<E>): MessageContent","description":"love.forte.simbot.event.ContinuousSessionContext.waitForNextMessageBlocking","location":"simbot-api/love.forte.simbot.event/-continuous-session-context/wait-for-next-message-blocking.html","searchKeys":["waitForNextMessageBlocking","fun <E : MessageEvent> waitForNextMessageBlocking(id: String = randomIdStr(), key: Event.Key<E>, matcher: BlockingContinuousSessionEventMatcher<E>): MessageContent","love.forte.simbot.event.ContinuousSessionContext.waitForNextMessageBlocking"]},{"name":"fun <E : MessageEvent> waitForNextMessageBlocking(id: String, key: Event.Key<E>, timeout: JavaDuration = JavaDuration.ZERO, matcher: BlockingContinuousSessionEventMatcher<E> = BlockingContinuousSessionEventMatcher): MessageContent","description":"love.forte.simbot.event.ContinuousSessionContext.waitForNextMessageBlocking","location":"simbot-api/love.forte.simbot.event/-continuous-session-context/wait-for-next-message-blocking.html","searchKeys":["waitForNextMessageBlocking","fun <E : MessageEvent> waitForNextMessageBlocking(id: String, key: Event.Key<E>, timeout: JavaDuration = JavaDuration.ZERO, matcher: BlockingContinuousSessionEventMatcher<E> = BlockingContinuousSessionEventMatcher): MessageContent","love.forte.simbot.event.ContinuousSessionContext.waitForNextMessageBlocking"]},{"name":"fun <E : MessageEvent> waitForNextMessageBlocking(id: String, key: Event.Key<E>, timeout: Long, timeUnit: TimeUnit, matcher: BlockingContinuousSessionEventMatcher<E> = BlockingContinuousSessionEventMatcher): MessageContent","description":"love.forte.simbot.event.ContinuousSessionContext.waitForNextMessageBlocking","location":"simbot-api/love.forte.simbot.event/-continuous-session-context/wait-for-next-message-blocking.html","searchKeys":["waitForNextMessageBlocking","fun <E : MessageEvent> waitForNextMessageBlocking(id: String, key: Event.Key<E>, timeout: Long, timeUnit: TimeUnit, matcher: BlockingContinuousSessionEventMatcher<E> = BlockingContinuousSessionEventMatcher): MessageContent","love.forte.simbot.event.ContinuousSessionContext.waitForNextMessageBlocking"]},{"name":"fun <E : MessageEvent> waitForNextMessageBlocking(key: Event.Key<E>, timeout: JavaDuration = JavaDuration.ZERO, matcher: BlockingContinuousSessionEventMatcher<E> = BlockingContinuousSessionEventMatcher): MessageContent","description":"love.forte.simbot.event.ContinuousSessionContext.waitForNextMessageBlocking","location":"simbot-api/love.forte.simbot.event/-continuous-session-context/wait-for-next-message-blocking.html","searchKeys":["waitForNextMessageBlocking","fun <E : MessageEvent> waitForNextMessageBlocking(key: Event.Key<E>, timeout: JavaDuration = JavaDuration.ZERO, matcher: BlockingContinuousSessionEventMatcher<E> = BlockingContinuousSessionEventMatcher): MessageContent","love.forte.simbot.event.ContinuousSessionContext.waitForNextMessageBlocking"]},{"name":"fun <E : MessageEvent> waitForNextMessageBlocking(key: Event.Key<E>, timeout: Long, timeUnit: TimeUnit, matcher: BlockingContinuousSessionEventMatcher<E> = BlockingContinuousSessionEventMatcher): MessageContent","description":"love.forte.simbot.event.ContinuousSessionContext.waitForNextMessageBlocking","location":"simbot-api/love.forte.simbot.event/-continuous-session-context/wait-for-next-message-blocking.html","searchKeys":["waitForNextMessageBlocking","fun <E : MessageEvent> waitForNextMessageBlocking(key: Event.Key<E>, timeout: Long, timeUnit: TimeUnit, matcher: BlockingContinuousSessionEventMatcher<E> = BlockingContinuousSessionEventMatcher): MessageContent","love.forte.simbot.event.ContinuousSessionContext.waitForNextMessageBlocking"]},{"name":"fun <E> Items.PreprocessingProperties.effectOn(flow: Flow<E>): Flow<E>","description":"love.forte.simbot.utils.item.effectOn","location":"simbot-api/love.forte.simbot.utils.item/effect-on.html","searchKeys":["effectOn","fun <E> Items.PreprocessingProperties.effectOn(flow: Flow<E>): Flow<E>","love.forte.simbot.utils.item.effectOn"]},{"name":"fun <E> Items.PreprocessingProperties.effectOn(iter: ChannelIterator<E>): ChannelIterator<E>","description":"love.forte.simbot.utils.item.effectOn","location":"simbot-api/love.forte.simbot.utils.item/effect-on.html","searchKeys":["effectOn","fun <E> Items.PreprocessingProperties.effectOn(iter: ChannelIterator<E>): ChannelIterator<E>","love.forte.simbot.utils.item.effectOn"]},{"name":"fun <E> Items.PreprocessingProperties.effectOn(sequence: Sequence<E>): Sequence<E>","description":"love.forte.simbot.utils.item.effectOn","location":"simbot-api/love.forte.simbot.utils.item/effect-on.html","searchKeys":["effectOn","fun <E> Items.PreprocessingProperties.effectOn(sequence: Sequence<E>): Sequence<E>","love.forte.simbot.utils.item.effectOn"]},{"name":"fun <E> Items.PreprocessingProperties.effectOn(stream: Stream<E>): Stream<E>","description":"love.forte.simbot.utils.item.effectOn","location":"simbot-api/love.forte.simbot.utils.item/effect-on.html","searchKeys":["effectOn","fun <E> Items.PreprocessingProperties.effectOn(stream: Stream<E>): Stream<E>","love.forte.simbot.utils.item.effectOn"]},{"name":"fun <E> Items.PreprocessingProperties.effectedFlow(block: suspend FlowCollector<E>.() -> Unit): Flow<E>","description":"love.forte.simbot.utils.item.effectedFlow","location":"simbot-api/love.forte.simbot.utils.item/effected-flow.html","searchKeys":["effectedFlow","fun <E> Items.PreprocessingProperties.effectedFlow(block: suspend FlowCollector<E>.() -> Unit): Flow<E>","love.forte.simbot.utils.item.effectedFlow"]},{"name":"fun <E> Items.PreprocessingProperties.effectedSequence(block: suspend SequenceScope<E>.() -> Unit): Sequence<E>","description":"love.forte.simbot.utils.item.effectedSequence","location":"simbot-api/love.forte.simbot.utils.item/effected-sequence.html","searchKeys":["effectedSequence","fun <E> Items.PreprocessingProperties.effectedSequence(block: suspend SequenceScope<E>.() -> Unit): Sequence<E>","love.forte.simbot.utils.item.effectedSequence"]},{"name":"fun <F : BinaryFormat> F.toDeserializableResourceDecoder(): SimpleBinaryFormatDeserializableResourceDecoder<F>","description":"love.forte.simbot.resources.DeserializableResourceDecoder.Companion.toDeserializableResourceDecoder","location":"simbot-api/love.forte.simbot.resources/-deserializable-resource-decoder/-companion/to-deserializable-resource-decoder.html","searchKeys":["toDeserializableResourceDecoder","fun <F : BinaryFormat> F.toDeserializableResourceDecoder(): SimpleBinaryFormatDeserializableResourceDecoder<F>","love.forte.simbot.resources.DeserializableResourceDecoder.Companion.toDeserializableResourceDecoder"]},{"name":"fun <F : BinaryFormat> SimpleBinaryFormatDeserializableResourceDecoder(format: F)","description":"love.forte.simbot.resources.SimpleBinaryFormatDeserializableResourceDecoder.SimpleBinaryFormatDeserializableResourceDecoder","location":"simbot-api/love.forte.simbot.resources/-simple-binary-format-deserializable-resource-decoder/-simple-binary-format-deserializable-resource-decoder.html","searchKeys":["SimpleBinaryFormatDeserializableResourceDecoder","fun <F : BinaryFormat> SimpleBinaryFormatDeserializableResourceDecoder(format: F)","love.forte.simbot.resources.SimpleBinaryFormatDeserializableResourceDecoder.SimpleBinaryFormatDeserializableResourceDecoder"]},{"name":"fun <F : StringFormat> F.toDeserializableResourceDecoder(): SimpleStringFormatDeserializableResourceDecoder<F>","description":"love.forte.simbot.resources.DeserializableResourceDecoder.Companion.toDeserializableResourceDecoder","location":"simbot-api/love.forte.simbot.resources/-deserializable-resource-decoder/-companion/to-deserializable-resource-decoder.html","searchKeys":["toDeserializableResourceDecoder","fun <F : StringFormat> F.toDeserializableResourceDecoder(): SimpleStringFormatDeserializableResourceDecoder<F>","love.forte.simbot.resources.DeserializableResourceDecoder.Companion.toDeserializableResourceDecoder"]},{"name":"fun <F : StringFormat> SimpleStringFormatDeserializableResourceDecoder(format: F)","description":"love.forte.simbot.resources.SimpleStringFormatDeserializableResourceDecoder.SimpleStringFormatDeserializableResourceDecoder","location":"simbot-api/love.forte.simbot.resources/-simple-string-format-deserializable-resource-decoder/-simple-string-format-deserializable-resource-decoder.html","searchKeys":["SimpleStringFormatDeserializableResourceDecoder","fun <F : StringFormat> SimpleStringFormatDeserializableResourceDecoder(format: F)","love.forte.simbot.resources.SimpleStringFormatDeserializableResourceDecoder.SimpleStringFormatDeserializableResourceDecoder"]},{"name":"fun <K, V> WeakMap(delegateMap: MutableMap<K, WeakReference<V>>)","description":"love.forte.simbot.utils.WeakMap.WeakMap","location":"simbot-api/love.forte.simbot.utils/-weak-map/-weak-map.html","searchKeys":["WeakMap","fun <K, V> WeakMap(delegateMap: MutableMap<K, WeakReference<V>>)","love.forte.simbot.utils.WeakMap.WeakMap"]},{"name":"fun <R> suspendSupplier(isRunWithInterruptible: Boolean = true, function: Supplier<R>): suspend () -> R","description":"love.forte.simbot.utils.suspendSupplier","location":"simbot-api/love.forte.simbot.utils/suspend-supplier.html","searchKeys":["suspendSupplier","fun <R> suspendSupplier(isRunWithInterruptible: Boolean = true, function: Supplier<R>): suspend () -> R","love.forte.simbot.utils.suspendSupplier"]},{"name":"fun <T : Any> attribute(name: String): Attribute<T>","description":"love.forte.simbot.attribute","location":"simbot-api/love.forte.simbot/attribute.html","searchKeys":["attribute","fun <T : Any> attribute(name: String): Attribute<T>","love.forte.simbot.attribute"]},{"name":"fun <T : Any> of(name: String): Attribute<T>","description":"love.forte.simbot.Attribute.Companion.of","location":"simbot-api/love.forte.simbot/-attribute/-companion/of.html","searchKeys":["of","fun <T : Any> of(name: String): Attribute<T>","love.forte.simbot.Attribute.Companion.of"]},{"name":"fun <T : Any> of(name: String, type: Class<T>): Attribute<T>","description":"love.forte.simbot.Attribute.Companion.of","location":"simbot-api/love.forte.simbot/-attribute/-companion/of.html","searchKeys":["of","fun <T : Any> of(name: String, type: Class<T>): Attribute<T>","love.forte.simbot.Attribute.Companion.of"]},{"name":"fun <T : Event> KClass<T>.getKey(): Event.Key<T>","description":"love.forte.simbot.event.getKey","location":"simbot-api/love.forte.simbot.event/get-key.html","searchKeys":["getKey","fun <T : Event> KClass<T>.getKey(): Event.Key<T>","love.forte.simbot.event.getKey"]},{"name":"fun <T : Event> getKey(type: Class<T>): Event.Key<T>","description":"love.forte.simbot.event.Event.Key.Companion.getKey","location":"simbot-api/love.forte.simbot.event/-event/-key/-companion/get-key.html","searchKeys":["getKey","fun <T : Event> getKey(type: Class<T>): Event.Key<T>","love.forte.simbot.event.Event.Key.Companion.getKey"]},{"name":"fun <T, R> suspendFunction(isRunWithInterruptible: Boolean = true, function: Function<T, R>): suspend (T) -> R","description":"love.forte.simbot.utils.suspendFunction","location":"simbot-api/love.forte.simbot.utils/suspend-function.html","searchKeys":["suspendFunction","fun <T, R> suspendFunction(isRunWithInterruptible: Boolean = true, function: Function<T, R>): suspend (T) -> R","love.forte.simbot.utils.suspendFunction"]},{"name":"fun <T1, T2, R> suspendFunction(isRunWithInterruptible: Boolean = true, function: BiFunction<T1, T2, R>): suspend (T1, T2) -> R","description":"love.forte.simbot.utils.suspendFunction","location":"simbot-api/love.forte.simbot.utils/suspend-function.html","searchKeys":["suspendFunction","fun <T1, T2, R> suspendFunction(isRunWithInterruptible: Boolean = true, function: BiFunction<T1, T2, R>): suspend (T1, T2) -> R","love.forte.simbot.utils.suspendFunction"]},{"name":"fun <T1, T2, T3, R> suspendFunction(isRunWithInterruptible: Boolean = true, function: (T1, T2, T3) -> R): suspend (T1, T2, T3) -> R","description":"love.forte.simbot.utils.suspendFunction","location":"simbot-api/love.forte.simbot.utils/suspend-function.html","searchKeys":["suspendFunction","fun <T1, T2, T3, R> suspendFunction(isRunWithInterruptible: Boolean = true, function: (T1, T2, T3) -> R): suspend (T1, T2, T3) -> R","love.forte.simbot.utils.suspendFunction"]},{"name":"fun <T1, T2, T3, T4, R> suspendFunction(isRunWithInterruptible: Boolean = true, function: (T1, T2, T3, T4) -> R): suspend (T1, T2, T3, T4) -> R","description":"love.forte.simbot.utils.suspendFunction","location":"simbot-api/love.forte.simbot.utils/suspend-function.html","searchKeys":["suspendFunction","fun <T1, T2, T3, T4, R> suspendFunction(isRunWithInterruptible: Boolean = true, function: (T1, T2, T3, T4) -> R): suspend (T1, T2, T3, T4) -> R","love.forte.simbot.utils.suspendFunction"]},{"name":"fun <T1, T2, T3, T4, T5, R> suspendFunction(isRunWithInterruptible: Boolean = true, function: (T1, T2, T3, T4, T5) -> R): suspend (T1, T2, T3, T4, T5) -> R","description":"love.forte.simbot.utils.suspendFunction","location":"simbot-api/love.forte.simbot.utils/suspend-function.html","searchKeys":["suspendFunction","fun <T1, T2, T3, T4, T5, R> suspendFunction(isRunWithInterruptible: Boolean = true, function: (T1, T2, T3, T4, T5) -> R): suspend (T1, T2, T3, T4, T5) -> R","love.forte.simbot.utils.suspendFunction"]},{"name":"fun <T1, T2, T3, T4, T5> eliminateUnit(function: Consumer5<T1, T2, T3, T4, T5>): (T1, T2, T3, T4, T5) -> Unit","description":"love.forte.simbot.utils.eliminateUnit","location":"simbot-api/love.forte.simbot.utils/eliminate-unit.html","searchKeys":["eliminateUnit","fun <T1, T2, T3, T4, T5> eliminateUnit(function: Consumer5<T1, T2, T3, T4, T5>): (T1, T2, T3, T4, T5) -> Unit","love.forte.simbot.utils.eliminateUnit"]},{"name":"fun <T1, T2, T3, T4, T5> suspendConsumer(isRunWithInterruptible: Boolean = true, function: Consumer5<T1, T2, T3, T4, T5>): suspend (T1, T2, T3, T4, T5) -> Unit","description":"love.forte.simbot.utils.suspendConsumer","location":"simbot-api/love.forte.simbot.utils/suspend-consumer.html","searchKeys":["suspendConsumer","fun <T1, T2, T3, T4, T5> suspendConsumer(isRunWithInterruptible: Boolean = true, function: Consumer5<T1, T2, T3, T4, T5>): suspend (T1, T2, T3, T4, T5) -> Unit","love.forte.simbot.utils.suspendConsumer"]},{"name":"fun <T1, T2, T3, T4> eliminateUnit(function: Consumer4<T1, T2, T3, T4>): (T1, T2, T3, T4) -> Unit","description":"love.forte.simbot.utils.eliminateUnit","location":"simbot-api/love.forte.simbot.utils/eliminate-unit.html","searchKeys":["eliminateUnit","fun <T1, T2, T3, T4> eliminateUnit(function: Consumer4<T1, T2, T3, T4>): (T1, T2, T3, T4) -> Unit","love.forte.simbot.utils.eliminateUnit"]},{"name":"fun <T1, T2, T3, T4> suspendConsumer(isRunWithInterruptible: Boolean = true, function: Consumer4<T1, T2, T3, T4>): suspend (T1, T2, T3, T4) -> Unit","description":"love.forte.simbot.utils.suspendConsumer","location":"simbot-api/love.forte.simbot.utils/suspend-consumer.html","searchKeys":["suspendConsumer","fun <T1, T2, T3, T4> suspendConsumer(isRunWithInterruptible: Boolean = true, function: Consumer4<T1, T2, T3, T4>): suspend (T1, T2, T3, T4) -> Unit","love.forte.simbot.utils.suspendConsumer"]},{"name":"fun <T1, T2, T3> eliminateUnit(function: Consumer3<T1, T2, T3>): (T1, T2, T3) -> Unit","description":"love.forte.simbot.utils.eliminateUnit","location":"simbot-api/love.forte.simbot.utils/eliminate-unit.html","searchKeys":["eliminateUnit","fun <T1, T2, T3> eliminateUnit(function: Consumer3<T1, T2, T3>): (T1, T2, T3) -> Unit","love.forte.simbot.utils.eliminateUnit"]},{"name":"fun <T1, T2, T3> suspendConsumer(isRunWithInterruptible: Boolean = true, function: Consumer3<T1, T2, T3>): suspend (T1, T2, T3) -> Unit","description":"love.forte.simbot.utils.suspendConsumer","location":"simbot-api/love.forte.simbot.utils/suspend-consumer.html","searchKeys":["suspendConsumer","fun <T1, T2, T3> suspendConsumer(isRunWithInterruptible: Boolean = true, function: Consumer3<T1, T2, T3>): suspend (T1, T2, T3) -> Unit","love.forte.simbot.utils.suspendConsumer"]},{"name":"fun <T1, T2> eliminateUnit(function: BiConsumer<T1, T2>): (T1, T2) -> Unit","description":"love.forte.simbot.utils.eliminateUnit","location":"simbot-api/love.forte.simbot.utils/eliminate-unit.html","searchKeys":["eliminateUnit","fun <T1, T2> eliminateUnit(function: BiConsumer<T1, T2>): (T1, T2) -> Unit","love.forte.simbot.utils.eliminateUnit"]},{"name":"fun <T1, T2> suspendConsumer(isRunWithInterruptible: Boolean = true, function: BiConsumer<T1, T2>): suspend (T1, T2) -> Unit","description":"love.forte.simbot.utils.suspendConsumer","location":"simbot-api/love.forte.simbot.utils/suspend-consumer.html","searchKeys":["suspendConsumer","fun <T1, T2> suspendConsumer(isRunWithInterruptible: Boolean = true, function: BiConsumer<T1, T2>): suspend (T1, T2) -> Unit","love.forte.simbot.utils.suspendConsumer"]},{"name":"fun <T> Array<T>.asCycleIterator(): Iterator<T>","description":"love.forte.simbot.utils.asCycleIterator","location":"simbot-api/love.forte.simbot.utils/as-cycle-iterator.html","searchKeys":["asCycleIterator","fun <T> Array<T>.asCycleIterator(): Iterator<T>","love.forte.simbot.utils.asCycleIterator"]},{"name":"fun <T> Collection<T>.asItems(): Items<T>","description":"love.forte.simbot.utils.item.Items.Companion.asItems","location":"simbot-api/love.forte.simbot.utils.item/-items/-companion/as-items.html","searchKeys":["asItems","fun <T> Collection<T>.asItems(): Items<T>","love.forte.simbot.utils.item.Items.Companion.asItems"]},{"name":"fun <T> Collection<T>.asView(): View<T>","description":"love.forte.simbot.utils.view.asView","location":"simbot-api/love.forte.simbot.utils.view/as-view.html","searchKeys":["asView","fun <T> Collection<T>.asView(): View<T>","love.forte.simbot.utils.view.asView"]},{"name":"fun <T> CollectionItems(collection: Collection<T>)","description":"love.forte.simbot.utils.item.CollectionItems.CollectionItems","location":"simbot-api/love.forte.simbot.utils.item/-collection-items/-collection-items.html","searchKeys":["CollectionItems","fun <T> CollectionItems(collection: Collection<T>)","love.forte.simbot.utils.item.CollectionItems.CollectionItems"]},{"name":"fun <T> CoroutineScope.lazyValue(init: Boolean = false, initializer: suspend () -> T): LazyValue<T>","description":"love.forte.simbot.utils.lazyValue","location":"simbot-api/love.forte.simbot.utils/lazy-value.html","searchKeys":["lazyValue","fun <T> CoroutineScope.lazyValue(init: Boolean = false, initializer: suspend () -> T): LazyValue<T>","love.forte.simbot.utils.lazyValue"]},{"name":"fun <T> Deferred<T>.asDelayableFuture(scope: CoroutineScope): DelayableCompletableFuture<T>","description":"love.forte.simbot.ability.asDelayableFuture","location":"simbot-api/love.forte.simbot.ability/as-delayable-future.html","searchKeys":["asDelayableFuture","fun <T> Deferred<T>.asDelayableFuture(scope: CoroutineScope): DelayableCompletableFuture<T>","love.forte.simbot.ability.asDelayableFuture"]},{"name":"fun <T> Flow<T>.withLimiter(limiter: Limiter): Flow<T>","description":"love.forte.simbot.withLimiter","location":"simbot-api/love.forte.simbot/with-limiter.html","searchKeys":["withLimiter","fun <T> Flow<T>.withLimiter(limiter: Limiter): Flow<T>","love.forte.simbot.withLimiter"]},{"name":"fun <T> FlowItems(produceScope: CoroutineScope, flowFactory: (Items.PreprocessingProperties) -> Flow<T>)","description":"love.forte.simbot.utils.item.FlowItems.FlowItems","location":"simbot-api/love.forte.simbot.utils.item/-flow-items/-flow-items.html","searchKeys":["FlowItems","fun <T> FlowItems(produceScope: CoroutineScope, flowFactory: (Items.PreprocessingProperties) -> Flow<T>)","love.forte.simbot.utils.item.FlowItems.FlowItems"]},{"name":"fun <T> Items<T>.withLimiter(limiter: Limiter): Items<T>","description":"love.forte.simbot.utils.item.withLimiter","location":"simbot-api/love.forte.simbot.utils.item/with-limiter.html","searchKeys":["withLimiter","fun <T> Items<T>.withLimiter(limiter: Limiter): Items<T>","love.forte.simbot.utils.item.withLimiter"]},{"name":"fun <T> Iterable<T>.asCycleIterator(): Iterator<T>","description":"love.forte.simbot.utils.asCycleIterator","location":"simbot-api/love.forte.simbot.utils/as-cycle-iterator.html","searchKeys":["asCycleIterator","fun <T> Iterable<T>.asCycleIterator(): Iterator<T>","love.forte.simbot.utils.asCycleIterator"]},{"name":"fun <T> Iterable<T>.asView(): View<T>","description":"love.forte.simbot.utils.view.asView","location":"simbot-api/love.forte.simbot.utils.view/as-view.html","searchKeys":["asView","fun <T> Iterable<T>.asView(): View<T>","love.forte.simbot.utils.view.asView"]},{"name":"fun <T> List<T>.asCycleIterator(): Iterator<T>","description":"love.forte.simbot.utils.asCycleIterator","location":"simbot-api/love.forte.simbot.utils/as-cycle-iterator.html","searchKeys":["asCycleIterator","fun <T> List<T>.asCycleIterator(): Iterator<T>","love.forte.simbot.utils.asCycleIterator"]},{"name":"fun <T> List<T>.asView(): IndexAccessView<T>","description":"love.forte.simbot.utils.view.asView","location":"simbot-api/love.forte.simbot.utils.view/as-view.html","searchKeys":["asView","fun <T> List<T>.asView(): IndexAccessView<T>","love.forte.simbot.utils.view.asView"]},{"name":"fun <T> Sequence<T>.withLimiter(limiter: Limiter): Sequence<T>","description":"love.forte.simbot.withLimiter","location":"simbot-api/love.forte.simbot/with-limiter.html","searchKeys":["withLimiter","fun <T> Sequence<T>.withLimiter(limiter: Limiter): Sequence<T>","love.forte.simbot.withLimiter"]},{"name":"fun <T> SequenceItems(sequenceFactory: (Items.PreprocessingProperties) -> Sequence<T>)","description":"love.forte.simbot.utils.item.SequenceItems.SequenceItems","location":"simbot-api/love.forte.simbot.utils.item/-sequence-items/-sequence-items.html","searchKeys":["SequenceItems","fun <T> SequenceItems(sequenceFactory: (Items.PreprocessingProperties) -> Sequence<T>)","love.forte.simbot.utils.item.SequenceItems.SequenceItems"]},{"name":"fun <T> SingleValueItems(value: T)","description":"love.forte.simbot.utils.item.SingleValueItems.SingleValueItems","location":"simbot-api/love.forte.simbot.utils.item/-single-value-items/-single-value-items.html","searchKeys":["SingleValueItems","fun <T> SingleValueItems(value: T)","love.forte.simbot.utils.item.SingleValueItems.SingleValueItems"]},{"name":"fun <T> Stream<T>.withLimiter(limiter: Limiter): Stream<T>","description":"love.forte.simbot.withLimiter","location":"simbot-api/love.forte.simbot/with-limiter.html","searchKeys":["withLimiter","fun <T> Stream<T>.withLimiter(limiter: Limiter): Stream<T>","love.forte.simbot.withLimiter"]},{"name":"fun <T> View<T>.toList(): List<T>","description":"love.forte.simbot.utils.view.toList","location":"simbot-api/love.forte.simbot.utils.view/to-list.html","searchKeys":["toList","fun <T> View<T>.toList(): List<T>","love.forte.simbot.utils.view.toList"]},{"name":"fun <T> blockingItemsBy(factory: (Items.PreprocessingProperties) -> Iterator<T>): Items<T>","description":"love.forte.simbot.utils.item.Items.Companion.blockingItemsBy","location":"simbot-api/love.forte.simbot.utils.item/-items/-companion/blocking-items-by.html","searchKeys":["blockingItemsBy","fun <T> blockingItemsBy(factory: (Items.PreprocessingProperties) -> Iterator<T>): Items<T>","love.forte.simbot.utils.item.Items.Companion.blockingItemsBy"]},{"name":"fun <T> completedLazyValue(value: T): LazyValue<T>","description":"love.forte.simbot.utils.completedLazyValue","location":"simbot-api/love.forte.simbot.utils/completed-lazy-value.html","searchKeys":["completedLazyValue","fun <T> completedLazyValue(value: T): LazyValue<T>","love.forte.simbot.utils.completedLazyValue"]},{"name":"fun <T> constIterator(value: T): Iterator<T>","description":"love.forte.simbot.utils.constIterator","location":"simbot-api/love.forte.simbot.utils/const-iterator.html","searchKeys":["constIterator","fun <T> constIterator(value: T): Iterator<T>","love.forte.simbot.utils.constIterator"]},{"name":"fun <T> decode(value: V, deserializer: DeserializationStrategy<T>): T","description":"love.forte.simbot.bot.StandardSerialFormatBotVerifyInfoDecoder.decode","location":"simbot-api/love.forte.simbot.bot/-standard-serial-format-bot-verify-info-decoder/decode.html","searchKeys":["decode","fun <T> decode(value: V, deserializer: DeserializationStrategy<T>): T","love.forte.simbot.bot.StandardSerialFormatBotVerifyInfoDecoder.decode"]},{"name":"fun <T> eliminateUnit(function: Consumer<T>): (T) -> Unit","description":"love.forte.simbot.utils.eliminateUnit","location":"simbot-api/love.forte.simbot.utils/eliminate-unit.html","searchKeys":["eliminateUnit","fun <T> eliminateUnit(function: Consumer<T>): (T) -> Unit","love.forte.simbot.utils.eliminateUnit"]},{"name":"fun <T> emptyItems(): Items<T>","description":"love.forte.simbot.utils.item.Items.Companion.emptyItems","location":"simbot-api/love.forte.simbot.utils.item/-items/-companion/empty-items.html","searchKeys":["emptyItems","fun <T> emptyItems(): Items<T>","love.forte.simbot.utils.item.Items.Companion.emptyItems"]},{"name":"fun <T> emptyView(): IndexAccessView<T>","description":"love.forte.simbot.utils.view.emptyView","location":"simbot-api/love.forte.simbot.utils.view/empty-view.html","searchKeys":["emptyView","fun <T> emptyView(): IndexAccessView<T>","love.forte.simbot.utils.view.emptyView"]},{"name":"fun <T> indexedCycleIterator(lastIndex: Int, valueGet: (Int) -> T): Iterator<T>","description":"love.forte.simbot.utils.indexedCycleIterator","location":"simbot-api/love.forte.simbot.utils/indexed-cycle-iterator.html","searchKeys":["indexedCycleIterator","fun <T> indexedCycleIterator(lastIndex: Int, valueGet: (Int) -> T): Iterator<T>","love.forte.simbot.utils.indexedCycleIterator"]},{"name":"fun <T> items(vararg values: T): Items<T>","description":"love.forte.simbot.utils.item.Items.Companion.items","location":"simbot-api/love.forte.simbot.utils.item/-items/-companion/items.html","searchKeys":["items","fun <T> items(vararg values: T): Items<T>","love.forte.simbot.utils.item.Items.Companion.items"]},{"name":"fun <T> itemsBy(factory: (Items.PreprocessingProperties) -> ChannelIterator<T>): Items<T>","description":"love.forte.simbot.utils.item.itemsBy","location":"simbot-api/love.forte.simbot.utils.item/items-by.html","searchKeys":["itemsBy","fun <T> itemsBy(factory: (Items.PreprocessingProperties) -> ChannelIterator<T>): Items<T>","love.forte.simbot.utils.item.itemsBy"]},{"name":"fun <T> lazyValue(initializer: suspend () -> T): LazyValue<T>","description":"love.forte.simbot.utils.lazyValue","location":"simbot-api/love.forte.simbot.utils/lazy-value.html","searchKeys":["lazyValue","fun <T> lazyValue(initializer: suspend () -> T): LazyValue<T>","love.forte.simbot.utils.lazyValue"]},{"name":"fun <T> newEffectedInstance(streamFactory: () -> Stream<T>): Items<T>","description":"love.forte.simbot.utils.item.StreamItems.Companion.newEffectedInstance","location":"simbot-api/love.forte.simbot.utils.item/-stream-items/-companion/new-effected-instance.html","searchKeys":["newEffectedInstance","fun <T> newEffectedInstance(streamFactory: () -> Stream<T>): Items<T>","love.forte.simbot.utils.item.StreamItems.Companion.newEffectedInstance"]},{"name":"fun <T> newInstance(streamFactory: (Items.PreprocessingProperties) -> Stream<T>): Items<T>","description":"love.forte.simbot.utils.item.StreamItems.Companion.newInstance","location":"simbot-api/love.forte.simbot.utils.item/-stream-items/-companion/new-instance.html","searchKeys":["newInstance","fun <T> newInstance(streamFactory: (Items.PreprocessingProperties) -> Stream<T>): Items<T>","love.forte.simbot.utils.item.StreamItems.Companion.newInstance"]},{"name":"fun <T> runInAsync(block: suspend CoroutineScope.() -> T): CompletableFuture<T>","description":"love.forte.simbot.utils.runInAsync","location":"simbot-api/love.forte.simbot.utils/run-in-async.html","searchKeys":["runInAsync","fun <T> runInAsync(block: suspend CoroutineScope.() -> T): CompletableFuture<T>","love.forte.simbot.utils.runInAsync"]},{"name":"fun <T> runInAsync(scope: CoroutineScope, context: CoroutineContext = EmptyCoroutineContext, block: suspend CoroutineScope.() -> T): CompletableFuture<T>","description":"love.forte.simbot.utils.runInAsync","location":"simbot-api/love.forte.simbot.utils/run-in-async.html","searchKeys":["runInAsync","fun <T> runInAsync(scope: CoroutineScope, context: CoroutineContext = EmptyCoroutineContext, block: suspend CoroutineScope.() -> T): CompletableFuture<T>","love.forte.simbot.utils.runInAsync"]},{"name":"fun <T> runInBlocking(context: CoroutineContext = DefaultBlockingContext, block: suspend CoroutineScope.() -> T): T","description":"love.forte.simbot.utils.runInBlocking","location":"simbot-api/love.forte.simbot.utils/run-in-blocking.html","searchKeys":["runInBlocking","fun <T> runInBlocking(context: CoroutineContext = DefaultBlockingContext, block: suspend CoroutineScope.() -> T): T","love.forte.simbot.utils.runInBlocking"]},{"name":"fun <T> runInNoScopeBlocking(context: CoroutineContext = DefaultBlockingContext, block: suspend () -> T): T","description":"love.forte.simbot.utils.runInNoScopeBlocking","location":"simbot-api/love.forte.simbot.utils/run-in-no-scope-blocking.html","searchKeys":["runInNoScopeBlocking","fun <T> runInNoScopeBlocking(context: CoroutineContext = DefaultBlockingContext, block: suspend () -> T): T","love.forte.simbot.utils.runInNoScopeBlocking"]},{"name":"fun <T> runInNoScopeTimeoutBlocking(timeout: Long, context: CoroutineContext = DefaultBlockingContext, block: suspend () -> T): T","description":"love.forte.simbot.utils.runInNoScopeTimeoutBlocking","location":"simbot-api/love.forte.simbot.utils/run-in-no-scope-timeout-blocking.html","searchKeys":["runInNoScopeTimeoutBlocking","fun <T> runInNoScopeTimeoutBlocking(timeout: Long, context: CoroutineContext = DefaultBlockingContext, block: suspend () -> T): T","love.forte.simbot.utils.runInNoScopeTimeoutBlocking"]},{"name":"fun <T> runInTimeoutBlocking(timeout: Long, context: CoroutineContext = DefaultBlockingContext, block: suspend CoroutineScope.() -> T): T","description":"love.forte.simbot.utils.runInTimeoutBlocking","location":"simbot-api/love.forte.simbot.utils/run-in-timeout-blocking.html","searchKeys":["runInTimeoutBlocking","fun <T> runInTimeoutBlocking(timeout: Long, context: CoroutineContext = DefaultBlockingContext, block: suspend CoroutineScope.() -> T): T","love.forte.simbot.utils.runInTimeoutBlocking"]},{"name":"fun <T> suspendConsumer(isRunWithInterruptible: Boolean = true, function: Consumer<T>): suspend (T) -> Unit","description":"love.forte.simbot.utils.suspendConsumer","location":"simbot-api/love.forte.simbot.utils/suspend-consumer.html","searchKeys":["suspendConsumer","fun <T> suspendConsumer(isRunWithInterruptible: Boolean = true, function: Consumer<T>): suspend (T) -> Unit","love.forte.simbot.utils.suspendConsumer"]},{"name":"fun <T> waitBlocking(id: String, timeout: JavaDuration = JavaDuration.ZERO, blockingListener: BlockingContinuousSessionSelector<T>): T","description":"love.forte.simbot.event.ContinuousSessionContext.waitBlocking","location":"simbot-api/love.forte.simbot.event/-continuous-session-context/wait-blocking.html","searchKeys":["waitBlocking","fun <T> waitBlocking(id: String, timeout: JavaDuration = JavaDuration.ZERO, blockingListener: BlockingContinuousSessionSelector<T>): T","love.forte.simbot.event.ContinuousSessionContext.waitBlocking"]},{"name":"fun <T> waitBlocking(id: String, timeout: Long, timeUnit: TimeUnit, blockingListener: BlockingContinuousSessionSelector<T>): T","description":"love.forte.simbot.event.ContinuousSessionContext.waitBlocking","location":"simbot-api/love.forte.simbot.event/-continuous-session-context/wait-blocking.html","searchKeys":["waitBlocking","fun <T> waitBlocking(id: String, timeout: Long, timeUnit: TimeUnit, blockingListener: BlockingContinuousSessionSelector<T>): T","love.forte.simbot.event.ContinuousSessionContext.waitBlocking"]},{"name":"fun <T> waitBlocking(timeout: JavaDuration = JavaDuration.ZERO, blockingListener: BlockingContinuousSessionSelector<T>): T","description":"love.forte.simbot.event.ContinuousSessionContext.waitBlocking","location":"simbot-api/love.forte.simbot.event/-continuous-session-context/wait-blocking.html","searchKeys":["waitBlocking","fun <T> waitBlocking(timeout: JavaDuration = JavaDuration.ZERO, blockingListener: BlockingContinuousSessionSelector<T>): T","love.forte.simbot.event.ContinuousSessionContext.waitBlocking"]},{"name":"fun <T> waitBlocking(timeout: Long, timeUnit: TimeUnit, blockingListener: BlockingContinuousSessionSelector<T>): T","description":"love.forte.simbot.event.ContinuousSessionContext.waitBlocking","location":"simbot-api/love.forte.simbot.event/-continuous-session-context/wait-blocking.html","searchKeys":["waitBlocking","fun <T> waitBlocking(timeout: Long, timeUnit: TimeUnit, blockingListener: BlockingContinuousSessionSelector<T>): T","love.forte.simbot.event.ContinuousSessionContext.waitBlocking"]},{"name":"fun <V : Any> concurrentIDMapOf(): ConcurrentIDMaps<V>","description":"love.forte.simbot.concurrentIDMapOf","location":"simbot-api/love.forte.simbot/concurrent-i-d-map-of.html","searchKeys":["concurrentIDMapOf","fun <V : Any> concurrentIDMapOf(): ConcurrentIDMaps<V>","love.forte.simbot.concurrentIDMapOf"]},{"name":"fun <V : Any> concurrentIDMapOf(map: Map<ID, V>): ConcurrentIDMaps<V>","description":"love.forte.simbot.concurrentIDMapOf","location":"simbot-api/love.forte.simbot/concurrent-i-d-map-of.html","searchKeys":["concurrentIDMapOf","fun <V : Any> concurrentIDMapOf(map: Map<ID, V>): ConcurrentIDMaps<V>","love.forte.simbot.concurrentIDMapOf"]},{"name":"fun <V : Any> concurrentIDMapOf(vararg pairs: Pair<ID, V>): ConcurrentIDMaps<V>","description":"love.forte.simbot.concurrentIDMapOf","location":"simbot-api/love.forte.simbot/concurrent-i-d-map-of.html","searchKeys":["concurrentIDMapOf","fun <V : Any> concurrentIDMapOf(vararg pairs: Pair<ID, V>): ConcurrentIDMaps<V>","love.forte.simbot.concurrentIDMapOf"]},{"name":"fun <V : Any> idMapOf(map: Map<ID, V>): IDMaps<V>","description":"love.forte.simbot.idMapOf","location":"simbot-api/love.forte.simbot/id-map-of.html","searchKeys":["idMapOf","fun <V : Any> idMapOf(map: Map<ID, V>): IDMaps<V>","love.forte.simbot.idMapOf"]},{"name":"fun <V : Any> idMapOf(vararg pairs: Pair<ID, V>): IDMaps<V>","description":"love.forte.simbot.idMapOf","location":"simbot-api/love.forte.simbot/id-map-of.html","searchKeys":["idMapOf","fun <V : Any> idMapOf(vararg pairs: Pair<ID, V>): IDMaps<V>","love.forte.simbot.idMapOf"]},{"name":"fun <V : Any> mutableIDMapOf(): MutableIDMaps<V>","description":"love.forte.simbot.mutableIDMapOf","location":"simbot-api/love.forte.simbot/mutable-i-d-map-of.html","searchKeys":["mutableIDMapOf","fun <V : Any> mutableIDMapOf(): MutableIDMaps<V>","love.forte.simbot.mutableIDMapOf"]},{"name":"fun <V : Any> mutableIDMapOf(map: Map<ID, V>): MutableIDMaps<V>","description":"love.forte.simbot.mutableIDMapOf","location":"simbot-api/love.forte.simbot/mutable-i-d-map-of.html","searchKeys":["mutableIDMapOf","fun <V : Any> mutableIDMapOf(map: Map<ID, V>): MutableIDMaps<V>","love.forte.simbot.mutableIDMapOf"]},{"name":"fun <V : Any> mutableIDMapOf(vararg pairs: Pair<ID, V>): MutableIDMaps<V>","description":"love.forte.simbot.mutableIDMapOf","location":"simbot-api/love.forte.simbot/mutable-i-d-map-of.html","searchKeys":["mutableIDMapOf","fun <V : Any> mutableIDMapOf(vararg pairs: Pair<ID, V>): MutableIDMaps<V>","love.forte.simbot.mutableIDMapOf"]},{"name":"fun <V> emptyIDMap(): IDMaps<V>","description":"love.forte.simbot.emptyIDMap","location":"simbot-api/love.forte.simbot/empty-i-d-map.html","searchKeys":["emptyIDMap","fun <V> emptyIDMap(): IDMaps<V>","love.forte.simbot.emptyIDMap"]},{"name":"fun <V> idMapOf(): IDMaps<V>","description":"love.forte.simbot.idMapOf","location":"simbot-api/love.forte.simbot/id-map-of.html","searchKeys":["idMapOf","fun <V> idMapOf(): IDMaps<V>","love.forte.simbot.idMapOf"]},{"name":"fun <out T> SimpleChannelIteratorItems(channelIteratorFactory: (Items.PreprocessingProperties) -> ChannelIterator<T>)","description":"love.forte.simbot.utils.item.SimpleChannelIteratorItems.SimpleChannelIteratorItems","location":"simbot-api/love.forte.simbot.utils.item/-simple-channel-iterator-items/-simple-channel-iterator-items.html","searchKeys":["SimpleChannelIteratorItems","fun <out T> SimpleChannelIteratorItems(channelIteratorFactory: (Items.PreprocessingProperties) -> ChannelIterator<T>)","love.forte.simbot.utils.item.SimpleChannelIteratorItems.SimpleChannelIteratorItems"]},{"name":"fun <out T> SimpleIteratorItems(iteratorFactory: (Items.PreprocessingProperties) -> Iterator<T>)","description":"love.forte.simbot.utils.item.SimpleIteratorItems.SimpleIteratorItems","location":"simbot-api/love.forte.simbot.utils.item/-simple-iterator-items/-simple-iterator-items.html","searchKeys":["SimpleIteratorItems","fun <out T> SimpleIteratorItems(iteratorFactory: (Items.PreprocessingProperties) -> Iterator<T>)","love.forte.simbot.utils.item.SimpleIteratorItems.SimpleIteratorItems"]},{"name":"fun ActionException()","description":"love.forte.simbot.action.ActionException.ActionException","location":"simbot-api/love.forte.simbot.action/-action-exception/-action-exception.html","searchKeys":["ActionException","fun ActionException()","love.forte.simbot.action.ActionException.ActionException"]},{"name":"fun ActionException(cause: Throwable?)","description":"love.forte.simbot.action.ActionException.ActionException","location":"simbot-api/love.forte.simbot.action/-action-exception/-action-exception.html","searchKeys":["ActionException","fun ActionException(cause: Throwable?)","love.forte.simbot.action.ActionException.ActionException"]},{"name":"fun ActionException(message: String?)","description":"love.forte.simbot.action.ActionException.ActionException","location":"simbot-api/love.forte.simbot.action/-action-exception/-action-exception.html","searchKeys":["ActionException","fun ActionException(message: String?)","love.forte.simbot.action.ActionException.ActionException"]},{"name":"fun ActionException(message: String?, cause: Throwable?)","description":"love.forte.simbot.action.ActionException.ActionException","location":"simbot-api/love.forte.simbot.action/-action-exception/-action-exception.html","searchKeys":["ActionException","fun ActionException(message: String?, cause: Throwable?)","love.forte.simbot.action.ActionException.ActionException"]},{"name":"fun AggregatedMessageReceipt()","description":"love.forte.simbot.message.AggregatedMessageReceipt.AggregatedMessageReceipt","location":"simbot-api/love.forte.simbot.message/-aggregated-message-receipt/-aggregated-message-receipt.html","searchKeys":["AggregatedMessageReceipt","fun AggregatedMessageReceipt()","love.forte.simbot.message.AggregatedMessageReceipt.AggregatedMessageReceipt"]},{"name":"fun ApplicationBuilder<*>.installAll(classLoader: ClassLoader = this.currentClassLoader)","description":"love.forte.simbot.installAll","location":"simbot-api/love.forte.simbot/install-all.html","searchKeys":["installAll","fun ApplicationBuilder<*>.installAll(classLoader: ClassLoader = this.currentClassLoader)","love.forte.simbot.installAll"]},{"name":"fun ApplicationConfiguration()","description":"love.forte.simbot.application.ApplicationConfiguration.ApplicationConfiguration","location":"simbot-api/love.forte.simbot.application/-application-configuration/-application-configuration.html","searchKeys":["ApplicationConfiguration","fun ApplicationConfiguration()","love.forte.simbot.application.ApplicationConfiguration.ApplicationConfiguration"]},{"name":"fun AsyncEventResult()","description":"love.forte.simbot.event.AsyncEventResult.AsyncEventResult","location":"simbot-api/love.forte.simbot.event/-async-event-result/-async-event-result.html","searchKeys":["AsyncEventResult","fun AsyncEventResult()","love.forte.simbot.event.AsyncEventResult.AsyncEventResult"]},{"name":"fun At(target: ID, type: String = \"user\", originContent: String = \"@\")","description":"love.forte.simbot.message.At.At","location":"simbot-api/love.forte.simbot.message/-at/-at.html","searchKeys":["At","fun At(target: ID, type: String = \"user\", originContent: String = \"@\")","love.forte.simbot.message.At.At"]},{"name":"fun AttributeMutableMap(values: MutableMap<Attribute<*>, Any> = mutableMapOf())","description":"love.forte.simbot.AttributeMutableMap.AttributeMutableMap","location":"simbot-api/love.forte.simbot/-attribute-mutable-map/-attribute-mutable-map.html","searchKeys":["AttributeMutableMap","fun AttributeMutableMap(values: MutableMap<Attribute<*>, Any> = mutableMapOf())","love.forte.simbot.AttributeMutableMap.AttributeMutableMap"]},{"name":"fun BaseEventKey(idValue: String, parents: Set<Event.Key<*>> = emptySet())","description":"love.forte.simbot.event.BaseEventKey.BaseEventKey","location":"simbot-api/love.forte.simbot.event/-base-event-key/-base-event-key.html","searchKeys":["BaseEventKey","fun BaseEventKey(idValue: String, parents: Set<Event.Key<*>> = emptySet())","love.forte.simbot.event.BaseEventKey.BaseEventKey"]},{"name":"fun BaseEventKey(idValue: String, vararg parents: Event.Key<*>)","description":"love.forte.simbot.event.BaseEventKey.BaseEventKey","location":"simbot-api/love.forte.simbot.event/-base-event-key/-base-event-key.html","searchKeys":["BaseEventKey","fun BaseEventKey(idValue: String, vararg parents: Event.Key<*>)","love.forte.simbot.event.BaseEventKey.BaseEventKey"]},{"name":"fun BaseItems()","description":"love.forte.simbot.utils.item.BaseItems.BaseItems","location":"simbot-api/love.forte.simbot.utils.item/-base-items/-base-items.html","searchKeys":["BaseItems","fun BaseItems()","love.forte.simbot.utils.item.BaseItems.BaseItems"]},{"name":"fun BigDecimalID(value: BigDecimal)","description":"love.forte.simbot.BigDecimalID.BigDecimalID","location":"simbot-api/love.forte.simbot/-big-decimal-i-d/-big-decimal-i-d.html","searchKeys":["BigDecimalID","fun BigDecimalID(value: BigDecimal)","love.forte.simbot.BigDecimalID.BigDecimalID"]},{"name":"fun BigIntegerID(value: BigInteger)","description":"love.forte.simbot.BigIntegerID.BigIntegerID","location":"simbot-api/love.forte.simbot/-big-integer-i-d/-big-integer-i-d.html","searchKeys":["BigIntegerID","fun BigIntegerID(value: BigInteger)","love.forte.simbot.BigIntegerID.BigIntegerID"]},{"name":"fun BinaryFormatDeserializableResourceDecoder()","description":"love.forte.simbot.resources.BinaryFormatDeserializableResourceDecoder.BinaryFormatDeserializableResourceDecoder","location":"simbot-api/love.forte.simbot.resources/-binary-format-deserializable-resource-decoder/-binary-format-deserializable-resource-decoder.html","searchKeys":["BinaryFormatDeserializableResourceDecoder","fun BinaryFormatDeserializableResourceDecoder()","love.forte.simbot.resources.BinaryFormatDeserializableResourceDecoder.BinaryFormatDeserializableResourceDecoder"]},{"name":"fun BotAlreadyRegisteredException()","description":"love.forte.simbot.bot.BotAlreadyRegisteredException.BotAlreadyRegisteredException","location":"simbot-api/love.forte.simbot.bot/-bot-already-registered-exception/-bot-already-registered-exception.html","searchKeys":["BotAlreadyRegisteredException","fun BotAlreadyRegisteredException()","love.forte.simbot.bot.BotAlreadyRegisteredException.BotAlreadyRegisteredException"]},{"name":"fun BotAlreadyRegisteredException(cause: Throwable?)","description":"love.forte.simbot.bot.BotAlreadyRegisteredException.BotAlreadyRegisteredException","location":"simbot-api/love.forte.simbot.bot/-bot-already-registered-exception/-bot-already-registered-exception.html","searchKeys":["BotAlreadyRegisteredException","fun BotAlreadyRegisteredException(cause: Throwable?)","love.forte.simbot.bot.BotAlreadyRegisteredException.BotAlreadyRegisteredException"]},{"name":"fun BotAlreadyRegisteredException(message: String?)","description":"love.forte.simbot.bot.BotAlreadyRegisteredException.BotAlreadyRegisteredException","location":"simbot-api/love.forte.simbot.bot/-bot-already-registered-exception/-bot-already-registered-exception.html","searchKeys":["BotAlreadyRegisteredException","fun BotAlreadyRegisteredException(message: String?)","love.forte.simbot.bot.BotAlreadyRegisteredException.BotAlreadyRegisteredException"]},{"name":"fun BotAlreadyRegisteredException(message: String?, cause: Throwable?)","description":"love.forte.simbot.bot.BotAlreadyRegisteredException.BotAlreadyRegisteredException","location":"simbot-api/love.forte.simbot.bot/-bot-already-registered-exception/-bot-already-registered-exception.html","searchKeys":["BotAlreadyRegisteredException","fun BotAlreadyRegisteredException(message: String?, cause: Throwable?)","love.forte.simbot.bot.BotAlreadyRegisteredException.BotAlreadyRegisteredException"]},{"name":"fun BotManager()","description":"love.forte.simbot.bot.BotManager.BotManager","location":"simbot-api/love.forte.simbot.bot/-bot-manager/-bot-manager.html","searchKeys":["BotManager","fun BotManager()","love.forte.simbot.bot.BotManager.BotManager"]},{"name":"fun ByteArray.toHex(): String","description":"love.forte.simbot.utils.toHex","location":"simbot-api/love.forte.simbot.utils/to-hex.html","searchKeys":["toHex","fun ByteArray.toHex(): String","love.forte.simbot.utils.toHex"]},{"name":"fun ByteArray.toResource(name: String): ByteArrayResource","description":"love.forte.simbot.resources.Resource.Companion.toResource","location":"simbot-api/love.forte.simbot.resources/-resource/-companion/to-resource.html","searchKeys":["toResource","fun ByteArray.toResource(name: String): ByteArrayResource","love.forte.simbot.resources.Resource.Companion.toResource"]},{"name":"fun ByteArrayBotVerifyInfo(decoder: BotVerifyInfoDecoder, name: String, value: ByteArray)","description":"love.forte.simbot.bot.ByteArrayBotVerifyInfo.ByteArrayBotVerifyInfo","location":"simbot-api/love.forte.simbot.bot/-byte-array-bot-verify-info/-byte-array-bot-verify-info.html","searchKeys":["ByteArrayBotVerifyInfo","fun ByteArrayBotVerifyInfo(decoder: BotVerifyInfoDecoder, name: String, value: ByteArray)","love.forte.simbot.bot.ByteArrayBotVerifyInfo.ByteArrayBotVerifyInfo"]},{"name":"fun ByteArrayResource(name: String, byteArray: ByteArray)","description":"love.forte.simbot.resources.ByteArrayResource.ByteArrayResource","location":"simbot-api/love.forte.simbot.resources/-byte-array-resource/-byte-array-resource.html","searchKeys":["ByteArrayResource","fun ByteArrayResource(name: String, byteArray: ByteArray)","love.forte.simbot.resources.ByteArrayResource.ByteArrayResource"]},{"name":"fun CharSequenceID(value: CharSequence)","description":"love.forte.simbot.CharSequenceID.CharSequenceID","location":"simbot-api/love.forte.simbot/-char-sequence-i-d/-char-sequence-i-d.html","searchKeys":["CharSequenceID","fun CharSequenceID(value: CharSequence)","love.forte.simbot.CharSequenceID.CharSequenceID"]},{"name":"fun Collection<SingleMessageReceipt>.aggregation(): AggregatedMessageReceipt","description":"love.forte.simbot.message.aggregation","location":"simbot-api/love.forte.simbot.message/aggregation.html","searchKeys":["aggregation","fun Collection<SingleMessageReceipt>.aggregation(): AggregatedMessageReceipt","love.forte.simbot.message.aggregation"]},{"name":"fun ComponentAlreadyExistsException()","description":"love.forte.simbot.ComponentAlreadyExistsException.ComponentAlreadyExistsException","location":"simbot-api/love.forte.simbot/-component-already-exists-exception/-component-already-exists-exception.html","searchKeys":["ComponentAlreadyExistsException","fun ComponentAlreadyExistsException()","love.forte.simbot.ComponentAlreadyExistsException.ComponentAlreadyExistsException"]},{"name":"fun ComponentAlreadyExistsException(cause: Throwable?)","description":"love.forte.simbot.ComponentAlreadyExistsException.ComponentAlreadyExistsException","location":"simbot-api/love.forte.simbot/-component-already-exists-exception/-component-already-exists-exception.html","searchKeys":["ComponentAlreadyExistsException","fun ComponentAlreadyExistsException(cause: Throwable?)","love.forte.simbot.ComponentAlreadyExistsException.ComponentAlreadyExistsException"]},{"name":"fun ComponentAlreadyExistsException(message: String?)","description":"love.forte.simbot.ComponentAlreadyExistsException.ComponentAlreadyExistsException","location":"simbot-api/love.forte.simbot/-component-already-exists-exception/-component-already-exists-exception.html","searchKeys":["ComponentAlreadyExistsException","fun ComponentAlreadyExistsException(message: String?)","love.forte.simbot.ComponentAlreadyExistsException.ComponentAlreadyExistsException"]},{"name":"fun ComponentAlreadyExistsException(message: String?, cause: Throwable?)","description":"love.forte.simbot.ComponentAlreadyExistsException.ComponentAlreadyExistsException","location":"simbot-api/love.forte.simbot/-component-already-exists-exception/-component-already-exists-exception.html","searchKeys":["ComponentAlreadyExistsException","fun ComponentAlreadyExistsException(message: String?, cause: Throwable?)","love.forte.simbot.ComponentAlreadyExistsException.ComponentAlreadyExistsException"]},{"name":"fun ComponentMismatchException()","description":"love.forte.simbot.bot.ComponentMismatchException.ComponentMismatchException","location":"simbot-api/love.forte.simbot.bot/-component-mismatch-exception/-component-mismatch-exception.html","searchKeys":["ComponentMismatchException","fun ComponentMismatchException()","love.forte.simbot.bot.ComponentMismatchException.ComponentMismatchException"]},{"name":"fun ComponentMismatchException(cause: Throwable?)","description":"love.forte.simbot.bot.ComponentMismatchException.ComponentMismatchException","location":"simbot-api/love.forte.simbot.bot/-component-mismatch-exception/-component-mismatch-exception.html","searchKeys":["ComponentMismatchException","fun ComponentMismatchException(cause: Throwable?)","love.forte.simbot.bot.ComponentMismatchException.ComponentMismatchException"]},{"name":"fun ComponentMismatchException(message: String?)","description":"love.forte.simbot.bot.ComponentMismatchException.ComponentMismatchException","location":"simbot-api/love.forte.simbot.bot/-component-mismatch-exception/-component-mismatch-exception.html","searchKeys":["ComponentMismatchException","fun ComponentMismatchException(message: String?)","love.forte.simbot.bot.ComponentMismatchException.ComponentMismatchException"]},{"name":"fun ComponentMismatchException(message: String?, cause: Throwable?)","description":"love.forte.simbot.bot.ComponentMismatchException.ComponentMismatchException","location":"simbot-api/love.forte.simbot.bot/-component-mismatch-exception/-component-mismatch-exception.html","searchKeys":["ComponentMismatchException","fun ComponentMismatchException(message: String?, cause: Throwable?)","love.forte.simbot.bot.ComponentMismatchException.ComponentMismatchException"]},{"name":"fun ComponentModel(component: String? = null)","description":"love.forte.simbot.bot.ComponentModel.ComponentModel","location":"simbot-api/love.forte.simbot.bot/-component-model/-component-model.html","searchKeys":["ComponentModel","fun ComponentModel(component: String? = null)","love.forte.simbot.bot.ComponentModel.ComponentModel"]},{"name":"fun ContinuousSessionContext()","description":"love.forte.simbot.event.ContinuousSessionContext.ContinuousSessionContext","location":"simbot-api/love.forte.simbot.event/-continuous-session-context/-continuous-session-context.html","searchKeys":["ContinuousSessionContext","fun ContinuousSessionContext()","love.forte.simbot.event.ContinuousSessionContext.ContinuousSessionContext"]},{"name":"fun CyclicIterator()","description":"love.forte.simbot.utils.CyclicIterator.CyclicIterator","location":"simbot-api/love.forte.simbot.utils/-cyclic-iterator/-cyclic-iterator.html","searchKeys":["CyclicIterator","fun CyclicIterator()","love.forte.simbot.utils.CyclicIterator.CyclicIterator"]},{"name":"fun DecoderBotVerifyInfo()","description":"love.forte.simbot.bot.DecoderBotVerifyInfo.DecoderBotVerifyInfo","location":"simbot-api/love.forte.simbot.bot/-decoder-bot-verify-info/-decoder-bot-verify-info.html","searchKeys":["DecoderBotVerifyInfo","fun DecoderBotVerifyInfo()","love.forte.simbot.bot.DecoderBotVerifyInfo.DecoderBotVerifyInfo"]},{"name":"fun DefaultBlockingDispatcherTaskRejectedExecutionException(runnable: Runnable, executor: Executor)","description":"love.forte.simbot.utils.DefaultBlockingDispatcherTaskRejectedExecutionException.DefaultBlockingDispatcherTaskRejectedExecutionException","location":"simbot-api/love.forte.simbot.utils/-default-blocking-dispatcher-task-rejected-execution-exception/-default-blocking-dispatcher-task-rejected-execution-exception.html","searchKeys":["DefaultBlockingDispatcherTaskRejectedExecutionException","fun DefaultBlockingDispatcherTaskRejectedExecutionException(runnable: Runnable, executor: Executor)","love.forte.simbot.utils.DefaultBlockingDispatcherTaskRejectedExecutionException.DefaultBlockingDispatcherTaskRejectedExecutionException"]},{"name":"fun DelayableCompletableFuture()","description":"love.forte.simbot.ability.DelayableCompletableFuture.DelayableCompletableFuture","location":"simbot-api/love.forte.simbot.ability/-delayable-completable-future/-delayable-completable-future.html","searchKeys":["DelayableCompletableFuture","fun DelayableCompletableFuture()","love.forte.simbot.ability.DelayableCompletableFuture.DelayableCompletableFuture"]},{"name":"fun DoubleID(number: Double)","description":"love.forte.simbot.DoubleID.DoubleID","location":"simbot-api/love.forte.simbot/-double-i-d/-double-i-d.html","searchKeys":["DoubleID","fun DoubleID(number: Double)","love.forte.simbot.DoubleID.DoubleID"]},{"name":"fun Emoji(id: ID)","description":"love.forte.simbot.message.Emoji.Emoji","location":"simbot-api/love.forte.simbot.message/-emoji/-emoji.html","searchKeys":["Emoji","fun Emoji(id: ID)","love.forte.simbot.message.Emoji.Emoji"]},{"name":"fun Event.nextBlocking(id: String = randomIdStr(), timeout: JavaDuration = JavaDuration.ZERO): Event","description":"love.forte.simbot.event.ContinuousSessionContext.nextBlocking","location":"simbot-api/love.forte.simbot.event/-continuous-session-context/next-blocking.html","searchKeys":["nextBlocking","fun Event.nextBlocking(id: String = randomIdStr(), timeout: JavaDuration = JavaDuration.ZERO): Event","love.forte.simbot.event.ContinuousSessionContext.nextBlocking"]},{"name":"fun Event.nextBlocking(id: String = randomIdStr(), timeout: Long, timeUnit: TimeUnit): Event","description":"love.forte.simbot.event.ContinuousSessionContext.nextBlocking","location":"simbot-api/love.forte.simbot.event/-continuous-session-context/next-blocking.html","searchKeys":["nextBlocking","fun Event.nextBlocking(id: String = randomIdStr(), timeout: Long, timeUnit: TimeUnit): Event","love.forte.simbot.event.ContinuousSessionContext.nextBlocking"]},{"name":"fun Event.nextMessageBlocking(id: String = randomIdStr(), key: Event.Key<out MessageEvent> = MessageEvent, timeout: JavaDuration = JavaDuration.ZERO): MessageContent","description":"love.forte.simbot.event.ContinuousSessionContext.nextMessageBlocking","location":"simbot-api/love.forte.simbot.event/-continuous-session-context/next-message-blocking.html","searchKeys":["nextMessageBlocking","fun Event.nextMessageBlocking(id: String = randomIdStr(), key: Event.Key<out MessageEvent> = MessageEvent, timeout: JavaDuration = JavaDuration.ZERO): MessageContent","love.forte.simbot.event.ContinuousSessionContext.nextMessageBlocking"]},{"name":"fun Event.nextMessageBlocking(id: String = randomIdStr(), key: Event.Key<out MessageEvent> = MessageEvent, timeout: Long, timeUnit: TimeUnit): MessageContent","description":"love.forte.simbot.event.ContinuousSessionContext.nextMessageBlocking","location":"simbot-api/love.forte.simbot.event/-continuous-session-context/next-message-blocking.html","searchKeys":["nextMessageBlocking","fun Event.nextMessageBlocking(id: String = randomIdStr(), key: Event.Key<out MessageEvent> = MessageEvent, timeout: Long, timeUnit: TimeUnit): MessageContent","love.forte.simbot.event.ContinuousSessionContext.nextMessageBlocking"]},{"name":"fun Event.nextMessageBlocking(id: String = randomIdStr(), timeout: JavaDuration): MessageContent","description":"love.forte.simbot.event.ContinuousSessionContext.nextMessageBlocking","location":"simbot-api/love.forte.simbot.event/-continuous-session-context/next-message-blocking.html","searchKeys":["nextMessageBlocking","fun Event.nextMessageBlocking(id: String = randomIdStr(), timeout: JavaDuration): MessageContent","love.forte.simbot.event.ContinuousSessionContext.nextMessageBlocking"]},{"name":"fun Event.nextMessageBlocking(key: Event.Key<out MessageEvent>, timeout: JavaDuration = JavaDuration.ZERO): MessageContent","description":"love.forte.simbot.event.ContinuousSessionContext.nextMessageBlocking","location":"simbot-api/love.forte.simbot.event/-continuous-session-context/next-message-blocking.html","searchKeys":["nextMessageBlocking","fun Event.nextMessageBlocking(key: Event.Key<out MessageEvent>, timeout: JavaDuration = JavaDuration.ZERO): MessageContent","love.forte.simbot.event.ContinuousSessionContext.nextMessageBlocking"]},{"name":"fun Event.nextMessageBlocking(key: Event.Key<out MessageEvent>, timeout: Long, timeUnit: TimeUnit): MessageContent","description":"love.forte.simbot.event.ContinuousSessionContext.nextMessageBlocking","location":"simbot-api/love.forte.simbot.event/-continuous-session-context/next-message-blocking.html","searchKeys":["nextMessageBlocking","fun Event.nextMessageBlocking(key: Event.Key<out MessageEvent>, timeout: Long, timeUnit: TimeUnit): MessageContent","love.forte.simbot.event.ContinuousSessionContext.nextMessageBlocking"]},{"name":"fun EventListener.toRegistrationDescription(block: EventListenerRegistrationDescription.() -> Unit): EventListenerRegistrationDescription","description":"love.forte.simbot.event.EventListenerRegistrationDescription.Companion.toRegistrationDescription","location":"simbot-api/love.forte.simbot.event/-event-listener-registration-description/-companion/to-registration-description.html","searchKeys":["toRegistrationDescription","fun EventListener.toRegistrationDescription(block: EventListenerRegistrationDescription.() -> Unit): EventListenerRegistrationDescription","love.forte.simbot.event.EventListenerRegistrationDescription.Companion.toRegistrationDescription"]},{"name":"fun EventListener.toRegistrationDescription(priority: Int = DEFAULT_PRIORITY, isAsync: Boolean = DEFAULT_ASYNC): EventListenerRegistrationDescription","description":"love.forte.simbot.event.EventListenerRegistrationDescription.Companion.toRegistrationDescription","location":"simbot-api/love.forte.simbot.event/-event-listener-registration-description/-companion/to-registration-description.html","searchKeys":["toRegistrationDescription","fun EventListener.toRegistrationDescription(priority: Int = DEFAULT_PRIORITY, isAsync: Boolean = DEFAULT_ASYNC): EventListenerRegistrationDescription","love.forte.simbot.event.EventListenerRegistrationDescription.Companion.toRegistrationDescription"]},{"name":"fun EventListenerProcessingException()","description":"love.forte.simbot.event.EventListenerProcessingException.EventListenerProcessingException","location":"simbot-api/love.forte.simbot.event/-event-listener-processing-exception/-event-listener-processing-exception.html","searchKeys":["EventListenerProcessingException","fun EventListenerProcessingException()","love.forte.simbot.event.EventListenerProcessingException.EventListenerProcessingException"]},{"name":"fun EventListenerProcessingException(cause: Throwable?)","description":"love.forte.simbot.event.EventListenerProcessingException.EventListenerProcessingException","location":"simbot-api/love.forte.simbot.event/-event-listener-processing-exception/-event-listener-processing-exception.html","searchKeys":["EventListenerProcessingException","fun EventListenerProcessingException(cause: Throwable?)","love.forte.simbot.event.EventListenerProcessingException.EventListenerProcessingException"]},{"name":"fun EventListenerProcessingException(message: String?)","description":"love.forte.simbot.event.EventListenerProcessingException.EventListenerProcessingException","location":"simbot-api/love.forte.simbot.event/-event-listener-processing-exception/-event-listener-processing-exception.html","searchKeys":["EventListenerProcessingException","fun EventListenerProcessingException(message: String?)","love.forte.simbot.event.EventListenerProcessingException.EventListenerProcessingException"]},{"name":"fun EventListenerProcessingException(message: String?, cause: Throwable?)","description":"love.forte.simbot.event.EventListenerProcessingException.EventListenerProcessingException","location":"simbot-api/love.forte.simbot.event/-event-listener-processing-exception/-event-listener-processing-exception.html","searchKeys":["EventListenerProcessingException","fun EventListenerProcessingException(message: String?, cause: Throwable?)","love.forte.simbot.event.EventListenerProcessingException.EventListenerProcessingException"]},{"name":"fun EventListenerRegistrationDescription()","description":"love.forte.simbot.event.EventListenerRegistrationDescription.EventListenerRegistrationDescription","location":"simbot-api/love.forte.simbot.event/-event-listener-registration-description/-event-listener-registration-description.html","searchKeys":["EventListenerRegistrationDescription","fun EventListenerRegistrationDescription()","love.forte.simbot.event.EventListenerRegistrationDescription.EventListenerRegistrationDescription"]},{"name":"fun EventProcessingContext.nextBlocking(id: String = randomIdStr(), timeout: JavaDuration = JavaDuration.ZERO): Event","description":"love.forte.simbot.event.ContinuousSessionContext.nextBlocking","location":"simbot-api/love.forte.simbot.event/-continuous-session-context/next-blocking.html","searchKeys":["nextBlocking","fun EventProcessingContext.nextBlocking(id: String = randomIdStr(), timeout: JavaDuration = JavaDuration.ZERO): Event","love.forte.simbot.event.ContinuousSessionContext.nextBlocking"]},{"name":"fun EventProcessingContext.nextBlocking(id: String = randomIdStr(), timeout: Long, timeUnit: TimeUnit): Event","description":"love.forte.simbot.event.ContinuousSessionContext.nextBlocking","location":"simbot-api/love.forte.simbot.event/-continuous-session-context/next-blocking.html","searchKeys":["nextBlocking","fun EventProcessingContext.nextBlocking(id: String = randomIdStr(), timeout: Long, timeUnit: TimeUnit): Event","love.forte.simbot.event.ContinuousSessionContext.nextBlocking"]},{"name":"fun EventProcessingContext.nextMessageBlocking(id: String = randomIdStr(), key: Event.Key<out MessageEvent> = MessageEvent, timeout: JavaDuration = JavaDuration.ZERO): MessageContent","description":"love.forte.simbot.event.ContinuousSessionContext.nextMessageBlocking","location":"simbot-api/love.forte.simbot.event/-continuous-session-context/next-message-blocking.html","searchKeys":["nextMessageBlocking","fun EventProcessingContext.nextMessageBlocking(id: String = randomIdStr(), key: Event.Key<out MessageEvent> = MessageEvent, timeout: JavaDuration = JavaDuration.ZERO): MessageContent","love.forte.simbot.event.ContinuousSessionContext.nextMessageBlocking"]},{"name":"fun EventProcessingContext.nextMessageBlocking(id: String = randomIdStr(), key: Event.Key<out MessageEvent> = MessageEvent, timeout: Long, timeUnit: TimeUnit): MessageContent","description":"love.forte.simbot.event.ContinuousSessionContext.nextMessageBlocking","location":"simbot-api/love.forte.simbot.event/-continuous-session-context/next-message-blocking.html","searchKeys":["nextMessageBlocking","fun EventProcessingContext.nextMessageBlocking(id: String = randomIdStr(), key: Event.Key<out MessageEvent> = MessageEvent, timeout: Long, timeUnit: TimeUnit): MessageContent","love.forte.simbot.event.ContinuousSessionContext.nextMessageBlocking"]},{"name":"fun EventProcessingContext.nextMessageBlocking(id: String = randomIdStr(), timeout: JavaDuration): MessageContent","description":"love.forte.simbot.event.ContinuousSessionContext.nextMessageBlocking","location":"simbot-api/love.forte.simbot.event/-continuous-session-context/next-message-blocking.html","searchKeys":["nextMessageBlocking","fun EventProcessingContext.nextMessageBlocking(id: String = randomIdStr(), timeout: JavaDuration): MessageContent","love.forte.simbot.event.ContinuousSessionContext.nextMessageBlocking"]},{"name":"fun EventProcessingContext.nextMessageBlocking(key: Event.Key<out MessageEvent>, timeout: JavaDuration = JavaDuration.ZERO): MessageContent","description":"love.forte.simbot.event.ContinuousSessionContext.nextMessageBlocking","location":"simbot-api/love.forte.simbot.event/-continuous-session-context/next-message-blocking.html","searchKeys":["nextMessageBlocking","fun EventProcessingContext.nextMessageBlocking(key: Event.Key<out MessageEvent>, timeout: JavaDuration = JavaDuration.ZERO): MessageContent","love.forte.simbot.event.ContinuousSessionContext.nextMessageBlocking"]},{"name":"fun EventProcessingContext.nextMessageBlocking(key: Event.Key<out MessageEvent>, timeout: Long, timeUnit: TimeUnit): MessageContent","description":"love.forte.simbot.event.ContinuousSessionContext.nextMessageBlocking","location":"simbot-api/love.forte.simbot.event/-continuous-session-context/next-message-blocking.html","searchKeys":["nextMessageBlocking","fun EventProcessingContext.nextMessageBlocking(key: Event.Key<out MessageEvent>, timeout: Long, timeUnit: TimeUnit): MessageContent","love.forte.simbot.event.ContinuousSessionContext.nextMessageBlocking"]},{"name":"fun EventProcessingException()","description":"love.forte.simbot.event.EventProcessingException.EventProcessingException","location":"simbot-api/love.forte.simbot.event/-event-processing-exception/-event-processing-exception.html","searchKeys":["EventProcessingException","fun EventProcessingException()","love.forte.simbot.event.EventProcessingException.EventProcessingException"]},{"name":"fun EventProcessingException(cause: Throwable?)","description":"love.forte.simbot.event.EventProcessingException.EventProcessingException","location":"simbot-api/love.forte.simbot.event/-event-processing-exception/-event-processing-exception.html","searchKeys":["EventProcessingException","fun EventProcessingException(cause: Throwable?)","love.forte.simbot.event.EventProcessingException.EventProcessingException"]},{"name":"fun EventProcessingException(message: String?)","description":"love.forte.simbot.event.EventProcessingException.EventProcessingException","location":"simbot-api/love.forte.simbot.event/-event-processing-exception/-event-processing-exception.html","searchKeys":["EventProcessingException","fun EventProcessingException(message: String?)","love.forte.simbot.event.EventProcessingException.EventProcessingException"]},{"name":"fun EventProcessingException(message: String?, cause: Throwable?)","description":"love.forte.simbot.event.EventProcessingException.EventProcessingException","location":"simbot-api/love.forte.simbot.event/-event-processing-exception/-event-processing-exception.html","searchKeys":["EventProcessingException","fun EventProcessingException(message: String?, cause: Throwable?)","love.forte.simbot.event.EventProcessingException.EventProcessingException"]},{"name":"fun Face(id: ID)","description":"love.forte.simbot.message.Face.Face","location":"simbot-api/love.forte.simbot.message/-face/-face.html","searchKeys":["Face","fun Face(id: ID)","love.forte.simbot.message.Face.Face"]},{"name":"fun File.toResource(name: String = toString()): FileResource","description":"love.forte.simbot.resources.Resource.Companion.toResource","location":"simbot-api/love.forte.simbot.resources/-resource/-companion/to-resource.html","searchKeys":["toResource","fun File.toResource(name: String = toString()): FileResource","love.forte.simbot.resources.Resource.Companion.toResource"]},{"name":"fun FileResource(file: File, name: String = file.toString(), doClose: () -> Unit = {})","description":"love.forte.simbot.resources.FileResource.FileResource","location":"simbot-api/love.forte.simbot.resources/-file-resource/-file-resource.html","searchKeys":["FileResource","fun FileResource(file: File, name: String = file.toString(), doClose: () -> Unit = {})","love.forte.simbot.resources.FileResource.FileResource"]},{"name":"fun FloatID(number: Float)","description":"love.forte.simbot.FloatID.FloatID","location":"simbot-api/love.forte.simbot/-float-i-d/-float-i-d.html","searchKeys":["FloatID","fun FloatID(number: Float)","love.forte.simbot.FloatID.FloatID"]},{"name":"fun ID.toCharSequenceID(): CharSequenceID","description":"love.forte.simbot.toCharSequenceID","location":"simbot-api/love.forte.simbot/to-char-sequence-i-d.html","searchKeys":["toCharSequenceID","fun ID.toCharSequenceID(): CharSequenceID","love.forte.simbot.toCharSequenceID"]},{"name":"fun ID.tryToLong(): Long","description":"love.forte.simbot.tryToLong","location":"simbot-api/love.forte.simbot/try-to-long.html","searchKeys":["tryToLong","fun ID.tryToLong(): Long","love.forte.simbot.tryToLong"]},{"name":"fun ID.tryToLongID(): LongID","description":"love.forte.simbot.tryToLongID","location":"simbot-api/love.forte.simbot/try-to-long-i-d.html","searchKeys":["tryToLongID","fun ID.tryToLongID(): LongID","love.forte.simbot.tryToLongID"]},{"name":"fun ID.tryToNumericalID(intAsLong: Boolean = true): NumericalID<*>","description":"love.forte.simbot.tryToNumericalID","location":"simbot-api/love.forte.simbot/try-to-numerical-i-d.html","searchKeys":["tryToNumericalID","fun ID.tryToNumericalID(intAsLong: Boolean = true): NumericalID<*>","love.forte.simbot.tryToNumericalID"]},{"name":"fun IDException()","description":"love.forte.simbot.IDException.IDException","location":"simbot-api/love.forte.simbot/-i-d-exception/-i-d-exception.html","searchKeys":["IDException","fun IDException()","love.forte.simbot.IDException.IDException"]},{"name":"fun IDException(cause: Throwable?)","description":"love.forte.simbot.IDException.IDException","location":"simbot-api/love.forte.simbot/-i-d-exception/-i-d-exception.html","searchKeys":["IDException","fun IDException(cause: Throwable?)","love.forte.simbot.IDException.IDException"]},{"name":"fun IDException(message: String?)","description":"love.forte.simbot.IDException.IDException","location":"simbot-api/love.forte.simbot/-i-d-exception/-i-d-exception.html","searchKeys":["IDException","fun IDException(message: String?)","love.forte.simbot.IDException.IDException"]},{"name":"fun IDException(message: String?, cause: Throwable?)","description":"love.forte.simbot.IDException.IDException","location":"simbot-api/love.forte.simbot/-i-d-exception/-i-d-exception.html","searchKeys":["IDException","fun IDException(message: String?, cause: Throwable?)","love.forte.simbot.IDException.IDException"]},{"name":"fun InputStream.toBotVerifyInfo(decoder: BotVerifyInfoDecoder, infoName: String): ByteArrayBotVerifyInfo","description":"love.forte.simbot.bot.toBotVerifyInfo","location":"simbot-api/love.forte.simbot.bot/to-bot-verify-info.html","searchKeys":["toBotVerifyInfo","fun InputStream.toBotVerifyInfo(decoder: BotVerifyInfoDecoder, infoName: String): ByteArrayBotVerifyInfo","love.forte.simbot.bot.toBotVerifyInfo"]},{"name":"fun InputStream.toResource(name: String? = null): StandardResource","description":"love.forte.simbot.resources.Resource.Companion.toResource","location":"simbot-api/love.forte.simbot.resources/-resource/-companion/to-resource.html","searchKeys":["toResource","fun InputStream.toResource(name: String? = null): StandardResource","love.forte.simbot.resources.Resource.Companion.toResource"]},{"name":"fun InputStream.useToResource(name: String? = null): StandardResource","description":"love.forte.simbot.resources.useToResource","location":"simbot-api/love.forte.simbot.resources/use-to-resource.html","searchKeys":["useToResource","fun InputStream.useToResource(name: String? = null): StandardResource","love.forte.simbot.resources.useToResource"]},{"name":"fun Instant.toTimestamp(): Timestamp","description":"love.forte.simbot.toTimestamp","location":"simbot-api/love.forte.simbot/to-timestamp.html","searchKeys":["toTimestamp","fun Instant.toTimestamp(): Timestamp","love.forte.simbot.toTimestamp"]},{"name":"fun IntID(char: Char)","description":"love.forte.simbot.IntID.IntID","location":"simbot-api/love.forte.simbot/-int-i-d/-int-i-d.html","searchKeys":["IntID","fun IntID(char: Char)","love.forte.simbot.IntID.IntID"]},{"name":"fun IntID(number: Int)","description":"love.forte.simbot.IntID.IntID","location":"simbot-api/love.forte.simbot/-int-i-d/-int-i-d.html","searchKeys":["IntID","fun IntID(number: Int)","love.forte.simbot.IntID.IntID"]},{"name":"fun Iterable<Message.Element<*>>.listToMessages(): Messages","description":"love.forte.simbot.message.Messages.Companion.listToMessages","location":"simbot-api/love.forte.simbot.message/-messages/-companion/list-to-messages.html","searchKeys":["listToMessages","fun Iterable<Message.Element<*>>.listToMessages(): Messages","love.forte.simbot.message.Messages.Companion.listToMessages"]},{"name":"fun Iterable<Message.Element<*>>.toMessages(): Messages","description":"love.forte.simbot.message.toMessages","location":"simbot-api/love.forte.simbot.message/to-messages.html","searchKeys":["toMessages","fun Iterable<Message.Element<*>>.toMessages(): Messages","love.forte.simbot.message.toMessages"]},{"name":"fun Iterable<SingleMessageReceipt>.aggregation(): AggregatedMessageReceipt","description":"love.forte.simbot.message.aggregation","location":"simbot-api/love.forte.simbot.message/aggregation.html","searchKeys":["aggregation","fun Iterable<SingleMessageReceipt>.aggregation(): AggregatedMessageReceipt","love.forte.simbot.message.aggregation"]},{"name":"fun JsonBotVerifyInfoDecoder(format: Json)","description":"love.forte.simbot.bot.JsonBotVerifyInfoDecoder.JsonBotVerifyInfoDecoder","location":"simbot-api/love.forte.simbot.bot/-json-bot-verify-info-decoder/-json-bot-verify-info-decoder.html","searchKeys":["JsonBotVerifyInfoDecoder","fun JsonBotVerifyInfoDecoder(format: Json)","love.forte.simbot.bot.JsonBotVerifyInfoDecoder.JsonBotVerifyInfoDecoder"]},{"name":"fun List<SingleMessageReceipt>.aggregation(): AggregatedMessageReceipt","description":"love.forte.simbot.message.aggregation","location":"simbot-api/love.forte.simbot.message/aggregation.html","searchKeys":["aggregation","fun List<SingleMessageReceipt>.aggregation(): AggregatedMessageReceipt","love.forte.simbot.message.aggregation"]},{"name":"fun LocalMessageContent()","description":"love.forte.simbot.message.LocalMessageContent.LocalMessageContent","location":"simbot-api/love.forte.simbot.message/-local-message-content/-local-message-content.html","searchKeys":["LocalMessageContent","fun LocalMessageContent()","love.forte.simbot.message.LocalMessageContent.LocalMessageContent"]},{"name":"fun LongID(number: Long)","description":"love.forte.simbot.LongID.LongID","location":"simbot-api/love.forte.simbot/-long-i-d/-long-i-d.html","searchKeys":["LongID","fun LongID(number: Long)","love.forte.simbot.LongID.LongID"]},{"name":"fun Message.Element<*>.elementToMessages(): Messages","description":"love.forte.simbot.message.Messages.Companion.elementToMessages","location":"simbot-api/love.forte.simbot.message/-messages/-companion/element-to-messages.html","searchKeys":["elementToMessages","fun Message.Element<*>.elementToMessages(): Messages","love.forte.simbot.message.Messages.Companion.elementToMessages"]},{"name":"fun Message.Element<*>.toMessages(): Messages","description":"love.forte.simbot.message.toMessages","location":"simbot-api/love.forte.simbot.message/to-messages.html","searchKeys":["toMessages","fun Message.Element<*>.toMessages(): Messages","love.forte.simbot.message.toMessages"]},{"name":"fun MessageContent()","description":"love.forte.simbot.message.MessageContent.MessageContent","location":"simbot-api/love.forte.simbot.message/-message-content/-message-content.html","searchKeys":["MessageContent","fun MessageContent()","love.forte.simbot.message.MessageContent.MessageContent"]},{"name":"fun MessageSendingException()","description":"love.forte.simbot.action.MessageSendingException.MessageSendingException","location":"simbot-api/love.forte.simbot.action/-message-sending-exception/-message-sending-exception.html","searchKeys":["MessageSendingException","fun MessageSendingException()","love.forte.simbot.action.MessageSendingException.MessageSendingException"]},{"name":"fun MessageSendingException(cause: Throwable?)","description":"love.forte.simbot.action.MessageSendingException.MessageSendingException","location":"simbot-api/love.forte.simbot.action/-message-sending-exception/-message-sending-exception.html","searchKeys":["MessageSendingException","fun MessageSendingException(cause: Throwable?)","love.forte.simbot.action.MessageSendingException.MessageSendingException"]},{"name":"fun MessageSendingException(message: String?)","description":"love.forte.simbot.action.MessageSendingException.MessageSendingException","location":"simbot-api/love.forte.simbot.action/-message-sending-exception/-message-sending-exception.html","searchKeys":["MessageSendingException","fun MessageSendingException(message: String?)","love.forte.simbot.action.MessageSendingException.MessageSendingException"]},{"name":"fun MessageSendingException(message: String?, cause: Throwable?)","description":"love.forte.simbot.action.MessageSendingException.MessageSendingException","location":"simbot-api/love.forte.simbot.action/-message-sending-exception/-message-sending-exception.html","searchKeys":["MessageSendingException","fun MessageSendingException(message: String?, cause: Throwable?)","love.forte.simbot.action.MessageSendingException.MessageSendingException"]},{"name":"fun Messages.contentEquals(other: Messages): Boolean","description":"love.forte.simbot.message.Messages.Companion.contentEquals","location":"simbot-api/love.forte.simbot.message/-messages/-companion/content-equals.html","searchKeys":["contentEquals","fun Messages.contentEquals(other: Messages): Boolean","love.forte.simbot.message.Messages.Companion.contentEquals"]},{"name":"fun MessagesBuilder(collection: MutableCollection<Message.Element<*>>? = null)","description":"love.forte.simbot.message.MessagesBuilder.MessagesBuilder","location":"simbot-api/love.forte.simbot.message/-messages-builder/-messages-builder.html","searchKeys":["MessagesBuilder","fun MessagesBuilder(collection: MutableCollection<Message.Element<*>>? = null)","love.forte.simbot.message.MessagesBuilder.MessagesBuilder"]},{"name":"fun MessagesBuilder(messages: Messages)","description":"love.forte.simbot.message.MessagesBuilder.MessagesBuilder","location":"simbot-api/love.forte.simbot.message/-messages-builder/-messages-builder.html","searchKeys":["MessagesBuilder","fun MessagesBuilder(messages: Messages)","love.forte.simbot.message.MessagesBuilder.MessagesBuilder"]},{"name":"fun NoSuchComponentException()","description":"love.forte.simbot.NoSuchComponentException.NoSuchComponentException","location":"simbot-api/love.forte.simbot/-no-such-component-exception/-no-such-component-exception.html","searchKeys":["NoSuchComponentException","fun NoSuchComponentException()","love.forte.simbot.NoSuchComponentException.NoSuchComponentException"]},{"name":"fun NoSuchComponentException(cause: Throwable?)","description":"love.forte.simbot.NoSuchComponentException.NoSuchComponentException","location":"simbot-api/love.forte.simbot/-no-such-component-exception/-no-such-component-exception.html","searchKeys":["NoSuchComponentException","fun NoSuchComponentException(cause: Throwable?)","love.forte.simbot.NoSuchComponentException.NoSuchComponentException"]},{"name":"fun NoSuchComponentException(message: String?)","description":"love.forte.simbot.NoSuchComponentException.NoSuchComponentException","location":"simbot-api/love.forte.simbot/-no-such-component-exception/-no-such-component-exception.html","searchKeys":["NoSuchComponentException","fun NoSuchComponentException(message: String?)","love.forte.simbot.NoSuchComponentException.NoSuchComponentException"]},{"name":"fun NoSuchComponentException(message: String?, cause: Throwable?)","description":"love.forte.simbot.NoSuchComponentException.NoSuchComponentException","location":"simbot-api/love.forte.simbot/-no-such-component-exception/-no-such-component-exception.html","searchKeys":["NoSuchComponentException","fun NoSuchComponentException(message: String?, cause: Throwable?)","love.forte.simbot.NoSuchComponentException.NoSuchComponentException"]},{"name":"fun NoSuchEventListenerException(appellation: String)","description":"love.forte.simbot.event.NoSuchEventListenerException.NoSuchEventListenerException","location":"simbot-api/love.forte.simbot.event/-no-such-event-listener-exception/-no-such-event-listener-exception.html","searchKeys":["NoSuchEventListenerException","fun NoSuchEventListenerException(appellation: String)","love.forte.simbot.event.NoSuchEventListenerException.NoSuchEventListenerException"]},{"name":"fun NumericalID<*>.asNumber(): Number","description":"love.forte.simbot.asNumber","location":"simbot-api/love.forte.simbot/as-number.html","searchKeys":["asNumber","fun NumericalID<*>.asNumber(): Number","love.forte.simbot.asNumber"]},{"name":"fun ObtainedMessageContent()","description":"love.forte.simbot.message.ObtainedMessageContent.ObtainedMessageContent","location":"simbot-api/love.forte.simbot.message/-obtained-message-content/-obtained-message-content.html","searchKeys":["ObtainedMessageContent","fun ObtainedMessageContent()","love.forte.simbot.message.ObtainedMessageContent.ObtainedMessageContent"]},{"name":"fun Path.toBotVerifyInfo(decoder: BotVerifyInfoDecoder): BotVerifyInfo","description":"love.forte.simbot.bot.toBotVerifyInfo","location":"simbot-api/love.forte.simbot.bot/to-bot-verify-info.html","searchKeys":["toBotVerifyInfo","fun Path.toBotVerifyInfo(decoder: BotVerifyInfoDecoder): BotVerifyInfo","love.forte.simbot.bot.toBotVerifyInfo"]},{"name":"fun Path.toResource(name: String = toString()): PathResource","description":"love.forte.simbot.resources.Resource.Companion.toResource","location":"simbot-api/love.forte.simbot.resources/-resource/-companion/to-resource.html","searchKeys":["toResource","fun Path.toResource(name: String = toString()): PathResource","love.forte.simbot.resources.Resource.Companion.toResource"]},{"name":"fun PathResource(path: Path, name: String = path.toString(), doClose: () -> Unit = {})","description":"love.forte.simbot.resources.PathResource.PathResource","location":"simbot-api/love.forte.simbot.resources/-path-resource/-path-resource.html","searchKeys":["PathResource","fun PathResource(path: Path, name: String = path.toString(), doClose: () -> Unit = {})","love.forte.simbot.resources.PathResource.PathResource"]},{"name":"fun PropertiesBotVerifyInfoDecoder(format: Properties)","description":"love.forte.simbot.bot.PropertiesBotVerifyInfoDecoder.PropertiesBotVerifyInfoDecoder","location":"simbot-api/love.forte.simbot.bot/-properties-bot-verify-info-decoder/-properties-bot-verify-info-decoder.html","searchKeys":["PropertiesBotVerifyInfoDecoder","fun PropertiesBotVerifyInfoDecoder(format: Properties)","love.forte.simbot.bot.PropertiesBotVerifyInfoDecoder.PropertiesBotVerifyInfoDecoder"]},{"name":"fun PropertiesConfiguration()","description":"love.forte.simbot.bot.PropertiesBotVerifyInfoDecoder.PropertiesConfiguration.PropertiesConfiguration","location":"simbot-api/love.forte.simbot.bot/-properties-bot-verify-info-decoder/-properties-configuration/-properties-configuration.html","searchKeys":["PropertiesConfiguration","fun PropertiesConfiguration()","love.forte.simbot.bot.PropertiesBotVerifyInfoDecoder.PropertiesConfiguration.PropertiesConfiguration"]},{"name":"fun ReactivelyCollectableEventResult()","description":"love.forte.simbot.event.ReactivelyCollectableEventResult.ReactivelyCollectableEventResult","location":"simbot-api/love.forte.simbot.event/-reactively-collectable-event-result/-reactively-collectable-event-result.html","searchKeys":["ReactivelyCollectableEventResult","fun ReactivelyCollectableEventResult()","love.forte.simbot.event.ReactivelyCollectableEventResult.ReactivelyCollectableEventResult"]},{"name":"fun ReceivedMessageContent()","description":"love.forte.simbot.message.ReceivedMessageContent.ReceivedMessageContent","location":"simbot-api/love.forte.simbot.message/-received-message-content/-received-message-content.html","searchKeys":["ReceivedMessageContent","fun ReceivedMessageContent()","love.forte.simbot.message.ReceivedMessageContent.ReceivedMessageContent"]},{"name":"fun Resource.toBotVerifyInfo(decoder: BotVerifyInfoDecoder): BotVerifyInfo","description":"love.forte.simbot.bot.toBotVerifyInfo","location":"simbot-api/love.forte.simbot.bot/to-bot-verify-info.html","searchKeys":["toBotVerifyInfo","fun Resource.toBotVerifyInfo(decoder: BotVerifyInfoDecoder): BotVerifyInfo","love.forte.simbot.bot.toBotVerifyInfo"]},{"name":"fun Resource.toImage(id: ID = name.ID): ResourceImage","description":"love.forte.simbot.message.Image.Key.toImage","location":"simbot-api/love.forte.simbot.message/-image/-key/to-image.html","searchKeys":["toImage","fun Resource.toImage(id: ID = name.ID): ResourceImage","love.forte.simbot.message.Image.Key.toImage"]},{"name":"fun ResourceImage(id: ID, _resource: Resource)","description":"love.forte.simbot.message.ResourceImage.ResourceImage","location":"simbot-api/love.forte.simbot.message/-resource-image/-resource-image.html","searchKeys":["ResourceImage","fun ResourceImage(id: ID, _resource: Resource)","love.forte.simbot.message.ResourceImage.ResourceImage"]},{"name":"fun SerialFormatDeserializableResourceDecoder()","description":"love.forte.simbot.resources.SerialFormatDeserializableResourceDecoder.SerialFormatDeserializableResourceDecoder","location":"simbot-api/love.forte.simbot.resources/-serial-format-deserializable-resource-decoder/-serial-format-deserializable-resource-decoder.html","searchKeys":["SerialFormatDeserializableResourceDecoder","fun SerialFormatDeserializableResourceDecoder()","love.forte.simbot.resources.SerialFormatDeserializableResourceDecoder.SerialFormatDeserializableResourceDecoder"]},{"name":"fun SimbotException()","description":"love.forte.simbot.SimbotException.SimbotException","location":"simbot-api/love.forte.simbot/-simbot-exception/-simbot-exception.html","searchKeys":["SimbotException","fun SimbotException()","love.forte.simbot.SimbotException.SimbotException"]},{"name":"fun SimbotException(cause: Throwable?)","description":"love.forte.simbot.SimbotException.SimbotException","location":"simbot-api/love.forte.simbot/-simbot-exception/-simbot-exception.html","searchKeys":["SimbotException","fun SimbotException(cause: Throwable?)","love.forte.simbot.SimbotException.SimbotException"]},{"name":"fun SimbotException(message: String?)","description":"love.forte.simbot.SimbotException.SimbotException","location":"simbot-api/love.forte.simbot/-simbot-exception/-simbot-exception.html","searchKeys":["SimbotException","fun SimbotException(message: String?)","love.forte.simbot.SimbotException.SimbotException"]},{"name":"fun SimbotException(message: String?, cause: Throwable?)","description":"love.forte.simbot.SimbotException.SimbotException","location":"simbot-api/love.forte.simbot/-simbot-exception/-simbot-exception.html","searchKeys":["SimbotException","fun SimbotException(message: String?, cause: Throwable?)","love.forte.simbot.SimbotException.SimbotException"]},{"name":"fun SimbotIllegalArgumentException()","description":"love.forte.simbot.SimbotIllegalArgumentException.SimbotIllegalArgumentException","location":"simbot-api/love.forte.simbot/-simbot-illegal-argument-exception/-simbot-illegal-argument-exception.html","searchKeys":["SimbotIllegalArgumentException","fun SimbotIllegalArgumentException()","love.forte.simbot.SimbotIllegalArgumentException.SimbotIllegalArgumentException"]},{"name":"fun SimbotIllegalArgumentException(cause: Throwable?)","description":"love.forte.simbot.SimbotIllegalArgumentException.SimbotIllegalArgumentException","location":"simbot-api/love.forte.simbot/-simbot-illegal-argument-exception/-simbot-illegal-argument-exception.html","searchKeys":["SimbotIllegalArgumentException","fun SimbotIllegalArgumentException(cause: Throwable?)","love.forte.simbot.SimbotIllegalArgumentException.SimbotIllegalArgumentException"]},{"name":"fun SimbotIllegalArgumentException(message: String?)","description":"love.forte.simbot.SimbotIllegalArgumentException.SimbotIllegalArgumentException","location":"simbot-api/love.forte.simbot/-simbot-illegal-argument-exception/-simbot-illegal-argument-exception.html","searchKeys":["SimbotIllegalArgumentException","fun SimbotIllegalArgumentException(message: String?)","love.forte.simbot.SimbotIllegalArgumentException.SimbotIllegalArgumentException"]},{"name":"fun SimbotIllegalArgumentException(message: String?, cause: Throwable?)","description":"love.forte.simbot.SimbotIllegalArgumentException.SimbotIllegalArgumentException","location":"simbot-api/love.forte.simbot/-simbot-illegal-argument-exception/-simbot-illegal-argument-exception.html","searchKeys":["SimbotIllegalArgumentException","fun SimbotIllegalArgumentException(message: String?, cause: Throwable?)","love.forte.simbot.SimbotIllegalArgumentException.SimbotIllegalArgumentException"]},{"name":"fun SimbotIllegalStateException()","description":"love.forte.simbot.SimbotIllegalStateException.SimbotIllegalStateException","location":"simbot-api/love.forte.simbot/-simbot-illegal-state-exception/-simbot-illegal-state-exception.html","searchKeys":["SimbotIllegalStateException","fun SimbotIllegalStateException()","love.forte.simbot.SimbotIllegalStateException.SimbotIllegalStateException"]},{"name":"fun SimbotIllegalStateException(cause: Throwable?)","description":"love.forte.simbot.SimbotIllegalStateException.SimbotIllegalStateException","location":"simbot-api/love.forte.simbot/-simbot-illegal-state-exception/-simbot-illegal-state-exception.html","searchKeys":["SimbotIllegalStateException","fun SimbotIllegalStateException(cause: Throwable?)","love.forte.simbot.SimbotIllegalStateException.SimbotIllegalStateException"]},{"name":"fun SimbotIllegalStateException(message: String?)","description":"love.forte.simbot.SimbotIllegalStateException.SimbotIllegalStateException","location":"simbot-api/love.forte.simbot/-simbot-illegal-state-exception/-simbot-illegal-state-exception.html","searchKeys":["SimbotIllegalStateException","fun SimbotIllegalStateException(message: String?)","love.forte.simbot.SimbotIllegalStateException.SimbotIllegalStateException"]},{"name":"fun SimbotIllegalStateException(message: String?, cause: Throwable?)","description":"love.forte.simbot.SimbotIllegalStateException.SimbotIllegalStateException","location":"simbot-api/love.forte.simbot/-simbot-illegal-state-exception/-simbot-illegal-state-exception.html","searchKeys":["SimbotIllegalStateException","fun SimbotIllegalStateException(message: String?, cause: Throwable?)","love.forte.simbot.SimbotIllegalStateException.SimbotIllegalStateException"]},{"name":"fun SimbotRuntimeException()","description":"love.forte.simbot.SimbotRuntimeException.SimbotRuntimeException","location":"simbot-api/love.forte.simbot/-simbot-runtime-exception/-simbot-runtime-exception.html","searchKeys":["SimbotRuntimeException","fun SimbotRuntimeException()","love.forte.simbot.SimbotRuntimeException.SimbotRuntimeException"]},{"name":"fun SimbotRuntimeException(cause: Throwable?)","description":"love.forte.simbot.SimbotRuntimeException.SimbotRuntimeException","location":"simbot-api/love.forte.simbot/-simbot-runtime-exception/-simbot-runtime-exception.html","searchKeys":["SimbotRuntimeException","fun SimbotRuntimeException(cause: Throwable?)","love.forte.simbot.SimbotRuntimeException.SimbotRuntimeException"]},{"name":"fun SimbotRuntimeException(message: String?)","description":"love.forte.simbot.SimbotRuntimeException.SimbotRuntimeException","location":"simbot-api/love.forte.simbot/-simbot-runtime-exception/-simbot-runtime-exception.html","searchKeys":["SimbotRuntimeException","fun SimbotRuntimeException(message: String?)","love.forte.simbot.SimbotRuntimeException.SimbotRuntimeException"]},{"name":"fun SimbotRuntimeException(message: String?, cause: Throwable?)","description":"love.forte.simbot.SimbotRuntimeException.SimbotRuntimeException","location":"simbot-api/love.forte.simbot/-simbot-runtime-exception/-simbot-runtime-exception.html","searchKeys":["SimbotRuntimeException","fun SimbotRuntimeException(message: String?, cause: Throwable?)","love.forte.simbot.SimbotRuntimeException.SimbotRuntimeException"]},{"name":"fun SimpleEventResult(content: Any? = null, isTruncated: Boolean = false)","description":"love.forte.simbot.event.SimpleEventResult.SimpleEventResult","location":"simbot-api/love.forte.simbot.event/-simple-event-result/-simple-event-result.html","searchKeys":["SimpleEventResult","fun SimpleEventResult(content: Any? = null, isTruncated: Boolean = false)","love.forte.simbot.event.SimpleEventResult.SimpleEventResult"]},{"name":"fun SingleMessageReceipt()","description":"love.forte.simbot.message.SingleMessageReceipt.SingleMessageReceipt","location":"simbot-api/love.forte.simbot.message/-single-message-receipt/-single-message-receipt.html","searchKeys":["SingleMessageReceipt","fun SingleMessageReceipt()","love.forte.simbot.message.SingleMessageReceipt.SingleMessageReceipt"]},{"name":"fun String.toHex(): ByteArray","description":"love.forte.simbot.utils.toHex","location":"simbot-api/love.forte.simbot.utils/to-hex.html","searchKeys":["toHex","fun String.toHex(): ByteArray","love.forte.simbot.utils.toHex"]},{"name":"fun String.toText(): Text","description":"love.forte.simbot.message.toText","location":"simbot-api/love.forte.simbot.message/to-text.html","searchKeys":["toText","fun String.toText(): Text","love.forte.simbot.message.toText"]},{"name":"fun StringFormatDeserializableResourceDecoder()","description":"love.forte.simbot.resources.StringFormatDeserializableResourceDecoder.StringFormatDeserializableResourceDecoder","location":"simbot-api/love.forte.simbot.resources/-string-format-deserializable-resource-decoder/-string-format-deserializable-resource-decoder.html","searchKeys":["StringFormatDeserializableResourceDecoder","fun StringFormatDeserializableResourceDecoder()","love.forte.simbot.resources.StringFormatDeserializableResourceDecoder.StringFormatDeserializableResourceDecoder"]},{"name":"fun Text(): Text","description":"love.forte.simbot.message.Text","location":"simbot-api/love.forte.simbot.message/-text.html","searchKeys":["Text","fun Text(): Text","love.forte.simbot.message.Text"]},{"name":"fun Timestamp.isNotSupport(): Boolean","description":"love.forte.simbot.isNotSupport","location":"simbot-api/love.forte.simbot/is-not-support.html","searchKeys":["isNotSupport","fun Timestamp.isNotSupport(): Boolean","love.forte.simbot.isNotSupport"]},{"name":"fun URL.toBotVerifyInfo(decoder: BotVerifyInfoDecoder): BotVerifyInfo","description":"love.forte.simbot.bot.toBotVerifyInfo","location":"simbot-api/love.forte.simbot.bot/to-bot-verify-info.html","searchKeys":["toBotVerifyInfo","fun URL.toBotVerifyInfo(decoder: BotVerifyInfoDecoder): BotVerifyInfo","love.forte.simbot.bot.toBotVerifyInfo"]},{"name":"fun URL.toResource(name: String = toString()): URLResource","description":"love.forte.simbot.resources.Resource.Companion.toResource","location":"simbot-api/love.forte.simbot.resources/-resource/-companion/to-resource.html","searchKeys":["toResource","fun URL.toResource(name: String = toString()): URLResource","love.forte.simbot.resources.Resource.Companion.toResource"]},{"name":"fun URLResource(url: URL, name: String = url.toString())","description":"love.forte.simbot.resources.URLResource.URLResource","location":"simbot-api/love.forte.simbot.resources/-u-r-l-resource/-u-r-l-resource.html","searchKeys":["URLResource","fun URLResource(url: URL, name: String = url.toString())","love.forte.simbot.resources.URLResource.URLResource"]},{"name":"fun UnsupportedActionException()","description":"love.forte.simbot.action.UnsupportedActionException.UnsupportedActionException","location":"simbot-api/love.forte.simbot.action/-unsupported-action-exception/-unsupported-action-exception.html","searchKeys":["UnsupportedActionException","fun UnsupportedActionException()","love.forte.simbot.action.UnsupportedActionException.UnsupportedActionException"]},{"name":"fun UnsupportedActionException(cause: Throwable?)","description":"love.forte.simbot.action.UnsupportedActionException.UnsupportedActionException","location":"simbot-api/love.forte.simbot.action/-unsupported-action-exception/-unsupported-action-exception.html","searchKeys":["UnsupportedActionException","fun UnsupportedActionException(cause: Throwable?)","love.forte.simbot.action.UnsupportedActionException.UnsupportedActionException"]},{"name":"fun UnsupportedActionException(message: String?)","description":"love.forte.simbot.action.UnsupportedActionException.UnsupportedActionException","location":"simbot-api/love.forte.simbot.action/-unsupported-action-exception/-unsupported-action-exception.html","searchKeys":["UnsupportedActionException","fun UnsupportedActionException(message: String?)","love.forte.simbot.action.UnsupportedActionException.UnsupportedActionException"]},{"name":"fun UnsupportedActionException(message: String?, cause: Throwable?)","description":"love.forte.simbot.action.UnsupportedActionException.UnsupportedActionException","location":"simbot-api/love.forte.simbot.action/-unsupported-action-exception/-unsupported-action-exception.html","searchKeys":["UnsupportedActionException","fun UnsupportedActionException(message: String?, cause: Throwable?)","love.forte.simbot.action.UnsupportedActionException.UnsupportedActionException"]},{"name":"fun VerifyFailureException()","description":"love.forte.simbot.bot.VerifyFailureException.VerifyFailureException","location":"simbot-api/love.forte.simbot.bot/-verify-failure-exception/-verify-failure-exception.html","searchKeys":["VerifyFailureException","fun VerifyFailureException()","love.forte.simbot.bot.VerifyFailureException.VerifyFailureException"]},{"name":"fun VerifyFailureException(cause: Throwable?)","description":"love.forte.simbot.bot.VerifyFailureException.VerifyFailureException","location":"simbot-api/love.forte.simbot.bot/-verify-failure-exception/-verify-failure-exception.html","searchKeys":["VerifyFailureException","fun VerifyFailureException(cause: Throwable?)","love.forte.simbot.bot.VerifyFailureException.VerifyFailureException"]},{"name":"fun VerifyFailureException(message: String?)","description":"love.forte.simbot.bot.VerifyFailureException.VerifyFailureException","location":"simbot-api/love.forte.simbot.bot/-verify-failure-exception/-verify-failure-exception.html","searchKeys":["VerifyFailureException","fun VerifyFailureException(message: String?)","love.forte.simbot.bot.VerifyFailureException.VerifyFailureException"]},{"name":"fun VerifyFailureException(message: String?, cause: Throwable?)","description":"love.forte.simbot.bot.VerifyFailureException.VerifyFailureException","location":"simbot-api/love.forte.simbot.bot/-verify-failure-exception/-verify-failure-exception.html","searchKeys":["VerifyFailureException","fun VerifyFailureException(message: String?, cause: Throwable?)","love.forte.simbot.bot.VerifyFailureException.VerifyFailureException"]},{"name":"fun YamlBotVerifyInfoDecoder(format: Yaml)","description":"love.forte.simbot.bot.YamlBotVerifyInfoDecoder.YamlBotVerifyInfoDecoder","location":"simbot-api/love.forte.simbot.bot/-yaml-bot-verify-info-decoder/-yaml-bot-verify-info-decoder.html","searchKeys":["YamlBotVerifyInfoDecoder","fun YamlBotVerifyInfoDecoder(format: Yaml)","love.forte.simbot.bot.YamlBotVerifyInfoDecoder.YamlBotVerifyInfoDecoder"]},{"name":"fun YamlBotVerifyInfoDecoderConfiguration()","description":"love.forte.simbot.bot.YamlBotVerifyInfoDecoder.YamlBotVerifyInfoDecoderConfiguration.YamlBotVerifyInfoDecoderConfiguration","location":"simbot-api/love.forte.simbot.bot/-yaml-bot-verify-info-decoder/-yaml-bot-verify-info-decoder-configuration/-yaml-bot-verify-info-decoder-configuration.html","searchKeys":["YamlBotVerifyInfoDecoderConfiguration","fun YamlBotVerifyInfoDecoderConfiguration()","love.forte.simbot.bot.YamlBotVerifyInfoDecoder.YamlBotVerifyInfoDecoderConfiguration.YamlBotVerifyInfoDecoderConfiguration"]},{"name":"fun append(element: Message.Element<*>): MessagesBuilder","description":"love.forte.simbot.message.MessagesBuilder.append","location":"simbot-api/love.forte.simbot.message/-messages-builder/append.html","searchKeys":["append","fun append(element: Message.Element<*>): MessagesBuilder","love.forte.simbot.message.MessagesBuilder.append"]},{"name":"fun append(elements: Iterable<Message.Element<*>>): MessagesBuilder","description":"love.forte.simbot.message.MessagesBuilder.append","location":"simbot-api/love.forte.simbot.message/-messages-builder/append.html","searchKeys":["append","fun append(elements: Iterable<Message.Element<*>>): MessagesBuilder","love.forte.simbot.message.MessagesBuilder.append"]},{"name":"fun append(text: String): MessagesBuilder","description":"love.forte.simbot.message.MessagesBuilder.append","location":"simbot-api/love.forte.simbot.message/-messages-builder/append.html","searchKeys":["append","fun append(text: String): MessagesBuilder","love.forte.simbot.message.MessagesBuilder.append"]},{"name":"fun append(vararg elements: Message.Element<*>): MessagesBuilder","description":"love.forte.simbot.message.MessagesBuilder.append","location":"simbot-api/love.forte.simbot.message/-messages-builder/append.html","searchKeys":["append","fun append(vararg elements: Message.Element<*>): MessagesBuilder","love.forte.simbot.message.MessagesBuilder.append"]},{"name":"fun async(deferred: Deferred<EventResult>): AsyncEventResult","description":"love.forte.simbot.event.EventResult.Companion.async","location":"simbot-api/love.forte.simbot.event/-event-result/-companion/async.html","searchKeys":["async","fun async(deferred: Deferred<EventResult>): AsyncEventResult","love.forte.simbot.event.EventResult.Companion.async"]},{"name":"fun async(future: CompletableFuture<EventResult>): AsyncEventResult","description":"love.forte.simbot.event.EventResult.Companion.async","location":"simbot-api/love.forte.simbot.event/-event-result/-companion/async.html","searchKeys":["async","fun async(future: CompletableFuture<EventResult>): AsyncEventResult","love.forte.simbot.event.EventResult.Companion.async"]},{"name":"fun asyncOf(future: CompletableFuture<*>): AsyncEventResult","description":"love.forte.simbot.event.EventResult.Companion.asyncOf","location":"simbot-api/love.forte.simbot.event/-event-result/-companion/async-of.html","searchKeys":["asyncOf","fun asyncOf(future: CompletableFuture<*>): AsyncEventResult","love.forte.simbot.event.EventResult.Companion.asyncOf"]},{"name":"fun at(target: ID, atType: String = \"user\", originContent: String = \"@\"): MessagesBuilder","description":"love.forte.simbot.message.MessagesBuilder.at","location":"simbot-api/love.forte.simbot.message/-messages-builder/at.html","searchKeys":["at","fun at(target: ID, atType: String = \"user\", originContent: String = \"@\"): MessagesBuilder","love.forte.simbot.message.MessagesBuilder.at"]},{"name":"fun atAll(): MessagesBuilder","description":"love.forte.simbot.message.MessagesBuilder.atAll","location":"simbot-api/love.forte.simbot.message/-messages-builder/at-all.html","searchKeys":["atAll","fun atAll(): MessagesBuilder","love.forte.simbot.message.MessagesBuilder.atAll"]},{"name":"fun breakAway(): Boolean","description":"love.forte.simbot.bot.BotManager.breakAway","location":"simbot-api/love.forte.simbot.bot/-bot-manager/break-away.html","searchKeys":["breakAway","fun breakAway(): Boolean","love.forte.simbot.bot.BotManager.breakAway"]},{"name":"fun build(): Messages","description":"love.forte.simbot.message.MessagesBuilder.build","location":"simbot-api/love.forte.simbot.message/-messages-builder/build.html","searchKeys":["build","fun build(): Messages","love.forte.simbot.message.MessagesBuilder.build"]},{"name":"fun byInstant(instant: Instant): Timestamp","description":"love.forte.simbot.Timestamp.Companion.byInstant","location":"simbot-api/love.forte.simbot/-timestamp/-companion/by-instant.html","searchKeys":["byInstant","fun byInstant(instant: Instant): Timestamp","love.forte.simbot.Timestamp.Companion.byInstant"]},{"name":"fun byMillisecond(epochMilli: Long): Timestamp","description":"love.forte.simbot.Timestamp.Companion.byMillisecond","location":"simbot-api/love.forte.simbot/-timestamp/-companion/by-millisecond.html","searchKeys":["byMillisecond","fun byMillisecond(epochMilli: Long): Timestamp","love.forte.simbot.Timestamp.Companion.byMillisecond"]},{"name":"fun bySecond(epochSecond: Long, nanoAdjustment: Int = 0): Timestamp","description":"love.forte.simbot.Timestamp.Companion.bySecond","location":"simbot-api/love.forte.simbot/-timestamp/-companion/by-second.html","searchKeys":["bySecond","fun bySecond(epochSecond: Long, nanoAdjustment: Int = 0): Timestamp","love.forte.simbot.Timestamp.Companion.bySecond"]},{"name":"fun cancel(reason: Throwable? = null)","description":"love.forte.simbot.bot.OriginBotManager.cancel","location":"simbot-api/love.forte.simbot.bot/-origin-bot-manager/cancel.html","searchKeys":["cancel","fun cancel(reason: Throwable? = null)","love.forte.simbot.bot.OriginBotManager.cancel"]},{"name":"fun config(newConfiguration: YamlConfiguration)","description":"love.forte.simbot.bot.YamlBotVerifyInfoDecoder.YamlBotVerifyInfoDecoderConfiguration.config","location":"simbot-api/love.forte.simbot.bot/-yaml-bot-verify-info-decoder/-yaml-bot-verify-info-decoder-configuration/config.html","searchKeys":["config","fun config(newConfiguration: YamlConfiguration)","love.forte.simbot.bot.YamlBotVerifyInfoDecoder.YamlBotVerifyInfoDecoderConfiguration.config"]},{"name":"fun copyTo(destination: ByteArray, destinationOffset: Int = 0, startIndex: Int = 0, endIndex: Int = byteArray.size)","description":"love.forte.simbot.resources.ByteArrayResource.copyTo","location":"simbot-api/love.forte.simbot.resources/-byte-array-resource/copy-to.html","searchKeys":["copyTo","fun copyTo(destination: ByteArray, destinationOffset: Int = 0, startIndex: Int = 0, endIndex: Int = byteArray.size)","love.forte.simbot.resources.ByteArrayResource.copyTo"]},{"name":"fun create(decoder: Json): JsonBotVerifyInfoDecoder","description":"love.forte.simbot.bot.JsonBotVerifyInfoDecoder.Factory.create","location":"simbot-api/love.forte.simbot.bot/-json-bot-verify-info-decoder/-factory/create.html","searchKeys":["create","fun create(decoder: Json): JsonBotVerifyInfoDecoder","love.forte.simbot.bot.JsonBotVerifyInfoDecoder.Factory.create"]},{"name":"fun create(decoder: Yaml): YamlBotVerifyInfoDecoder","description":"love.forte.simbot.bot.YamlBotVerifyInfoDecoder.Factory.create","location":"simbot-api/love.forte.simbot.bot/-yaml-bot-verify-info-decoder/-factory/create.html","searchKeys":["create","fun create(decoder: Yaml): YamlBotVerifyInfoDecoder","love.forte.simbot.bot.YamlBotVerifyInfoDecoder.Factory.create"]},{"name":"fun createJson(from: Json? = null, builder: JsonBuilder4J = defaultJsonBuilder, eventProcessingContext: EventProcessingContext? = null): Json","description":"love.forte.simbot.message.MessageSerializationUtil.createJson","location":"simbot-api/love.forte.simbot.message/-message-serialization-util/create-json.html","searchKeys":["createJson","fun createJson(from: Json? = null, builder: JsonBuilder4J = defaultJsonBuilder, eventProcessingContext: EventProcessingContext? = null): Json","love.forte.simbot.message.MessageSerializationUtil.createJson"]},{"name":"fun createJson(from: Json? = null, builder: JsonBuilder4J = defaultJsonBuilder, vararg serializersModules: SerializersModule): Json","description":"love.forte.simbot.message.MessageSerializationUtil.createJson","location":"simbot-api/love.forte.simbot.message/-message-serialization-util/create-json.html","searchKeys":["createJson","fun createJson(from: Json? = null, builder: JsonBuilder4J = defaultJsonBuilder, vararg serializersModules: SerializersModule): Json","love.forte.simbot.message.MessageSerializationUtil.createJson"]},{"name":"fun currentTimeMillisID(): LongID","description":"love.forte.simbot.currentTimeMillisID","location":"simbot-api/love.forte.simbot/current-time-millis-i-d.html","searchKeys":["currentTimeMillisID","fun currentTimeMillisID(): LongID","love.forte.simbot.currentTimeMillisID"]},{"name":"fun defaults(isTruncated: Boolean = false): EventResult","description":"love.forte.simbot.event.EventResult.Companion.defaults","location":"simbot-api/love.forte.simbot.event/-event-result/-companion/defaults.html","searchKeys":["defaults","fun defaults(isTruncated: Boolean = false): EventResult","love.forte.simbot.event.EventResult.Companion.defaults"]},{"name":"fun digest(algorithm: String): Digest","description":"love.forte.simbot.utils.digest","location":"simbot-api/love.forte.simbot.utils/digest.html","searchKeys":["digest","fun digest(algorithm: String): Digest","love.forte.simbot.utils.digest"]},{"name":"fun emoji(id: ID): MessagesBuilder","description":"love.forte.simbot.message.MessagesBuilder.emoji","location":"simbot-api/love.forte.simbot.message/-messages-builder/emoji.html","searchKeys":["emoji","fun emoji(id: ID): MessagesBuilder","love.forte.simbot.message.MessagesBuilder.emoji"]},{"name":"fun emptyMessages(): Messages","description":"love.forte.simbot.message.Messages.Companion.emptyMessages","location":"simbot-api/love.forte.simbot.message/-messages/-companion/empty-messages.html","searchKeys":["emptyMessages","fun emptyMessages(): Messages","love.forte.simbot.message.Messages.Companion.emptyMessages"]},{"name":"fun emptyMessages(): Messages","description":"love.forte.simbot.message.emptyMessages","location":"simbot-api/love.forte.simbot.message/empty-messages.html","searchKeys":["emptyMessages","fun emptyMessages(): Messages","love.forte.simbot.message.emptyMessages"]},{"name":"fun face(id: ID): MessagesBuilder","description":"love.forte.simbot.message.MessagesBuilder.face","location":"simbot-api/love.forte.simbot.message/-messages-builder/face.html","searchKeys":["face","fun face(id: ID): MessagesBuilder","love.forte.simbot.message.MessagesBuilder.face"]},{"name":"fun fromJsonString(jsonString: String, json: Json = defaultJson): Messages","description":"love.forte.simbot.message.MessageSerializationUtil.fromJsonString","location":"simbot-api/love.forte.simbot.message/-message-serialization-util/from-json-string.html","searchKeys":["fromJsonString","fun fromJsonString(jsonString: String, json: Json = defaultJson): Messages","love.forte.simbot.message.MessageSerializationUtil.fromJsonString"]},{"name":"fun getAny(component: Component? = null): BotManager<*>","description":"love.forte.simbot.bot.OriginBotManager.getAny","location":"simbot-api/love.forte.simbot.bot/-origin-bot-manager/get-any.html","searchKeys":["getAny","fun getAny(component: Component? = null): BotManager<*>","love.forte.simbot.bot.OriginBotManager.getAny"]},{"name":"fun getAnyBot(component: Component? = null): Bot","description":"love.forte.simbot.bot.OriginBotManager.getAnyBot","location":"simbot-api/love.forte.simbot.bot/-origin-bot-manager/get-any-bot.html","searchKeys":["getAnyBot","fun getAnyBot(component: Component? = null): Bot","love.forte.simbot.bot.OriginBotManager.getAnyBot"]},{"name":"fun getAnyBotOrNull(component: Component? = null): Bot?","description":"love.forte.simbot.bot.OriginBotManager.getAnyBotOrNull","location":"simbot-api/love.forte.simbot.bot/-origin-bot-manager/get-any-bot-or-null.html","searchKeys":["getAnyBotOrNull","fun getAnyBotOrNull(component: Component? = null): Bot?","love.forte.simbot.bot.OriginBotManager.getAnyBotOrNull"]},{"name":"fun getAnyOrNull(component: Component? = null): BotManager<*>?","description":"love.forte.simbot.bot.OriginBotManager.getAnyOrNull","location":"simbot-api/love.forte.simbot.bot/-origin-bot-manager/get-any-or-null.html","searchKeys":["getAnyOrNull","fun getAnyOrNull(component: Component? = null): BotManager<*>?","love.forte.simbot.bot.OriginBotManager.getAnyOrNull"]},{"name":"fun getBot(id: ID, component: Component): Bot?","description":"love.forte.simbot.bot.OriginBotManager.getBot","location":"simbot-api/love.forte.simbot.bot/-origin-bot-manager/get-bot.html","searchKeys":["getBot","fun getBot(id: ID, component: Component): Bot?","love.forte.simbot.bot.OriginBotManager.getBot"]},{"name":"fun getBot(id: ID, componentId: String? = null): Bot","description":"love.forte.simbot.bot.OriginBotManager.getBot","location":"simbot-api/love.forte.simbot.bot/-origin-bot-manager/get-bot.html","searchKeys":["getBot","fun getBot(id: ID, componentId: String? = null): Bot","love.forte.simbot.bot.OriginBotManager.getBot"]},{"name":"fun getBotOrNull(id: ID, componentId: String? = null): Bot?","description":"love.forte.simbot.bot.OriginBotManager.getBotOrNull","location":"simbot-api/love.forte.simbot.bot/-origin-bot-manager/get-bot-or-null.html","searchKeys":["getBotOrNull","fun getBotOrNull(id: ID, componentId: String? = null): Bot?","love.forte.simbot.bot.OriginBotManager.getBotOrNull"]},{"name":"fun getEmptyText(): Text","description":"love.forte.simbot.message.Text.Key.getEmptyText","location":"simbot-api/love.forte.simbot.message/-text/-key/get-empty-text.html","searchKeys":["getEmptyText","fun getEmptyText(): Text","love.forte.simbot.message.Text.Key.getEmptyText"]},{"name":"fun getFirstManager(component: Component): BotManager<*>?","description":"love.forte.simbot.bot.OriginBotManager.getFirstManager","location":"simbot-api/love.forte.simbot.bot/-origin-bot-manager/get-first-manager.html","searchKeys":["getFirstManager","fun getFirstManager(component: Component): BotManager<*>?","love.forte.simbot.bot.OriginBotManager.getFirstManager"]},{"name":"fun getFirstManager(componentId: String): BotManager<*>","description":"love.forte.simbot.bot.OriginBotManager.getFirstManager","location":"simbot-api/love.forte.simbot.bot/-origin-bot-manager/get-first-manager.html","searchKeys":["getFirstManager","fun getFirstManager(componentId: String): BotManager<*>","love.forte.simbot.bot.OriginBotManager.getFirstManager"]},{"name":"fun getFirstManagerOrNull(componentId: String): BotManager<*>?","description":"love.forte.simbot.bot.OriginBotManager.getFirstManagerOrNull","location":"simbot-api/love.forte.simbot.bot/-origin-bot-manager/get-first-manager-or-null.html","searchKeys":["getFirstManagerOrNull","fun getFirstManagerOrNull(componentId: String): BotManager<*>?","love.forte.simbot.bot.OriginBotManager.getFirstManagerOrNull"]},{"name":"fun getManagers(component: Component): List<BotManager<*>>","description":"love.forte.simbot.bot.OriginBotManager.getManagers","location":"simbot-api/love.forte.simbot.bot/-origin-bot-manager/get-managers.html","searchKeys":["getManagers","fun getManagers(component: Component): List<BotManager<*>>","love.forte.simbot.bot.OriginBotManager.getManagers"]},{"name":"fun getManagers(componentId: String): List<BotManager<*>>","description":"love.forte.simbot.bot.OriginBotManager.getManagers","location":"simbot-api/love.forte.simbot.bot/-origin-bot-manager/get-managers.html","searchKeys":["getManagers","fun getManagers(componentId: String): List<BotManager<*>>","love.forte.simbot.bot.OriginBotManager.getManagers"]},{"name":"fun image(resource: Resource, id: ID = resource.name.ID): MessagesBuilder","description":"love.forte.simbot.message.MessagesBuilder.image","location":"simbot-api/love.forte.simbot.message/-messages-builder/image.html","searchKeys":["image","fun image(resource: Resource, id: ID = resource.name.ID): MessagesBuilder","love.forte.simbot.message.MessagesBuilder.image"]},{"name":"fun image4J(bot: Bot, id: ID): MessagesBuilder","description":"love.forte.simbot.message.MessagesBuilder.image4J","location":"simbot-api/love.forte.simbot.message/-messages-builder/image4-j.html","searchKeys":["image4J","fun image4J(bot: Bot, id: ID): MessagesBuilder","love.forte.simbot.message.MessagesBuilder.image4J"]},{"name":"fun interface BlockingContinuousSessionEventMatcher<in E : Event>","description":"love.forte.simbot.event.BlockingContinuousSessionEventMatcher","location":"simbot-api/love.forte.simbot.event/-blocking-continuous-session-event-matcher/index.html","searchKeys":["BlockingContinuousSessionEventMatcher","fun interface BlockingContinuousSessionEventMatcher<in E : Event>","love.forte.simbot.event.BlockingContinuousSessionEventMatcher"]},{"name":"fun interface BlockingContinuousSessionSelector<T>","description":"love.forte.simbot.event.BlockingContinuousSessionSelector","location":"simbot-api/love.forte.simbot.event/-blocking-continuous-session-selector/index.html","searchKeys":["BlockingContinuousSessionSelector","fun interface BlockingContinuousSessionSelector<T>","love.forte.simbot.event.BlockingContinuousSessionSelector"]},{"name":"fun interface BlockingEventListenerFunction : EventListenerFunction","description":"love.forte.simbot.event.BlockingEventListenerFunction","location":"simbot-api/love.forte.simbot.event/-blocking-event-listener-function/index.html","searchKeys":["BlockingEventListenerFunction","fun interface BlockingEventListenerFunction : EventListenerFunction","love.forte.simbot.event.BlockingEventListenerFunction"]},{"name":"fun interface ConfigFunction<T>","description":"love.forte.simbot.application.ApplicationDslBuilder.ConfigFunction","location":"simbot-api/love.forte.simbot.application/-application-dsl-builder/-config-function/index.html","searchKeys":["ConfigFunction","fun interface ConfigFunction<T>","love.forte.simbot.application.ApplicationDslBuilder.ConfigFunction"]},{"name":"fun interface Consumer3<T1, T2, T3>","description":"love.forte.simbot.utils.Consumer3","location":"simbot-api/love.forte.simbot.utils/-consumer3/index.html","searchKeys":["Consumer3","fun interface Consumer3<T1, T2, T3>","love.forte.simbot.utils.Consumer3"]},{"name":"fun interface Consumer4<T1, T2, T3, T4>","description":"love.forte.simbot.utils.Consumer4","location":"simbot-api/love.forte.simbot.utils/-consumer4/index.html","searchKeys":["Consumer4","fun interface Consumer4<T1, T2, T3, T4>","love.forte.simbot.utils.Consumer4"]},{"name":"fun interface Consumer5<T1, T2, T3, T4, T5>","description":"love.forte.simbot.utils.Consumer5","location":"simbot-api/love.forte.simbot.utils/-consumer5/index.html","searchKeys":["Consumer5","fun interface Consumer5<T1, T2, T3, T4, T5>","love.forte.simbot.utils.Consumer5"]},{"name":"fun interface ContinuousSessionEventMatcher<in E : Event>","description":"love.forte.simbot.event.ContinuousSessionEventMatcher","location":"simbot-api/love.forte.simbot.event/-continuous-session-event-matcher/index.html","searchKeys":["ContinuousSessionEventMatcher","fun interface ContinuousSessionEventMatcher<in E : Event>","love.forte.simbot.event.ContinuousSessionEventMatcher"]},{"name":"fun interface ContinuousSessionSelector<T>","description":"love.forte.simbot.event.ContinuousSessionSelector","location":"simbot-api/love.forte.simbot.event/-continuous-session-selector/index.html","searchKeys":["ContinuousSessionSelector","fun interface ContinuousSessionSelector<T>","love.forte.simbot.event.ContinuousSessionSelector"]},{"name":"fun interface EventListenerFunction : SuspendFunction1<EventListenerProcessingContext, EventResult> ","description":"love.forte.simbot.event.EventListenerFunction","location":"simbot-api/love.forte.simbot.event/-event-listener-function/index.html","searchKeys":["EventListenerFunction","fun interface EventListenerFunction : SuspendFunction1<EventListenerProcessingContext, EventResult> ","love.forte.simbot.event.EventListenerFunction"]},{"name":"fun interface JsonBuilder4J","description":"love.forte.simbot.message.JsonBuilder4J","location":"simbot-api/love.forte.simbot.message/-json-builder4-j/index.html","searchKeys":["JsonBuilder4J","fun interface JsonBuilder4J","love.forte.simbot.message.JsonBuilder4J"]},{"name":"fun interface OnCompletion<in A : Application>","description":"love.forte.simbot.application.OnCompletion","location":"simbot-api/love.forte.simbot.application/-on-completion/index.html","searchKeys":["OnCompletion","fun interface OnCompletion<in A : Application>","love.forte.simbot.application.OnCompletion"]},{"name":"fun invalid(): EventResult.Invalid","description":"love.forte.simbot.event.EventResult.Companion.invalid","location":"simbot-api/love.forte.simbot.event/-event-result/-companion/invalid.html","searchKeys":["invalid","fun invalid(): EventResult.Invalid","love.forte.simbot.event.EventResult.Companion.invalid"]},{"name":"fun limiter(offset: Int = ZERO.offset, limit: Int = ZERO.limit, batchSize: Int = ZERO.batchSize): Limiter","description":"love.forte.simbot.limiter","location":"simbot-api/love.forte.simbot/limiter.html","searchKeys":["limiter","fun limiter(offset: Int = ZERO.offset, limit: Int = ZERO.limit, batchSize: Int = ZERO.batchSize): Limiter","love.forte.simbot.limiter"]},{"name":"fun messages(): Messages","description":"love.forte.simbot.message.Messages.Companion.messages","location":"simbot-api/love.forte.simbot.message/-messages/-companion/messages.html","searchKeys":["messages","fun messages(): Messages","love.forte.simbot.message.Messages.Companion.messages"]},{"name":"fun messages(): Messages","description":"love.forte.simbot.message.messages","location":"simbot-api/love.forte.simbot.message/messages.html","searchKeys":["messages","fun messages(): Messages","love.forte.simbot.message.messages"]},{"name":"fun messages(vararg messages: Message.Element<*>): Messages","description":"love.forte.simbot.message.messages","location":"simbot-api/love.forte.simbot.message/messages.html","searchKeys":["messages","fun messages(vararg messages: Message.Element<*>): Messages","love.forte.simbot.message.messages"]},{"name":"fun notSupport(): Timestamp","description":"love.forte.simbot.Timestamp.Companion.notSupport","location":"simbot-api/love.forte.simbot/-timestamp/-companion/not-support.html","searchKeys":["notSupport","fun notSupport(): Timestamp","love.forte.simbot.Timestamp.Companion.notSupport"]},{"name":"fun now(): Timestamp","description":"love.forte.simbot.Timestamp.Companion.now","location":"simbot-api/love.forte.simbot/-timestamp/-companion/now.html","searchKeys":["now","fun now(): Timestamp","love.forte.simbot.Timestamp.Companion.now"]},{"name":"fun of(content: Any? = null, isTruncated: Boolean = false): EventResult","description":"love.forte.simbot.event.EventResult.Companion.of","location":"simbot-api/love.forte.simbot.event/-event-result/-companion/of.html","searchKeys":["of","fun of(content: Any? = null, isTruncated: Boolean = false): EventResult","love.forte.simbot.event.EventResult.Companion.of"]},{"name":"fun of(offset: Int = ZERO.offset, limit: Int = ZERO.limit, batchSize: Int = ZERO.batchSize): Limiter","description":"love.forte.simbot.Limiter.ZERO.of","location":"simbot-api/love.forte.simbot/-limiter/-z-e-r-o/of.html","searchKeys":["of","fun of(offset: Int = ZERO.offset, limit: Int = ZERO.limit, batchSize: Int = ZERO.batchSize): Limiter","love.forte.simbot.Limiter.ZERO.of"]},{"name":"fun of(text: String): Text","description":"love.forte.simbot.message.Text.Key.of","location":"simbot-api/love.forte.simbot.message/-text/-key/of.html","searchKeys":["of","fun of(text: String): Text","love.forte.simbot.message.Text.Key.of"]},{"name":"fun ofPage(pageSize: Int, pageNum: Int): Limiter","description":"love.forte.simbot.Limiter.ZERO.ofPage","location":"simbot-api/love.forte.simbot/-limiter/-z-e-r-o/of-page.html","searchKeys":["ofPage","fun ofPage(pageSize: Int, pageNum: Int): Limiter","love.forte.simbot.Limiter.ZERO.ofPage"]},{"name":"fun openStream(vararg options: OpenOption): InputStream","description":"love.forte.simbot.resources.PathResource.openStream","location":"simbot-api/love.forte.simbot.resources/-path-resource/open-stream.html","searchKeys":["openStream","fun openStream(vararg options: OpenOption): InputStream","love.forte.simbot.resources.PathResource.openStream"]},{"name":"fun randomAccessFile(mode: String = \"r\"): RandomAccessFile","description":"love.forte.simbot.resources.FileResource.randomAccessFile","location":"simbot-api/love.forte.simbot.resources/-file-resource/random-access-file.html","searchKeys":["randomAccessFile","fun randomAccessFile(mode: String = \"r\"): RandomAccessFile","love.forte.simbot.resources.FileResource.randomAccessFile"]},{"name":"fun randomID(random: Random = Random): ID","description":"love.forte.simbot.randomID","location":"simbot-api/love.forte.simbot/random-i-d.html","searchKeys":["randomID","fun randomID(random: Random = Random): ID","love.forte.simbot.randomID"]},{"name":"fun randomID(random: Random = Random): String","description":"love.forte.simbot.utils.RandomIDUtil.randomID","location":"simbot-api/love.forte.simbot.utils/-random-i-d-util/random-i-d.html","searchKeys":["randomID","fun randomID(random: Random = Random): String","love.forte.simbot.utils.RandomIDUtil.randomID"]},{"name":"fun randomID(random: Random): ID","description":"love.forte.simbot.randomID","location":"simbot-api/love.forte.simbot/random-i-d.html","searchKeys":["randomID","fun randomID(random: Random): ID","love.forte.simbot.randomID"]},{"name":"fun randomIdStr(random: Random = Random): String","description":"love.forte.simbot.utils.randomIdStr","location":"simbot-api/love.forte.simbot.utils/random-id-str.html","searchKeys":["randomIdStr","fun randomIdStr(random: Random = Random): String","love.forte.simbot.utils.randomIdStr"]},{"name":"fun setRunInBlockingStrategy(strategy: RunInBlockingStrategy)","description":"love.forte.simbot.utils.setRunInBlockingStrategy","location":"simbot-api/love.forte.simbot.utils/set-run-in-blocking-strategy.html","searchKeys":["setRunInBlockingStrategy","fun setRunInBlockingStrategy(strategy: RunInBlockingStrategy)","love.forte.simbot.utils.setRunInBlockingStrategy"]},{"name":"fun setRunInNoScopeBlockingStrategy(strategy: RunInNoScopeBlockingStrategy)","description":"love.forte.simbot.utils.setRunInNoScopeBlockingStrategy","location":"simbot-api/love.forte.simbot.utils/set-run-in-no-scope-blocking-strategy.html","searchKeys":["setRunInNoScopeBlockingStrategy","fun setRunInNoScopeBlockingStrategy(strategy: RunInNoScopeBlockingStrategy)","love.forte.simbot.utils.setRunInNoScopeBlockingStrategy"]},{"name":"fun supportDecoderFactories(warnLogger: Logger? = logger, classLoader: ClassLoader = Companion::class.java.classLoader): List<StandardBotVerifyInfoDecoderFactory<*, *>>","description":"love.forte.simbot.bot.StandardBotVerifyInfoDecoderFactory.Companion.supportDecoderFactories","location":"simbot-api/love.forte.simbot.bot/-standard-bot-verify-info-decoder-factory/-companion/support-decoder-factories.html","searchKeys":["supportDecoderFactories","fun supportDecoderFactories(warnLogger: Logger? = logger, classLoader: ClassLoader = Companion::class.java.classLoader): List<StandardBotVerifyInfoDecoderFactory<*, *>>","love.forte.simbot.bot.StandardBotVerifyInfoDecoderFactory.Companion.supportDecoderFactories"]},{"name":"fun systemProperties(key: String): String?","description":"love.forte.simbot.utils.systemProperties","location":"simbot-api/love.forte.simbot.utils/system-properties.html","searchKeys":["systemProperties","fun systemProperties(key: String): String?","love.forte.simbot.utils.systemProperties"]},{"name":"fun text(text: String): MessagesBuilder","description":"love.forte.simbot.message.MessagesBuilder.text","location":"simbot-api/love.forte.simbot.message/-messages-builder/text.html","searchKeys":["text","fun text(text: String): MessagesBuilder","love.forte.simbot.message.MessagesBuilder.text"]},{"name":"fun toBigDecimalID(): BigDecimalID","description":"love.forte.simbot.BigIntegerID.toBigDecimalID","location":"simbot-api/love.forte.simbot/-big-integer-i-d/to-big-decimal-i-d.html","searchKeys":["toBigDecimalID","fun toBigDecimalID(): BigDecimalID","love.forte.simbot.BigIntegerID.toBigDecimalID"]},{"name":"fun toBigDecimalID(scale: Int, mathContext: MathContext = MathContext.UNLIMITED): BigDecimalID","description":"love.forte.simbot.BigIntegerID.toBigDecimalID","location":"simbot-api/love.forte.simbot/-big-integer-i-d/to-big-decimal-i-d.html","searchKeys":["toBigDecimalID","fun toBigDecimalID(scale: Int, mathContext: MathContext = MathContext.UNLIMITED): BigDecimalID","love.forte.simbot.BigIntegerID.toBigDecimalID"]},{"name":"fun toBigIntegerID(exact: Boolean = false): BigIntegerID","description":"love.forte.simbot.BigDecimalID.toBigIntegerID","location":"simbot-api/love.forte.simbot/-big-decimal-i-d/to-big-integer-i-d.html","searchKeys":["toBigIntegerID","fun toBigIntegerID(exact: Boolean = false): BigIntegerID","love.forte.simbot.BigDecimalID.toBigIntegerID"]},{"name":"fun toInstant(): Instant","description":"love.forte.simbot.InstantTimestamp.toInstant","location":"simbot-api/love.forte.simbot/-instant-timestamp/to-instant.html","searchKeys":["toInstant","fun toInstant(): Instant","love.forte.simbot.InstantTimestamp.toInstant"]},{"name":"fun toJsonString(messages: Messages, json: Json = defaultJson): String","description":"love.forte.simbot.message.MessageSerializationUtil.toJsonString","location":"simbot-api/love.forte.simbot.message/-message-serialization-util/to-json-string.html","searchKeys":["toJsonString","fun toJsonString(messages: Messages, json: Json = defaultJson): String","love.forte.simbot.message.MessageSerializationUtil.toJsonString"]},{"name":"fun toMessages(vararg messages: Message.Element<*>): Messages","description":"love.forte.simbot.message.Messages.Companion.toMessages","location":"simbot-api/love.forte.simbot.message/-messages/-companion/to-messages.html","searchKeys":["toMessages","fun toMessages(vararg messages: Message.Element<*>): Messages","love.forte.simbot.message.Messages.Companion.toMessages"]},{"name":"fun trim(): Text","description":"love.forte.simbot.message.Text.trim","location":"simbot-api/love.forte.simbot.message/-text/trim.html","searchKeys":["trim","fun trim(): Text","love.forte.simbot.message.Text.trim"]},{"name":"fun truncate(): EventResult","description":"love.forte.simbot.event.EventResult.Companion.truncate","location":"simbot-api/love.forte.simbot.event/-event-result/-companion/truncate.html","searchKeys":["truncate","fun truncate(): EventResult","love.forte.simbot.event.EventResult.Companion.truncate"]},{"name":"fun valueOf(value: String): ActionType","description":"love.forte.simbot.action.ActionType.valueOf","location":"simbot-api/love.forte.simbot.action/-action-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): ActionType","love.forte.simbot.action.ActionType.valueOf"]},{"name":"fun valueOf(value: String): EventListenerInterceptor.Point","description":"love.forte.simbot.event.EventListenerInterceptor.Point.valueOf","location":"simbot-api/love.forte.simbot.event/-event-listener-interceptor/-point/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): EventListenerInterceptor.Point","love.forte.simbot.event.EventListenerInterceptor.Point.valueOf"]},{"name":"fun valueOf(value: String): RequestEvent.Type","description":"love.forte.simbot.event.RequestEvent.Type.valueOf","location":"simbot-api/love.forte.simbot.event/-request-event/-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): RequestEvent.Type","love.forte.simbot.event.RequestEvent.Type.valueOf"]},{"name":"fun values(): Array<ActionType>","description":"love.forte.simbot.action.ActionType.values","location":"simbot-api/love.forte.simbot.action/-action-type/values.html","searchKeys":["values","fun values(): Array<ActionType>","love.forte.simbot.action.ActionType.values"]},{"name":"fun values(): Array<EventListenerInterceptor.Point>","description":"love.forte.simbot.event.EventListenerInterceptor.Point.values","location":"simbot-api/love.forte.simbot.event/-event-listener-interceptor/-point/values.html","searchKeys":["values","fun values(): Array<EventListenerInterceptor.Point>","love.forte.simbot.event.EventListenerInterceptor.Point.values"]},{"name":"fun values(): Array<RequestEvent.Type>","description":"love.forte.simbot.event.RequestEvent.Type.values","location":"simbot-api/love.forte.simbot.event/-request-event/-type/values.html","searchKeys":["values","fun values(): Array<RequestEvent.Type>","love.forte.simbot.event.RequestEvent.Type.values"]},{"name":"fun waitForNextBlocking(id: String = randomIdStr(), matcher: BlockingContinuousSessionEventMatcher<Event>): Event","description":"love.forte.simbot.event.ContinuousSessionContext.waitForNextBlocking","location":"simbot-api/love.forte.simbot.event/-continuous-session-context/wait-for-next-blocking.html","searchKeys":["waitForNextBlocking","fun waitForNextBlocking(id: String = randomIdStr(), matcher: BlockingContinuousSessionEventMatcher<Event>): Event","love.forte.simbot.event.ContinuousSessionContext.waitForNextBlocking"]},{"name":"fun waitForNextBlocking(id: String, timeout: Long, timeUnit: TimeUnit, matcher: BlockingContinuousSessionEventMatcher<Event> = BlockingContinuousSessionEventMatcher): Event","description":"love.forte.simbot.event.ContinuousSessionContext.waitForNextBlocking","location":"simbot-api/love.forte.simbot.event/-continuous-session-context/wait-for-next-blocking.html","searchKeys":["waitForNextBlocking","fun waitForNextBlocking(id: String, timeout: Long, timeUnit: TimeUnit, matcher: BlockingContinuousSessionEventMatcher<Event> = BlockingContinuousSessionEventMatcher): Event","love.forte.simbot.event.ContinuousSessionContext.waitForNextBlocking"]},{"name":"fun waitForNextBlocking(id: String, timeoutDuration: JavaDuration = JavaDuration.ZERO, matcher: BlockingContinuousSessionEventMatcher<Event> = BlockingContinuousSessionEventMatcher): Event","description":"love.forte.simbot.event.ContinuousSessionContext.waitForNextBlocking","location":"simbot-api/love.forte.simbot.event/-continuous-session-context/wait-for-next-blocking.html","searchKeys":["waitForNextBlocking","fun waitForNextBlocking(id: String, timeoutDuration: JavaDuration = JavaDuration.ZERO, matcher: BlockingContinuousSessionEventMatcher<Event> = BlockingContinuousSessionEventMatcher): Event","love.forte.simbot.event.ContinuousSessionContext.waitForNextBlocking"]},{"name":"fun waitForNextBlocking(timeout: Long, timeUnit: TimeUnit, matcher: BlockingContinuousSessionEventMatcher<Event> = BlockingContinuousSessionEventMatcher): Event","description":"love.forte.simbot.event.ContinuousSessionContext.waitForNextBlocking","location":"simbot-api/love.forte.simbot.event/-continuous-session-context/wait-for-next-blocking.html","searchKeys":["waitForNextBlocking","fun waitForNextBlocking(timeout: Long, timeUnit: TimeUnit, matcher: BlockingContinuousSessionEventMatcher<Event> = BlockingContinuousSessionEventMatcher): Event","love.forte.simbot.event.ContinuousSessionContext.waitForNextBlocking"]},{"name":"fun waitForNextBlocking(timeoutDuration: JavaDuration = JavaDuration.ZERO, matcher: BlockingContinuousSessionEventMatcher<Event> = BlockingContinuousSessionEventMatcher): Event","description":"love.forte.simbot.event.ContinuousSessionContext.waitForNextBlocking","location":"simbot-api/love.forte.simbot.event/-continuous-session-context/wait-for-next-blocking.html","searchKeys":["waitForNextBlocking","fun waitForNextBlocking(timeoutDuration: JavaDuration = JavaDuration.ZERO, matcher: BlockingContinuousSessionEventMatcher<Event> = BlockingContinuousSessionEventMatcher): Event","love.forte.simbot.event.ContinuousSessionContext.waitForNextBlocking"]},{"name":"fun waitForNextMessageBlocking(id: String = randomIdStr(), matcher: BlockingContinuousSessionEventMatcher<MessageEvent>): MessageContent","description":"love.forte.simbot.event.ContinuousSessionContext.waitForNextMessageBlocking","location":"simbot-api/love.forte.simbot.event/-continuous-session-context/wait-for-next-message-blocking.html","searchKeys":["waitForNextMessageBlocking","fun waitForNextMessageBlocking(id: String = randomIdStr(), matcher: BlockingContinuousSessionEventMatcher<MessageEvent>): MessageContent","love.forte.simbot.event.ContinuousSessionContext.waitForNextMessageBlocking"]},{"name":"fun waitForNextMessageBlocking(id: String, timeout: JavaDuration = JavaDuration.ZERO, matcher: BlockingContinuousSessionEventMatcher<MessageEvent> = BlockingContinuousSessionEventMatcher): MessageContent","description":"love.forte.simbot.event.ContinuousSessionContext.waitForNextMessageBlocking","location":"simbot-api/love.forte.simbot.event/-continuous-session-context/wait-for-next-message-blocking.html","searchKeys":["waitForNextMessageBlocking","fun waitForNextMessageBlocking(id: String, timeout: JavaDuration = JavaDuration.ZERO, matcher: BlockingContinuousSessionEventMatcher<MessageEvent> = BlockingContinuousSessionEventMatcher): MessageContent","love.forte.simbot.event.ContinuousSessionContext.waitForNextMessageBlocking"]},{"name":"fun waitForNextMessageBlocking(id: String, timeout: Long, timeUnit: TimeUnit, matcher: BlockingContinuousSessionEventMatcher<MessageEvent> = BlockingContinuousSessionEventMatcher): MessageContent","description":"love.forte.simbot.event.ContinuousSessionContext.waitForNextMessageBlocking","location":"simbot-api/love.forte.simbot.event/-continuous-session-context/wait-for-next-message-blocking.html","searchKeys":["waitForNextMessageBlocking","fun waitForNextMessageBlocking(id: String, timeout: Long, timeUnit: TimeUnit, matcher: BlockingContinuousSessionEventMatcher<MessageEvent> = BlockingContinuousSessionEventMatcher): MessageContent","love.forte.simbot.event.ContinuousSessionContext.waitForNextMessageBlocking"]},{"name":"fun waitForNextMessageBlocking(timeout: JavaDuration = JavaDuration.ZERO, matcher: BlockingContinuousSessionEventMatcher<MessageEvent> = BlockingContinuousSessionEventMatcher): MessageContent","description":"love.forte.simbot.event.ContinuousSessionContext.waitForNextMessageBlocking","location":"simbot-api/love.forte.simbot.event/-continuous-session-context/wait-for-next-message-blocking.html","searchKeys":["waitForNextMessageBlocking","fun waitForNextMessageBlocking(timeout: JavaDuration = JavaDuration.ZERO, matcher: BlockingContinuousSessionEventMatcher<MessageEvent> = BlockingContinuousSessionEventMatcher): MessageContent","love.forte.simbot.event.ContinuousSessionContext.waitForNextMessageBlocking"]},{"name":"fun waitForNextMessageBlocking(timeout: Long, timeUnit: TimeUnit, matcher: BlockingContinuousSessionEventMatcher<MessageEvent> = BlockingContinuousSessionEventMatcher): MessageContent","description":"love.forte.simbot.event.ContinuousSessionContext.waitForNextMessageBlocking","location":"simbot-api/love.forte.simbot.event/-continuous-session-context/wait-for-next-message-blocking.html","searchKeys":["waitForNextMessageBlocking","fun waitForNextMessageBlocking(timeout: Long, timeUnit: TimeUnit, matcher: BlockingContinuousSessionEventMatcher<MessageEvent> = BlockingContinuousSessionEventMatcher): MessageContent","love.forte.simbot.event.ContinuousSessionContext.waitForNextMessageBlocking"]},{"name":"infix fun Bot.isNotMe(id: ID): Boolean","description":"love.forte.simbot.bot.isNotMe","location":"simbot-api/love.forte.simbot.bot/is-not-me.html","searchKeys":["isNotMe","infix fun Bot.isNotMe(id: ID): Boolean","love.forte.simbot.bot.isNotMe"]},{"name":"infix fun Event.Key<*>.isSub(from: Event.Key<*>): Boolean","description":"love.forte.simbot.event.Event.Key.Companion.isSub","location":"simbot-api/love.forte.simbot.event/-event/-key/-companion/is-sub.html","searchKeys":["isSub","infix fun Event.Key<*>.isSub(from: Event.Key<*>): Boolean","love.forte.simbot.event.Event.Key.Companion.isSub"]},{"name":"infix fun IDContainer.sameIdWith(other: IDContainer): Boolean","description":"love.forte.simbot.definition.sameIdWith","location":"simbot-api/love.forte.simbot.definition/same-id-with.html","searchKeys":["sameIdWith","infix fun IDContainer.sameIdWith(other: IDContainer): Boolean","love.forte.simbot.definition.sameIdWith"]},{"name":"infix fun IdValueContainer.sameIdWith(other: IdValueContainer): Boolean","description":"love.forte.simbot.definition.sameIdWith","location":"simbot-api/love.forte.simbot.definition/same-id-with.html","searchKeys":["sameIdWith","infix fun IdValueContainer.sameIdWith(other: IdValueContainer): Boolean","love.forte.simbot.definition.sameIdWith"]},{"name":"infix inline suspend fun Message.sendTo(support: SendSupport): MessageReceipt","description":"love.forte.simbot.message.sendTo","location":"simbot-api/love.forte.simbot.message/send-to.html","searchKeys":["sendTo","infix inline suspend fun Message.sendTo(support: SendSupport): MessageReceipt","love.forte.simbot.message.sendTo"]},{"name":"inline fun <B, T> Items<B>.map(crossinline transform: suspend (B) -> T): Items<T>","description":"love.forte.simbot.utils.item.map","location":"simbot-api/love.forte.simbot.utils.item/map.html","searchKeys":["map","inline fun <B, T> Items<B>.map(crossinline transform: suspend (B) -> T): Items<T>","love.forte.simbot.utils.item.map"]},{"name":"inline fun <E> doCast(value: Any): E","description":"love.forte.simbot.message.doCast","location":"simbot-api/love.forte.simbot.message/do-cast.html","searchKeys":["doCast","inline fun <E> doCast(value: Any): E","love.forte.simbot.message.doCast"]},{"name":"inline fun <E> doSafeCast(value: Any): E?","description":"love.forte.simbot.message.doSafeCast","location":"simbot-api/love.forte.simbot.message/do-safe-cast.html","searchKeys":["doSafeCast","inline fun <E> doSafeCast(value: Any): E?","love.forte.simbot.message.doSafeCast"]},{"name":"inline fun <T : Event> getKey(): Event.Key<T>","description":"love.forte.simbot.event.Event.Key.Companion.getKey","location":"simbot-api/love.forte.simbot.event/-event/-key/-companion/get-key.html","searchKeys":["getKey","inline fun <T : Event> getKey(): Event.Key<T>","love.forte.simbot.event.Event.Key.Companion.getKey"]},{"name":"inline fun <T> CoroutineScope.effectedFlowItems(crossinline block: suspend FlowCollector<T>.() -> Unit): Items<T>","description":"love.forte.simbot.utils.item.effectedFlowItems","location":"simbot-api/love.forte.simbot.utils.item/effected-flow-items.html","searchKeys":["effectedFlowItems","inline fun <T> CoroutineScope.effectedFlowItems(crossinline block: suspend FlowCollector<T>.() -> Unit): Items<T>","love.forte.simbot.utils.item.effectedFlowItems"]},{"name":"inline fun <T> CoroutineScope.effectedItemsByFlow(crossinline flowFactory: () -> Flow<T>): Items<T>","description":"love.forte.simbot.utils.item.effectedItemsByFlow","location":"simbot-api/love.forte.simbot.utils.item/effected-items-by-flow.html","searchKeys":["effectedItemsByFlow","inline fun <T> CoroutineScope.effectedItemsByFlow(crossinline flowFactory: () -> Flow<T>): Items<T>","love.forte.simbot.utils.item.effectedItemsByFlow"]},{"name":"inline fun <T> CoroutineScope.flowItems(crossinline block: suspend FlowCollector<T>.(Items.PreprocessingProperties) -> Unit): Items<T>","description":"love.forte.simbot.utils.item.flowItems","location":"simbot-api/love.forte.simbot.utils.item/flow-items.html","searchKeys":["flowItems","inline fun <T> CoroutineScope.flowItems(crossinline block: suspend FlowCollector<T>.(Items.PreprocessingProperties) -> Unit): Items<T>","love.forte.simbot.utils.item.flowItems"]},{"name":"inline fun <T> CoroutineScope.itemsByFlow(crossinline flowFactory: (Items.PreprocessingProperties) -> Flow<T>): Items<T>","description":"love.forte.simbot.utils.item.itemsByFlow","location":"simbot-api/love.forte.simbot.utils.item/items-by-flow.html","searchKeys":["itemsByFlow","inline fun <T> CoroutineScope.itemsByFlow(crossinline flowFactory: (Items.PreprocessingProperties) -> Flow<T>): Items<T>","love.forte.simbot.utils.item.itemsByFlow"]},{"name":"inline fun <T> CoroutineScope.produceItems(context: CoroutineContext = EmptyCoroutineContext, capacity: Int = 0, crossinline block: suspend ProducerScope<T>.(Items.PreprocessingProperties) -> Unit): Items<T>","description":"love.forte.simbot.utils.item.produceItems","location":"simbot-api/love.forte.simbot.utils.item/produce-items.html","searchKeys":["produceItems","inline fun <T> CoroutineScope.produceItems(context: CoroutineContext = EmptyCoroutineContext, capacity: Int = 0, crossinline block: suspend ProducerScope<T>.(Items.PreprocessingProperties) -> Unit): Items<T>","love.forte.simbot.utils.item.produceItems"]},{"name":"inline fun <T> Limiter.toFlow(crossinline collector: suspend FlowCollector<T>.(batchSize: Int) -> Unit): Flow<T>","description":"love.forte.simbot.toFlow","location":"simbot-api/love.forte.simbot/to-flow.html","searchKeys":["toFlow","inline fun <T> Limiter.toFlow(crossinline collector: suspend FlowCollector<T>.(batchSize: Int) -> Unit): Flow<T>","love.forte.simbot.toFlow"]},{"name":"inline fun <T> Limiter.toSequence(crossinline block: suspend SequenceScope<T>.(batchSize: Int) -> Unit): Sequence<T>","description":"love.forte.simbot.toSequence","location":"simbot-api/love.forte.simbot/to-sequence.html","searchKeys":["toSequence","inline fun <T> Limiter.toSequence(crossinline block: suspend SequenceScope<T>.(batchSize: Int) -> Unit): Sequence<T>","love.forte.simbot.toSequence"]},{"name":"inline fun <T> View<T>.isNotEmpty(): Boolean","description":"love.forte.simbot.utils.view.isNotEmpty","location":"simbot-api/love.forte.simbot.utils.view/is-not-empty.html","searchKeys":["isNotEmpty","inline fun <T> View<T>.isNotEmpty(): Boolean","love.forte.simbot.utils.view.isNotEmpty"]},{"name":"inline fun <T> effectedItemsBySequence(crossinline sequenceFactory: () -> Sequence<T>): Items<T>","description":"love.forte.simbot.utils.item.effectedItemsBySequence","location":"simbot-api/love.forte.simbot.utils.item/effected-items-by-sequence.html","searchKeys":["effectedItemsBySequence","inline fun <T> effectedItemsBySequence(crossinline sequenceFactory: () -> Sequence<T>): Items<T>","love.forte.simbot.utils.item.effectedItemsBySequence"]},{"name":"inline fun <T> effectedSequenceItems(crossinline block: suspend SequenceScope<T>.() -> Unit): Items<T>","description":"love.forte.simbot.utils.item.effectedSequenceItems","location":"simbot-api/love.forte.simbot.utils.item/effected-sequence-items.html","searchKeys":["effectedSequenceItems","inline fun <T> effectedSequenceItems(crossinline block: suspend SequenceScope<T>.() -> Unit): Items<T>","love.forte.simbot.utils.item.effectedSequenceItems"]},{"name":"inline fun <T> itemsBySequence(crossinline sequenceFactory: (Items.PreprocessingProperties) -> Sequence<T>): Items<T>","description":"love.forte.simbot.utils.item.itemsBySequence","location":"simbot-api/love.forte.simbot.utils.item/items-by-sequence.html","searchKeys":["itemsBySequence","inline fun <T> itemsBySequence(crossinline sequenceFactory: (Items.PreprocessingProperties) -> Sequence<T>): Items<T>","love.forte.simbot.utils.item.itemsBySequence"]},{"name":"inline fun <T> sequenceItems(crossinline block: suspend SequenceScope<T>.(Items.PreprocessingProperties) -> Unit): Items<T>","description":"love.forte.simbot.utils.item.sequenceItems","location":"simbot-api/love.forte.simbot.utils.item/sequence-items.html","searchKeys":["sequenceItems","inline fun <T> sequenceItems(crossinline block: suspend SequenceScope<T>.(Items.PreprocessingProperties) -> Unit): Items<T>","love.forte.simbot.utils.item.sequenceItems"]},{"name":"inline fun Application.bots(block: BotManagers.() -> Unit)","description":"love.forte.simbot.application.bots","location":"simbot-api/love.forte.simbot.application/bots.html","searchKeys":["bots","inline fun Application.bots(block: BotManagers.() -> Unit)","love.forte.simbot.application.bots"]},{"name":"inline fun Duration.java(ifInfinite: (duration: Duration) -> JavaDuration = {\n        throw IllegalArgumentException(\n            \"Duration is infinite\"\n        )\n    }): JavaDuration","description":"love.forte.simbot.java","location":"simbot-api/love.forte.simbot/java.html","searchKeys":["java","inline fun Duration.java(ifInfinite: (duration: Duration) -> JavaDuration = {\n        throw IllegalArgumentException(\n            \"Duration is infinite\"\n        )\n    }): JavaDuration","love.forte.simbot.java"]},{"name":"inline fun Text(block: () -> String): Text","description":"love.forte.simbot.message.Text","location":"simbot-api/love.forte.simbot.message/-text.html","searchKeys":["Text","inline fun Text(block: () -> String): Text","love.forte.simbot.message.Text"]},{"name":"inline fun actionUnsupported(cause: Throwable? = null, block: () -> String): Nothing","description":"love.forte.simbot.action.actionUnsupported","location":"simbot-api/love.forte.simbot.action/action-unsupported.html","searchKeys":["actionUnsupported","inline fun actionUnsupported(cause: Throwable? = null, block: () -> String): Nothing","love.forte.simbot.action.actionUnsupported"]},{"name":"inline fun async(scope: CoroutineScope, context: CoroutineContext = EmptyCoroutineContext, start: CoroutineStart = CoroutineStart.DEFAULT, crossinline block: suspend CoroutineScope.() -> Any?): AsyncEventResult","description":"love.forte.simbot.event.EventResult.Companion.async","location":"simbot-api/love.forte.simbot.event/-event-result/-companion/async.html","searchKeys":["async","inline fun async(scope: CoroutineScope, context: CoroutineContext = EmptyCoroutineContext, start: CoroutineStart = CoroutineStart.DEFAULT, crossinline block: suspend CoroutineScope.() -> Any?): AsyncEventResult","love.forte.simbot.event.EventResult.Companion.async"]},{"name":"inline fun buildMessages(initial: MutableCollection<Message.Element<*>>? = null, block: MessagesBuilder.() -> Unit): Messages","description":"love.forte.simbot.message.buildMessages","location":"simbot-api/love.forte.simbot.message/build-messages.html","searchKeys":["buildMessages","inline fun buildMessages(initial: MutableCollection<Message.Element<*>>? = null, block: MessagesBuilder.() -> Unit): Messages","love.forte.simbot.message.buildMessages"]},{"name":"inline fun check(value: Boolean)","description":"love.forte.simbot.Simbot.check","location":"simbot-api/love.forte.simbot/-simbot/check.html","searchKeys":["check","inline fun check(value: Boolean)","love.forte.simbot.Simbot.check"]},{"name":"inline fun check(value: Boolean, lazyMessage: () -> Any)","description":"love.forte.simbot.Simbot.check","location":"simbot-api/love.forte.simbot/-simbot/check.html","searchKeys":["check","inline fun check(value: Boolean, lazyMessage: () -> Any)","love.forte.simbot.Simbot.check"]},{"name":"inline fun digest(algorithm: String, block: Digest.() -> Unit): ByteArray","description":"love.forte.simbot.utils.digest","location":"simbot-api/love.forte.simbot.utils/digest.html","searchKeys":["digest","inline fun digest(algorithm: String, block: Digest.() -> Unit): ByteArray","love.forte.simbot.utils.digest"]},{"name":"inline fun md5(block: Digest.() -> Unit): ByteArray","description":"love.forte.simbot.utils.md5","location":"simbot-api/love.forte.simbot.utils/md5.html","searchKeys":["md5","inline fun md5(block: Digest.() -> Unit): ByteArray","love.forte.simbot.utils.md5"]},{"name":"inline fun require(value: Boolean)","description":"love.forte.simbot.Simbot.require","location":"simbot-api/love.forte.simbot/-simbot/require.html","searchKeys":["require","inline fun require(value: Boolean)","love.forte.simbot.Simbot.require"]},{"name":"inline fun require(value: Boolean, lazyMessage: () -> Any)","description":"love.forte.simbot.Simbot.require","location":"simbot-api/love.forte.simbot/-simbot/require.html","searchKeys":["require","inline fun require(value: Boolean, lazyMessage: () -> Any)","love.forte.simbot.Simbot.require"]},{"name":"inline operator fun <T> ContinuousSessionContext.invoke(block: ContinuousSessionContext.() -> T): T","description":"love.forte.simbot.event.invoke","location":"simbot-api/love.forte.simbot.event/invoke.html","searchKeys":["invoke","inline operator fun <T> ContinuousSessionContext.invoke(block: ContinuousSessionContext.() -> T): T","love.forte.simbot.event.invoke"]},{"name":"inline operator fun Category.component1(): ID","description":"love.forte.simbot.definition.component1","location":"simbot-api/love.forte.simbot.definition/component1.html","searchKeys":["component1","inline operator fun Category.component1(): ID","love.forte.simbot.definition.component1"]},{"name":"inline operator fun Category.component2(): String","description":"love.forte.simbot.definition.component2","location":"simbot-api/love.forte.simbot.definition/component2.html","searchKeys":["component2","inline operator fun Category.component2(): String","love.forte.simbot.definition.component2"]},{"name":"inline operator fun FriendInfo.component4(): String?","description":"love.forte.simbot.definition.component4","location":"simbot-api/love.forte.simbot.definition/component4.html","searchKeys":["component4","inline operator fun FriendInfo.component4(): String?","love.forte.simbot.definition.component4"]},{"name":"inline operator fun Limiter.component1(): Int","description":"love.forte.simbot.component1","location":"simbot-api/love.forte.simbot/component1.html","searchKeys":["component1","inline operator fun Limiter.component1(): Int","love.forte.simbot.component1"]},{"name":"inline operator fun Limiter.component2(): Int","description":"love.forte.simbot.component2","location":"simbot-api/love.forte.simbot/component2.html","searchKeys":["component2","inline operator fun Limiter.component2(): Int","love.forte.simbot.component2"]},{"name":"inline operator fun Limiter.component3(): Int","description":"love.forte.simbot.component3","location":"simbot-api/love.forte.simbot/component3.html","searchKeys":["component3","inline operator fun Limiter.component3(): Int","love.forte.simbot.component3"]},{"name":"inline operator fun MemberInfo.component4(): String","description":"love.forte.simbot.definition.component4","location":"simbot-api/love.forte.simbot.definition/component4.html","searchKeys":["component4","inline operator fun MemberInfo.component4(): String","love.forte.simbot.definition.component4"]},{"name":"inline operator fun OrganizationInfo.component1(): ID","description":"love.forte.simbot.definition.component1","location":"simbot-api/love.forte.simbot.definition/component1.html","searchKeys":["component1","inline operator fun OrganizationInfo.component1(): ID","love.forte.simbot.definition.component1"]},{"name":"inline operator fun OrganizationInfo.component2(): String","description":"love.forte.simbot.definition.component2","location":"simbot-api/love.forte.simbot.definition/component2.html","searchKeys":["component2","inline operator fun OrganizationInfo.component2(): String","love.forte.simbot.definition.component2"]},{"name":"inline operator fun OrganizationInfo.component3(): String","description":"love.forte.simbot.definition.component3","location":"simbot-api/love.forte.simbot.definition/component3.html","searchKeys":["component3","inline operator fun OrganizationInfo.component3(): String","love.forte.simbot.definition.component3"]},{"name":"inline operator fun UserInfo.component1(): ID","description":"love.forte.simbot.definition.component1","location":"simbot-api/love.forte.simbot.definition/component1.html","searchKeys":["component1","inline operator fun UserInfo.component1(): ID","love.forte.simbot.definition.component1"]},{"name":"inline operator fun UserInfo.component2(): String","description":"love.forte.simbot.definition.component2","location":"simbot-api/love.forte.simbot.definition/component2.html","searchKeys":["component2","inline operator fun UserInfo.component2(): String","love.forte.simbot.definition.component2"]},{"name":"inline operator fun UserInfo.component3(): String","description":"love.forte.simbot.definition.component3","location":"simbot-api/love.forte.simbot.definition/component3.html","searchKeys":["component3","inline operator fun UserInfo.component3(): String","love.forte.simbot.definition.component3"]},{"name":"inline suspend fun <E : Event> EventProcessor.pushIfProcessable(block: () -> E): EventProcessingResult?","description":"love.forte.simbot.event.pushIfProcessable","location":"simbot-api/love.forte.simbot.event/push-if-processable.html","searchKeys":["pushIfProcessable","inline suspend fun <E : Event> EventProcessor.pushIfProcessable(block: () -> E): EventProcessingResult?","love.forte.simbot.event.pushIfProcessable"]},{"name":"inline suspend fun <R> ChannelEvent.inChannel(block: Channel.() -> R): R","description":"love.forte.simbot.event.inChannel","location":"simbot-api/love.forte.simbot.event/in-channel.html","searchKeys":["inChannel","inline suspend fun <R> ChannelEvent.inChannel(block: Channel.() -> R): R","love.forte.simbot.event.inChannel"]},{"name":"inline suspend fun <R> ChannelEvent.useChannel(block: (Channel) -> R): R","description":"love.forte.simbot.event.useChannel","location":"simbot-api/love.forte.simbot.event/use-channel.html","searchKeys":["useChannel","inline suspend fun <R> ChannelEvent.useChannel(block: (Channel) -> R): R","love.forte.simbot.event.useChannel"]},{"name":"inline suspend fun <R> ChannelInfoContainer.inChannelInfo(block: ChannelInfo.() -> R): R","description":"love.forte.simbot.definition.inChannelInfo","location":"simbot-api/love.forte.simbot.definition/in-channel-info.html","searchKeys":["inChannelInfo","inline suspend fun <R> ChannelInfoContainer.inChannelInfo(block: ChannelInfo.() -> R): R","love.forte.simbot.definition.inChannelInfo"]},{"name":"inline suspend fun <R> ChannelInfoContainer.useChannelInfo(block: (ChannelInfo) -> R): R","description":"love.forte.simbot.definition.useChannelInfo","location":"simbot-api/love.forte.simbot.definition/use-channel-info.html","searchKeys":["useChannelInfo","inline suspend fun <R> ChannelInfoContainer.useChannelInfo(block: (ChannelInfo) -> R): R","love.forte.simbot.definition.useChannelInfo"]},{"name":"inline suspend fun <R> ChatRoomMessageEvent.inAuthor(block: Member.() -> R): R","description":"love.forte.simbot.event.inAuthor","location":"simbot-api/love.forte.simbot.event/in-author.html","searchKeys":["inAuthor","inline suspend fun <R> ChatRoomMessageEvent.inAuthor(block: Member.() -> R): R","love.forte.simbot.event.inAuthor"]},{"name":"inline suspend fun <R> ChatRoomMessageEvent.useAuthor(block: (Member) -> R): R","description":"love.forte.simbot.event.useAuthor","location":"simbot-api/love.forte.simbot.event/use-author.html","searchKeys":["useAuthor","inline suspend fun <R> ChatRoomMessageEvent.useAuthor(block: (Member) -> R): R","love.forte.simbot.event.useAuthor"]},{"name":"inline suspend fun <R> FriendEvent.inFriend(block: Friend.() -> R): R","description":"love.forte.simbot.event.inFriend","location":"simbot-api/love.forte.simbot.event/in-friend.html","searchKeys":["inFriend","inline suspend fun <R> FriendEvent.inFriend(block: Friend.() -> R): R","love.forte.simbot.event.inFriend"]},{"name":"inline suspend fun <R> FriendEvent.useFriend(block: (Friend) -> R): R","description":"love.forte.simbot.event.useFriend","location":"simbot-api/love.forte.simbot.event/use-friend.html","searchKeys":["useFriend","inline suspend fun <R> FriendEvent.useFriend(block: (Friend) -> R): R","love.forte.simbot.event.useFriend"]},{"name":"inline suspend fun <R> FriendInfoContainer.inFriendInfo(block: FriendInfo.() -> R): R","description":"love.forte.simbot.definition.inFriendInfo","location":"simbot-api/love.forte.simbot.definition/in-friend-info.html","searchKeys":["inFriendInfo","inline suspend fun <R> FriendInfoContainer.inFriendInfo(block: FriendInfo.() -> R): R","love.forte.simbot.definition.inFriendInfo"]},{"name":"inline suspend fun <R> FriendInfoContainer.useFriendInfo(block: (FriendInfo) -> R): R","description":"love.forte.simbot.definition.useFriendInfo","location":"simbot-api/love.forte.simbot.definition/use-friend-info.html","searchKeys":["useFriendInfo","inline suspend fun <R> FriendInfoContainer.useFriendInfo(block: (FriendInfo) -> R): R","love.forte.simbot.definition.useFriendInfo"]},{"name":"inline suspend fun <R> GroupEvent.inGroup(block: Group.() -> R): R","description":"love.forte.simbot.event.inGroup","location":"simbot-api/love.forte.simbot.event/in-group.html","searchKeys":["inGroup","inline suspend fun <R> GroupEvent.inGroup(block: Group.() -> R): R","love.forte.simbot.event.inGroup"]},{"name":"inline suspend fun <R> GroupEvent.useGroup(block: (Group) -> R): R","description":"love.forte.simbot.event.useGroup","location":"simbot-api/love.forte.simbot.event/use-group.html","searchKeys":["useGroup","inline suspend fun <R> GroupEvent.useGroup(block: (Group) -> R): R","love.forte.simbot.event.useGroup"]},{"name":"inline suspend fun <R> GroupInfoContainer.inGroupInfo(block: GroupInfo.() -> R): R","description":"love.forte.simbot.definition.inGroupInfo","location":"simbot-api/love.forte.simbot.definition/in-group-info.html","searchKeys":["inGroupInfo","inline suspend fun <R> GroupInfoContainer.inGroupInfo(block: GroupInfo.() -> R): R","love.forte.simbot.definition.inGroupInfo"]},{"name":"inline suspend fun <R> GroupInfoContainer.useGroupInfo(block: (GroupInfo) -> R): R","description":"love.forte.simbot.definition.useGroupInfo","location":"simbot-api/love.forte.simbot.definition/use-group-info.html","searchKeys":["useGroupInfo","inline suspend fun <R> GroupInfoContainer.useGroupInfo(block: (GroupInfo) -> R): R","love.forte.simbot.definition.useGroupInfo"]},{"name":"inline suspend fun <R> GuildEvent.inGuild(block: Guild.() -> R): R","description":"love.forte.simbot.event.inGuild","location":"simbot-api/love.forte.simbot.event/in-guild.html","searchKeys":["inGuild","inline suspend fun <R> GuildEvent.inGuild(block: Guild.() -> R): R","love.forte.simbot.event.inGuild"]},{"name":"inline suspend fun <R> GuildEvent.useGuild(block: (Guild) -> R): R","description":"love.forte.simbot.event.useGuild","location":"simbot-api/love.forte.simbot.event/use-guild.html","searchKeys":["useGuild","inline suspend fun <R> GuildEvent.useGuild(block: (Guild) -> R): R","love.forte.simbot.event.useGuild"]},{"name":"inline suspend fun <R> GuildInfoContainer.inGuildInfo(block: GuildInfo.() -> R): R","description":"love.forte.simbot.definition.inGuildInfo","location":"simbot-api/love.forte.simbot.definition/in-guild-info.html","searchKeys":["inGuildInfo","inline suspend fun <R> GuildInfoContainer.inGuildInfo(block: GuildInfo.() -> R): R","love.forte.simbot.definition.inGuildInfo"]},{"name":"inline suspend fun <R> GuildInfoContainer.useGuildInfo(block: (GuildInfo) -> R): R","description":"love.forte.simbot.definition.useGuildInfo","location":"simbot-api/love.forte.simbot.definition/use-guild-info.html","searchKeys":["useGuildInfo","inline suspend fun <R> GuildInfoContainer.useGuildInfo(block: (GuildInfo) -> R): R","love.forte.simbot.definition.useGuildInfo"]},{"name":"inline suspend fun <R> MemberEvent.inMember(block: Member.() -> R): R","description":"love.forte.simbot.event.inMember","location":"simbot-api/love.forte.simbot.event/in-member.html","searchKeys":["inMember","inline suspend fun <R> MemberEvent.inMember(block: Member.() -> R): R","love.forte.simbot.event.inMember"]},{"name":"inline suspend fun <R> MemberEvent.useMember(block: (Member) -> R): R","description":"love.forte.simbot.event.useMember","location":"simbot-api/love.forte.simbot.event/use-member.html","searchKeys":["useMember","inline suspend fun <R> MemberEvent.useMember(block: (Member) -> R): R","love.forte.simbot.event.useMember"]},{"name":"inline suspend fun <R> MemberInfoContainer.inMemberInfo(block: MemberInfo.() -> R): R","description":"love.forte.simbot.definition.inMemberInfo","location":"simbot-api/love.forte.simbot.definition/in-member-info.html","searchKeys":["inMemberInfo","inline suspend fun <R> MemberInfoContainer.inMemberInfo(block: MemberInfo.() -> R): R","love.forte.simbot.definition.inMemberInfo"]},{"name":"inline suspend fun <R> MemberInfoContainer.useMemberInfo(block: (MemberInfo) -> R): R","description":"love.forte.simbot.definition.useMemberInfo","location":"simbot-api/love.forte.simbot.definition/use-member-info.html","searchKeys":["useMemberInfo","inline suspend fun <R> MemberInfoContainer.useMemberInfo(block: (MemberInfo) -> R): R","love.forte.simbot.definition.useMemberInfo"]},{"name":"inline suspend fun <R> OrganizationEvent.inOrganization(block: Organization.() -> R): R","description":"love.forte.simbot.event.inOrganization","location":"simbot-api/love.forte.simbot.event/in-organization.html","searchKeys":["inOrganization","inline suspend fun <R> OrganizationEvent.inOrganization(block: Organization.() -> R): R","love.forte.simbot.event.inOrganization"]},{"name":"inline suspend fun <R> OrganizationEvent.useOrganization(block: (Organization) -> R): R","description":"love.forte.simbot.event.useOrganization","location":"simbot-api/love.forte.simbot.event/use-organization.html","searchKeys":["useOrganization","inline suspend fun <R> OrganizationEvent.useOrganization(block: (Organization) -> R): R","love.forte.simbot.event.useOrganization"]},{"name":"inline suspend fun <R> ResourceContainer.useResource(block: (Resource) -> R): R","description":"love.forte.simbot.definition.useResource","location":"simbot-api/love.forte.simbot.definition/use-resource.html","searchKeys":["useResource","inline suspend fun <R> ResourceContainer.useResource(block: (Resource) -> R): R","love.forte.simbot.definition.useResource"]},{"name":"inline suspend fun <R> UserEvent.inUser(block: User.() -> R): R","description":"love.forte.simbot.event.inUser","location":"simbot-api/love.forte.simbot.event/in-user.html","searchKeys":["inUser","inline suspend fun <R> UserEvent.inUser(block: User.() -> R): R","love.forte.simbot.event.inUser"]},{"name":"inline suspend fun <R> UserEvent.useUser(block: (User) -> R): R","description":"love.forte.simbot.event.useUser","location":"simbot-api/love.forte.simbot.event/use-user.html","searchKeys":["useUser","inline suspend fun <R> UserEvent.useUser(block: (User) -> R): R","love.forte.simbot.event.useUser"]},{"name":"inline suspend fun <R> UserInfoContainer.inUserInfo(block: UserInfo.() -> R): R","description":"love.forte.simbot.definition.inUserInfo","location":"simbot-api/love.forte.simbot.definition/in-user-info.html","searchKeys":["inUserInfo","inline suspend fun <R> UserInfoContainer.inUserInfo(block: UserInfo.() -> R): R","love.forte.simbot.definition.inUserInfo"]},{"name":"inline suspend fun <R> UserInfoContainer.useUserInfo(block: (UserInfo) -> R): R","description":"love.forte.simbot.definition.useUserInfo","location":"simbot-api/love.forte.simbot.definition/use-user-info.html","searchKeys":["useUserInfo","inline suspend fun <R> UserInfoContainer.useUserInfo(block: (UserInfo) -> R): R","love.forte.simbot.definition.useUserInfo"]},{"name":"inline suspend fun <T, C : MutableCollection<T>> Items<T>.toCollection(collection: C): C","description":"love.forte.simbot.utils.item.toCollection","location":"simbot-api/love.forte.simbot.utils.item/to-collection.html","searchKeys":["toCollection","inline suspend fun <T, C : MutableCollection<T>> Items<T>.toCollection(collection: C): C","love.forte.simbot.utils.item.toCollection"]},{"name":"inline suspend fun <T> Items<T>.toList(): List<T>","description":"love.forte.simbot.utils.item.toList","location":"simbot-api/love.forte.simbot.utils.item/to-list.html","searchKeys":["toList","inline suspend fun <T> Items<T>.toList(): List<T>","love.forte.simbot.utils.item.toList"]},{"name":"inline suspend fun <T> runWithInterruptible(context: CoroutineContext = RunWithInterruptibleDefaultCoroutineContext, crossinline block: () -> T): T","description":"love.forte.simbot.utils.runWithInterruptible","location":"simbot-api/love.forte.simbot.utils/run-with-interruptible.html","searchKeys":["runWithInterruptible","inline suspend fun <T> runWithInterruptible(context: CoroutineContext = RunWithInterruptibleDefaultCoroutineContext, crossinline block: () -> T): T","love.forte.simbot.utils.runWithInterruptible"]},{"name":"inline suspend fun AggregatedMessageReceipt.deleteAllSafely(onResult: (Result<Boolean>) -> Unit = { /* Just.. ignore it. */ })","description":"love.forte.simbot.message.deleteAllSafely","location":"simbot-api/love.forte.simbot.message/delete-all-safely.html","searchKeys":["deleteAllSafely","inline suspend fun AggregatedMessageReceipt.deleteAllSafely(onResult: (Result<Boolean>) -> Unit = { /* Just.. ignore it. */ })","love.forte.simbot.message.deleteAllSafely"]},{"name":"inline suspend fun EventProcessor.pushIfProcessable(eventKey: Event.Key<*>, block: () -> Event): EventProcessingResult?","description":"love.forte.simbot.event.pushIfProcessable","location":"simbot-api/love.forte.simbot.event/push-if-processable.html","searchKeys":["pushIfProcessable","inline suspend fun EventProcessor.pushIfProcessable(eventKey: Event.Key<*>, block: () -> Event): EventProcessingResult?","love.forte.simbot.event.pushIfProcessable"]},{"name":"interface Application : CoroutineScope","description":"love.forte.simbot.application.Application","location":"simbot-api/love.forte.simbot.application/-application/index.html","searchKeys":["Application","interface Application : CoroutineScope","love.forte.simbot.application.Application"]},{"name":"interface ApplicationBuilder<A : Application> : CompletionPerceivable<A> ","description":"love.forte.simbot.application.ApplicationBuilder","location":"simbot-api/love.forte.simbot.application/-application-builder/index.html","searchKeys":["ApplicationBuilder","interface ApplicationBuilder<A : Application> : CompletionPerceivable<A> ","love.forte.simbot.application.ApplicationBuilder"]},{"name":"interface ApplicationDslBuilder<Config : ApplicationConfiguration, Builder : ApplicationBuilder<A>, A : Application>","description":"love.forte.simbot.application.ApplicationDslBuilder","location":"simbot-api/love.forte.simbot.application/-application-dsl-builder/index.html","searchKeys":["ApplicationDslBuilder","interface ApplicationDslBuilder<Config : ApplicationConfiguration, Builder : ApplicationBuilder<A>, A : Application>","love.forte.simbot.application.ApplicationDslBuilder"]},{"name":"interface ApplicationFactory<Config : ApplicationConfiguration, Builder : ApplicationBuilder<A>, A : Application>","description":"love.forte.simbot.application.ApplicationFactory","location":"simbot-api/love.forte.simbot.application/-application-factory/index.html","searchKeys":["ApplicationFactory","interface ApplicationFactory<Config : ApplicationConfiguration, Builder : ApplicationBuilder<A>, A : Application>","love.forte.simbot.application.ApplicationFactory"]},{"name":"interface ApplicationLauncher<out A : Application>","description":"love.forte.simbot.application.ApplicationLauncher","location":"simbot-api/love.forte.simbot.application/-application-launcher/index.html","searchKeys":["ApplicationLauncher","interface ApplicationLauncher<out A : Application>","love.forte.simbot.application.ApplicationLauncher"]},{"name":"interface AttributeContainer","description":"love.forte.simbot.AttributeContainer","location":"simbot-api/love.forte.simbot/-attribute-container/index.html","searchKeys":["AttributeContainer","interface AttributeContainer","love.forte.simbot.AttributeContainer"]},{"name":"interface AttributeMap : AttributeContainer","description":"love.forte.simbot.AttributeMap","location":"simbot-api/love.forte.simbot/-attribute-map/index.html","searchKeys":["AttributeMap","interface AttributeMap : AttributeContainer","love.forte.simbot.AttributeMap"]},{"name":"interface BaseContinuousSessionContext","description":"love.forte.simbot.event.BaseContinuousSessionContext","location":"simbot-api/love.forte.simbot.event/-base-continuous-session-context/index.html","searchKeys":["BaseContinuousSessionContext","interface BaseContinuousSessionContext","love.forte.simbot.event.BaseContinuousSessionContext"]},{"name":"interface BlockingEventFilter : EventFilter, BlockingFilter<EventListenerProcessingContext> ","description":"love.forte.simbot.event.BlockingEventFilter","location":"simbot-api/love.forte.simbot.event/-blocking-event-filter/index.html","searchKeys":["BlockingEventFilter","interface BlockingEventFilter : EventFilter, BlockingFilter<EventListenerProcessingContext> ","love.forte.simbot.event.BlockingEventFilter"]},{"name":"interface BlockingEventListener : EventListener, BlockingEventListenerFunction","description":"love.forte.simbot.event.BlockingEventListener","location":"simbot-api/love.forte.simbot.event/-blocking-event-listener/index.html","searchKeys":["BlockingEventListener","interface BlockingEventListener : EventListener, BlockingEventListenerFunction","love.forte.simbot.event.BlockingEventListener"]},{"name":"interface BlockingEventListenerInterceptor : EventListenerInterceptor","description":"love.forte.simbot.event.BlockingEventListenerInterceptor","location":"simbot-api/love.forte.simbot.event/-blocking-event-listener-interceptor/index.html","searchKeys":["BlockingEventListenerInterceptor","interface BlockingEventListenerInterceptor : EventListenerInterceptor","love.forte.simbot.event.BlockingEventListenerInterceptor"]},{"name":"interface BlockingEventProcessingInterceptor : EventProcessingInterceptor","description":"love.forte.simbot.event.BlockingEventProcessingInterceptor","location":"simbot-api/love.forte.simbot.event/-blocking-event-processing-interceptor/index.html","searchKeys":["BlockingEventProcessingInterceptor","interface BlockingEventProcessingInterceptor : EventProcessingInterceptor","love.forte.simbot.event.BlockingEventProcessingInterceptor"]},{"name":"interface BlockingFilter<T> : Filter<T> ","description":"love.forte.simbot.BlockingFilter","location":"simbot-api/love.forte.simbot/-blocking-filter/index.html","searchKeys":["BlockingFilter","interface BlockingFilter<T> : Filter<T> ","love.forte.simbot.BlockingFilter"]},{"name":"interface Bot : User, BotInfo, Survivable, LoggerContainer, ComponentContainer, ContactsContainer, GroupsContainer, GuildsContainer","description":"love.forte.simbot.bot.Bot","location":"simbot-api/love.forte.simbot.bot/-bot/index.html","searchKeys":["Bot","interface Bot : User, BotInfo, Survivable, LoggerContainer, ComponentContainer, ContactsContainer, GroupsContainer, GuildsContainer","love.forte.simbot.bot.Bot"]},{"name":"interface BotContainer : Container","description":"love.forte.simbot.definition.BotContainer","location":"simbot-api/love.forte.simbot.definition/-bot-container/index.html","searchKeys":["BotContainer","interface BotContainer : Container","love.forte.simbot.definition.BotContainer"]},{"name":"interface BotInfo : UserInfo","description":"love.forte.simbot.bot.BotInfo","location":"simbot-api/love.forte.simbot.bot/-bot-info/index.html","searchKeys":["BotInfo","interface BotInfo : UserInfo","love.forte.simbot.bot.BotInfo"]},{"name":"interface BotManagers : List<BotManager<*>> ","description":"love.forte.simbot.application.BotManagers","location":"simbot-api/love.forte.simbot.application/-bot-managers/index.html","searchKeys":["BotManagers","interface BotManagers : List<BotManager<*>> ","love.forte.simbot.application.BotManagers"]},{"name":"interface BotRegistrar","description":"love.forte.simbot.application.BotRegistrar","location":"simbot-api/love.forte.simbot.application/-bot-registrar/index.html","searchKeys":["BotRegistrar","interface BotRegistrar","love.forte.simbot.application.BotRegistrar"]},{"name":"interface BotRegistrar : ComponentContainer","description":"love.forte.simbot.bot.BotRegistrar","location":"simbot-api/love.forte.simbot.bot/-bot-registrar/index.html","searchKeys":["BotRegistrar","interface BotRegistrar : ComponentContainer","love.forte.simbot.bot.BotRegistrar"]},{"name":"interface BotVerifyInfo : DeserializableResource","description":"love.forte.simbot.bot.BotVerifyInfo","location":"simbot-api/love.forte.simbot.bot/-bot-verify-info/index.html","searchKeys":["BotVerifyInfo","interface BotVerifyInfo : DeserializableResource","love.forte.simbot.bot.BotVerifyInfo"]},{"name":"interface BotVerifyInfoDecoder : DeserializableResourceDecoder","description":"love.forte.simbot.bot.BotVerifyInfoDecoder","location":"simbot-api/love.forte.simbot.bot/-bot-verify-info-decoder/index.html","searchKeys":["BotVerifyInfoDecoder","interface BotVerifyInfoDecoder : DeserializableResourceDecoder","love.forte.simbot.bot.BotVerifyInfoDecoder"]},{"name":"interface BotVerifyInfoDecoderFactory<C : Any, D : BotVerifyInfoDecoder>","description":"love.forte.simbot.bot.BotVerifyInfoDecoderFactory","location":"simbot-api/love.forte.simbot.bot/-bot-verify-info-decoder-factory/index.html","searchKeys":["BotVerifyInfoDecoderFactory","interface BotVerifyInfoDecoderFactory<C : Any, D : BotVerifyInfoDecoder>","love.forte.simbot.bot.BotVerifyInfoDecoderFactory"]},{"name":"interface Category : IDContainer","description":"love.forte.simbot.definition.Category","location":"simbot-api/love.forte.simbot.definition/-category/index.html","searchKeys":["Category","interface Category : IDContainer","love.forte.simbot.definition.Category"]},{"name":"interface ChangeEvent : Event","description":"love.forte.simbot.event.ChangeEvent","location":"simbot-api/love.forte.simbot.event/-change-event/index.html","searchKeys":["ChangeEvent","interface ChangeEvent : Event","love.forte.simbot.event.ChangeEvent"]},{"name":"interface ChangedEvent : ChangeEvent","description":"love.forte.simbot.event.ChangedEvent","location":"simbot-api/love.forte.simbot.event/-changed-event/index.html","searchKeys":["ChangedEvent","interface ChangedEvent : ChangeEvent","love.forte.simbot.event.ChangedEvent"]},{"name":"interface Channel : ChatRoom, ChannelInfo","description":"love.forte.simbot.definition.Channel","location":"simbot-api/love.forte.simbot.definition/-channel/index.html","searchKeys":["Channel","interface Channel : ChatRoom, ChannelInfo","love.forte.simbot.definition.Channel"]},{"name":"interface ChannelEvent : OrganizationEvent","description":"love.forte.simbot.event.ChannelEvent","location":"simbot-api/love.forte.simbot.event/-channel-event/index.html","searchKeys":["ChannelEvent","interface ChannelEvent : OrganizationEvent","love.forte.simbot.event.ChannelEvent"]},{"name":"interface ChannelInfo : OrganizationInfo","description":"love.forte.simbot.definition.ChannelInfo","location":"simbot-api/love.forte.simbot.definition/-channel-info/index.html","searchKeys":["ChannelInfo","interface ChannelInfo : OrganizationInfo","love.forte.simbot.definition.ChannelInfo"]},{"name":"interface ChannelInfoContainer : SuspendablePropertyContainer","description":"love.forte.simbot.definition.ChannelInfoContainer","location":"simbot-api/love.forte.simbot.definition/-channel-info-container/index.html","searchKeys":["ChannelInfoContainer","interface ChannelInfoContainer : SuspendablePropertyContainer","love.forte.simbot.definition.ChannelInfoContainer"]},{"name":"interface ChannelMessageEvent : ChatRoomMessageEvent, ChannelEvent","description":"love.forte.simbot.event.ChannelMessageEvent","location":"simbot-api/love.forte.simbot.event/-channel-message-event/index.html","searchKeys":["ChannelMessageEvent","interface ChannelMessageEvent : ChatRoomMessageEvent, ChannelEvent","love.forte.simbot.event.ChannelMessageEvent"]},{"name":"interface ChannelRequestEvent : RequestEvent, ChannelInfoContainer","description":"love.forte.simbot.event.ChannelRequestEvent","location":"simbot-api/love.forte.simbot.event/-channel-request-event/index.html","searchKeys":["ChannelRequestEvent","interface ChannelRequestEvent : RequestEvent, ChannelInfoContainer","love.forte.simbot.event.ChannelRequestEvent"]},{"name":"interface ChatRoom : Organization, SendSupport","description":"love.forte.simbot.definition.ChatRoom","location":"simbot-api/love.forte.simbot.definition/-chat-room/index.html","searchKeys":["ChatRoom","interface ChatRoom : Organization, SendSupport","love.forte.simbot.definition.ChatRoom"]},{"name":"interface ChatRoomMessageEvent : MessageEvent, OrganizationEvent, RemoteMessageContainer","description":"love.forte.simbot.event.ChatRoomMessageEvent","location":"simbot-api/love.forte.simbot.event/-chat-room-message-event/index.html","searchKeys":["ChatRoomMessageEvent","interface ChatRoomMessageEvent : MessageEvent, OrganizationEvent, RemoteMessageContainer","love.forte.simbot.event.ChatRoomMessageEvent"]},{"name":"interface CompletionPerceivable<T>","description":"love.forte.simbot.ability.CompletionPerceivable","location":"simbot-api/love.forte.simbot.ability/-completion-perceivable/index.html","searchKeys":["CompletionPerceivable","interface CompletionPerceivable<T>","love.forte.simbot.ability.CompletionPerceivable"]},{"name":"interface Component : IdValueContainer","description":"love.forte.simbot.Component","location":"simbot-api/love.forte.simbot/-component/index.html","searchKeys":["Component","interface Component : IdValueContainer","love.forte.simbot.Component"]},{"name":"interface ComponentAutoRegistrarFactory<C : Component, out Config : Any>","description":"love.forte.simbot.ComponentAutoRegistrarFactory","location":"simbot-api/love.forte.simbot/-component-auto-registrar-factory/index.html","searchKeys":["ComponentAutoRegistrarFactory","interface ComponentAutoRegistrarFactory<C : Component, out Config : Any>","love.forte.simbot.ComponentAutoRegistrarFactory"]},{"name":"interface ComponentContainer : Container","description":"love.forte.simbot.ComponentContainer","location":"simbot-api/love.forte.simbot/-component-container/index.html","searchKeys":["ComponentContainer","interface ComponentContainer : Container","love.forte.simbot.ComponentContainer"]},{"name":"interface ComponentFactory<C : Component, out Config : Any>","description":"love.forte.simbot.ComponentFactory","location":"simbot-api/love.forte.simbot/-component-factory/index.html","searchKeys":["ComponentFactory","interface ComponentFactory<C : Component, out Config : Any>","love.forte.simbot.ComponentFactory"]},{"name":"interface ConcurrentIDMaps<V> : MutableIDMaps<V> , ConcurrentMap<ID, V> ","description":"love.forte.simbot.ConcurrentIDMaps","location":"simbot-api/love.forte.simbot/-concurrent-i-d-maps/index.html","searchKeys":["ConcurrentIDMaps","interface ConcurrentIDMaps<V> : MutableIDMaps<V> , ConcurrentMap<ID, V> ","love.forte.simbot.ConcurrentIDMaps"]},{"name":"interface Contact : User, SendSupport, BotContainer","description":"love.forte.simbot.definition.Contact","location":"simbot-api/love.forte.simbot.definition/-contact/index.html","searchKeys":["Contact","interface Contact : User, SendSupport, BotContainer","love.forte.simbot.definition.Contact"]},{"name":"interface ContactMessageEvent : MessageEvent, UserEvent","description":"love.forte.simbot.event.ContactMessageEvent","location":"simbot-api/love.forte.simbot.event/-contact-message-event/index.html","searchKeys":["ContactMessageEvent","interface ContactMessageEvent : MessageEvent, UserEvent","love.forte.simbot.event.ContactMessageEvent"]},{"name":"interface ContactsContainer : SocialRelationsContainer","description":"love.forte.simbot.definition.ContactsContainer","location":"simbot-api/love.forte.simbot.definition/-contacts-container/index.html","searchKeys":["ContactsContainer","interface ContactsContainer : SocialRelationsContainer","love.forte.simbot.definition.ContactsContainer"]},{"name":"interface Container","description":"love.forte.simbot.definition.Container","location":"simbot-api/love.forte.simbot.definition/-container/index.html","searchKeys":["Container","interface Container","love.forte.simbot.definition.Container"]},{"name":"interface Context : EventInterceptor.Context<EventProcessingResult> ","description":"love.forte.simbot.event.EventProcessingInterceptor.Context","location":"simbot-api/love.forte.simbot.event/-event-processing-interceptor/-context/index.html","searchKeys":["Context","interface Context : EventInterceptor.Context<EventProcessingResult> ","love.forte.simbot.event.EventProcessingInterceptor.Context"]},{"name":"interface Context : EventInterceptor.Context<EventResult> ","description":"love.forte.simbot.event.EventListenerInterceptor.Context","location":"simbot-api/love.forte.simbot.event/-event-listener-interceptor/-context/index.html","searchKeys":["Context","interface Context : EventInterceptor.Context<EventResult> ","love.forte.simbot.event.EventListenerInterceptor.Context"]},{"name":"interface Context<R>","description":"love.forte.simbot.Interceptor.Context","location":"simbot-api/love.forte.simbot/-interceptor/-context/index.html","searchKeys":["Context","interface Context<R>","love.forte.simbot.Interceptor.Context"]},{"name":"interface Context<R> : Interceptor.Context<R> ","description":"love.forte.simbot.event.EventInterceptor.Context","location":"simbot-api/love.forte.simbot.event/-event-interceptor/-context/index.html","searchKeys":["Context","interface Context<R> : Interceptor.Context<R> ","love.forte.simbot.event.EventInterceptor.Context"]},{"name":"interface ContinuousSessionProvider<T>","description":"love.forte.simbot.event.ContinuousSessionProvider","location":"simbot-api/love.forte.simbot.event/-continuous-session-provider/index.html","searchKeys":["ContinuousSessionProvider","interface ContinuousSessionProvider<T>","love.forte.simbot.event.ContinuousSessionProvider"]},{"name":"interface ContinuousSessionReceiver<T>","description":"love.forte.simbot.event.ContinuousSessionReceiver","location":"simbot-api/love.forte.simbot.event/-continuous-session-receiver/index.html","searchKeys":["ContinuousSessionReceiver","interface ContinuousSessionReceiver<T>","love.forte.simbot.event.ContinuousSessionReceiver"]},{"name":"interface DecreaseEvent : EndPointEvent","description":"love.forte.simbot.event.DecreaseEvent","location":"simbot-api/love.forte.simbot.event/-decrease-event/index.html","searchKeys":["DecreaseEvent","interface DecreaseEvent : EndPointEvent","love.forte.simbot.event.DecreaseEvent"]},{"name":"interface DelayCompletionStage<T> : CompletionStage<T> ","description":"love.forte.simbot.ability.DelayCompletionStage","location":"simbot-api/love.forte.simbot.ability/-delay-completion-stage/index.html","searchKeys":["DelayCompletionStage","interface DelayCompletionStage<T> : CompletionStage<T> ","love.forte.simbot.ability.DelayCompletionStage"]},{"name":"interface DelayableCoroutineScope : CoroutineScope","description":"love.forte.simbot.ability.DelayableCoroutineScope","location":"simbot-api/love.forte.simbot.ability/-delayable-coroutine-scope/index.html","searchKeys":["DelayableCoroutineScope","interface DelayableCoroutineScope : CoroutineScope","love.forte.simbot.ability.DelayableCoroutineScope"]},{"name":"interface DeleteSupport","description":"love.forte.simbot.action.DeleteSupport","location":"simbot-api/love.forte.simbot.action/-delete-support/index.html","searchKeys":["DeleteSupport","interface DeleteSupport","love.forte.simbot.action.DeleteSupport"]},{"name":"interface DeserializableResource : Resource","description":"love.forte.simbot.resources.DeserializableResource","location":"simbot-api/love.forte.simbot.resources/-deserializable-resource/index.html","searchKeys":["DeserializableResource","interface DeserializableResource : Resource","love.forte.simbot.resources.DeserializableResource"]},{"name":"interface DeserializableResourceDecoder","description":"love.forte.simbot.resources.DeserializableResourceDecoder","location":"simbot-api/love.forte.simbot.resources/-deserializable-resource-decoder/index.html","searchKeys":["DeserializableResourceDecoder","interface DeserializableResourceDecoder","love.forte.simbot.resources.DeserializableResourceDecoder"]},{"name":"interface Element<out E : Message.Element<E>> : Message","description":"love.forte.simbot.message.Message.Element","location":"simbot-api/love.forte.simbot.message/-message/-element/index.html","searchKeys":["Element","interface Element<out E : Message.Element<E>> : Message","love.forte.simbot.message.Message.Element"]},{"name":"interface EndPointEvent : ChangedEvent","description":"love.forte.simbot.event.EndPointEvent","location":"simbot-api/love.forte.simbot.event/-end-point-event/index.html","searchKeys":["EndPointEvent","interface EndPointEvent : ChangedEvent","love.forte.simbot.event.EndPointEvent"]},{"name":"interface Environment","description":"love.forte.simbot.application.Application.Environment","location":"simbot-api/love.forte.simbot.application/-application/-environment/index.html","searchKeys":["Environment","interface Environment","love.forte.simbot.application.Application.Environment"]},{"name":"interface Event : BotContainer, IDContainer, ComponentContainer","description":"love.forte.simbot.event.Event","location":"simbot-api/love.forte.simbot.event/-event/index.html","searchKeys":["Event","interface Event : BotContainer, IDContainer, ComponentContainer","love.forte.simbot.event.Event"]},{"name":"interface EventFilter : Filter<EventListenerProcessingContext> ","description":"love.forte.simbot.event.EventFilter","location":"simbot-api/love.forte.simbot.event/-event-filter/index.html","searchKeys":["EventFilter","interface EventFilter : Filter<EventListenerProcessingContext> ","love.forte.simbot.event.EventFilter"]},{"name":"interface EventInterceptor<C : EventInterceptor.Context<R>, R> : Interceptor<C, R> ","description":"love.forte.simbot.event.EventInterceptor","location":"simbot-api/love.forte.simbot.event/-event-interceptor/index.html","searchKeys":["EventInterceptor","interface EventInterceptor<C : EventInterceptor.Context<R>, R> : Interceptor<C, R> ","love.forte.simbot.event.EventInterceptor"]},{"name":"interface EventListener : EventListener, AttributeContainer, EventListenerFunction","description":"love.forte.simbot.event.EventListener","location":"simbot-api/love.forte.simbot.event/-event-listener/index.html","searchKeys":["EventListener","interface EventListener : EventListener, AttributeContainer, EventListenerFunction","love.forte.simbot.event.EventListener"]},{"name":"interface EventListenerBuilder","description":"love.forte.simbot.event.EventListenerBuilder","location":"simbot-api/love.forte.simbot.event/-event-listener-builder/index.html","searchKeys":["EventListenerBuilder","interface EventListenerBuilder","love.forte.simbot.event.EventListenerBuilder"]},{"name":"interface EventListenerContainer : EventListenerRegistrar","description":"love.forte.simbot.event.EventListenerContainer","location":"simbot-api/love.forte.simbot.event/-event-listener-container/index.html","searchKeys":["EventListenerContainer","interface EventListenerContainer : EventListenerRegistrar","love.forte.simbot.event.EventListenerContainer"]},{"name":"interface EventListenerHandle","description":"love.forte.simbot.event.EventListenerHandle","location":"simbot-api/love.forte.simbot.event/-event-listener-handle/index.html","searchKeys":["EventListenerHandle","interface EventListenerHandle","love.forte.simbot.event.EventListenerHandle"]},{"name":"interface EventListenerInterceptor : EventInterceptor<EventListenerInterceptor.Context, EventResult> ","description":"love.forte.simbot.event.EventListenerInterceptor","location":"simbot-api/love.forte.simbot.event/-event-listener-interceptor/index.html","searchKeys":["EventListenerInterceptor","interface EventListenerInterceptor : EventInterceptor<EventListenerInterceptor.Context, EventResult> ","love.forte.simbot.event.EventListenerInterceptor"]},{"name":"interface EventListenerManager : EventProcessor, EventListenerContainer","description":"love.forte.simbot.event.EventListenerManager","location":"simbot-api/love.forte.simbot.event/-event-listener-manager/index.html","searchKeys":["EventListenerManager","interface EventListenerManager : EventProcessor, EventListenerContainer","love.forte.simbot.event.EventListenerManager"]},{"name":"interface EventListenerProcessingContext : EventProcessingContext","description":"love.forte.simbot.event.EventListenerProcessingContext","location":"simbot-api/love.forte.simbot.event/-event-listener-processing-context/index.html","searchKeys":["EventListenerProcessingContext","interface EventListenerProcessingContext : EventProcessingContext","love.forte.simbot.event.EventListenerProcessingContext"]},{"name":"interface EventListenerRegistrar","description":"love.forte.simbot.event.EventListenerRegistrar","location":"simbot-api/love.forte.simbot.event/-event-listener-registrar/index.html","searchKeys":["EventListenerRegistrar","interface EventListenerRegistrar","love.forte.simbot.event.EventListenerRegistrar"]},{"name":"interface EventListenerRegistrationDescriptionBuilder : EventListenerBuilder","description":"love.forte.simbot.event.EventListenerRegistrationDescriptionBuilder","location":"simbot-api/love.forte.simbot.event/-event-listener-registration-description-builder/index.html","searchKeys":["EventListenerRegistrationDescriptionBuilder","interface EventListenerRegistrationDescriptionBuilder : EventListenerBuilder","love.forte.simbot.event.EventListenerRegistrationDescriptionBuilder"]},{"name":"interface EventProcessingContext : CoroutineContext.Element, InstantScopeContext","description":"love.forte.simbot.event.EventProcessingContext","location":"simbot-api/love.forte.simbot.event/-event-processing-context/index.html","searchKeys":["EventProcessingContext","interface EventProcessingContext : CoroutineContext.Element, InstantScopeContext","love.forte.simbot.event.EventProcessingContext"]},{"name":"interface EventProcessingInterceptor : EventInterceptor<EventProcessingInterceptor.Context, EventProcessingResult> ","description":"love.forte.simbot.event.EventProcessingInterceptor","location":"simbot-api/love.forte.simbot.event/-event-processing-interceptor/index.html","searchKeys":["EventProcessingInterceptor","interface EventProcessingInterceptor : EventInterceptor<EventProcessingInterceptor.Context, EventProcessingResult> ","love.forte.simbot.event.EventProcessingInterceptor"]},{"name":"interface EventProcessingResult","description":"love.forte.simbot.event.EventProcessingResult","location":"simbot-api/love.forte.simbot.event/-event-processing-result/index.html","searchKeys":["EventProcessingResult","interface EventProcessingResult","love.forte.simbot.event.EventProcessingResult"]},{"name":"interface EventProcessor","description":"love.forte.simbot.event.EventProcessor","location":"simbot-api/love.forte.simbot.event/-event-processor/index.html","searchKeys":["EventProcessor","interface EventProcessor","love.forte.simbot.event.EventProcessor"]},{"name":"interface EventProvider : Survivable","description":"love.forte.simbot.application.EventProvider","location":"simbot-api/love.forte.simbot.application/-event-provider/index.html","searchKeys":["EventProvider","interface EventProvider : Survivable","love.forte.simbot.application.EventProvider"]},{"name":"interface EventProviderAutoRegistrarFactory<P : EventProvider, Config : Any>","description":"love.forte.simbot.application.EventProviderAutoRegistrarFactory","location":"simbot-api/love.forte.simbot.application/-event-provider-auto-registrar-factory/index.html","searchKeys":["EventProviderAutoRegistrarFactory","interface EventProviderAutoRegistrarFactory<P : EventProvider, Config : Any>","love.forte.simbot.application.EventProviderAutoRegistrarFactory"]},{"name":"interface EventProviderFactory<P : EventProvider, Config : Any>","description":"love.forte.simbot.application.EventProviderFactory","location":"simbot-api/love.forte.simbot.application/-event-provider-factory/index.html","searchKeys":["EventProviderFactory","interface EventProviderFactory<P : EventProvider, Config : Any>","love.forte.simbot.application.EventProviderFactory"]},{"name":"interface EventResult","description":"love.forte.simbot.event.EventResult","location":"simbot-api/love.forte.simbot.event/-event-result/index.html","searchKeys":["EventResult","interface EventResult","love.forte.simbot.event.EventResult"]},{"name":"interface ExceptionProcessor<R> : Processor<Throwable, R> ","description":"love.forte.simbot.ExceptionProcessor","location":"simbot-api/love.forte.simbot/-exception-processor/index.html","searchKeys":["ExceptionProcessor","interface ExceptionProcessor<R> : Processor<Throwable, R> ","love.forte.simbot.ExceptionProcessor"]},{"name":"interface Filter<T>","description":"love.forte.simbot.Filter","location":"simbot-api/love.forte.simbot/-filter/index.html","searchKeys":["Filter","interface Filter<T>","love.forte.simbot.Filter"]},{"name":"interface Friend : Contact, BotContainer, FriendInfo","description":"love.forte.simbot.definition.Friend","location":"simbot-api/love.forte.simbot.definition/-friend/index.html","searchKeys":["Friend","interface Friend : Contact, BotContainer, FriendInfo","love.forte.simbot.definition.Friend"]},{"name":"interface FriendAddRequestEvent : JoinRequestEvent, FriendRequestEvent","description":"love.forte.simbot.event.FriendAddRequestEvent","location":"simbot-api/love.forte.simbot.event/-friend-add-request-event/index.html","searchKeys":["FriendAddRequestEvent","interface FriendAddRequestEvent : JoinRequestEvent, FriendRequestEvent","love.forte.simbot.event.FriendAddRequestEvent"]},{"name":"interface FriendChangedEvent : ChangedEvent, FriendEvent","description":"love.forte.simbot.event.FriendChangedEvent","location":"simbot-api/love.forte.simbot.event/-friend-changed-event/index.html","searchKeys":["FriendChangedEvent","interface FriendChangedEvent : ChangedEvent, FriendEvent","love.forte.simbot.event.FriendChangedEvent"]},{"name":"interface FriendDecreaseEvent : DecreaseEvent, FriendChangedEvent","description":"love.forte.simbot.event.FriendDecreaseEvent","location":"simbot-api/love.forte.simbot.event/-friend-decrease-event/index.html","searchKeys":["FriendDecreaseEvent","interface FriendDecreaseEvent : DecreaseEvent, FriendChangedEvent","love.forte.simbot.event.FriendDecreaseEvent"]},{"name":"interface FriendEvent : UserEvent, FriendInfoContainer","description":"love.forte.simbot.event.FriendEvent","location":"simbot-api/love.forte.simbot.event/-friend-event/index.html","searchKeys":["FriendEvent","interface FriendEvent : UserEvent, FriendInfoContainer","love.forte.simbot.event.FriendEvent"]},{"name":"interface FriendIncreaseEvent : IncreaseEvent, FriendChangedEvent","description":"love.forte.simbot.event.FriendIncreaseEvent","location":"simbot-api/love.forte.simbot.event/-friend-increase-event/index.html","searchKeys":["FriendIncreaseEvent","interface FriendIncreaseEvent : IncreaseEvent, FriendChangedEvent","love.forte.simbot.event.FriendIncreaseEvent"]},{"name":"interface FriendInfo : UserInfo","description":"love.forte.simbot.definition.FriendInfo","location":"simbot-api/love.forte.simbot.definition/-friend-info/index.html","searchKeys":["FriendInfo","interface FriendInfo : UserInfo","love.forte.simbot.definition.FriendInfo"]},{"name":"interface FriendInfoContainer : SuspendablePropertyContainer","description":"love.forte.simbot.definition.FriendInfoContainer","location":"simbot-api/love.forte.simbot.definition/-friend-info-container/index.html","searchKeys":["FriendInfoContainer","interface FriendInfoContainer : SuspendablePropertyContainer","love.forte.simbot.definition.FriendInfoContainer"]},{"name":"interface FriendMessageEvent : ContactMessageEvent, FriendEvent","description":"love.forte.simbot.event.FriendMessageEvent","location":"simbot-api/love.forte.simbot.event/-friend-message-event/index.html","searchKeys":["FriendMessageEvent","interface FriendMessageEvent : ContactMessageEvent, FriendEvent","love.forte.simbot.event.FriendMessageEvent"]},{"name":"interface FriendRequestEvent : UserRequestEvent, FriendInfoContainer","description":"love.forte.simbot.event.FriendRequestEvent","location":"simbot-api/love.forte.simbot.event/-friend-request-event/index.html","searchKeys":["FriendRequestEvent","interface FriendRequestEvent : UserRequestEvent, FriendInfoContainer","love.forte.simbot.event.FriendRequestEvent"]},{"name":"interface FriendsContainer : SocialRelationsContainer","description":"love.forte.simbot.definition.FriendsContainer","location":"simbot-api/love.forte.simbot.definition/-friends-container/index.html","searchKeys":["FriendsContainer","interface FriendsContainer : SocialRelationsContainer","love.forte.simbot.definition.FriendsContainer"]},{"name":"interface GlobalScopeContext : ScopeContext","description":"love.forte.simbot.event.GlobalScopeContext","location":"simbot-api/love.forte.simbot.event/-global-scope-context/index.html","searchKeys":["GlobalScopeContext","interface GlobalScopeContext : ScopeContext","love.forte.simbot.event.GlobalScopeContext"]},{"name":"interface Group : ChatRoom, GroupInfo","description":"love.forte.simbot.definition.Group","location":"simbot-api/love.forte.simbot.definition/-group/index.html","searchKeys":["Group","interface Group : ChatRoom, GroupInfo","love.forte.simbot.definition.Group"]},{"name":"interface GroupBot : OrganizationBot","description":"love.forte.simbot.definition.GroupBot","location":"simbot-api/love.forte.simbot.definition/-group-bot/index.html","searchKeys":["GroupBot","interface GroupBot : OrganizationBot","love.forte.simbot.definition.GroupBot"]},{"name":"interface GroupEvent : OrganizationEvent, GroupInfoContainer","description":"love.forte.simbot.event.GroupEvent","location":"simbot-api/love.forte.simbot.event/-group-event/index.html","searchKeys":["GroupEvent","interface GroupEvent : OrganizationEvent, GroupInfoContainer","love.forte.simbot.event.GroupEvent"]},{"name":"interface GroupInfo : OrganizationInfo","description":"love.forte.simbot.definition.GroupInfo","location":"simbot-api/love.forte.simbot.definition/-group-info/index.html","searchKeys":["GroupInfo","interface GroupInfo : OrganizationInfo","love.forte.simbot.definition.GroupInfo"]},{"name":"interface GroupInfoContainer : SuspendablePropertyContainer","description":"love.forte.simbot.definition.GroupInfoContainer","location":"simbot-api/love.forte.simbot.definition/-group-info-container/index.html","searchKeys":["GroupInfoContainer","interface GroupInfoContainer : SuspendablePropertyContainer","love.forte.simbot.definition.GroupInfoContainer"]},{"name":"interface GroupJoinRequestEvent : GroupRequestEvent, JoinRequestEvent","description":"love.forte.simbot.event.GroupJoinRequestEvent","location":"simbot-api/love.forte.simbot.event/-group-join-request-event/index.html","searchKeys":["GroupJoinRequestEvent","interface GroupJoinRequestEvent : GroupRequestEvent, JoinRequestEvent","love.forte.simbot.event.GroupJoinRequestEvent"]},{"name":"interface GroupMember : Member","description":"love.forte.simbot.definition.GroupMember","location":"simbot-api/love.forte.simbot.definition/-group-member/index.html","searchKeys":["GroupMember","interface GroupMember : Member","love.forte.simbot.definition.GroupMember"]},{"name":"interface GroupMemberDecreaseEvent : MemberDecreaseEvent, GroupEvent","description":"love.forte.simbot.event.GroupMemberDecreaseEvent","location":"simbot-api/love.forte.simbot.event/-group-member-decrease-event/index.html","searchKeys":["GroupMemberDecreaseEvent","interface GroupMemberDecreaseEvent : MemberDecreaseEvent, GroupEvent","love.forte.simbot.event.GroupMemberDecreaseEvent"]},{"name":"interface GroupMemberIncreaseEvent : MemberIncreaseEvent, GroupEvent","description":"love.forte.simbot.event.GroupMemberIncreaseEvent","location":"simbot-api/love.forte.simbot.event/-group-member-increase-event/index.html","searchKeys":["GroupMemberIncreaseEvent","interface GroupMemberIncreaseEvent : MemberIncreaseEvent, GroupEvent","love.forte.simbot.event.GroupMemberIncreaseEvent"]},{"name":"interface GroupMessageEvent : ChatRoomMessageEvent, GroupEvent","description":"love.forte.simbot.event.GroupMessageEvent","location":"simbot-api/love.forte.simbot.event/-group-message-event/index.html","searchKeys":["GroupMessageEvent","interface GroupMessageEvent : ChatRoomMessageEvent, GroupEvent","love.forte.simbot.event.GroupMessageEvent"]},{"name":"interface GroupRequestEvent : RequestEvent, GroupInfoContainer","description":"love.forte.simbot.event.GroupRequestEvent","location":"simbot-api/love.forte.simbot.event/-group-request-event/index.html","searchKeys":["GroupRequestEvent","interface GroupRequestEvent : RequestEvent, GroupInfoContainer","love.forte.simbot.event.GroupRequestEvent"]},{"name":"interface GroupsContainer : SocialRelationsContainer","description":"love.forte.simbot.definition.GroupsContainer","location":"simbot-api/love.forte.simbot.definition/-groups-container/index.html","searchKeys":["GroupsContainer","interface GroupsContainer : SocialRelationsContainer","love.forte.simbot.definition.GroupsContainer"]},{"name":"interface Guild : Organization, GuildInfo","description":"love.forte.simbot.definition.Guild","location":"simbot-api/love.forte.simbot.definition/-guild/index.html","searchKeys":["Guild","interface Guild : Organization, GuildInfo","love.forte.simbot.definition.Guild"]},{"name":"interface GuildBot : OrganizationBot","description":"love.forte.simbot.definition.GuildBot","location":"simbot-api/love.forte.simbot.definition/-guild-bot/index.html","searchKeys":["GuildBot","interface GuildBot : OrganizationBot","love.forte.simbot.definition.GuildBot"]},{"name":"interface GuildEvent : OrganizationEvent","description":"love.forte.simbot.event.GuildEvent","location":"simbot-api/love.forte.simbot.event/-guild-event/index.html","searchKeys":["GuildEvent","interface GuildEvent : OrganizationEvent","love.forte.simbot.event.GuildEvent"]},{"name":"interface GuildInfo : OrganizationInfo","description":"love.forte.simbot.definition.GuildInfo","location":"simbot-api/love.forte.simbot.definition/-guild-info/index.html","searchKeys":["GuildInfo","interface GuildInfo : OrganizationInfo","love.forte.simbot.definition.GuildInfo"]},{"name":"interface GuildInfoContainer : SuspendablePropertyContainer","description":"love.forte.simbot.definition.GuildInfoContainer","location":"simbot-api/love.forte.simbot.definition/-guild-info-container/index.html","searchKeys":["GuildInfoContainer","interface GuildInfoContainer : SuspendablePropertyContainer","love.forte.simbot.definition.GuildInfoContainer"]},{"name":"interface GuildJoinRequestEvent : JoinRequestEvent, GuildRequestEvent","description":"love.forte.simbot.event.GuildJoinRequestEvent","location":"simbot-api/love.forte.simbot.event/-guild-join-request-event/index.html","searchKeys":["GuildJoinRequestEvent","interface GuildJoinRequestEvent : JoinRequestEvent, GuildRequestEvent","love.forte.simbot.event.GuildJoinRequestEvent"]},{"name":"interface GuildMember : Member","description":"love.forte.simbot.definition.GuildMember","location":"simbot-api/love.forte.simbot.definition/-guild-member/index.html","searchKeys":["GuildMember","interface GuildMember : Member","love.forte.simbot.definition.GuildMember"]},{"name":"interface GuildMemberDecreaseEvent : MemberDecreaseEvent, GuildEvent","description":"love.forte.simbot.event.GuildMemberDecreaseEvent","location":"simbot-api/love.forte.simbot.event/-guild-member-decrease-event/index.html","searchKeys":["GuildMemberDecreaseEvent","interface GuildMemberDecreaseEvent : MemberDecreaseEvent, GuildEvent","love.forte.simbot.event.GuildMemberDecreaseEvent"]},{"name":"interface GuildMemberIncreaseEvent : MemberIncreaseEvent, GuildEvent","description":"love.forte.simbot.event.GuildMemberIncreaseEvent","location":"simbot-api/love.forte.simbot.event/-guild-member-increase-event/index.html","searchKeys":["GuildMemberIncreaseEvent","interface GuildMemberIncreaseEvent : MemberIncreaseEvent, GuildEvent","love.forte.simbot.event.GuildMemberIncreaseEvent"]},{"name":"interface GuildRequestEvent : RequestEvent, GuildInfoContainer","description":"love.forte.simbot.event.GuildRequestEvent","location":"simbot-api/love.forte.simbot.event/-guild-request-event/index.html","searchKeys":["GuildRequestEvent","interface GuildRequestEvent : RequestEvent, GuildInfoContainer","love.forte.simbot.event.GuildRequestEvent"]},{"name":"interface GuildsContainer : SocialRelationsContainer","description":"love.forte.simbot.definition.GuildsContainer","location":"simbot-api/love.forte.simbot.definition/-guilds-container/index.html","searchKeys":["GuildsContainer","interface GuildsContainer : SocialRelationsContainer","love.forte.simbot.definition.GuildsContainer"]},{"name":"interface IDContainer : Container","description":"love.forte.simbot.definition.IDContainer","location":"simbot-api/love.forte.simbot.definition/-i-d-container/index.html","searchKeys":["IDContainer","interface IDContainer : Container","love.forte.simbot.definition.IDContainer"]},{"name":"interface IDMaps<V> : Map<ID, V> ","description":"love.forte.simbot.IDMaps","location":"simbot-api/love.forte.simbot/-i-d-maps/index.html","searchKeys":["IDMaps","interface IDMaps<V> : Map<ID, V> ","love.forte.simbot.IDMaps"]},{"name":"interface IdValueContainer : Container","description":"love.forte.simbot.definition.IdValueContainer","location":"simbot-api/love.forte.simbot.definition/-id-value-container/index.html","searchKeys":["IdValueContainer","interface IdValueContainer : Container","love.forte.simbot.definition.IdValueContainer"]},{"name":"interface Image<E : Image<E>> : StandardMessage<E> , IDContainer, ResourceContainer","description":"love.forte.simbot.message.Image","location":"simbot-api/love.forte.simbot.message/-image/index.html","searchKeys":["Image","interface Image<E : Image<E>> : StandardMessage<E> , IDContainer, ResourceContainer","love.forte.simbot.message.Image"]},{"name":"interface IncreaseEvent : StartPointEvent","description":"love.forte.simbot.event.IncreaseEvent","location":"simbot-api/love.forte.simbot.event/-increase-event/index.html","searchKeys":["IncreaseEvent","interface IncreaseEvent : StartPointEvent","love.forte.simbot.event.IncreaseEvent"]},{"name":"interface IndexAccessView<out T> : View<T> ","description":"love.forte.simbot.utils.view.IndexAccessView","location":"simbot-api/love.forte.simbot.utils.view/-index-access-view/index.html","searchKeys":["IndexAccessView","interface IndexAccessView<out T> : View<T> ","love.forte.simbot.utils.view.IndexAccessView"]},{"name":"interface InstantScopeContext : ScopeContext","description":"love.forte.simbot.event.InstantScopeContext","location":"simbot-api/love.forte.simbot.event/-instant-scope-context/index.html","searchKeys":["InstantScopeContext","interface InstantScopeContext : ScopeContext","love.forte.simbot.event.InstantScopeContext"]},{"name":"interface Interceptor<C : Interceptor.Context<R>, R>","description":"love.forte.simbot.Interceptor","location":"simbot-api/love.forte.simbot/-interceptor/index.html","searchKeys":["Interceptor","interface Interceptor<C : Interceptor.Context<R>, R>","love.forte.simbot.Interceptor"]},{"name":"interface Items<out T>","description":"love.forte.simbot.utils.item.Items","location":"simbot-api/love.forte.simbot.utils.item/-items/index.html","searchKeys":["Items","interface Items<out T>","love.forte.simbot.utils.item.Items"]},{"name":"interface JoinRequestEvent : RequestEvent","description":"love.forte.simbot.event.JoinRequestEvent","location":"simbot-api/love.forte.simbot.event/-join-request-event/index.html","searchKeys":["JoinRequestEvent","interface JoinRequestEvent : RequestEvent","love.forte.simbot.event.JoinRequestEvent"]},{"name":"interface Key<E : Event>","description":"love.forte.simbot.event.Event.Key","location":"simbot-api/love.forte.simbot.event/-event/-key/index.html","searchKeys":["Key","interface Key<E : Event>","love.forte.simbot.event.Event.Key"]},{"name":"interface Key<out E : Message.Element<E>>","description":"love.forte.simbot.message.Message.Key","location":"simbot-api/love.forte.simbot.message/-message/-key/index.html","searchKeys":["Key","interface Key<out E : Message.Element<E>>","love.forte.simbot.message.Message.Key"]},{"name":"interface LazyValue<T> : SuspendFunction0<T> ","description":"love.forte.simbot.utils.LazyValue","location":"simbot-api/love.forte.simbot.utils/-lazy-value/index.html","searchKeys":["LazyValue","interface LazyValue<T> : SuspendFunction0<T> ","love.forte.simbot.utils.LazyValue"]},{"name":"interface Limiter","description":"love.forte.simbot.Limiter","location":"simbot-api/love.forte.simbot/-limiter/index.html","searchKeys":["Limiter","interface Limiter","love.forte.simbot.Limiter"]},{"name":"interface LoggerContainer","description":"love.forte.simbot.LoggerContainer","location":"simbot-api/love.forte.simbot/-logger-container/index.html","searchKeys":["LoggerContainer","interface LoggerContainer","love.forte.simbot.LoggerContainer"]},{"name":"interface Member : Contact, MemberInfo, MuteSupport","description":"love.forte.simbot.definition.Member","location":"simbot-api/love.forte.simbot.definition/-member/index.html","searchKeys":["Member","interface Member : Contact, MemberInfo, MuteSupport","love.forte.simbot.definition.Member"]},{"name":"interface MemberChangedEvent : ChangedEvent, OrganizationEvent, MemberEvent","description":"love.forte.simbot.event.MemberChangedEvent","location":"simbot-api/love.forte.simbot.event/-member-changed-event/index.html","searchKeys":["MemberChangedEvent","interface MemberChangedEvent : ChangedEvent, OrganizationEvent, MemberEvent","love.forte.simbot.event.MemberChangedEvent"]},{"name":"interface MemberDecreaseEvent : DecreaseEvent, MemberChangedEvent","description":"love.forte.simbot.event.MemberDecreaseEvent","location":"simbot-api/love.forte.simbot.event/-member-decrease-event/index.html","searchKeys":["MemberDecreaseEvent","interface MemberDecreaseEvent : DecreaseEvent, MemberChangedEvent","love.forte.simbot.event.MemberDecreaseEvent"]},{"name":"interface MemberEvent : UserEvent, MemberInfoContainer","description":"love.forte.simbot.event.MemberEvent","location":"simbot-api/love.forte.simbot.event/-member-event/index.html","searchKeys":["MemberEvent","interface MemberEvent : UserEvent, MemberInfoContainer","love.forte.simbot.event.MemberEvent"]},{"name":"interface MemberIncreaseEvent : IncreaseEvent, MemberChangedEvent","description":"love.forte.simbot.event.MemberIncreaseEvent","location":"simbot-api/love.forte.simbot.event/-member-increase-event/index.html","searchKeys":["MemberIncreaseEvent","interface MemberIncreaseEvent : IncreaseEvent, MemberChangedEvent","love.forte.simbot.event.MemberIncreaseEvent"]},{"name":"interface MemberInfo : UserInfo","description":"love.forte.simbot.definition.MemberInfo","location":"simbot-api/love.forte.simbot.definition/-member-info/index.html","searchKeys":["MemberInfo","interface MemberInfo : UserInfo","love.forte.simbot.definition.MemberInfo"]},{"name":"interface MemberInfoContainer : SuspendablePropertyContainer","description":"love.forte.simbot.definition.MemberInfoContainer","location":"simbot-api/love.forte.simbot.definition/-member-info-container/index.html","searchKeys":["MemberInfoContainer","interface MemberInfoContainer : SuspendablePropertyContainer","love.forte.simbot.definition.MemberInfoContainer"]},{"name":"interface Message","description":"love.forte.simbot.message.Message","location":"simbot-api/love.forte.simbot.message/-message/index.html","searchKeys":["Message","interface Message","love.forte.simbot.message.Message"]},{"name":"interface MessageContainer","description":"love.forte.simbot.message.MessageContainer","location":"simbot-api/love.forte.simbot.message/-message-container/index.html","searchKeys":["MessageContainer","interface MessageContainer","love.forte.simbot.message.MessageContainer"]},{"name":"interface MessageEvent : Event, RemoteMessageContainer, ReplySupport","description":"love.forte.simbot.event.MessageEvent","location":"simbot-api/love.forte.simbot.event/-message-event/index.html","searchKeys":["MessageEvent","interface MessageEvent : Event, RemoteMessageContainer, ReplySupport","love.forte.simbot.event.MessageEvent"]},{"name":"interface MessageReactSupport","description":"love.forte.simbot.action.MessageReactSupport","location":"simbot-api/love.forte.simbot.action/-message-react-support/index.html","searchKeys":["MessageReactSupport","interface MessageReactSupport","love.forte.simbot.action.MessageReactSupport"]},{"name":"interface MessageReactedEvent : MessageEvent","description":"love.forte.simbot.event.MessageReactedEvent","location":"simbot-api/love.forte.simbot.event/-message-reacted-event/index.html","searchKeys":["MessageReactedEvent","interface MessageReactedEvent : MessageEvent","love.forte.simbot.event.MessageReactedEvent"]},{"name":"interface MessageReceipt : DeleteSupport","description":"love.forte.simbot.message.MessageReceipt","location":"simbot-api/love.forte.simbot.message/-message-receipt/index.html","searchKeys":["MessageReceipt","interface MessageReceipt : DeleteSupport","love.forte.simbot.message.MessageReceipt"]},{"name":"interface Messages : View<Message.Element<*>> , RandomAccess, Message","description":"love.forte.simbot.message.Messages","location":"simbot-api/love.forte.simbot.message/-messages/index.html","searchKeys":["Messages","interface Messages : View<Message.Element<*>> , RandomAccess, Message","love.forte.simbot.message.Messages"]},{"name":"interface MutableAttributeMap : AttributeMap","description":"love.forte.simbot.MutableAttributeMap","location":"simbot-api/love.forte.simbot/-mutable-attribute-map/index.html","searchKeys":["MutableAttributeMap","interface MutableAttributeMap : AttributeMap","love.forte.simbot.MutableAttributeMap"]},{"name":"interface MutableIDMaps<V> : IDMaps<V> , MutableMap<ID, V> ","description":"love.forte.simbot.MutableIDMaps","location":"simbot-api/love.forte.simbot/-mutable-i-d-maps/index.html","searchKeys":["MutableIDMaps","interface MutableIDMaps<V> : IDMaps<V> , MutableMap<ID, V> ","love.forte.simbot.MutableIDMaps"]},{"name":"interface MuteSupport","description":"love.forte.simbot.action.MuteSupport","location":"simbot-api/love.forte.simbot.action/-mute-support/index.html","searchKeys":["MuteSupport","interface MuteSupport","love.forte.simbot.action.MuteSupport"]},{"name":"interface Objective : BotContainer, IDContainer","description":"love.forte.simbot.definition.Objective","location":"simbot-api/love.forte.simbot.definition/-objective/index.html","searchKeys":["Objective","interface Objective : BotContainer, IDContainer","love.forte.simbot.definition.Objective"]},{"name":"interface ObjectiveEvent : Event","description":"love.forte.simbot.event.ObjectiveEvent","location":"simbot-api/love.forte.simbot.event/-objective-event/index.html","searchKeys":["ObjectiveEvent","interface ObjectiveEvent : Event","love.forte.simbot.event.ObjectiveEvent"]},{"name":"interface Organization : Objective, OrganizationInfo, MuteSupport, BotContainer","description":"love.forte.simbot.definition.Organization","location":"simbot-api/love.forte.simbot.definition/-organization/index.html","searchKeys":["Organization","interface Organization : Objective, OrganizationInfo, MuteSupport, BotContainer","love.forte.simbot.definition.Organization"]},{"name":"interface OrganizationBot : Bot","description":"love.forte.simbot.definition.OrganizationBot","location":"simbot-api/love.forte.simbot.definition/-organization-bot/index.html","searchKeys":["OrganizationBot","interface OrganizationBot : Bot","love.forte.simbot.definition.OrganizationBot"]},{"name":"interface OrganizationEvent : ObjectiveEvent","description":"love.forte.simbot.event.OrganizationEvent","location":"simbot-api/love.forte.simbot.event/-organization-event/index.html","searchKeys":["OrganizationEvent","interface OrganizationEvent : ObjectiveEvent","love.forte.simbot.event.OrganizationEvent"]},{"name":"interface OrganizationInfo : IDContainer","description":"love.forte.simbot.definition.OrganizationInfo","location":"simbot-api/love.forte.simbot.definition/-organization-info/index.html","searchKeys":["OrganizationInfo","interface OrganizationInfo : IDContainer","love.forte.simbot.definition.OrganizationInfo"]},{"name":"interface PlainText<out A : PlainText<A>> : StandardMessage<A> ","description":"love.forte.simbot.message.PlainText","location":"simbot-api/love.forte.simbot.message/-plain-text/index.html","searchKeys":["PlainText","interface PlainText<out A : PlainText<A>> : StandardMessage<A> ","love.forte.simbot.message.PlainText"]},{"name":"interface Processor<T, R>","description":"love.forte.simbot.Processor","location":"simbot-api/love.forte.simbot/-processor/index.html","searchKeys":["Processor","interface Processor<T, R>","love.forte.simbot.Processor"]},{"name":"interface RemoteMessageContainer : MessageContainer","description":"love.forte.simbot.message.RemoteMessageContainer","location":"simbot-api/love.forte.simbot.message/-remote-message-container/index.html","searchKeys":["RemoteMessageContainer","interface RemoteMessageContainer : MessageContainer","love.forte.simbot.message.RemoteMessageContainer"]},{"name":"interface RemoteResource<E : RemoteResource<E>> : StandardMessage<E> , IDContainer","description":"love.forte.simbot.message.RemoteResource","location":"simbot-api/love.forte.simbot.message/-remote-resource/index.html","searchKeys":["RemoteResource","interface RemoteResource<E : RemoteResource<E>> : StandardMessage<E> , IDContainer","love.forte.simbot.message.RemoteResource"]},{"name":"interface ReplySupport","description":"love.forte.simbot.action.ReplySupport","location":"simbot-api/love.forte.simbot.action/-reply-support/index.html","searchKeys":["ReplySupport","interface ReplySupport","love.forte.simbot.action.ReplySupport"]},{"name":"interface RequestEvent : Event, UserInfoContainer","description":"love.forte.simbot.event.RequestEvent","location":"simbot-api/love.forte.simbot.event/-request-event/index.html","searchKeys":["RequestEvent","interface RequestEvent : Event, UserInfoContainer","love.forte.simbot.event.RequestEvent"]},{"name":"interface Resource : Closeable","description":"love.forte.simbot.resources.Resource","location":"simbot-api/love.forte.simbot.resources/-resource/index.html","searchKeys":["Resource","interface Resource : Closeable","love.forte.simbot.resources.Resource"]},{"name":"interface ResourceContainer : SuspendablePropertyContainer","description":"love.forte.simbot.definition.ResourceContainer","location":"simbot-api/love.forte.simbot.definition/-resource-container/index.html","searchKeys":["ResourceContainer","interface ResourceContainer : SuspendablePropertyContainer","love.forte.simbot.definition.ResourceContainer"]},{"name":"interface Role : IDContainer","description":"love.forte.simbot.definition.Role","location":"simbot-api/love.forte.simbot.definition/-role/index.html","searchKeys":["Role","interface Role : IDContainer","love.forte.simbot.definition.Role"]},{"name":"interface RunInBlockingStrategy","description":"love.forte.simbot.utils.RunInBlockingStrategy","location":"simbot-api/love.forte.simbot.utils/-run-in-blocking-strategy/index.html","searchKeys":["RunInBlockingStrategy","interface RunInBlockingStrategy","love.forte.simbot.utils.RunInBlockingStrategy"]},{"name":"interface RunInNoScopeBlockingStrategy","description":"love.forte.simbot.utils.RunInNoScopeBlockingStrategy","location":"simbot-api/love.forte.simbot.utils/-run-in-no-scope-blocking-strategy/index.html","searchKeys":["RunInNoScopeBlockingStrategy","interface RunInNoScopeBlockingStrategy","love.forte.simbot.utils.RunInNoScopeBlockingStrategy"]},{"name":"interface ScopeContext : MutableAttributeMap","description":"love.forte.simbot.event.ScopeContext","location":"simbot-api/love.forte.simbot.event/-scope-context/index.html","searchKeys":["ScopeContext","interface ScopeContext : MutableAttributeMap","love.forte.simbot.event.ScopeContext"]},{"name":"interface SendSupport","description":"love.forte.simbot.action.SendSupport","location":"simbot-api/love.forte.simbot.action/-send-support/index.html","searchKeys":["SendSupport","interface SendSupport","love.forte.simbot.action.SendSupport"]},{"name":"interface SimbotError","description":"love.forte.simbot.SimbotError","location":"simbot-api/love.forte.simbot/-simbot-error/index.html","searchKeys":["SimbotError","interface SimbotError","love.forte.simbot.SimbotError"]},{"name":"interface SocialRelationsContainer : SuspendablePropertyContainer","description":"love.forte.simbot.definition.SocialRelationsContainer","location":"simbot-api/love.forte.simbot.definition/-social-relations-container/index.html","searchKeys":["SocialRelationsContainer","interface SocialRelationsContainer : SuspendablePropertyContainer","love.forte.simbot.definition.SocialRelationsContainer"]},{"name":"interface StandardMessage<out E : Message.Element<E>> : Message.Element<E> ","description":"love.forte.simbot.message.StandardMessage","location":"simbot-api/love.forte.simbot.message/-standard-message/index.html","searchKeys":["StandardMessage","interface StandardMessage<out E : Message.Element<E>> : Message.Element<E> ","love.forte.simbot.message.StandardMessage"]},{"name":"interface StartPointEvent : ChangedEvent","description":"love.forte.simbot.event.StartPointEvent","location":"simbot-api/love.forte.simbot.event/-start-point-event/index.html","searchKeys":["StartPointEvent","interface StartPointEvent : ChangedEvent","love.forte.simbot.event.StartPointEvent"]},{"name":"interface Stranger : User","description":"love.forte.simbot.definition.Stranger","location":"simbot-api/love.forte.simbot.definition/-stranger/index.html","searchKeys":["Stranger","interface Stranger : User","love.forte.simbot.definition.Stranger"]},{"name":"interface Survivable : Switchable","description":"love.forte.simbot.ability.Survivable","location":"simbot-api/love.forte.simbot.ability/-survivable/index.html","searchKeys":["Survivable","interface Survivable : Switchable","love.forte.simbot.ability.Survivable"]},{"name":"interface SuspendablePropertyContainer : Container","description":"love.forte.simbot.definition.SuspendablePropertyContainer","location":"simbot-api/love.forte.simbot.definition/-suspendable-property-container/index.html","searchKeys":["SuspendablePropertyContainer","interface SuspendablePropertyContainer : Container","love.forte.simbot.definition.SuspendablePropertyContainer"]},{"name":"interface Switchable : DelayableCoroutineScope","description":"love.forte.simbot.ability.Switchable","location":"simbot-api/love.forte.simbot.ability/-switchable/index.html","searchKeys":["Switchable","interface Switchable : DelayableCoroutineScope","love.forte.simbot.ability.Switchable"]},{"name":"interface User : Objective, UserInfo","description":"love.forte.simbot.definition.User","location":"simbot-api/love.forte.simbot.definition/-user/index.html","searchKeys":["User","interface User : Objective, UserInfo","love.forte.simbot.definition.User"]},{"name":"interface UserEvent : ObjectiveEvent, UserInfoContainer","description":"love.forte.simbot.event.UserEvent","location":"simbot-api/love.forte.simbot.event/-user-event/index.html","searchKeys":["UserEvent","interface UserEvent : ObjectiveEvent, UserInfoContainer","love.forte.simbot.event.UserEvent"]},{"name":"interface UserInfo : IDContainer","description":"love.forte.simbot.definition.UserInfo","location":"simbot-api/love.forte.simbot.definition/-user-info/index.html","searchKeys":["UserInfo","interface UserInfo : IDContainer","love.forte.simbot.definition.UserInfo"]},{"name":"interface UserInfoContainer : SuspendablePropertyContainer","description":"love.forte.simbot.definition.UserInfoContainer","location":"simbot-api/love.forte.simbot.definition/-user-info-container/index.html","searchKeys":["UserInfoContainer","interface UserInfoContainer : SuspendablePropertyContainer","love.forte.simbot.definition.UserInfoContainer"]},{"name":"interface UserRequestEvent : RequestEvent, UserInfoContainer","description":"love.forte.simbot.event.UserRequestEvent","location":"simbot-api/love.forte.simbot.event/-user-request-event/index.html","searchKeys":["UserRequestEvent","interface UserRequestEvent : RequestEvent, UserInfoContainer","love.forte.simbot.event.UserRequestEvent"]},{"name":"interface View<out T> : Iterable<T> ","description":"love.forte.simbot.utils.view.View","location":"simbot-api/love.forte.simbot.utils.view/-view/index.html","searchKeys":["View","interface View<out T> : Iterable<T> ","love.forte.simbot.utils.view.View"]},{"name":"object AlwaysTrue : BlockingContinuousSessionEventMatcher<Event> ","description":"love.forte.simbot.event.BlockingContinuousSessionEventMatcher.AlwaysTrue","location":"simbot-api/love.forte.simbot.event/-blocking-continuous-session-event-matcher/-always-true/index.html","searchKeys":["AlwaysTrue","object AlwaysTrue : BlockingContinuousSessionEventMatcher<Event> ","love.forte.simbot.event.BlockingContinuousSessionEventMatcher.AlwaysTrue"]},{"name":"object AlwaysTrue : ContinuousSessionEventMatcher<Event> ","description":"love.forte.simbot.event.ContinuousSessionEventMatcher.AlwaysTrue","location":"simbot-api/love.forte.simbot.event/-continuous-session-event-matcher/-always-true/index.html","searchKeys":["AlwaysTrue","object AlwaysTrue : ContinuousSessionEventMatcher<Event> ","love.forte.simbot.event.ContinuousSessionEventMatcher.AlwaysTrue"]},{"name":"object AsCharSequenceIDSerializer : KSerializer<ID> ","description":"love.forte.simbot.ID.AsCharSequenceIDSerializer","location":"simbot-api/love.forte.simbot/-i-d/-as-char-sequence-i-d-serializer/index.html","searchKeys":["AsCharSequenceIDSerializer","object AsCharSequenceIDSerializer : KSerializer<ID> ","love.forte.simbot.ID.AsCharSequenceIDSerializer"]},{"name":"object AsStandardSerializer : KSerializer<Resource> ","description":"love.forte.simbot.resources.Resource.AsStandardSerializer","location":"simbot-api/love.forte.simbot.resources/-resource/-as-standard-serializer/index.html","searchKeys":["AsStandardSerializer","object AsStandardSerializer : KSerializer<Resource> ","love.forte.simbot.resources.Resource.AsStandardSerializer"]},{"name":"object AtAll : BaseStandardMessage<AtAll> , Message.Key<AtAll> ","description":"love.forte.simbot.message.AtAll","location":"simbot-api/love.forte.simbot.message/-at-all/index.html","searchKeys":["AtAll","object AtAll : BaseStandardMessage<AtAll> , Message.Key<AtAll> ","love.forte.simbot.message.AtAll"]},{"name":"object Companion","description":"love.forte.simbot.Attribute.Companion","location":"simbot-api/love.forte.simbot/-attribute/-companion/index.html","searchKeys":["Companion","object Companion","love.forte.simbot.Attribute.Companion"]},{"name":"object Companion","description":"love.forte.simbot.BigDecimalID.Companion","location":"simbot-api/love.forte.simbot/-big-decimal-i-d/-companion/index.html","searchKeys":["Companion","object Companion","love.forte.simbot.BigDecimalID.Companion"]},{"name":"object Companion","description":"love.forte.simbot.BigIntegerID.Companion","location":"simbot-api/love.forte.simbot/-big-integer-i-d/-companion/index.html","searchKeys":["Companion","object Companion","love.forte.simbot.BigIntegerID.Companion"]},{"name":"object Companion","description":"love.forte.simbot.CharSequenceID.Companion","location":"simbot-api/love.forte.simbot/-char-sequence-i-d/-companion/index.html","searchKeys":["Companion","object Companion","love.forte.simbot.CharSequenceID.Companion"]},{"name":"object Companion","description":"love.forte.simbot.ID.Companion","location":"simbot-api/love.forte.simbot/-i-d/-companion/index.html","searchKeys":["Companion","object Companion","love.forte.simbot.ID.Companion"]},{"name":"object Companion","description":"love.forte.simbot.Timestamp.Companion","location":"simbot-api/love.forte.simbot/-timestamp/-companion/index.html","searchKeys":["Companion","object Companion","love.forte.simbot.Timestamp.Companion"]},{"name":"object Companion","description":"love.forte.simbot.action.MuteSupport.Companion","location":"simbot-api/love.forte.simbot.action/-mute-support/-companion/index.html","searchKeys":["Companion","object Companion","love.forte.simbot.action.MuteSupport.Companion"]},{"name":"object Companion","description":"love.forte.simbot.bot.BotVerifyInfo.Companion","location":"simbot-api/love.forte.simbot.bot/-bot-verify-info/-companion/index.html","searchKeys":["Companion","object Companion","love.forte.simbot.bot.BotVerifyInfo.Companion"]},{"name":"object Companion","description":"love.forte.simbot.bot.StandardBotVerifyInfoDecoderFactory.Companion","location":"simbot-api/love.forte.simbot.bot/-standard-bot-verify-info-decoder-factory/-companion/index.html","searchKeys":["Companion","object Companion","love.forte.simbot.bot.StandardBotVerifyInfoDecoderFactory.Companion"]},{"name":"object Companion","description":"love.forte.simbot.definition.Category.Companion","location":"simbot-api/love.forte.simbot.definition/-category/-companion/index.html","searchKeys":["Companion","object Companion","love.forte.simbot.definition.Category.Companion"]},{"name":"object Companion","description":"love.forte.simbot.event.Event.Key.Companion","location":"simbot-api/love.forte.simbot.event/-event/-key/-companion/index.html","searchKeys":["Companion","object Companion","love.forte.simbot.event.Event.Key.Companion"]},{"name":"object Companion","description":"love.forte.simbot.event.EventListenerRegistrationDescription.Companion","location":"simbot-api/love.forte.simbot.event/-event-listener-registration-description/-companion/index.html","searchKeys":["Companion","object Companion","love.forte.simbot.event.EventListenerRegistrationDescription.Companion"]},{"name":"object Companion","description":"love.forte.simbot.event.EventResult.Companion","location":"simbot-api/love.forte.simbot.event/-event-result/-companion/index.html","searchKeys":["Companion","object Companion","love.forte.simbot.event.EventResult.Companion"]},{"name":"object Companion","description":"love.forte.simbot.message.Messages.Companion","location":"simbot-api/love.forte.simbot.message/-messages/-companion/index.html","searchKeys":["Companion","object Companion","love.forte.simbot.message.Messages.Companion"]},{"name":"object Companion","description":"love.forte.simbot.resources.DeserializableResource.Companion","location":"simbot-api/love.forte.simbot.resources/-deserializable-resource/-companion/index.html","searchKeys":["Companion","object Companion","love.forte.simbot.resources.DeserializableResource.Companion"]},{"name":"object Companion","description":"love.forte.simbot.resources.DeserializableResourceDecoder.Companion","location":"simbot-api/love.forte.simbot.resources/-deserializable-resource-decoder/-companion/index.html","searchKeys":["Companion","object Companion","love.forte.simbot.resources.DeserializableResourceDecoder.Companion"]},{"name":"object Companion","description":"love.forte.simbot.resources.Resource.Companion","location":"simbot-api/love.forte.simbot.resources/-resource/-companion/index.html","searchKeys":["Companion","object Companion","love.forte.simbot.resources.Resource.Companion"]},{"name":"object Companion","description":"love.forte.simbot.utils.item.Items.Companion","location":"simbot-api/love.forte.simbot.utils.item/-items/-companion/index.html","searchKeys":["Companion","object Companion","love.forte.simbot.utils.item.Items.Companion"]},{"name":"object Companion","description":"love.forte.simbot.utils.item.StreamItems.Companion","location":"simbot-api/love.forte.simbot.utils.item/-stream-items/-companion/index.html","searchKeys":["Companion","object Companion","love.forte.simbot.utils.item.StreamItems.Companion"]},{"name":"object Empty : AttributeMap","description":"love.forte.simbot.AttributeMap.Empty","location":"simbot-api/love.forte.simbot/-attribute-map/-empty/index.html","searchKeys":["Empty","object Empty : AttributeMap","love.forte.simbot.AttributeMap.Empty"]},{"name":"object Empty : EventProcessingResult","description":"love.forte.simbot.event.EventProcessingResult.Empty","location":"simbot-api/love.forte.simbot.event/-event-processing-result/-empty/index.html","searchKeys":["Empty","object Empty : EventProcessingResult","love.forte.simbot.event.EventProcessingResult.Empty"]},{"name":"object EmptyMessages : Messages, View<Message.Element<*>> ","description":"love.forte.simbot.message.EmptyMessages","location":"simbot-api/love.forte.simbot.message/-empty-messages/index.html","searchKeys":["EmptyMessages","object EmptyMessages : Messages, View<Message.Element<*>> ","love.forte.simbot.message.EmptyMessages"]},{"name":"object Factory : StandardBotVerifyInfoDecoderFactory<JsonBuilder, JsonBotVerifyInfoDecoder> ","description":"love.forte.simbot.bot.JsonBotVerifyInfoDecoder.Factory","location":"simbot-api/love.forte.simbot.bot/-json-bot-verify-info-decoder/-factory/index.html","searchKeys":["Factory","object Factory : StandardBotVerifyInfoDecoderFactory<JsonBuilder, JsonBotVerifyInfoDecoder> ","love.forte.simbot.bot.JsonBotVerifyInfoDecoder.Factory"]},{"name":"object Factory : StandardBotVerifyInfoDecoderFactory<PropertiesBotVerifyInfoDecoder.PropertiesConfiguration, PropertiesBotVerifyInfoDecoder> ","description":"love.forte.simbot.bot.PropertiesBotVerifyInfoDecoder.Factory","location":"simbot-api/love.forte.simbot.bot/-properties-bot-verify-info-decoder/-factory/index.html","searchKeys":["Factory","object Factory : StandardBotVerifyInfoDecoderFactory<PropertiesBotVerifyInfoDecoder.PropertiesConfiguration, PropertiesBotVerifyInfoDecoder> ","love.forte.simbot.bot.PropertiesBotVerifyInfoDecoder.Factory"]},{"name":"object Factory : StandardBotVerifyInfoDecoderFactory<YamlBotVerifyInfoDecoder.YamlBotVerifyInfoDecoderConfiguration, YamlBotVerifyInfoDecoder> ","description":"love.forte.simbot.bot.YamlBotVerifyInfoDecoder.Factory","location":"simbot-api/love.forte.simbot.bot/-yaml-bot-verify-info-decoder/-factory/index.html","searchKeys":["Factory","object Factory : StandardBotVerifyInfoDecoderFactory<YamlBotVerifyInfoDecoder.YamlBotVerifyInfoDecoderConfiguration, YamlBotVerifyInfoDecoder> ","love.forte.simbot.bot.YamlBotVerifyInfoDecoder.Factory"]},{"name":"object Invalid : SpecialEventResult","description":"love.forte.simbot.event.EventResult.Invalid","location":"simbot-api/love.forte.simbot.event/-event-result/-invalid/index.html","searchKeys":["Invalid","object Invalid : SpecialEventResult","love.forte.simbot.event.EventResult.Invalid"]},{"name":"object Key : BaseEventKey<ChangeEvent> ","description":"love.forte.simbot.event.ChangeEvent.Key","location":"simbot-api/love.forte.simbot.event/-change-event/-key/index.html","searchKeys":["Key","object Key : BaseEventKey<ChangeEvent> ","love.forte.simbot.event.ChangeEvent.Key"]},{"name":"object Key : BaseEventKey<ChangedEvent> ","description":"love.forte.simbot.event.ChangedEvent.Key","location":"simbot-api/love.forte.simbot.event/-changed-event/-key/index.html","searchKeys":["Key","object Key : BaseEventKey<ChangedEvent> ","love.forte.simbot.event.ChangedEvent.Key"]},{"name":"object Key : BaseEventKey<ChannelEvent> ","description":"love.forte.simbot.event.ChannelEvent.Key","location":"simbot-api/love.forte.simbot.event/-channel-event/-key/index.html","searchKeys":["Key","object Key : BaseEventKey<ChannelEvent> ","love.forte.simbot.event.ChannelEvent.Key"]},{"name":"object Key : BaseEventKey<ChannelMessageEvent> ","description":"love.forte.simbot.event.ChannelMessageEvent.Key","location":"simbot-api/love.forte.simbot.event/-channel-message-event/-key/index.html","searchKeys":["Key","object Key : BaseEventKey<ChannelMessageEvent> ","love.forte.simbot.event.ChannelMessageEvent.Key"]},{"name":"object Key : BaseEventKey<ChannelRequestEvent> ","description":"love.forte.simbot.event.ChannelRequestEvent.Key","location":"simbot-api/love.forte.simbot.event/-channel-request-event/-key/index.html","searchKeys":["Key","object Key : BaseEventKey<ChannelRequestEvent> ","love.forte.simbot.event.ChannelRequestEvent.Key"]},{"name":"object Key : BaseEventKey<ChatRoomMessageEvent> ","description":"love.forte.simbot.event.ChatRoomMessageEvent.Key","location":"simbot-api/love.forte.simbot.event/-chat-room-message-event/-key/index.html","searchKeys":["Key","object Key : BaseEventKey<ChatRoomMessageEvent> ","love.forte.simbot.event.ChatRoomMessageEvent.Key"]},{"name":"object Key : BaseEventKey<ContactMessageEvent> ","description":"love.forte.simbot.event.ContactMessageEvent.Key","location":"simbot-api/love.forte.simbot.event/-contact-message-event/-key/index.html","searchKeys":["Key","object Key : BaseEventKey<ContactMessageEvent> ","love.forte.simbot.event.ContactMessageEvent.Key"]},{"name":"object Key : BaseEventKey<DecreaseEvent> ","description":"love.forte.simbot.event.DecreaseEvent.Key","location":"simbot-api/love.forte.simbot.event/-decrease-event/-key/index.html","searchKeys":["Key","object Key : BaseEventKey<DecreaseEvent> ","love.forte.simbot.event.DecreaseEvent.Key"]},{"name":"object Key : BaseEventKey<EndPointEvent> ","description":"love.forte.simbot.event.EndPointEvent.Key","location":"simbot-api/love.forte.simbot.event/-end-point-event/-key/index.html","searchKeys":["Key","object Key : BaseEventKey<EndPointEvent> ","love.forte.simbot.event.EndPointEvent.Key"]},{"name":"object Key : BaseEventKey<FriendAddRequestEvent> ","description":"love.forte.simbot.event.FriendAddRequestEvent.Key","location":"simbot-api/love.forte.simbot.event/-friend-add-request-event/-key/index.html","searchKeys":["Key","object Key : BaseEventKey<FriendAddRequestEvent> ","love.forte.simbot.event.FriendAddRequestEvent.Key"]},{"name":"object Key : BaseEventKey<FriendChangedEvent> ","description":"love.forte.simbot.event.FriendChangedEvent.Key","location":"simbot-api/love.forte.simbot.event/-friend-changed-event/-key/index.html","searchKeys":["Key","object Key : BaseEventKey<FriendChangedEvent> ","love.forte.simbot.event.FriendChangedEvent.Key"]},{"name":"object Key : BaseEventKey<FriendDecreaseEvent> ","description":"love.forte.simbot.event.FriendDecreaseEvent.Key","location":"simbot-api/love.forte.simbot.event/-friend-decrease-event/-key/index.html","searchKeys":["Key","object Key : BaseEventKey<FriendDecreaseEvent> ","love.forte.simbot.event.FriendDecreaseEvent.Key"]},{"name":"object Key : BaseEventKey<FriendEvent> ","description":"love.forte.simbot.event.FriendEvent.Key","location":"simbot-api/love.forte.simbot.event/-friend-event/-key/index.html","searchKeys":["Key","object Key : BaseEventKey<FriendEvent> ","love.forte.simbot.event.FriendEvent.Key"]},{"name":"object Key : BaseEventKey<FriendIncreaseEvent> ","description":"love.forte.simbot.event.FriendIncreaseEvent.Key","location":"simbot-api/love.forte.simbot.event/-friend-increase-event/-key/index.html","searchKeys":["Key","object Key : BaseEventKey<FriendIncreaseEvent> ","love.forte.simbot.event.FriendIncreaseEvent.Key"]},{"name":"object Key : BaseEventKey<FriendMessageEvent> ","description":"love.forte.simbot.event.FriendMessageEvent.Key","location":"simbot-api/love.forte.simbot.event/-friend-message-event/-key/index.html","searchKeys":["Key","object Key : BaseEventKey<FriendMessageEvent> ","love.forte.simbot.event.FriendMessageEvent.Key"]},{"name":"object Key : BaseEventKey<FriendRequestEvent> ","description":"love.forte.simbot.event.FriendRequestEvent.Key","location":"simbot-api/love.forte.simbot.event/-friend-request-event/-key/index.html","searchKeys":["Key","object Key : BaseEventKey<FriendRequestEvent> ","love.forte.simbot.event.FriendRequestEvent.Key"]},{"name":"object Key : BaseEventKey<GroupEvent> ","description":"love.forte.simbot.event.GroupEvent.Key","location":"simbot-api/love.forte.simbot.event/-group-event/-key/index.html","searchKeys":["Key","object Key : BaseEventKey<GroupEvent> ","love.forte.simbot.event.GroupEvent.Key"]},{"name":"object Key : BaseEventKey<GroupJoinRequestEvent> ","description":"love.forte.simbot.event.GroupJoinRequestEvent.Key","location":"simbot-api/love.forte.simbot.event/-group-join-request-event/-key/index.html","searchKeys":["Key","object Key : BaseEventKey<GroupJoinRequestEvent> ","love.forte.simbot.event.GroupJoinRequestEvent.Key"]},{"name":"object Key : BaseEventKey<GroupMemberDecreaseEvent> ","description":"love.forte.simbot.event.GroupMemberDecreaseEvent.Key","location":"simbot-api/love.forte.simbot.event/-group-member-decrease-event/-key/index.html","searchKeys":["Key","object Key : BaseEventKey<GroupMemberDecreaseEvent> ","love.forte.simbot.event.GroupMemberDecreaseEvent.Key"]},{"name":"object Key : BaseEventKey<GroupMemberIncreaseEvent> ","description":"love.forte.simbot.event.GroupMemberIncreaseEvent.Key","location":"simbot-api/love.forte.simbot.event/-group-member-increase-event/-key/index.html","searchKeys":["Key","object Key : BaseEventKey<GroupMemberIncreaseEvent> ","love.forte.simbot.event.GroupMemberIncreaseEvent.Key"]},{"name":"object Key : BaseEventKey<GroupMessageEvent> ","description":"love.forte.simbot.event.GroupMessageEvent.Key","location":"simbot-api/love.forte.simbot.event/-group-message-event/-key/index.html","searchKeys":["Key","object Key : BaseEventKey<GroupMessageEvent> ","love.forte.simbot.event.GroupMessageEvent.Key"]},{"name":"object Key : BaseEventKey<GroupRequestEvent> ","description":"love.forte.simbot.event.GroupRequestEvent.Key","location":"simbot-api/love.forte.simbot.event/-group-request-event/-key/index.html","searchKeys":["Key","object Key : BaseEventKey<GroupRequestEvent> ","love.forte.simbot.event.GroupRequestEvent.Key"]},{"name":"object Key : BaseEventKey<GuildEvent> ","description":"love.forte.simbot.event.GuildEvent.Key","location":"simbot-api/love.forte.simbot.event/-guild-event/-key/index.html","searchKeys":["Key","object Key : BaseEventKey<GuildEvent> ","love.forte.simbot.event.GuildEvent.Key"]},{"name":"object Key : BaseEventKey<GuildJoinRequestEvent> ","description":"love.forte.simbot.event.GuildJoinRequestEvent.Key","location":"simbot-api/love.forte.simbot.event/-guild-join-request-event/-key/index.html","searchKeys":["Key","object Key : BaseEventKey<GuildJoinRequestEvent> ","love.forte.simbot.event.GuildJoinRequestEvent.Key"]},{"name":"object Key : BaseEventKey<GuildMemberDecreaseEvent> ","description":"love.forte.simbot.event.GuildMemberDecreaseEvent.Key","location":"simbot-api/love.forte.simbot.event/-guild-member-decrease-event/-key/index.html","searchKeys":["Key","object Key : BaseEventKey<GuildMemberDecreaseEvent> ","love.forte.simbot.event.GuildMemberDecreaseEvent.Key"]},{"name":"object Key : BaseEventKey<GuildMemberIncreaseEvent> ","description":"love.forte.simbot.event.GuildMemberIncreaseEvent.Key","location":"simbot-api/love.forte.simbot.event/-guild-member-increase-event/-key/index.html","searchKeys":["Key","object Key : BaseEventKey<GuildMemberIncreaseEvent> ","love.forte.simbot.event.GuildMemberIncreaseEvent.Key"]},{"name":"object Key : BaseEventKey<GuildRequestEvent> ","description":"love.forte.simbot.event.GuildRequestEvent.Key","location":"simbot-api/love.forte.simbot.event/-guild-request-event/-key/index.html","searchKeys":["Key","object Key : BaseEventKey<GuildRequestEvent> ","love.forte.simbot.event.GuildRequestEvent.Key"]},{"name":"object Key : BaseEventKey<IncreaseEvent> ","description":"love.forte.simbot.event.IncreaseEvent.Key","location":"simbot-api/love.forte.simbot.event/-increase-event/-key/index.html","searchKeys":["Key","object Key : BaseEventKey<IncreaseEvent> ","love.forte.simbot.event.IncreaseEvent.Key"]},{"name":"object Key : BaseEventKey<JoinRequestEvent> ","description":"love.forte.simbot.event.JoinRequestEvent.Key","location":"simbot-api/love.forte.simbot.event/-join-request-event/-key/index.html","searchKeys":["Key","object Key : BaseEventKey<JoinRequestEvent> ","love.forte.simbot.event.JoinRequestEvent.Key"]},{"name":"object Key : BaseEventKey<MemberChangedEvent> ","description":"love.forte.simbot.event.MemberChangedEvent.Key","location":"simbot-api/love.forte.simbot.event/-member-changed-event/-key/index.html","searchKeys":["Key","object Key : BaseEventKey<MemberChangedEvent> ","love.forte.simbot.event.MemberChangedEvent.Key"]},{"name":"object Key : BaseEventKey<MemberDecreaseEvent> ","description":"love.forte.simbot.event.MemberDecreaseEvent.Key","location":"simbot-api/love.forte.simbot.event/-member-decrease-event/-key/index.html","searchKeys":["Key","object Key : BaseEventKey<MemberDecreaseEvent> ","love.forte.simbot.event.MemberDecreaseEvent.Key"]},{"name":"object Key : BaseEventKey<MemberEvent> ","description":"love.forte.simbot.event.MemberEvent.Key","location":"simbot-api/love.forte.simbot.event/-member-event/-key/index.html","searchKeys":["Key","object Key : BaseEventKey<MemberEvent> ","love.forte.simbot.event.MemberEvent.Key"]},{"name":"object Key : BaseEventKey<MemberIncreaseEvent> ","description":"love.forte.simbot.event.MemberIncreaseEvent.Key","location":"simbot-api/love.forte.simbot.event/-member-increase-event/-key/index.html","searchKeys":["Key","object Key : BaseEventKey<MemberIncreaseEvent> ","love.forte.simbot.event.MemberIncreaseEvent.Key"]},{"name":"object Key : BaseEventKey<MessageEvent> ","description":"love.forte.simbot.event.MessageEvent.Key","location":"simbot-api/love.forte.simbot.event/-message-event/-key/index.html","searchKeys":["Key","object Key : BaseEventKey<MessageEvent> ","love.forte.simbot.event.MessageEvent.Key"]},{"name":"object Key : BaseEventKey<OrganizationEvent> ","description":"love.forte.simbot.event.OrganizationEvent.Key","location":"simbot-api/love.forte.simbot.event/-organization-event/-key/index.html","searchKeys":["Key","object Key : BaseEventKey<OrganizationEvent> ","love.forte.simbot.event.OrganizationEvent.Key"]},{"name":"object Key : BaseEventKey<RequestEvent> ","description":"love.forte.simbot.event.RequestEvent.Key","location":"simbot-api/love.forte.simbot.event/-request-event/-key/index.html","searchKeys":["Key","object Key : BaseEventKey<RequestEvent> ","love.forte.simbot.event.RequestEvent.Key"]},{"name":"object Key : BaseEventKey<StartPointEvent> ","description":"love.forte.simbot.event.StartPointEvent.Key","location":"simbot-api/love.forte.simbot.event/-start-point-event/-key/index.html","searchKeys":["Key","object Key : BaseEventKey<StartPointEvent> ","love.forte.simbot.event.StartPointEvent.Key"]},{"name":"object Key : BaseEventKey<UserEvent> ","description":"love.forte.simbot.event.UserEvent.Key","location":"simbot-api/love.forte.simbot.event/-user-event/-key/index.html","searchKeys":["Key","object Key : BaseEventKey<UserEvent> ","love.forte.simbot.event.UserEvent.Key"]},{"name":"object Key : BaseEventKey<UserRequestEvent> ","description":"love.forte.simbot.event.UserRequestEvent.Key","location":"simbot-api/love.forte.simbot.event/-user-request-event/-key/index.html","searchKeys":["Key","object Key : BaseEventKey<UserRequestEvent> ","love.forte.simbot.event.UserRequestEvent.Key"]},{"name":"object Key : CoroutineContext.Key<EventProcessingContext> ","description":"love.forte.simbot.event.EventProcessingContext.Key","location":"simbot-api/love.forte.simbot.event/-event-processing-context/-key/index.html","searchKeys":["Key","object Key : CoroutineContext.Key<EventProcessingContext> ","love.forte.simbot.event.EventProcessingContext.Key"]},{"name":"object Key : Message.Key<At> ","description":"love.forte.simbot.message.At.Key","location":"simbot-api/love.forte.simbot.message/-at/-key/index.html","searchKeys":["Key","object Key : Message.Key<At> ","love.forte.simbot.message.At.Key"]},{"name":"object Key : Message.Key<Emoji> ","description":"love.forte.simbot.message.Emoji.Key","location":"simbot-api/love.forte.simbot.message/-emoji/-key/index.html","searchKeys":["Key","object Key : Message.Key<Emoji> ","love.forte.simbot.message.Emoji.Key"]},{"name":"object Key : Message.Key<Face> ","description":"love.forte.simbot.message.Face.Key","location":"simbot-api/love.forte.simbot.message/-face/-key/index.html","searchKeys":["Key","object Key : Message.Key<Face> ","love.forte.simbot.message.Face.Key"]},{"name":"object Key : Message.Key<Image<*>> ","description":"love.forte.simbot.message.Image.Key","location":"simbot-api/love.forte.simbot.message/-image/-key/index.html","searchKeys":["Key","object Key : Message.Key<Image<*>> ","love.forte.simbot.message.Image.Key"]},{"name":"object Key : Message.Key<PlainText<*>> ","description":"love.forte.simbot.message.PlainText.Key","location":"simbot-api/love.forte.simbot.message/-plain-text/-key/index.html","searchKeys":["Key","object Key : Message.Key<PlainText<*>> ","love.forte.simbot.message.PlainText.Key"]},{"name":"object Key : Message.Key<RemoteResource<*>> ","description":"love.forte.simbot.message.RemoteResource.Key","location":"simbot-api/love.forte.simbot.message/-remote-resource/-key/index.html","searchKeys":["Key","object Key : Message.Key<RemoteResource<*>> ","love.forte.simbot.message.RemoteResource.Key"]},{"name":"object Key : Message.Key<ResourceImage> ","description":"love.forte.simbot.message.ResourceImage.Key","location":"simbot-api/love.forte.simbot.message/-resource-image/-key/index.html","searchKeys":["Key","object Key : Message.Key<ResourceImage> ","love.forte.simbot.message.ResourceImage.Key"]},{"name":"object Key : Message.Key<Text> ","description":"love.forte.simbot.message.Text.Key","location":"simbot-api/love.forte.simbot.message/-text/-key/index.html","searchKeys":["Key","object Key : Message.Key<Text> ","love.forte.simbot.message.Text.Key"]},{"name":"object MessageSerializationUtil","description":"love.forte.simbot.message.MessageSerializationUtil","location":"simbot-api/love.forte.simbot.message/-message-serialization-util/index.html","searchKeys":["MessageSerializationUtil","object MessageSerializationUtil","love.forte.simbot.message.MessageSerializationUtil"]},{"name":"object NotSupport : Timestamp","description":"love.forte.simbot.Timestamp.NotSupport","location":"simbot-api/love.forte.simbot/-timestamp/-not-support/index.html","searchKeys":["NotSupport","object NotSupport : Timestamp","love.forte.simbot.Timestamp.NotSupport"]},{"name":"object OriginBotManager : Set<BotManager<*>> ","description":"love.forte.simbot.bot.OriginBotManager","location":"simbot-api/love.forte.simbot.bot/-origin-bot-manager/index.html","searchKeys":["OriginBotManager","object OriginBotManager : Set<BotManager<*>> ","love.forte.simbot.bot.OriginBotManager"]},{"name":"object PriorityConstant","description":"love.forte.simbot.PriorityConstant","location":"simbot-api/love.forte.simbot/-priority-constant/index.html","searchKeys":["PriorityConstant","object PriorityConstant","love.forte.simbot.PriorityConstant"]},{"name":"object RandomIDUtil","description":"love.forte.simbot.utils.RandomIDUtil","location":"simbot-api/love.forte.simbot.utils/-random-i-d-util/index.html","searchKeys":["RandomIDUtil","object RandomIDUtil","love.forte.simbot.utils.RandomIDUtil"]},{"name":"object Root : Event.Key<Event> ","description":"love.forte.simbot.event.Event.Root","location":"simbot-api/love.forte.simbot.event/-event/-root/index.html","searchKeys":["Root","object Root : Event.Key<Event> ","love.forte.simbot.event.Event.Root"]},{"name":"object Serializer : KSerializer<CharSequenceID> ","description":"love.forte.simbot.CharSequenceID.Serializer","location":"simbot-api/love.forte.simbot/-char-sequence-i-d/-serializer/index.html","searchKeys":["Serializer","object Serializer : KSerializer<CharSequenceID> ","love.forte.simbot.CharSequenceID.Serializer"]},{"name":"object Simbot","description":"love.forte.simbot.Simbot","location":"simbot-api/love.forte.simbot/-simbot/index.html","searchKeys":["Simbot","object Simbot","love.forte.simbot.Simbot"]},{"name":"object TimestampSerializer : KSerializer<Timestamp> ","description":"love.forte.simbot.TimestampSerializer","location":"simbot-api/love.forte.simbot/-timestamp-serializer/index.html","searchKeys":["TimestampSerializer","object TimestampSerializer : KSerializer<Timestamp> ","love.forte.simbot.TimestampSerializer"]},{"name":"object ZERO : Limiter","description":"love.forte.simbot.Limiter.ZERO","location":"simbot-api/love.forte.simbot/-limiter/-z-e-r-o/index.html","searchKeys":["ZERO","object ZERO : Limiter","love.forte.simbot.Limiter.ZERO"]},{"name":"open class ActionException : SimbotRuntimeException","description":"love.forte.simbot.action.ActionException","location":"simbot-api/love.forte.simbot.action/-action-exception/index.html","searchKeys":["ActionException","open class ActionException : SimbotRuntimeException","love.forte.simbot.action.ActionException"]},{"name":"open class ApplicationConfiguration","description":"love.forte.simbot.application.ApplicationConfiguration","location":"simbot-api/love.forte.simbot.application/-application-configuration/index.html","searchKeys":["ApplicationConfiguration","open class ApplicationConfiguration","love.forte.simbot.application.ApplicationConfiguration"]},{"name":"open class BotAlreadyRegisteredException : SimbotIllegalStateException","description":"love.forte.simbot.bot.BotAlreadyRegisteredException","location":"simbot-api/love.forte.simbot.bot/-bot-already-registered-exception/index.html","searchKeys":["BotAlreadyRegisteredException","open class BotAlreadyRegisteredException : SimbotIllegalStateException","love.forte.simbot.bot.BotAlreadyRegisteredException"]},{"name":"open class ComponentMismatchException : SimbotIllegalArgumentException","description":"love.forte.simbot.bot.ComponentMismatchException","location":"simbot-api/love.forte.simbot.bot/-component-mismatch-exception/index.html","searchKeys":["ComponentMismatchException","open class ComponentMismatchException : SimbotIllegalArgumentException","love.forte.simbot.bot.ComponentMismatchException"]},{"name":"open class DefaultBlockingDispatcherTaskRejectedExecutionException(val runnable: Runnable, val executor: Executor) : RejectedExecutionException","description":"love.forte.simbot.utils.DefaultBlockingDispatcherTaskRejectedExecutionException","location":"simbot-api/love.forte.simbot.utils/-default-blocking-dispatcher-task-rejected-execution-exception/index.html","searchKeys":["DefaultBlockingDispatcherTaskRejectedExecutionException","open class DefaultBlockingDispatcherTaskRejectedExecutionException(val runnable: Runnable, val executor: Executor) : RejectedExecutionException","love.forte.simbot.utils.DefaultBlockingDispatcherTaskRejectedExecutionException"]},{"name":"open class EventProcessingException : SimbotIllegalStateException","description":"love.forte.simbot.event.EventProcessingException","location":"simbot-api/love.forte.simbot.event/-event-processing-exception/index.html","searchKeys":["EventProcessingException","open class EventProcessingException : SimbotIllegalStateException","love.forte.simbot.event.EventProcessingException"]},{"name":"open class IDException : RuntimeException","description":"love.forte.simbot.IDException","location":"simbot-api/love.forte.simbot/-i-d-exception/index.html","searchKeys":["IDException","open class IDException : RuntimeException","love.forte.simbot.IDException"]},{"name":"open class MessageSendingException : ActionException","description":"love.forte.simbot.action.MessageSendingException","location":"simbot-api/love.forte.simbot.action/-message-sending-exception/index.html","searchKeys":["MessageSendingException","open class MessageSendingException : ActionException","love.forte.simbot.action.MessageSendingException"]},{"name":"open class NoSuchEventListenerException(appellation: String) : NoSuchElementException, SimbotError","description":"love.forte.simbot.event.NoSuchEventListenerException","location":"simbot-api/love.forte.simbot.event/-no-such-event-listener-exception/index.html","searchKeys":["NoSuchEventListenerException","open class NoSuchEventListenerException(appellation: String) : NoSuchElementException, SimbotError","love.forte.simbot.event.NoSuchEventListenerException"]},{"name":"open class PropertiesConfiguration","description":"love.forte.simbot.bot.PropertiesBotVerifyInfoDecoder.PropertiesConfiguration","location":"simbot-api/love.forte.simbot.bot/-properties-bot-verify-info-decoder/-properties-configuration/index.html","searchKeys":["PropertiesConfiguration","open class PropertiesConfiguration","love.forte.simbot.bot.PropertiesBotVerifyInfoDecoder.PropertiesConfiguration"]},{"name":"open class SimbotException : Exception, SimbotError","description":"love.forte.simbot.SimbotException","location":"simbot-api/love.forte.simbot/-simbot-exception/index.html","searchKeys":["SimbotException","open class SimbotException : Exception, SimbotError","love.forte.simbot.SimbotException"]},{"name":"open class SimbotIllegalArgumentException : IllegalArgumentException, SimbotError","description":"love.forte.simbot.SimbotIllegalArgumentException","location":"simbot-api/love.forte.simbot/-simbot-illegal-argument-exception/index.html","searchKeys":["SimbotIllegalArgumentException","open class SimbotIllegalArgumentException : IllegalArgumentException, SimbotError","love.forte.simbot.SimbotIllegalArgumentException"]},{"name":"open class SimbotIllegalStateException : IllegalArgumentException, SimbotError","description":"love.forte.simbot.SimbotIllegalStateException","location":"simbot-api/love.forte.simbot/-simbot-illegal-state-exception/index.html","searchKeys":["SimbotIllegalStateException","open class SimbotIllegalStateException : IllegalArgumentException, SimbotError","love.forte.simbot.SimbotIllegalStateException"]},{"name":"open class SimbotRuntimeException : RuntimeException, SimbotError","description":"love.forte.simbot.SimbotRuntimeException","location":"simbot-api/love.forte.simbot/-simbot-runtime-exception/index.html","searchKeys":["SimbotRuntimeException","open class SimbotRuntimeException : RuntimeException, SimbotError","love.forte.simbot.SimbotRuntimeException"]},{"name":"open class SimpleEventResult constructor(val content: Any? = null, val isTruncated: Boolean = false) : ReactivelyCollectableEventResult","description":"love.forte.simbot.event.SimpleEventResult","location":"simbot-api/love.forte.simbot.event/-simple-event-result/index.html","searchKeys":["SimpleEventResult","open class SimpleEventResult constructor(val content: Any? = null, val isTruncated: Boolean = false) : ReactivelyCollectableEventResult","love.forte.simbot.event.SimpleEventResult"]},{"name":"open class Text(val text: String) : BaseStandardMessage<Text> , PlainText<Text> ","description":"love.forte.simbot.message.Text","location":"simbot-api/love.forte.simbot.message/-text/index.html","searchKeys":["Text","open class Text(val text: String) : BaseStandardMessage<Text> , PlainText<Text> ","love.forte.simbot.message.Text"]},{"name":"open class VerifyFailureException : SimbotIllegalStateException","description":"love.forte.simbot.bot.VerifyFailureException","location":"simbot-api/love.forte.simbot.bot/-verify-failure-exception/index.html","searchKeys":["VerifyFailureException","open class VerifyFailureException : SimbotIllegalStateException","love.forte.simbot.bot.VerifyFailureException"]},{"name":"open class YamlBotVerifyInfoDecoderConfiguration","description":"love.forte.simbot.bot.YamlBotVerifyInfoDecoder.YamlBotVerifyInfoDecoderConfiguration","location":"simbot-api/love.forte.simbot.bot/-yaml-bot-verify-info-decoder/-yaml-bot-verify-info-decoder-configuration/index.html","searchKeys":["YamlBotVerifyInfoDecoderConfiguration","open class YamlBotVerifyInfoDecoderConfiguration","love.forte.simbot.bot.YamlBotVerifyInfoDecoder.YamlBotVerifyInfoDecoderConfiguration"]},{"name":"open fun <C : MutableCollection<in T>> collectTo(collector: C): C","description":"love.forte.simbot.utils.item.Items.collectTo","location":"simbot-api/love.forte.simbot.utils.item/-items/collect-to.html","searchKeys":["collectTo","open fun <C : MutableCollection<in T>> collectTo(collector: C): C","love.forte.simbot.utils.item.Items.collectTo"]},{"name":"open fun <C : MutableCollection<in T>> collectToAsync(collector: C): CompletableFuture<out C>","description":"love.forte.simbot.utils.item.Items.collectToAsync","location":"simbot-api/love.forte.simbot.utils.item/-items/collect-to-async.html","searchKeys":["collectToAsync","open fun <C : MutableCollection<in T>> collectToAsync(collector: C): CompletableFuture<out C>","love.forte.simbot.utils.item.Items.collectToAsync"]},{"name":"open fun <V> delayAndCompute(duration: JavaDuration, supplier: Supplier<V>): DelayableCompletableFuture<V>","description":"love.forte.simbot.ability.DelayableCoroutineScope.delayAndCompute","location":"simbot-api/love.forte.simbot.ability/-delayable-coroutine-scope/delay-and-compute.html","searchKeys":["delayAndCompute","open fun <V> delayAndCompute(duration: JavaDuration, supplier: Supplier<V>): DelayableCompletableFuture<V>","love.forte.simbot.ability.DelayableCoroutineScope.delayAndCompute"]},{"name":"open fun <V> delayAndCompute(millis: Long, supplier: Supplier<V>): DelayableCompletableFuture<V>","description":"love.forte.simbot.ability.DelayableCoroutineScope.delayAndCompute","location":"simbot-api/love.forte.simbot.ability/-delayable-coroutine-scope/delay-and-compute.html","searchKeys":["delayAndCompute","open fun <V> delayAndCompute(millis: Long, supplier: Supplier<V>): DelayableCompletableFuture<V>","love.forte.simbot.ability.DelayableCoroutineScope.delayAndCompute"]},{"name":"open fun <V> delayAndCompute(time: Long, timeUnit: TimeUnit, supplier: Supplier<V>): DelayableCompletableFuture<V>","description":"love.forte.simbot.ability.DelayableCoroutineScope.delayAndCompute","location":"simbot-api/love.forte.simbot.ability/-delayable-coroutine-scope/delay-and-compute.html","searchKeys":["delayAndCompute","open fun <V> delayAndCompute(time: Long, timeUnit: TimeUnit, supplier: Supplier<V>): DelayableCompletableFuture<V>","love.forte.simbot.ability.DelayableCoroutineScope.delayAndCompute"]},{"name":"open fun build(builder: BiConsumer<Builder, Config>): ApplicationDslBuilder<Config, Builder, A>","description":"love.forte.simbot.application.ApplicationDslBuilder.build","location":"simbot-api/love.forte.simbot.application/-application-dsl-builder/build.html","searchKeys":["build","open fun build(builder: BiConsumer<Builder, Config>): ApplicationDslBuilder<Config, Builder, A>","love.forte.simbot.application.ApplicationDslBuilder.build"]},{"name":"open fun cancelAsync(): CompletableFuture<Boolean>","description":"love.forte.simbot.ability.Switchable.cancelAsync","location":"simbot-api/love.forte.simbot.ability/-switchable/cancel-async.html","searchKeys":["cancelAsync","open fun cancelAsync(): CompletableFuture<Boolean>","love.forte.simbot.ability.Switchable.cancelAsync"]},{"name":"open fun cancelBlocking(): Boolean","description":"love.forte.simbot.ability.Switchable.cancelBlocking","location":"simbot-api/love.forte.simbot.ability/-switchable/cancel-blocking.html","searchKeys":["cancelBlocking","open fun cancelBlocking(): Boolean","love.forte.simbot.ability.Switchable.cancelBlocking"]},{"name":"open fun collect(collector: Consumer<in T>)","description":"love.forte.simbot.utils.item.Items.collect","location":"simbot-api/love.forte.simbot.utils.item/-items/collect.html","searchKeys":["collect","open fun collect(collector: Consumer<in T>)","love.forte.simbot.utils.item.Items.collect"]},{"name":"open fun collectAsync(collector: Consumer<in T>): CompletableFuture<Unit>","description":"love.forte.simbot.utils.item.Items.collectAsync","location":"simbot-api/love.forte.simbot.utils.item/-items/collect-async.html","searchKeys":["collectAsync","open fun collectAsync(collector: Consumer<in T>): CompletableFuture<Unit>","love.forte.simbot.utils.item.Items.collectAsync"]},{"name":"open fun collectToList(): List<T>","description":"love.forte.simbot.utils.item.Items.collectToList","location":"simbot-api/love.forte.simbot.utils.item/-items/collect-to-list.html","searchKeys":["collectToList","open fun collectToList(): List<T>","love.forte.simbot.utils.item.Items.collectToList"]},{"name":"open fun collectToListAsync(): CompletableFuture<out List<T>>","description":"love.forte.simbot.utils.item.Items.collectToListAsync","location":"simbot-api/love.forte.simbot.utils.item/-items/collect-to-list-async.html","searchKeys":["collectToListAsync","open fun collectToListAsync(): CompletableFuture<out List<T>>","love.forte.simbot.utils.item.Items.collectToListAsync"]},{"name":"open fun copy(newContent: Any? = content, newTruncated: Boolean = isTruncated): SimpleEventResult","description":"love.forte.simbot.event.SimpleEventResult.copy","location":"simbot-api/love.forte.simbot.event/-simple-event-result/copy.html","searchKeys":["copy","open fun copy(newContent: Any? = content, newTruncated: Boolean = isTruncated): SimpleEventResult","love.forte.simbot.event.SimpleEventResult.copy"]},{"name":"open fun delay(duration: JavaDuration, runnable: Runnable): DelayableCompletableFuture<Void?>","description":"love.forte.simbot.ability.DelayableCoroutineScope.delay","location":"simbot-api/love.forte.simbot.ability/-delayable-coroutine-scope/delay.html","searchKeys":["delay","open fun delay(duration: JavaDuration, runnable: Runnable): DelayableCompletableFuture<Void?>","love.forte.simbot.ability.DelayableCoroutineScope.delay"]},{"name":"open fun delay(millis: Long, runnable: Runnable): DelayableCompletableFuture<Void?>","description":"love.forte.simbot.ability.DelayableCoroutineScope.delay","location":"simbot-api/love.forte.simbot.ability/-delayable-coroutine-scope/delay.html","searchKeys":["delay","open fun delay(millis: Long, runnable: Runnable): DelayableCompletableFuture<Void?>","love.forte.simbot.ability.DelayableCoroutineScope.delay"]},{"name":"open fun delay(time: Long, timeUnit: TimeUnit, runnable: Runnable): DelayableCompletableFuture<Void?>","description":"love.forte.simbot.ability.DelayableCoroutineScope.delay","location":"simbot-api/love.forte.simbot.ability/-delayable-coroutine-scope/delay.html","searchKeys":["delay","open fun delay(time: Long, timeUnit: TimeUnit, runnable: Runnable): DelayableCompletableFuture<Void?>","love.forte.simbot.ability.DelayableCoroutineScope.delay"]},{"name":"open fun getListeners(): Stream<EventListener>","description":"love.forte.simbot.event.EventListenerContainer.getListeners","location":"simbot-api/love.forte.simbot.event/-event-listener-container/get-listeners.html","searchKeys":["getListeners","open fun getListeners(): Stream<EventListener>","love.forte.simbot.event.EventListenerContainer.getListeners"]},{"name":"open fun muteBlocking(): Boolean","description":"love.forte.simbot.action.MuteSupport.muteBlocking","location":"simbot-api/love.forte.simbot.action/-mute-support/mute-blocking.html","searchKeys":["muteBlocking","open fun muteBlocking(): Boolean","love.forte.simbot.action.MuteSupport.muteBlocking"]},{"name":"open fun muteBlocking(duration: JavaDuration): Boolean","description":"love.forte.simbot.action.MuteSupport.muteBlocking","location":"simbot-api/love.forte.simbot.action/-mute-support/mute-blocking.html","searchKeys":["muteBlocking","open fun muteBlocking(duration: JavaDuration): Boolean","love.forte.simbot.action.MuteSupport.muteBlocking"]},{"name":"open fun proceedBlocking(): R","description":"love.forte.simbot.Interceptor.Context.proceedBlocking","location":"simbot-api/love.forte.simbot/-interceptor/-context/proceed-blocking.html","searchKeys":["proceedBlocking","open fun proceedBlocking(): R","love.forte.simbot.Interceptor.Context.proceedBlocking"]},{"name":"open fun shutdownBlocking()","description":"love.forte.simbot.application.Application.shutdownBlocking","location":"simbot-api/love.forte.simbot.application/-application/shutdown-blocking.html","searchKeys":["shutdownBlocking","open fun shutdownBlocking()","love.forte.simbot.application.Application.shutdownBlocking"]},{"name":"open fun toByte(): Byte","description":"love.forte.simbot.NumericalID.toByte","location":"simbot-api/love.forte.simbot/-numerical-i-d/to-byte.html","searchKeys":["toByte","open fun toByte(): Byte","love.forte.simbot.NumericalID.toByte"]},{"name":"open fun toChar(): Char","description":"love.forte.simbot.NumericalID.toChar","location":"simbot-api/love.forte.simbot/-numerical-i-d/to-char.html","searchKeys":["toChar","open fun toChar(): Char","love.forte.simbot.NumericalID.toChar"]},{"name":"open fun toDouble(): Double","description":"love.forte.simbot.NumericalID.toDouble","location":"simbot-api/love.forte.simbot/-numerical-i-d/to-double.html","searchKeys":["toDouble","open fun toDouble(): Double","love.forte.simbot.NumericalID.toDouble"]},{"name":"open fun toFloat(): Float","description":"love.forte.simbot.NumericalID.toFloat","location":"simbot-api/love.forte.simbot/-numerical-i-d/to-float.html","searchKeys":["toFloat","open fun toFloat(): Float","love.forte.simbot.NumericalID.toFloat"]},{"name":"open fun toInt(): Int","description":"love.forte.simbot.NumericalID.toInt","location":"simbot-api/love.forte.simbot/-numerical-i-d/to-int.html","searchKeys":["toInt","open fun toInt(): Int","love.forte.simbot.NumericalID.toInt"]},{"name":"open fun toLong(): Long","description":"love.forte.simbot.NumericalID.toLong","location":"simbot-api/love.forte.simbot/-numerical-i-d/to-long.html","searchKeys":["toLong","open fun toLong(): Long","love.forte.simbot.NumericalID.toLong"]},{"name":"open fun toShort(): Short","description":"love.forte.simbot.NumericalID.toShort","location":"simbot-api/love.forte.simbot/-numerical-i-d/to-short.html","searchKeys":["toShort","open fun toShort(): Short","love.forte.simbot.NumericalID.toShort"]},{"name":"open fun waiting()","description":"love.forte.simbot.ability.Survivable.waiting","location":"simbot-api/love.forte.simbot.ability/-survivable/waiting.html","searchKeys":["waiting","open fun waiting()","love.forte.simbot.ability.Survivable.waiting"]},{"name":"open fun waiting(): T","description":"love.forte.simbot.event.ContinuousSessionReceiver.waiting","location":"simbot-api/love.forte.simbot.event/-continuous-session-receiver/waiting.html","searchKeys":["waiting","open fun waiting(): T","love.forte.simbot.event.ContinuousSessionReceiver.waiting"]},{"name":"open fun waiting(timeout: Long, timeUnit: TimeUnit): T","description":"love.forte.simbot.event.ContinuousSessionReceiver.waiting","location":"simbot-api/love.forte.simbot.event/-continuous-session-receiver/waiting.html","searchKeys":["waiting","open fun waiting(timeout: Long, timeUnit: TimeUnit): T","love.forte.simbot.event.ContinuousSessionReceiver.waiting"]},{"name":"open operator override fun <E : Message.Element<E>> get(key: Message.Key<E>): List<E>","description":"love.forte.simbot.message.EmptyMessages.get","location":"simbot-api/love.forte.simbot.message/-empty-messages/get.html","searchKeys":["get","open operator override fun <E : Message.Element<E>> get(key: Message.Key<E>): List<E>","love.forte.simbot.message.EmptyMessages.get"]},{"name":"open operator override fun <T : Any> contains(attribute: Attribute<T>): Boolean","description":"love.forte.simbot.AttributeMap.Empty.contains","location":"simbot-api/love.forte.simbot/-attribute-map/-empty/contains.html","searchKeys":["contains","open operator override fun <T : Any> contains(attribute: Attribute<T>): Boolean","love.forte.simbot.AttributeMap.Empty.contains"]},{"name":"open operator override fun <T : Any> contains(attribute: Attribute<T>): Boolean","description":"love.forte.simbot.AttributeMutableMap.contains","location":"simbot-api/love.forte.simbot/-attribute-mutable-map/contains.html","searchKeys":["contains","open operator override fun <T : Any> contains(attribute: Attribute<T>): Boolean","love.forte.simbot.AttributeMutableMap.contains"]},{"name":"open operator override fun <T : Any> get(attribute: Attribute<T>): T?","description":"love.forte.simbot.AttributeMap.Empty.get","location":"simbot-api/love.forte.simbot/-attribute-map/-empty/get.html","searchKeys":["get","open operator override fun <T : Any> get(attribute: Attribute<T>): T?","love.forte.simbot.AttributeMap.Empty.get"]},{"name":"open operator override fun <T : Any> get(attribute: Attribute<T>): T?","description":"love.forte.simbot.AttributeMutableMap.get","location":"simbot-api/love.forte.simbot/-attribute-mutable-map/get.html","searchKeys":["get","open operator override fun <T : Any> get(attribute: Attribute<T>): T?","love.forte.simbot.AttributeMutableMap.get"]},{"name":"open operator override fun EventProcessingContext.invoke(event: Event): Boolean","description":"love.forte.simbot.event.BlockingContinuousSessionEventMatcher.AlwaysTrue.invoke","location":"simbot-api/love.forte.simbot.event/-blocking-continuous-session-event-matcher/-always-true/invoke.html","searchKeys":["invoke","open operator override fun EventProcessingContext.invoke(event: Event): Boolean","love.forte.simbot.event.BlockingContinuousSessionEventMatcher.AlwaysTrue.invoke"]},{"name":"open operator override fun compareTo(other: ID): Int","description":"love.forte.simbot.CharSequenceID.compareTo","location":"simbot-api/love.forte.simbot/-char-sequence-i-d/compare-to.html","searchKeys":["compareTo","open operator override fun compareTo(other: ID): Int","love.forte.simbot.CharSequenceID.compareTo"]},{"name":"open operator override fun compareTo(other: ID): Int","description":"love.forte.simbot.NumericalID.compareTo","location":"simbot-api/love.forte.simbot/-numerical-i-d/compare-to.html","searchKeys":["compareTo","open operator override fun compareTo(other: ID): Int","love.forte.simbot.NumericalID.compareTo"]},{"name":"open operator override fun compareTo(other: Timestamp): Int","description":"love.forte.simbot.InstantTimestamp.compareTo","location":"simbot-api/love.forte.simbot/-instant-timestamp/compare-to.html","searchKeys":["compareTo","open operator override fun compareTo(other: Timestamp): Int","love.forte.simbot.InstantTimestamp.compareTo"]},{"name":"open operator override fun compareTo(other: Timestamp): Int","description":"love.forte.simbot.Timestamp.NotSupport.compareTo","location":"simbot-api/love.forte.simbot/-timestamp/-not-support/compare-to.html","searchKeys":["compareTo","open operator override fun compareTo(other: Timestamp): Int","love.forte.simbot.Timestamp.NotSupport.compareTo"]},{"name":"open operator override fun contains(element: BotManager<*>): Boolean","description":"love.forte.simbot.bot.OriginBotManager.contains","location":"simbot-api/love.forte.simbot.bot/-origin-bot-manager/contains.html","searchKeys":["contains","open operator override fun contains(element: BotManager<*>): Boolean","love.forte.simbot.bot.OriginBotManager.contains"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"love.forte.simbot.Attribute.equals","location":"simbot-api/love.forte.simbot/-attribute/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","love.forte.simbot.Attribute.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"love.forte.simbot.InstantTimestamp.equals","location":"simbot-api/love.forte.simbot/-instant-timestamp/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","love.forte.simbot.InstantTimestamp.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"love.forte.simbot.event.BaseEventKey.equals","location":"simbot-api/love.forte.simbot.event/-base-event-key/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","love.forte.simbot.event.BaseEventKey.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"love.forte.simbot.event.EventListenerRegistrationDescription.equals","location":"simbot-api/love.forte.simbot.event/-event-listener-registration-description/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","love.forte.simbot.event.EventListenerRegistrationDescription.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"love.forte.simbot.event.SimpleEventResult.equals","location":"simbot-api/love.forte.simbot.event/-simple-event-result/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","love.forte.simbot.event.SimpleEventResult.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"love.forte.simbot.message.At.equals","location":"simbot-api/love.forte.simbot.message/-at/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","love.forte.simbot.message.At.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"love.forte.simbot.message.AtAll.equals","location":"simbot-api/love.forte.simbot.message/-at-all/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","love.forte.simbot.message.AtAll.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"love.forte.simbot.message.Text.equals","location":"simbot-api/love.forte.simbot.message/-text/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","love.forte.simbot.message.Text.equals"]},{"name":"open operator override fun get(index: Int): Message.Element<*>","description":"love.forte.simbot.message.EmptyMessages.get","location":"simbot-api/love.forte.simbot.message/-empty-messages/get.html","searchKeys":["get","open operator override fun get(index: Int): Message.Element<*>","love.forte.simbot.message.EmptyMessages.get"]},{"name":"open operator override fun get(key: K): V?","description":"love.forte.simbot.utils.WeakMap.get","location":"simbot-api/love.forte.simbot.utils/-weak-map/get.html","searchKeys":["get","open operator override fun get(key: K): V?","love.forte.simbot.utils.WeakMap.get"]},{"name":"open operator override fun hasNext(): Boolean","description":"love.forte.simbot.utils.CyclicIterator.hasNext","location":"simbot-api/love.forte.simbot.utils/-cyclic-iterator/has-next.html","searchKeys":["hasNext","open operator override fun hasNext(): Boolean","love.forte.simbot.utils.CyclicIterator.hasNext"]},{"name":"open operator override fun iterator(): Iterator<BotManager<*>>","description":"love.forte.simbot.bot.OriginBotManager.iterator","location":"simbot-api/love.forte.simbot.bot/-origin-bot-manager/iterator.html","searchKeys":["iterator","open operator override fun iterator(): Iterator<BotManager<*>>","love.forte.simbot.bot.OriginBotManager.iterator"]},{"name":"open operator override fun plus(element: Message.Element<*>): Messages","description":"love.forte.simbot.message.EmptyMessages.plus","location":"simbot-api/love.forte.simbot.message/-empty-messages/plus.html","searchKeys":["plus","open operator override fun plus(element: Message.Element<*>): Messages","love.forte.simbot.message.EmptyMessages.plus"]},{"name":"open operator override fun plus(messages: Iterable<Message.Element<*>>): Messages","description":"love.forte.simbot.message.EmptyMessages.plus","location":"simbot-api/love.forte.simbot.message/-empty-messages/plus.html","searchKeys":["plus","open operator override fun plus(messages: Iterable<Message.Element<*>>): Messages","love.forte.simbot.message.EmptyMessages.plus"]},{"name":"open override fun <C : MutableCollection<in T>> collectTo(collector: C): C","description":"love.forte.simbot.utils.item.SingleValueItems.collectTo","location":"simbot-api/love.forte.simbot.utils.item/-single-value-items/collect-to.html","searchKeys":["collectTo","open override fun <C : MutableCollection<in T>> collectTo(collector: C): C","love.forte.simbot.utils.item.SingleValueItems.collectTo"]},{"name":"open override fun <C : MutableCollection<in T>> collectTo(collector: C): C","description":"love.forte.simbot.utils.item.StreamItems.collectTo","location":"simbot-api/love.forte.simbot.utils.item/-stream-items/collect-to.html","searchKeys":["collectTo","open override fun <C : MutableCollection<in T>> collectTo(collector: C): C","love.forte.simbot.utils.item.StreamItems.collectTo"]},{"name":"open override fun <C : MutableCollection<in T>> collectToAsync(collector: C): CompletableFuture<out C>","description":"love.forte.simbot.utils.item.FlowItems.collectToAsync","location":"simbot-api/love.forte.simbot.utils.item/-flow-items/collect-to-async.html","searchKeys":["collectToAsync","open override fun <C : MutableCollection<in T>> collectToAsync(collector: C): CompletableFuture<out C>","love.forte.simbot.utils.item.FlowItems.collectToAsync"]},{"name":"open override fun <C : MutableCollection<in T>> collectToAsync(collector: C): CompletableFuture<out C>","description":"love.forte.simbot.utils.item.SingleValueItems.collectToAsync","location":"simbot-api/love.forte.simbot.utils.item/-single-value-items/collect-to-async.html","searchKeys":["collectToAsync","open override fun <C : MutableCollection<in T>> collectToAsync(collector: C): CompletableFuture<out C>","love.forte.simbot.utils.item.SingleValueItems.collectToAsync"]},{"name":"open override fun <E : Message.Element<E>> getFirst(key: Message.Key<E>): E","description":"love.forte.simbot.message.EmptyMessages.getFirst","location":"simbot-api/love.forte.simbot.message/-empty-messages/get-first.html","searchKeys":["getFirst","open override fun <E : Message.Element<E>> getFirst(key: Message.Key<E>): E","love.forte.simbot.message.EmptyMessages.getFirst"]},{"name":"open override fun <E : Message.Element<E>> getFirstOrNull(key: Message.Key<E>): E?","description":"love.forte.simbot.message.EmptyMessages.getFirstOrNull","location":"simbot-api/love.forte.simbot.message/-empty-messages/get-first-or-null.html","searchKeys":["getFirstOrNull","open override fun <E : Message.Element<E>> getFirstOrNull(key: Message.Key<E>): E?","love.forte.simbot.message.EmptyMessages.getFirstOrNull"]},{"name":"open override fun <T : Any> computeIfAbsent(attribute: Attribute<T>, mappingFunction: (Attribute<T>) -> T): T","description":"love.forte.simbot.AttributeMutableMap.computeIfAbsent","location":"simbot-api/love.forte.simbot/-attribute-mutable-map/compute-if-absent.html","searchKeys":["computeIfAbsent","open override fun <T : Any> computeIfAbsent(attribute: Attribute<T>, mappingFunction: (Attribute<T>) -> T): T","love.forte.simbot.AttributeMutableMap.computeIfAbsent"]},{"name":"open override fun <T : Any> computeIfPresent(attribute: Attribute<T>, remappingFunction: (Attribute<T>, T) -> T?): T?","description":"love.forte.simbot.AttributeMutableMap.computeIfPresent","location":"simbot-api/love.forte.simbot/-attribute-mutable-map/compute-if-present.html","searchKeys":["computeIfPresent","open override fun <T : Any> computeIfPresent(attribute: Attribute<T>, remappingFunction: (Attribute<T>, T) -> T?): T?","love.forte.simbot.AttributeMutableMap.computeIfPresent"]},{"name":"open override fun <T : Any> getAttribute(attribute: Attribute<T>): T?","description":"love.forte.simbot.AttributeMap.getAttribute","location":"simbot-api/love.forte.simbot/-attribute-map/get-attribute.html","searchKeys":["getAttribute","open override fun <T : Any> getAttribute(attribute: Attribute<T>): T?","love.forte.simbot.AttributeMap.getAttribute"]},{"name":"open override fun <T : Any> merge(attribute: Attribute<T>, value: T, remapping: (T, T) -> T): T","description":"love.forte.simbot.AttributeMutableMap.merge","location":"simbot-api/love.forte.simbot/-attribute-mutable-map/merge.html","searchKeys":["merge","open override fun <T : Any> merge(attribute: Attribute<T>, value: T, remapping: (T, T) -> T): T","love.forte.simbot.AttributeMutableMap.merge"]},{"name":"open override fun <T : Any> put(attribute: Attribute<T>, value: T): T?","description":"love.forte.simbot.AttributeMutableMap.put","location":"simbot-api/love.forte.simbot/-attribute-mutable-map/put.html","searchKeys":["put","open override fun <T : Any> put(attribute: Attribute<T>, value: T): T?","love.forte.simbot.AttributeMutableMap.put"]},{"name":"open override fun <T : Any> remove(attribute: Attribute<T>): T?","description":"love.forte.simbot.AttributeMutableMap.remove","location":"simbot-api/love.forte.simbot/-attribute-mutable-map/remove.html","searchKeys":["remove","open override fun <T : Any> remove(attribute: Attribute<T>): T?","love.forte.simbot.AttributeMutableMap.remove"]},{"name":"open override fun <T> decode(decoder: BinaryFormat, value: ByteArray, deserializer: DeserializationStrategy<T>): T","description":"love.forte.simbot.bot.StandardBinaryFormatBotVerifyInfoDecoder.decode","location":"simbot-api/love.forte.simbot.bot/-standard-binary-format-bot-verify-info-decoder/decode.html","searchKeys":["decode","open override fun <T> decode(decoder: BinaryFormat, value: ByteArray, deserializer: DeserializationStrategy<T>): T","love.forte.simbot.bot.StandardBinaryFormatBotVerifyInfoDecoder.decode"]},{"name":"open override fun <T> decode(decoder: Properties, value: Map<String, String>, deserializer: DeserializationStrategy<T>): T","description":"love.forte.simbot.bot.PropertiesBotVerifyInfoDecoder.decode","location":"simbot-api/love.forte.simbot.bot/-properties-bot-verify-info-decoder/decode.html","searchKeys":["decode","open override fun <T> decode(decoder: Properties, value: Map<String, String>, deserializer: DeserializationStrategy<T>): T","love.forte.simbot.bot.PropertiesBotVerifyInfoDecoder.decode"]},{"name":"open override fun <T> decode(decoder: StringFormat, value: String, deserializer: DeserializationStrategy<T>): T","description":"love.forte.simbot.bot.StandardStringFormatBotVerifyInfoDecoder.decode","location":"simbot-api/love.forte.simbot.bot/-standard-string-format-bot-verify-info-decoder/decode.html","searchKeys":["decode","open override fun <T> decode(decoder: StringFormat, value: String, deserializer: DeserializationStrategy<T>): T","love.forte.simbot.bot.StandardStringFormatBotVerifyInfoDecoder.decode"]},{"name":"open override fun <T> decode(deserializer: DeserializationStrategy<T>): T","description":"love.forte.simbot.bot.ByteArrayBotVerifyInfo.decode","location":"simbot-api/love.forte.simbot.bot/-byte-array-bot-verify-info/decode.html","searchKeys":["decode","open override fun <T> decode(deserializer: DeserializationStrategy<T>): T","love.forte.simbot.bot.ByteArrayBotVerifyInfo.decode"]},{"name":"open override fun <T> decode(deserializer: DeserializationStrategy<T>): T","description":"love.forte.simbot.bot.DecoderBotVerifyInfo.decode","location":"simbot-api/love.forte.simbot.bot/-decoder-bot-verify-info/decode.html","searchKeys":["decode","open override fun <T> decode(deserializer: DeserializationStrategy<T>): T","love.forte.simbot.bot.DecoderBotVerifyInfo.decode"]},{"name":"open override fun <T> decode(inputStream: InputStream, deserializer: DeserializationStrategy<T>): T","description":"love.forte.simbot.bot.StandardSerialFormatBotVerifyInfoDecoder.decode","location":"simbot-api/love.forte.simbot.bot/-standard-serial-format-bot-verify-info-decoder/decode.html","searchKeys":["decode","open override fun <T> decode(inputStream: InputStream, deserializer: DeserializationStrategy<T>): T","love.forte.simbot.bot.StandardSerialFormatBotVerifyInfoDecoder.decode"]},{"name":"open override fun <T> decode(inputStream: InputStream, deserializer: DeserializationStrategy<T>): T","description":"love.forte.simbot.resources.BinaryFormatDeserializableResourceDecoder.decode","location":"simbot-api/love.forte.simbot.resources/-binary-format-deserializable-resource-decoder/decode.html","searchKeys":["decode","open override fun <T> decode(inputStream: InputStream, deserializer: DeserializationStrategy<T>): T","love.forte.simbot.resources.BinaryFormatDeserializableResourceDecoder.decode"]},{"name":"open override fun <T> decode(inputStream: InputStream, deserializer: DeserializationStrategy<T>): T","description":"love.forte.simbot.resources.StringFormatDeserializableResourceDecoder.decode","location":"simbot-api/love.forte.simbot.resources/-string-format-deserializable-resource-decoder/decode.html","searchKeys":["decode","open override fun <T> decode(inputStream: InputStream, deserializer: DeserializationStrategy<T>): T","love.forte.simbot.resources.StringFormatDeserializableResourceDecoder.decode"]},{"name":"open override fun asFlow(): Flow<T>","description":"love.forte.simbot.utils.item.CollectionItems.asFlow","location":"simbot-api/love.forte.simbot.utils.item/-collection-items/as-flow.html","searchKeys":["asFlow","open override fun asFlow(): Flow<T>","love.forte.simbot.utils.item.CollectionItems.asFlow"]},{"name":"open override fun asFlow(): Flow<T>","description":"love.forte.simbot.utils.item.FlowItems.asFlow","location":"simbot-api/love.forte.simbot.utils.item/-flow-items/as-flow.html","searchKeys":["asFlow","open override fun asFlow(): Flow<T>","love.forte.simbot.utils.item.FlowItems.asFlow"]},{"name":"open override fun asFlow(): Flow<T>","description":"love.forte.simbot.utils.item.SequenceItems.asFlow","location":"simbot-api/love.forte.simbot.utils.item/-sequence-items/as-flow.html","searchKeys":["asFlow","open override fun asFlow(): Flow<T>","love.forte.simbot.utils.item.SequenceItems.asFlow"]},{"name":"open override fun asFlow(): Flow<T>","description":"love.forte.simbot.utils.item.SimpleChannelIteratorItems.asFlow","location":"simbot-api/love.forte.simbot.utils.item/-simple-channel-iterator-items/as-flow.html","searchKeys":["asFlow","open override fun asFlow(): Flow<T>","love.forte.simbot.utils.item.SimpleChannelIteratorItems.asFlow"]},{"name":"open override fun asFlow(): Flow<T>","description":"love.forte.simbot.utils.item.SimpleIteratorItems.asFlow","location":"simbot-api/love.forte.simbot.utils.item/-simple-iterator-items/as-flow.html","searchKeys":["asFlow","open override fun asFlow(): Flow<T>","love.forte.simbot.utils.item.SimpleIteratorItems.asFlow"]},{"name":"open override fun asFlow(): Flow<T>","description":"love.forte.simbot.utils.item.SingleValueItems.asFlow","location":"simbot-api/love.forte.simbot.utils.item/-single-value-items/as-flow.html","searchKeys":["asFlow","open override fun asFlow(): Flow<T>","love.forte.simbot.utils.item.SingleValueItems.asFlow"]},{"name":"open override fun asFlow(): Flow<T>","description":"love.forte.simbot.utils.item.StreamItems.asFlow","location":"simbot-api/love.forte.simbot.utils.item/-stream-items/as-flow.html","searchKeys":["asFlow","open override fun asFlow(): Flow<T>","love.forte.simbot.utils.item.StreamItems.asFlow"]},{"name":"open override fun asFlow(): Flow<T>","description":"love.forte.simbot.utils.item.TransformItems.asFlow","location":"simbot-api/love.forte.simbot.utils.item/-transform-items/as-flow.html","searchKeys":["asFlow","open override fun asFlow(): Flow<T>","love.forte.simbot.utils.item.TransformItems.asFlow"]},{"name":"open override fun asSequence(): Sequence<T>","description":"love.forte.simbot.utils.item.CollectionItems.asSequence","location":"simbot-api/love.forte.simbot.utils.item/-collection-items/as-sequence.html","searchKeys":["asSequence","open override fun asSequence(): Sequence<T>","love.forte.simbot.utils.item.CollectionItems.asSequence"]},{"name":"open override fun asSequence(): Sequence<T>","description":"love.forte.simbot.utils.item.FlowItems.asSequence","location":"simbot-api/love.forte.simbot.utils.item/-flow-items/as-sequence.html","searchKeys":["asSequence","open override fun asSequence(): Sequence<T>","love.forte.simbot.utils.item.FlowItems.asSequence"]},{"name":"open override fun asSequence(): Sequence<T>","description":"love.forte.simbot.utils.item.SequenceItems.asSequence","location":"simbot-api/love.forte.simbot.utils.item/-sequence-items/as-sequence.html","searchKeys":["asSequence","open override fun asSequence(): Sequence<T>","love.forte.simbot.utils.item.SequenceItems.asSequence"]},{"name":"open override fun asSequence(): Sequence<T>","description":"love.forte.simbot.utils.item.SimpleChannelIteratorItems.asSequence","location":"simbot-api/love.forte.simbot.utils.item/-simple-channel-iterator-items/as-sequence.html","searchKeys":["asSequence","open override fun asSequence(): Sequence<T>","love.forte.simbot.utils.item.SimpleChannelIteratorItems.asSequence"]},{"name":"open override fun asSequence(): Sequence<T>","description":"love.forte.simbot.utils.item.SimpleIteratorItems.asSequence","location":"simbot-api/love.forte.simbot.utils.item/-simple-iterator-items/as-sequence.html","searchKeys":["asSequence","open override fun asSequence(): Sequence<T>","love.forte.simbot.utils.item.SimpleIteratorItems.asSequence"]},{"name":"open override fun asSequence(): Sequence<T>","description":"love.forte.simbot.utils.item.SingleValueItems.asSequence","location":"simbot-api/love.forte.simbot.utils.item/-single-value-items/as-sequence.html","searchKeys":["asSequence","open override fun asSequence(): Sequence<T>","love.forte.simbot.utils.item.SingleValueItems.asSequence"]},{"name":"open override fun asSequence(): Sequence<T>","description":"love.forte.simbot.utils.item.StreamItems.asSequence","location":"simbot-api/love.forte.simbot.utils.item/-stream-items/as-sequence.html","searchKeys":["asSequence","open override fun asSequence(): Sequence<T>","love.forte.simbot.utils.item.StreamItems.asSequence"]},{"name":"open override fun asSequence(): Sequence<T>","description":"love.forte.simbot.utils.item.TransformItems.asSequence","location":"simbot-api/love.forte.simbot.utils.item/-transform-items/as-sequence.html","searchKeys":["asSequence","open override fun asSequence(): Sequence<T>","love.forte.simbot.utils.item.TransformItems.asSequence"]},{"name":"open override fun asStream(): Stream<out T>","description":"love.forte.simbot.utils.item.CollectionItems.asStream","location":"simbot-api/love.forte.simbot.utils.item/-collection-items/as-stream.html","searchKeys":["asStream","open override fun asStream(): Stream<out T>","love.forte.simbot.utils.item.CollectionItems.asStream"]},{"name":"open override fun asStream(): Stream<out T>","description":"love.forte.simbot.utils.item.FlowItems.asStream","location":"simbot-api/love.forte.simbot.utils.item/-flow-items/as-stream.html","searchKeys":["asStream","open override fun asStream(): Stream<out T>","love.forte.simbot.utils.item.FlowItems.asStream"]},{"name":"open override fun asStream(): Stream<out T>","description":"love.forte.simbot.utils.item.SequenceItems.asStream","location":"simbot-api/love.forte.simbot.utils.item/-sequence-items/as-stream.html","searchKeys":["asStream","open override fun asStream(): Stream<out T>","love.forte.simbot.utils.item.SequenceItems.asStream"]},{"name":"open override fun asStream(): Stream<out T>","description":"love.forte.simbot.utils.item.SimpleChannelIteratorItems.asStream","location":"simbot-api/love.forte.simbot.utils.item/-simple-channel-iterator-items/as-stream.html","searchKeys":["asStream","open override fun asStream(): Stream<out T>","love.forte.simbot.utils.item.SimpleChannelIteratorItems.asStream"]},{"name":"open override fun asStream(): Stream<out T>","description":"love.forte.simbot.utils.item.SimpleIteratorItems.asStream","location":"simbot-api/love.forte.simbot.utils.item/-simple-iterator-items/as-stream.html","searchKeys":["asStream","open override fun asStream(): Stream<out T>","love.forte.simbot.utils.item.SimpleIteratorItems.asStream"]},{"name":"open override fun asStream(): Stream<out T>","description":"love.forte.simbot.utils.item.SingleValueItems.asStream","location":"simbot-api/love.forte.simbot.utils.item/-single-value-items/as-stream.html","searchKeys":["asStream","open override fun asStream(): Stream<out T>","love.forte.simbot.utils.item.SingleValueItems.asStream"]},{"name":"open override fun asStream(): Stream<out T>","description":"love.forte.simbot.utils.item.StreamItems.asStream","location":"simbot-api/love.forte.simbot.utils.item/-stream-items/as-stream.html","searchKeys":["asStream","open override fun asStream(): Stream<out T>","love.forte.simbot.utils.item.StreamItems.asStream"]},{"name":"open override fun asStream(): Stream<out T>","description":"love.forte.simbot.utils.item.TransformItems.asStream","location":"simbot-api/love.forte.simbot.utils.item/-transform-items/as-stream.html","searchKeys":["asStream","open override fun asStream(): Stream<out T>","love.forte.simbot.utils.item.TransformItems.asStream"]},{"name":"open override fun batch(size: Int): I","description":"love.forte.simbot.utils.item.BaseItems.batch","location":"simbot-api/love.forte.simbot.utils.item/-base-items/batch.html","searchKeys":["batch","open override fun batch(size: Int): I","love.forte.simbot.utils.item.BaseItems.batch"]},{"name":"open override fun batch(size: Int): Items<T>","description":"love.forte.simbot.utils.item.SingleValueItems.batch","location":"simbot-api/love.forte.simbot.utils.item/-single-value-items/batch.html","searchKeys":["batch","open override fun batch(size: Int): Items<T>","love.forte.simbot.utils.item.SingleValueItems.batch"]},{"name":"open override fun batch(size: Int): Items<T>","description":"love.forte.simbot.utils.item.TransformItems.batch","location":"simbot-api/love.forte.simbot.utils.item/-transform-items/batch.html","searchKeys":["batch","open override fun batch(size: Int): Items<T>","love.forte.simbot.utils.item.TransformItems.batch"]},{"name":"open override fun clear()","description":"love.forte.simbot.utils.WeakMap.clear","location":"simbot-api/love.forte.simbot.utils/-weak-map/clear.html","searchKeys":["clear","open override fun clear()","love.forte.simbot.utils.WeakMap.clear"]},{"name":"open override fun close()","description":"love.forte.simbot.bot.ByteArrayBotVerifyInfo.close","location":"simbot-api/love.forte.simbot.bot/-byte-array-bot-verify-info/close.html","searchKeys":["close","open override fun close()","love.forte.simbot.bot.ByteArrayBotVerifyInfo.close"]},{"name":"open override fun close()","description":"love.forte.simbot.resources.ByteArrayResource.close","location":"simbot-api/love.forte.simbot.resources/-byte-array-resource/close.html","searchKeys":["close","open override fun close()","love.forte.simbot.resources.ByteArrayResource.close"]},{"name":"open override fun close()","description":"love.forte.simbot.resources.FileResource.close","location":"simbot-api/love.forte.simbot.resources/-file-resource/close.html","searchKeys":["close","open override fun close()","love.forte.simbot.resources.FileResource.close"]},{"name":"open override fun close()","description":"love.forte.simbot.resources.PathResource.close","location":"simbot-api/love.forte.simbot.resources/-path-resource/close.html","searchKeys":["close","open override fun close()","love.forte.simbot.resources.PathResource.close"]},{"name":"open override fun close()","description":"love.forte.simbot.resources.URLResource.close","location":"simbot-api/love.forte.simbot.resources/-u-r-l-resource/close.html","searchKeys":["close","open override fun close()","love.forte.simbot.resources.URLResource.close"]},{"name":"open override fun collect(collector: Consumer<in T>)","description":"love.forte.simbot.utils.item.SingleValueItems.collect","location":"simbot-api/love.forte.simbot.utils.item/-single-value-items/collect.html","searchKeys":["collect","open override fun collect(collector: Consumer<in T>)","love.forte.simbot.utils.item.SingleValueItems.collect"]},{"name":"open override fun collect(collector: Consumer<in T>)","description":"love.forte.simbot.utils.item.StreamItems.collect","location":"simbot-api/love.forte.simbot.utils.item/-stream-items/collect.html","searchKeys":["collect","open override fun collect(collector: Consumer<in T>)","love.forte.simbot.utils.item.StreamItems.collect"]},{"name":"open override fun collectAsync(collector: Consumer<in T>): CompletableFuture<Unit>","description":"love.forte.simbot.utils.item.FlowItems.collectAsync","location":"simbot-api/love.forte.simbot.utils.item/-flow-items/collect-async.html","searchKeys":["collectAsync","open override fun collectAsync(collector: Consumer<in T>): CompletableFuture<Unit>","love.forte.simbot.utils.item.FlowItems.collectAsync"]},{"name":"open override fun collectAsync(collector: Consumer<in T>): CompletableFuture<Unit>","description":"love.forte.simbot.utils.item.SingleValueItems.collectAsync","location":"simbot-api/love.forte.simbot.utils.item/-single-value-items/collect-async.html","searchKeys":["collectAsync","open override fun collectAsync(collector: Consumer<in T>): CompletableFuture<Unit>","love.forte.simbot.utils.item.SingleValueItems.collectAsync"]},{"name":"open override fun collectToList(): List<T>","description":"love.forte.simbot.utils.item.SingleValueItems.collectToList","location":"simbot-api/love.forte.simbot.utils.item/-single-value-items/collect-to-list.html","searchKeys":["collectToList","open override fun collectToList(): List<T>","love.forte.simbot.utils.item.SingleValueItems.collectToList"]},{"name":"open override fun collectToList(): List<T>","description":"love.forte.simbot.utils.item.StreamItems.collectToList","location":"simbot-api/love.forte.simbot.utils.item/-stream-items/collect-to-list.html","searchKeys":["collectToList","open override fun collectToList(): List<T>","love.forte.simbot.utils.item.StreamItems.collectToList"]},{"name":"open override fun collectToListAsync(): CompletableFuture<out List<T>>","description":"love.forte.simbot.utils.item.SingleValueItems.collectToListAsync","location":"simbot-api/love.forte.simbot.utils.item/-single-value-items/collect-to-list-async.html","searchKeys":["collectToListAsync","open override fun collectToListAsync(): CompletableFuture<out List<T>>","love.forte.simbot.utils.item.SingleValueItems.collectToListAsync"]},{"name":"open override fun collected(collectedContent: Any?): SimpleEventResult","description":"love.forte.simbot.event.SimpleEventResult.collected","location":"simbot-api/love.forte.simbot.event/-simple-event-result/collected.html","searchKeys":["collected","open override fun collected(collectedContent: Any?): SimpleEventResult","love.forte.simbot.event.SimpleEventResult.collected"]},{"name":"open override fun containsAll(elements: Collection<BotManager<*>>): Boolean","description":"love.forte.simbot.bot.OriginBotManager.containsAll","location":"simbot-api/love.forte.simbot.bot/-origin-bot-manager/contains-all.html","searchKeys":["containsAll","open override fun containsAll(elements: Collection<BotManager<*>>): Boolean","love.forte.simbot.bot.OriginBotManager.containsAll"]},{"name":"open override fun containsKey(key: K): Boolean","description":"love.forte.simbot.utils.WeakMap.containsKey","location":"simbot-api/love.forte.simbot.utils/-weak-map/contains-key.html","searchKeys":["containsKey","open override fun containsKey(key: K): Boolean","love.forte.simbot.utils.WeakMap.containsKey"]},{"name":"open override fun containsValue(value: V): Boolean","description":"love.forte.simbot.utils.WeakMap.containsValue","location":"simbot-api/love.forte.simbot.utils/-weak-map/contains-value.html","searchKeys":["containsValue","open override fun containsValue(value: V): Boolean","love.forte.simbot.utils.WeakMap.containsValue"]},{"name":"open override fun create(configurator: JsonBuilder.() -> Unit): JsonBotVerifyInfoDecoder","description":"love.forte.simbot.bot.JsonBotVerifyInfoDecoder.Factory.create","location":"simbot-api/love.forte.simbot.bot/-json-bot-verify-info-decoder/-factory/create.html","searchKeys":["create","open override fun create(configurator: JsonBuilder.() -> Unit): JsonBotVerifyInfoDecoder","love.forte.simbot.bot.JsonBotVerifyInfoDecoder.Factory.create"]},{"name":"open override fun create(configurator: PropertiesBotVerifyInfoDecoder.PropertiesConfiguration.() -> Unit): PropertiesBotVerifyInfoDecoder","description":"love.forte.simbot.bot.PropertiesBotVerifyInfoDecoder.Factory.create","location":"simbot-api/love.forte.simbot.bot/-properties-bot-verify-info-decoder/-factory/create.html","searchKeys":["create","open override fun create(configurator: PropertiesBotVerifyInfoDecoder.PropertiesConfiguration.() -> Unit): PropertiesBotVerifyInfoDecoder","love.forte.simbot.bot.PropertiesBotVerifyInfoDecoder.Factory.create"]},{"name":"open override fun create(configurator: YamlBotVerifyInfoDecoder.YamlBotVerifyInfoDecoderConfiguration.() -> Unit): YamlBotVerifyInfoDecoder","description":"love.forte.simbot.bot.YamlBotVerifyInfoDecoder.Factory.create","location":"simbot-api/love.forte.simbot.bot/-yaml-bot-verify-info-decoder/-factory/create.html","searchKeys":["create","open override fun create(configurator: YamlBotVerifyInfoDecoder.YamlBotVerifyInfoDecoderConfiguration.() -> Unit): YamlBotVerifyInfoDecoder","love.forte.simbot.bot.YamlBotVerifyInfoDecoder.Factory.create"]},{"name":"open override fun decodeComponentId(inputStream: InputStream): String?","description":"love.forte.simbot.bot.PropertiesBotVerifyInfoDecoder.decodeComponentId","location":"simbot-api/love.forte.simbot.bot/-properties-bot-verify-info-decoder/decode-component-id.html","searchKeys":["decodeComponentId","open override fun decodeComponentId(inputStream: InputStream): String?","love.forte.simbot.bot.PropertiesBotVerifyInfoDecoder.decodeComponentId"]},{"name":"open override fun decodeComponentId(inputStream: InputStream): String?","description":"love.forte.simbot.bot.StandardBinaryFormatBotVerifyInfoDecoder.decodeComponentId","location":"simbot-api/love.forte.simbot.bot/-standard-binary-format-bot-verify-info-decoder/decode-component-id.html","searchKeys":["decodeComponentId","open override fun decodeComponentId(inputStream: InputStream): String?","love.forte.simbot.bot.StandardBinaryFormatBotVerifyInfoDecoder.decodeComponentId"]},{"name":"open override fun decodeComponentId(inputStream: InputStream): String?","description":"love.forte.simbot.bot.StandardStringFormatBotVerifyInfoDecoder.decodeComponentId","location":"simbot-api/love.forte.simbot.bot/-standard-string-format-bot-verify-info-decoder/decode-component-id.html","searchKeys":["decodeComponentId","open override fun decodeComponentId(inputStream: InputStream): String?","love.forte.simbot.bot.StandardStringFormatBotVerifyInfoDecoder.decodeComponentId"]},{"name":"open override fun deserialize(decoder: Decoder): CharSequenceID","description":"love.forte.simbot.CharSequenceID.Serializer.deserialize","location":"simbot-api/love.forte.simbot/-char-sequence-i-d/-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(decoder: Decoder): CharSequenceID","love.forte.simbot.CharSequenceID.Serializer.deserialize"]},{"name":"open override fun deserialize(decoder: Decoder): ID","description":"love.forte.simbot.ID.AsCharSequenceIDSerializer.deserialize","location":"simbot-api/love.forte.simbot/-i-d/-as-char-sequence-i-d-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(decoder: Decoder): ID","love.forte.simbot.ID.AsCharSequenceIDSerializer.deserialize"]},{"name":"open override fun deserialize(decoder: Decoder): Resource","description":"love.forte.simbot.resources.Resource.AsStandardSerializer.deserialize","location":"simbot-api/love.forte.simbot.resources/-resource/-as-standard-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(decoder: Decoder): Resource","love.forte.simbot.resources.Resource.AsStandardSerializer.deserialize"]},{"name":"open override fun deserialize(decoder: Decoder): Timestamp","description":"love.forte.simbot.TimestampSerializer.deserialize","location":"simbot-api/love.forte.simbot/-timestamp-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(decoder: Decoder): Timestamp","love.forte.simbot.TimestampSerializer.deserialize"]},{"name":"open override fun hashCode(): Int","description":"love.forte.simbot.Attribute.hashCode","location":"simbot-api/love.forte.simbot/-attribute/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","love.forte.simbot.Attribute.hashCode"]},{"name":"open override fun hashCode(): Int","description":"love.forte.simbot.InstantTimestamp.hashCode","location":"simbot-api/love.forte.simbot/-instant-timestamp/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","love.forte.simbot.InstantTimestamp.hashCode"]},{"name":"open override fun hashCode(): Int","description":"love.forte.simbot.NumericalID.hashCode","location":"simbot-api/love.forte.simbot/-numerical-i-d/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","love.forte.simbot.NumericalID.hashCode"]},{"name":"open override fun hashCode(): Int","description":"love.forte.simbot.event.BaseEventKey.hashCode","location":"simbot-api/love.forte.simbot.event/-base-event-key/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","love.forte.simbot.event.BaseEventKey.hashCode"]},{"name":"open override fun hashCode(): Int","description":"love.forte.simbot.event.EventListenerRegistrationDescription.hashCode","location":"simbot-api/love.forte.simbot.event/-event-listener-registration-description/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","love.forte.simbot.event.EventListenerRegistrationDescription.hashCode"]},{"name":"open override fun hashCode(): Int","description":"love.forte.simbot.event.SimpleEventResult.hashCode","location":"simbot-api/love.forte.simbot.event/-simple-event-result/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","love.forte.simbot.event.SimpleEventResult.hashCode"]},{"name":"open override fun hashCode(): Int","description":"love.forte.simbot.message.At.hashCode","location":"simbot-api/love.forte.simbot.message/-at/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","love.forte.simbot.message.At.hashCode"]},{"name":"open override fun hashCode(): Int","description":"love.forte.simbot.message.Text.hashCode","location":"simbot-api/love.forte.simbot.message/-text/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","love.forte.simbot.message.Text.hashCode"]},{"name":"open override fun inputStream(): InputStream","description":"love.forte.simbot.bot.ByteArrayBotVerifyInfo.inputStream","location":"simbot-api/love.forte.simbot.bot/-byte-array-bot-verify-info/input-stream.html","searchKeys":["inputStream","open override fun inputStream(): InputStream","love.forte.simbot.bot.ByteArrayBotVerifyInfo.inputStream"]},{"name":"open override fun invokeOnCompletion(handler: CompletionHandler)","description":"love.forte.simbot.bot.Bot.invokeOnCompletion","location":"simbot-api/love.forte.simbot.bot/-bot/invoke-on-completion.html","searchKeys":["invokeOnCompletion","open override fun invokeOnCompletion(handler: CompletionHandler)","love.forte.simbot.bot.Bot.invokeOnCompletion"]},{"name":"open override fun isEmpty(): Boolean","description":"love.forte.simbot.bot.OriginBotManager.isEmpty","location":"simbot-api/love.forte.simbot.bot/-origin-bot-manager/is-empty.html","searchKeys":["isEmpty","open override fun isEmpty(): Boolean","love.forte.simbot.bot.OriginBotManager.isEmpty"]},{"name":"open override fun isEmpty(): Boolean","description":"love.forte.simbot.utils.WeakMap.isEmpty","location":"simbot-api/love.forte.simbot.utils/-weak-map/is-empty.html","searchKeys":["isEmpty","open override fun isEmpty(): Boolean","love.forte.simbot.utils.WeakMap.isEmpty"]},{"name":"open override fun isSupport(): Boolean","description":"love.forte.simbot.InstantTimestamp.isSupport","location":"simbot-api/love.forte.simbot/-instant-timestamp/is-support.html","searchKeys":["isSupport","open override fun isSupport(): Boolean","love.forte.simbot.InstantTimestamp.isSupport"]},{"name":"open override fun isSupport(): Boolean","description":"love.forte.simbot.Timestamp.NotSupport.isSupport","location":"simbot-api/love.forte.simbot/-timestamp/-not-support/is-support.html","searchKeys":["isSupport","open override fun isSupport(): Boolean","love.forte.simbot.Timestamp.NotSupport.isSupport"]},{"name":"open override fun limit(count: Int): I","description":"love.forte.simbot.utils.item.BaseItems.limit","location":"simbot-api/love.forte.simbot.utils.item/-base-items/limit.html","searchKeys":["limit","open override fun limit(count: Int): I","love.forte.simbot.utils.item.BaseItems.limit"]},{"name":"open override fun limit(count: Int): Items<T>","description":"love.forte.simbot.utils.item.SingleValueItems.limit","location":"simbot-api/love.forte.simbot.utils.item/-single-value-items/limit.html","searchKeys":["limit","open override fun limit(count: Int): Items<T>","love.forte.simbot.utils.item.SingleValueItems.limit"]},{"name":"open override fun limit(count: Int): Items<T>","description":"love.forte.simbot.utils.item.TransformItems.limit","location":"simbot-api/love.forte.simbot.utils.item/-transform-items/limit.html","searchKeys":["limit","open override fun limit(count: Int): Items<T>","love.forte.simbot.utils.item.TransformItems.limit"]},{"name":"open override fun match(verificationInfoName: String): Boolean","description":"love.forte.simbot.bot.JsonBotVerifyInfoDecoder.Factory.match","location":"simbot-api/love.forte.simbot.bot/-json-bot-verify-info-decoder/-factory/match.html","searchKeys":["match","open override fun match(verificationInfoName: String): Boolean","love.forte.simbot.bot.JsonBotVerifyInfoDecoder.Factory.match"]},{"name":"open override fun match(verificationInfoName: String): Boolean","description":"love.forte.simbot.bot.PropertiesBotVerifyInfoDecoder.Factory.match","location":"simbot-api/love.forte.simbot.bot/-properties-bot-verify-info-decoder/-factory/match.html","searchKeys":["match","open override fun match(verificationInfoName: String): Boolean","love.forte.simbot.bot.PropertiesBotVerifyInfoDecoder.Factory.match"]},{"name":"open override fun match(verificationInfoName: String): Boolean","description":"love.forte.simbot.bot.YamlBotVerifyInfoDecoder.Factory.match","location":"simbot-api/love.forte.simbot.bot/-yaml-bot-verify-info-decoder/-factory/match.html","searchKeys":["match","open override fun match(verificationInfoName: String): Boolean","love.forte.simbot.bot.YamlBotVerifyInfoDecoder.Factory.match"]},{"name":"open override fun offset(count: Int): I","description":"love.forte.simbot.utils.item.BaseItems.offset","location":"simbot-api/love.forte.simbot.utils.item/-base-items/offset.html","searchKeys":["offset","open override fun offset(count: Int): I","love.forte.simbot.utils.item.BaseItems.offset"]},{"name":"open override fun offset(count: Int): Items<T>","description":"love.forte.simbot.utils.item.SingleValueItems.offset","location":"simbot-api/love.forte.simbot.utils.item/-single-value-items/offset.html","searchKeys":["offset","open override fun offset(count: Int): Items<T>","love.forte.simbot.utils.item.SingleValueItems.offset"]},{"name":"open override fun offset(count: Int): Items<T>","description":"love.forte.simbot.utils.item.TransformItems.offset","location":"simbot-api/love.forte.simbot.utils.item/-transform-items/offset.html","searchKeys":["offset","open override fun offset(count: Int): Items<T>","love.forte.simbot.utils.item.TransformItems.offset"]},{"name":"open override fun openStream(): ByteArrayInputStream","description":"love.forte.simbot.resources.ByteArrayResource.openStream","location":"simbot-api/love.forte.simbot.resources/-byte-array-resource/open-stream.html","searchKeys":["openStream","open override fun openStream(): ByteArrayInputStream","love.forte.simbot.resources.ByteArrayResource.openStream"]},{"name":"open override fun openStream(): FileInputStream","description":"love.forte.simbot.resources.FileResource.openStream","location":"simbot-api/love.forte.simbot.resources/-file-resource/open-stream.html","searchKeys":["openStream","open override fun openStream(): FileInputStream","love.forte.simbot.resources.FileResource.openStream"]},{"name":"open override fun openStream(): InputStream","description":"love.forte.simbot.bot.BotVerifyInfo.openStream","location":"simbot-api/love.forte.simbot.bot/-bot-verify-info/open-stream.html","searchKeys":["openStream","open override fun openStream(): InputStream","love.forte.simbot.bot.BotVerifyInfo.openStream"]},{"name":"open override fun openStream(): InputStream","description":"love.forte.simbot.resources.PathResource.openStream","location":"simbot-api/love.forte.simbot.resources/-path-resource/open-stream.html","searchKeys":["openStream","open override fun openStream(): InputStream","love.forte.simbot.resources.PathResource.openStream"]},{"name":"open override fun openStream(): InputStream","description":"love.forte.simbot.resources.URLResource.openStream","location":"simbot-api/love.forte.simbot.resources/-u-r-l-resource/open-stream.html","searchKeys":["openStream","open override fun openStream(): InputStream","love.forte.simbot.resources.URLResource.openStream"]},{"name":"open override fun put(key: K, value: V): V?","description":"love.forte.simbot.utils.WeakMap.put","location":"simbot-api/love.forte.simbot.utils/-weak-map/put.html","searchKeys":["put","open override fun put(key: K, value: V): V?","love.forte.simbot.utils.WeakMap.put"]},{"name":"open override fun putAll(from: Map<out K, V>)","description":"love.forte.simbot.utils.WeakMap.putAll","location":"simbot-api/love.forte.simbot.utils/-weak-map/put-all.html","searchKeys":["putAll","open override fun putAll(from: Map<out K, V>)","love.forte.simbot.utils.WeakMap.putAll"]},{"name":"open override fun remove(key: K): V?","description":"love.forte.simbot.utils.WeakMap.remove","location":"simbot-api/love.forte.simbot.utils/-weak-map/remove.html","searchKeys":["remove","open override fun remove(key: K): V?","love.forte.simbot.utils.WeakMap.remove"]},{"name":"open override fun safeCast(value: Any): At?","description":"love.forte.simbot.message.At.Key.safeCast","location":"simbot-api/love.forte.simbot.message/-at/-key/safe-cast.html","searchKeys":["safeCast","open override fun safeCast(value: Any): At?","love.forte.simbot.message.At.Key.safeCast"]},{"name":"open override fun safeCast(value: Any): AtAll?","description":"love.forte.simbot.message.AtAll.safeCast","location":"simbot-api/love.forte.simbot.message/-at-all/safe-cast.html","searchKeys":["safeCast","open override fun safeCast(value: Any): AtAll?","love.forte.simbot.message.AtAll.safeCast"]},{"name":"open override fun safeCast(value: Any): ChangeEvent?","description":"love.forte.simbot.event.ChangeEvent.Key.safeCast","location":"simbot-api/love.forte.simbot.event/-change-event/-key/safe-cast.html","searchKeys":["safeCast","open override fun safeCast(value: Any): ChangeEvent?","love.forte.simbot.event.ChangeEvent.Key.safeCast"]},{"name":"open override fun safeCast(value: Any): ChangedEvent?","description":"love.forte.simbot.event.ChangedEvent.Key.safeCast","location":"simbot-api/love.forte.simbot.event/-changed-event/-key/safe-cast.html","searchKeys":["safeCast","open override fun safeCast(value: Any): ChangedEvent?","love.forte.simbot.event.ChangedEvent.Key.safeCast"]},{"name":"open override fun safeCast(value: Any): ChannelEvent?","description":"love.forte.simbot.event.ChannelEvent.Key.safeCast","location":"simbot-api/love.forte.simbot.event/-channel-event/-key/safe-cast.html","searchKeys":["safeCast","open override fun safeCast(value: Any): ChannelEvent?","love.forte.simbot.event.ChannelEvent.Key.safeCast"]},{"name":"open override fun safeCast(value: Any): ChannelMessageEvent?","description":"love.forte.simbot.event.ChannelMessageEvent.Key.safeCast","location":"simbot-api/love.forte.simbot.event/-channel-message-event/-key/safe-cast.html","searchKeys":["safeCast","open override fun safeCast(value: Any): ChannelMessageEvent?","love.forte.simbot.event.ChannelMessageEvent.Key.safeCast"]},{"name":"open override fun safeCast(value: Any): ChannelRequestEvent?","description":"love.forte.simbot.event.ChannelRequestEvent.Key.safeCast","location":"simbot-api/love.forte.simbot.event/-channel-request-event/-key/safe-cast.html","searchKeys":["safeCast","open override fun safeCast(value: Any): ChannelRequestEvent?","love.forte.simbot.event.ChannelRequestEvent.Key.safeCast"]},{"name":"open override fun safeCast(value: Any): ChatRoomMessageEvent?","description":"love.forte.simbot.event.ChatRoomMessageEvent.Key.safeCast","location":"simbot-api/love.forte.simbot.event/-chat-room-message-event/-key/safe-cast.html","searchKeys":["safeCast","open override fun safeCast(value: Any): ChatRoomMessageEvent?","love.forte.simbot.event.ChatRoomMessageEvent.Key.safeCast"]},{"name":"open override fun safeCast(value: Any): ContactMessageEvent?","description":"love.forte.simbot.event.ContactMessageEvent.Key.safeCast","location":"simbot-api/love.forte.simbot.event/-contact-message-event/-key/safe-cast.html","searchKeys":["safeCast","open override fun safeCast(value: Any): ContactMessageEvent?","love.forte.simbot.event.ContactMessageEvent.Key.safeCast"]},{"name":"open override fun safeCast(value: Any): DecreaseEvent?","description":"love.forte.simbot.event.DecreaseEvent.Key.safeCast","location":"simbot-api/love.forte.simbot.event/-decrease-event/-key/safe-cast.html","searchKeys":["safeCast","open override fun safeCast(value: Any): DecreaseEvent?","love.forte.simbot.event.DecreaseEvent.Key.safeCast"]},{"name":"open override fun safeCast(value: Any): Emoji?","description":"love.forte.simbot.message.Emoji.Key.safeCast","location":"simbot-api/love.forte.simbot.message/-emoji/-key/safe-cast.html","searchKeys":["safeCast","open override fun safeCast(value: Any): Emoji?","love.forte.simbot.message.Emoji.Key.safeCast"]},{"name":"open override fun safeCast(value: Any): EndPointEvent?","description":"love.forte.simbot.event.EndPointEvent.Key.safeCast","location":"simbot-api/love.forte.simbot.event/-end-point-event/-key/safe-cast.html","searchKeys":["safeCast","open override fun safeCast(value: Any): EndPointEvent?","love.forte.simbot.event.EndPointEvent.Key.safeCast"]},{"name":"open override fun safeCast(value: Any): Event?","description":"love.forte.simbot.event.Event.Root.safeCast","location":"simbot-api/love.forte.simbot.event/-event/-root/safe-cast.html","searchKeys":["safeCast","open override fun safeCast(value: Any): Event?","love.forte.simbot.event.Event.Root.safeCast"]},{"name":"open override fun safeCast(value: Any): Face?","description":"love.forte.simbot.message.Face.Key.safeCast","location":"simbot-api/love.forte.simbot.message/-face/-key/safe-cast.html","searchKeys":["safeCast","open override fun safeCast(value: Any): Face?","love.forte.simbot.message.Face.Key.safeCast"]},{"name":"open override fun safeCast(value: Any): FriendAddRequestEvent?","description":"love.forte.simbot.event.FriendAddRequestEvent.Key.safeCast","location":"simbot-api/love.forte.simbot.event/-friend-add-request-event/-key/safe-cast.html","searchKeys":["safeCast","open override fun safeCast(value: Any): FriendAddRequestEvent?","love.forte.simbot.event.FriendAddRequestEvent.Key.safeCast"]},{"name":"open override fun safeCast(value: Any): FriendChangedEvent?","description":"love.forte.simbot.event.FriendChangedEvent.Key.safeCast","location":"simbot-api/love.forte.simbot.event/-friend-changed-event/-key/safe-cast.html","searchKeys":["safeCast","open override fun safeCast(value: Any): FriendChangedEvent?","love.forte.simbot.event.FriendChangedEvent.Key.safeCast"]},{"name":"open override fun safeCast(value: Any): FriendDecreaseEvent?","description":"love.forte.simbot.event.FriendDecreaseEvent.Key.safeCast","location":"simbot-api/love.forte.simbot.event/-friend-decrease-event/-key/safe-cast.html","searchKeys":["safeCast","open override fun safeCast(value: Any): FriendDecreaseEvent?","love.forte.simbot.event.FriendDecreaseEvent.Key.safeCast"]},{"name":"open override fun safeCast(value: Any): FriendEvent?","description":"love.forte.simbot.event.FriendEvent.Key.safeCast","location":"simbot-api/love.forte.simbot.event/-friend-event/-key/safe-cast.html","searchKeys":["safeCast","open override fun safeCast(value: Any): FriendEvent?","love.forte.simbot.event.FriendEvent.Key.safeCast"]},{"name":"open override fun safeCast(value: Any): FriendIncreaseEvent?","description":"love.forte.simbot.event.FriendIncreaseEvent.Key.safeCast","location":"simbot-api/love.forte.simbot.event/-friend-increase-event/-key/safe-cast.html","searchKeys":["safeCast","open override fun safeCast(value: Any): FriendIncreaseEvent?","love.forte.simbot.event.FriendIncreaseEvent.Key.safeCast"]},{"name":"open override fun safeCast(value: Any): FriendMessageEvent?","description":"love.forte.simbot.event.FriendMessageEvent.Key.safeCast","location":"simbot-api/love.forte.simbot.event/-friend-message-event/-key/safe-cast.html","searchKeys":["safeCast","open override fun safeCast(value: Any): FriendMessageEvent?","love.forte.simbot.event.FriendMessageEvent.Key.safeCast"]},{"name":"open override fun safeCast(value: Any): FriendRequestEvent?","description":"love.forte.simbot.event.FriendRequestEvent.Key.safeCast","location":"simbot-api/love.forte.simbot.event/-friend-request-event/-key/safe-cast.html","searchKeys":["safeCast","open override fun safeCast(value: Any): FriendRequestEvent?","love.forte.simbot.event.FriendRequestEvent.Key.safeCast"]},{"name":"open override fun safeCast(value: Any): GroupEvent?","description":"love.forte.simbot.event.GroupEvent.Key.safeCast","location":"simbot-api/love.forte.simbot.event/-group-event/-key/safe-cast.html","searchKeys":["safeCast","open override fun safeCast(value: Any): GroupEvent?","love.forte.simbot.event.GroupEvent.Key.safeCast"]},{"name":"open override fun safeCast(value: Any): GroupJoinRequestEvent?","description":"love.forte.simbot.event.GroupJoinRequestEvent.Key.safeCast","location":"simbot-api/love.forte.simbot.event/-group-join-request-event/-key/safe-cast.html","searchKeys":["safeCast","open override fun safeCast(value: Any): GroupJoinRequestEvent?","love.forte.simbot.event.GroupJoinRequestEvent.Key.safeCast"]},{"name":"open override fun safeCast(value: Any): GroupMemberDecreaseEvent?","description":"love.forte.simbot.event.GroupMemberDecreaseEvent.Key.safeCast","location":"simbot-api/love.forte.simbot.event/-group-member-decrease-event/-key/safe-cast.html","searchKeys":["safeCast","open override fun safeCast(value: Any): GroupMemberDecreaseEvent?","love.forte.simbot.event.GroupMemberDecreaseEvent.Key.safeCast"]},{"name":"open override fun safeCast(value: Any): GroupMemberIncreaseEvent?","description":"love.forte.simbot.event.GroupMemberIncreaseEvent.Key.safeCast","location":"simbot-api/love.forte.simbot.event/-group-member-increase-event/-key/safe-cast.html","searchKeys":["safeCast","open override fun safeCast(value: Any): GroupMemberIncreaseEvent?","love.forte.simbot.event.GroupMemberIncreaseEvent.Key.safeCast"]},{"name":"open override fun safeCast(value: Any): GroupMessageEvent?","description":"love.forte.simbot.event.GroupMessageEvent.Key.safeCast","location":"simbot-api/love.forte.simbot.event/-group-message-event/-key/safe-cast.html","searchKeys":["safeCast","open override fun safeCast(value: Any): GroupMessageEvent?","love.forte.simbot.event.GroupMessageEvent.Key.safeCast"]},{"name":"open override fun safeCast(value: Any): GroupRequestEvent?","description":"love.forte.simbot.event.GroupRequestEvent.Key.safeCast","location":"simbot-api/love.forte.simbot.event/-group-request-event/-key/safe-cast.html","searchKeys":["safeCast","open override fun safeCast(value: Any): GroupRequestEvent?","love.forte.simbot.event.GroupRequestEvent.Key.safeCast"]},{"name":"open override fun safeCast(value: Any): GuildEvent?","description":"love.forte.simbot.event.GuildEvent.Key.safeCast","location":"simbot-api/love.forte.simbot.event/-guild-event/-key/safe-cast.html","searchKeys":["safeCast","open override fun safeCast(value: Any): GuildEvent?","love.forte.simbot.event.GuildEvent.Key.safeCast"]},{"name":"open override fun safeCast(value: Any): GuildJoinRequestEvent?","description":"love.forte.simbot.event.GuildJoinRequestEvent.Key.safeCast","location":"simbot-api/love.forte.simbot.event/-guild-join-request-event/-key/safe-cast.html","searchKeys":["safeCast","open override fun safeCast(value: Any): GuildJoinRequestEvent?","love.forte.simbot.event.GuildJoinRequestEvent.Key.safeCast"]},{"name":"open override fun safeCast(value: Any): GuildMemberDecreaseEvent?","description":"love.forte.simbot.event.GuildMemberDecreaseEvent.Key.safeCast","location":"simbot-api/love.forte.simbot.event/-guild-member-decrease-event/-key/safe-cast.html","searchKeys":["safeCast","open override fun safeCast(value: Any): GuildMemberDecreaseEvent?","love.forte.simbot.event.GuildMemberDecreaseEvent.Key.safeCast"]},{"name":"open override fun safeCast(value: Any): GuildMemberIncreaseEvent?","description":"love.forte.simbot.event.GuildMemberIncreaseEvent.Key.safeCast","location":"simbot-api/love.forte.simbot.event/-guild-member-increase-event/-key/safe-cast.html","searchKeys":["safeCast","open override fun safeCast(value: Any): GuildMemberIncreaseEvent?","love.forte.simbot.event.GuildMemberIncreaseEvent.Key.safeCast"]},{"name":"open override fun safeCast(value: Any): GuildRequestEvent?","description":"love.forte.simbot.event.GuildRequestEvent.Key.safeCast","location":"simbot-api/love.forte.simbot.event/-guild-request-event/-key/safe-cast.html","searchKeys":["safeCast","open override fun safeCast(value: Any): GuildRequestEvent?","love.forte.simbot.event.GuildRequestEvent.Key.safeCast"]},{"name":"open override fun safeCast(value: Any): Image<*>?","description":"love.forte.simbot.message.Image.Key.safeCast","location":"simbot-api/love.forte.simbot.message/-image/-key/safe-cast.html","searchKeys":["safeCast","open override fun safeCast(value: Any): Image<*>?","love.forte.simbot.message.Image.Key.safeCast"]},{"name":"open override fun safeCast(value: Any): IncreaseEvent?","description":"love.forte.simbot.event.IncreaseEvent.Key.safeCast","location":"simbot-api/love.forte.simbot.event/-increase-event/-key/safe-cast.html","searchKeys":["safeCast","open override fun safeCast(value: Any): IncreaseEvent?","love.forte.simbot.event.IncreaseEvent.Key.safeCast"]},{"name":"open override fun safeCast(value: Any): JoinRequestEvent?","description":"love.forte.simbot.event.JoinRequestEvent.Key.safeCast","location":"simbot-api/love.forte.simbot.event/-join-request-event/-key/safe-cast.html","searchKeys":["safeCast","open override fun safeCast(value: Any): JoinRequestEvent?","love.forte.simbot.event.JoinRequestEvent.Key.safeCast"]},{"name":"open override fun safeCast(value: Any): MemberChangedEvent?","description":"love.forte.simbot.event.MemberChangedEvent.Key.safeCast","location":"simbot-api/love.forte.simbot.event/-member-changed-event/-key/safe-cast.html","searchKeys":["safeCast","open override fun safeCast(value: Any): MemberChangedEvent?","love.forte.simbot.event.MemberChangedEvent.Key.safeCast"]},{"name":"open override fun safeCast(value: Any): MemberDecreaseEvent?","description":"love.forte.simbot.event.MemberDecreaseEvent.Key.safeCast","location":"simbot-api/love.forte.simbot.event/-member-decrease-event/-key/safe-cast.html","searchKeys":["safeCast","open override fun safeCast(value: Any): MemberDecreaseEvent?","love.forte.simbot.event.MemberDecreaseEvent.Key.safeCast"]},{"name":"open override fun safeCast(value: Any): MemberEvent?","description":"love.forte.simbot.event.MemberEvent.Key.safeCast","location":"simbot-api/love.forte.simbot.event/-member-event/-key/safe-cast.html","searchKeys":["safeCast","open override fun safeCast(value: Any): MemberEvent?","love.forte.simbot.event.MemberEvent.Key.safeCast"]},{"name":"open override fun safeCast(value: Any): MemberIncreaseEvent?","description":"love.forte.simbot.event.MemberIncreaseEvent.Key.safeCast","location":"simbot-api/love.forte.simbot.event/-member-increase-event/-key/safe-cast.html","searchKeys":["safeCast","open override fun safeCast(value: Any): MemberIncreaseEvent?","love.forte.simbot.event.MemberIncreaseEvent.Key.safeCast"]},{"name":"open override fun safeCast(value: Any): MessageEvent?","description":"love.forte.simbot.event.MessageEvent.Key.safeCast","location":"simbot-api/love.forte.simbot.event/-message-event/-key/safe-cast.html","searchKeys":["safeCast","open override fun safeCast(value: Any): MessageEvent?","love.forte.simbot.event.MessageEvent.Key.safeCast"]},{"name":"open override fun safeCast(value: Any): OrganizationEvent?","description":"love.forte.simbot.event.OrganizationEvent.Key.safeCast","location":"simbot-api/love.forte.simbot.event/-organization-event/-key/safe-cast.html","searchKeys":["safeCast","open override fun safeCast(value: Any): OrganizationEvent?","love.forte.simbot.event.OrganizationEvent.Key.safeCast"]},{"name":"open override fun safeCast(value: Any): PlainText<*>?","description":"love.forte.simbot.message.PlainText.Key.safeCast","location":"simbot-api/love.forte.simbot.message/-plain-text/-key/safe-cast.html","searchKeys":["safeCast","open override fun safeCast(value: Any): PlainText<*>?","love.forte.simbot.message.PlainText.Key.safeCast"]},{"name":"open override fun safeCast(value: Any): RemoteResource<*>?","description":"love.forte.simbot.message.RemoteResource.Key.safeCast","location":"simbot-api/love.forte.simbot.message/-remote-resource/-key/safe-cast.html","searchKeys":["safeCast","open override fun safeCast(value: Any): RemoteResource<*>?","love.forte.simbot.message.RemoteResource.Key.safeCast"]},{"name":"open override fun safeCast(value: Any): RequestEvent?","description":"love.forte.simbot.event.RequestEvent.Key.safeCast","location":"simbot-api/love.forte.simbot.event/-request-event/-key/safe-cast.html","searchKeys":["safeCast","open override fun safeCast(value: Any): RequestEvent?","love.forte.simbot.event.RequestEvent.Key.safeCast"]},{"name":"open override fun safeCast(value: Any): ResourceImage?","description":"love.forte.simbot.message.ResourceImage.Key.safeCast","location":"simbot-api/love.forte.simbot.message/-resource-image/-key/safe-cast.html","searchKeys":["safeCast","open override fun safeCast(value: Any): ResourceImage?","love.forte.simbot.message.ResourceImage.Key.safeCast"]},{"name":"open override fun safeCast(value: Any): StartPointEvent?","description":"love.forte.simbot.event.StartPointEvent.Key.safeCast","location":"simbot-api/love.forte.simbot.event/-start-point-event/-key/safe-cast.html","searchKeys":["safeCast","open override fun safeCast(value: Any): StartPointEvent?","love.forte.simbot.event.StartPointEvent.Key.safeCast"]},{"name":"open override fun safeCast(value: Any): Text?","description":"love.forte.simbot.message.Text.Key.safeCast","location":"simbot-api/love.forte.simbot.message/-text/-key/safe-cast.html","searchKeys":["safeCast","open override fun safeCast(value: Any): Text?","love.forte.simbot.message.Text.Key.safeCast"]},{"name":"open override fun safeCast(value: Any): UserEvent?","description":"love.forte.simbot.event.UserEvent.Key.safeCast","location":"simbot-api/love.forte.simbot.event/-user-event/-key/safe-cast.html","searchKeys":["safeCast","open override fun safeCast(value: Any): UserEvent?","love.forte.simbot.event.UserEvent.Key.safeCast"]},{"name":"open override fun safeCast(value: Any): UserRequestEvent?","description":"love.forte.simbot.event.UserRequestEvent.Key.safeCast","location":"simbot-api/love.forte.simbot.event/-user-request-event/-key/safe-cast.html","searchKeys":["safeCast","open override fun safeCast(value: Any): UserRequestEvent?","love.forte.simbot.event.UserRequestEvent.Key.safeCast"]},{"name":"open override fun serialize(encoder: Encoder, value: CharSequenceID)","description":"love.forte.simbot.CharSequenceID.Serializer.serialize","location":"simbot-api/love.forte.simbot/-char-sequence-i-d/-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(encoder: Encoder, value: CharSequenceID)","love.forte.simbot.CharSequenceID.Serializer.serialize"]},{"name":"open override fun serialize(encoder: Encoder, value: ID)","description":"love.forte.simbot.ID.AsCharSequenceIDSerializer.serialize","location":"simbot-api/love.forte.simbot/-i-d/-as-char-sequence-i-d-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(encoder: Encoder, value: ID)","love.forte.simbot.ID.AsCharSequenceIDSerializer.serialize"]},{"name":"open override fun serialize(encoder: Encoder, value: Resource)","description":"love.forte.simbot.resources.Resource.AsStandardSerializer.serialize","location":"simbot-api/love.forte.simbot.resources/-resource/-as-standard-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(encoder: Encoder, value: Resource)","love.forte.simbot.resources.Resource.AsStandardSerializer.serialize"]},{"name":"open override fun serialize(encoder: Encoder, value: Timestamp)","description":"love.forte.simbot.TimestampSerializer.serialize","location":"simbot-api/love.forte.simbot/-timestamp-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(encoder: Encoder, value: Timestamp)","love.forte.simbot.TimestampSerializer.serialize"]},{"name":"open override fun size(): Int","description":"love.forte.simbot.AttributeMap.Empty.size","location":"simbot-api/love.forte.simbot/-attribute-map/-empty/size.html","searchKeys":["size","open override fun size(): Int","love.forte.simbot.AttributeMap.Empty.size"]},{"name":"open override fun size(): Int","description":"love.forte.simbot.AttributeMutableMap.size","location":"simbot-api/love.forte.simbot/-attribute-mutable-map/size.html","searchKeys":["size","open override fun size(): Int","love.forte.simbot.AttributeMutableMap.size"]},{"name":"open override fun toChar(): Char","description":"love.forte.simbot.IntID.toChar","location":"simbot-api/love.forte.simbot/-int-i-d/to-char.html","searchKeys":["toChar","open override fun toChar(): Char","love.forte.simbot.IntID.toChar"]},{"name":"open override fun toDouble(): Double","description":"love.forte.simbot.DoubleID.toDouble","location":"simbot-api/love.forte.simbot/-double-i-d/to-double.html","searchKeys":["toDouble","open override fun toDouble(): Double","love.forte.simbot.DoubleID.toDouble"]},{"name":"open override fun toFloat(): Float","description":"love.forte.simbot.FloatID.toFloat","location":"simbot-api/love.forte.simbot/-float-i-d/to-float.html","searchKeys":["toFloat","open override fun toFloat(): Float","love.forte.simbot.FloatID.toFloat"]},{"name":"open override fun toInt(): Int","description":"love.forte.simbot.IntID.toInt","location":"simbot-api/love.forte.simbot/-int-i-d/to-int.html","searchKeys":["toInt","open override fun toInt(): Int","love.forte.simbot.IntID.toInt"]},{"name":"open override fun toInt(): Int","description":"love.forte.simbot.LongID.toInt","location":"simbot-api/love.forte.simbot/-long-i-d/to-int.html","searchKeys":["toInt","open override fun toInt(): Int","love.forte.simbot.LongID.toInt"]},{"name":"open override fun toList(): List<Message.Element<*>>","description":"love.forte.simbot.message.EmptyMessages.toList","location":"simbot-api/love.forte.simbot.message/-empty-messages/to-list.html","searchKeys":["toList","open override fun toList(): List<Message.Element<*>>","love.forte.simbot.message.EmptyMessages.toList"]},{"name":"open override fun toLong(): Long","description":"love.forte.simbot.LongID.toLong","location":"simbot-api/love.forte.simbot/-long-i-d/to-long.html","searchKeys":["toLong","open override fun toLong(): Long","love.forte.simbot.LongID.toLong"]},{"name":"open override fun toString(): String","description":"love.forte.simbot.Attribute.toString","location":"simbot-api/love.forte.simbot/-attribute/to-string.html","searchKeys":["toString","open override fun toString(): String","love.forte.simbot.Attribute.toString"]},{"name":"open override fun toString(): String","description":"love.forte.simbot.AttributeMutableMap.toString","location":"simbot-api/love.forte.simbot/-attribute-mutable-map/to-string.html","searchKeys":["toString","open override fun toString(): String","love.forte.simbot.AttributeMutableMap.toString"]},{"name":"open override fun toString(): String","description":"love.forte.simbot.CharSequenceID.toString","location":"simbot-api/love.forte.simbot/-char-sequence-i-d/to-string.html","searchKeys":["toString","open override fun toString(): String","love.forte.simbot.CharSequenceID.toString"]},{"name":"open override fun toString(): String","description":"love.forte.simbot.InstantTimestamp.toString","location":"simbot-api/love.forte.simbot/-instant-timestamp/to-string.html","searchKeys":["toString","open override fun toString(): String","love.forte.simbot.InstantTimestamp.toString"]},{"name":"open override fun toString(): String","description":"love.forte.simbot.Timestamp.NotSupport.toString","location":"simbot-api/love.forte.simbot/-timestamp/-not-support/to-string.html","searchKeys":["toString","open override fun toString(): String","love.forte.simbot.Timestamp.NotSupport.toString"]},{"name":"open override fun toString(): String","description":"love.forte.simbot.event.BaseEventKey.toString","location":"simbot-api/love.forte.simbot.event/-base-event-key/to-string.html","searchKeys":["toString","open override fun toString(): String","love.forte.simbot.event.BaseEventKey.toString"]},{"name":"open override fun toString(): String","description":"love.forte.simbot.event.Event.Root.toString","location":"simbot-api/love.forte.simbot.event/-event/-root/to-string.html","searchKeys":["toString","open override fun toString(): String","love.forte.simbot.event.Event.Root.toString"]},{"name":"open override fun toString(): String","description":"love.forte.simbot.event.EventListenerRegistrationDescription.toString","location":"simbot-api/love.forte.simbot.event/-event-listener-registration-description/to-string.html","searchKeys":["toString","open override fun toString(): String","love.forte.simbot.event.EventListenerRegistrationDescription.toString"]},{"name":"open override fun toString(): String","description":"love.forte.simbot.event.SimpleEventResult.toString","location":"simbot-api/love.forte.simbot.event/-simple-event-result/to-string.html","searchKeys":["toString","open override fun toString(): String","love.forte.simbot.event.SimpleEventResult.toString"]},{"name":"open override fun toString(): String","description":"love.forte.simbot.message.AtAll.toString","location":"simbot-api/love.forte.simbot.message/-at-all/to-string.html","searchKeys":["toString","open override fun toString(): String","love.forte.simbot.message.AtAll.toString"]},{"name":"open override fun toString(): String","description":"love.forte.simbot.message.EmptyMessages.toString","location":"simbot-api/love.forte.simbot.message/-empty-messages/to-string.html","searchKeys":["toString","open override fun toString(): String","love.forte.simbot.message.EmptyMessages.toString"]},{"name":"open override fun toString(): String","description":"love.forte.simbot.message.Text.toString","location":"simbot-api/love.forte.simbot.message/-text/to-string.html","searchKeys":["toString","open override fun toString(): String","love.forte.simbot.message.Text.toString"]},{"name":"open override fun toString(): String","description":"love.forte.simbot.resources.ByteArrayResource.toString","location":"simbot-api/love.forte.simbot.resources/-byte-array-resource/to-string.html","searchKeys":["toString","open override fun toString(): String","love.forte.simbot.resources.ByteArrayResource.toString"]},{"name":"open override fun toString(): String","description":"love.forte.simbot.resources.FileResource.toString","location":"simbot-api/love.forte.simbot.resources/-file-resource/to-string.html","searchKeys":["toString","open override fun toString(): String","love.forte.simbot.resources.FileResource.toString"]},{"name":"open override fun toString(): String","description":"love.forte.simbot.resources.PathResource.toString","location":"simbot-api/love.forte.simbot.resources/-path-resource/to-string.html","searchKeys":["toString","open override fun toString(): String","love.forte.simbot.resources.PathResource.toString"]},{"name":"open override fun toString(): String","description":"love.forte.simbot.resources.URLResource.toString","location":"simbot-api/love.forte.simbot.resources/-u-r-l-resource/to-string.html","searchKeys":["toString","open override fun toString(): String","love.forte.simbot.resources.URLResource.toString"]},{"name":"open override val batchSize: Int","description":"love.forte.simbot.Limiter.ZERO.batchSize","location":"simbot-api/love.forte.simbot/-limiter/-z-e-r-o/batch-size.html","searchKeys":["batchSize","open override val batchSize: Int","love.forte.simbot.Limiter.ZERO.batchSize"]},{"name":"open override val bot: Bot","description":"love.forte.simbot.bot.Bot.bot","location":"simbot-api/love.forte.simbot.bot/-bot/bot.html","searchKeys":["bot","open override val bot: Bot","love.forte.simbot.bot.Bot.bot"]},{"name":"open override val children: Items<Organization>","description":"love.forte.simbot.definition.ChatRoom.children","location":"simbot-api/love.forte.simbot.definition/-chat-room/children.html","searchKeys":["children","open override val children: Items<Organization>","love.forte.simbot.definition.ChatRoom.children"]},{"name":"open override val component: Component","description":"love.forte.simbot.event.Event.component","location":"simbot-api/love.forte.simbot.event/-event/component.html","searchKeys":["component","open override val component: Component","love.forte.simbot.event.Event.component"]},{"name":"open override val componentId: String","description":"love.forte.simbot.bot.DecoderBotVerifyInfo.componentId","location":"simbot-api/love.forte.simbot.bot/-decoder-bot-verify-info/component-id.html","searchKeys":["componentId","open override val componentId: String","love.forte.simbot.bot.DecoderBotVerifyInfo.componentId"]},{"name":"open override val content: Any?","description":"love.forte.simbot.event.EventResult.Invalid.content","location":"simbot-api/love.forte.simbot.event/-event-result/-invalid/content.html","searchKeys":["content","open override val content: Any?","love.forte.simbot.event.EventResult.Invalid.content"]},{"name":"open override val content: Any? = null","description":"love.forte.simbot.event.SimpleEventResult.content","location":"simbot-api/love.forte.simbot.event/-simple-event-result/content.html","searchKeys":["content","open override val content: Any? = null","love.forte.simbot.event.SimpleEventResult.content"]},{"name":"open override val descriptor: SerialDescriptor","description":"love.forte.simbot.CharSequenceID.Serializer.descriptor","location":"simbot-api/love.forte.simbot/-char-sequence-i-d/-serializer/descriptor.html","searchKeys":["descriptor","open override val descriptor: SerialDescriptor","love.forte.simbot.CharSequenceID.Serializer.descriptor"]},{"name":"open override val descriptor: SerialDescriptor","description":"love.forte.simbot.ID.AsCharSequenceIDSerializer.descriptor","location":"simbot-api/love.forte.simbot/-i-d/-as-char-sequence-i-d-serializer/descriptor.html","searchKeys":["descriptor","open override val descriptor: SerialDescriptor","love.forte.simbot.ID.AsCharSequenceIDSerializer.descriptor"]},{"name":"open override val descriptor: SerialDescriptor","description":"love.forte.simbot.TimestampSerializer.descriptor","location":"simbot-api/love.forte.simbot/-timestamp-serializer/descriptor.html","searchKeys":["descriptor","open override val descriptor: SerialDescriptor","love.forte.simbot.TimestampSerializer.descriptor"]},{"name":"open override val descriptor: SerialDescriptor","description":"love.forte.simbot.resources.Resource.AsStandardSerializer.descriptor","location":"simbot-api/love.forte.simbot.resources/-resource/-as-standard-serializer/descriptor.html","searchKeys":["descriptor","open override val descriptor: SerialDescriptor","love.forte.simbot.resources.Resource.AsStandardSerializer.descriptor"]},{"name":"open override val entries: MutableSet<MutableMap.MutableEntry<K, V>>","description":"love.forte.simbot.utils.WeakMap.entries","location":"simbot-api/love.forte.simbot.utils/-weak-map/entries.html","searchKeys":["entries","open override val entries: MutableSet<MutableMap.MutableEntry<K, V>>","love.forte.simbot.utils.WeakMap.entries"]},{"name":"open override val format: F","description":"love.forte.simbot.resources.SimpleBinaryFormatDeserializableResourceDecoder.format","location":"simbot-api/love.forte.simbot.resources/-simple-binary-format-deserializable-resource-decoder/format.html","searchKeys":["format","open override val format: F","love.forte.simbot.resources.SimpleBinaryFormatDeserializableResourceDecoder.format"]},{"name":"open override val format: F","description":"love.forte.simbot.resources.SimpleStringFormatDeserializableResourceDecoder.format","location":"simbot-api/love.forte.simbot.resources/-simple-string-format-deserializable-resource-decoder/format.html","searchKeys":["format","open override val format: F","love.forte.simbot.resources.SimpleStringFormatDeserializableResourceDecoder.format"]},{"name":"open override val format: Json","description":"love.forte.simbot.bot.JsonBotVerifyInfoDecoder.format","location":"simbot-api/love.forte.simbot.bot/-json-bot-verify-info-decoder/format.html","searchKeys":["format","open override val format: Json","love.forte.simbot.bot.JsonBotVerifyInfoDecoder.format"]},{"name":"open override val format: Properties","description":"love.forte.simbot.bot.PropertiesBotVerifyInfoDecoder.format","location":"simbot-api/love.forte.simbot.bot/-properties-bot-verify-info-decoder/format.html","searchKeys":["format","open override val format: Properties","love.forte.simbot.bot.PropertiesBotVerifyInfoDecoder.format"]},{"name":"open override val format: Yaml","description":"love.forte.simbot.bot.YamlBotVerifyInfoDecoder.format","location":"simbot-api/love.forte.simbot.bot/-yaml-bot-verify-info-decoder/format.html","searchKeys":["format","open override val format: Yaml","love.forte.simbot.bot.YamlBotVerifyInfoDecoder.format"]},{"name":"open override val id: CharSequenceID","description":"love.forte.simbot.event.BaseEventKey.id","location":"simbot-api/love.forte.simbot.event/-base-event-key/id.html","searchKeys":["id","open override val id: CharSequenceID","love.forte.simbot.event.BaseEventKey.id"]},{"name":"open override val id: CharSequenceID","description":"love.forte.simbot.event.Event.Root.id","location":"simbot-api/love.forte.simbot.event/-event/-root/id.html","searchKeys":["id","open override val id: CharSequenceID","love.forte.simbot.event.Event.Root.id"]},{"name":"open override val id: ID","description":"love.forte.simbot.definition.SimpleCategory.id","location":"simbot-api/love.forte.simbot.definition/-simple-category/id.html","searchKeys":["id","open override val id: ID","love.forte.simbot.definition.SimpleCategory.id"]},{"name":"open override val id: ID","description":"love.forte.simbot.message.ResourceImage.id","location":"simbot-api/love.forte.simbot.message/-resource-image/id.html","searchKeys":["id","open override val id: ID","love.forte.simbot.message.ResourceImage.id"]},{"name":"open override val isTruncated: Boolean","description":"love.forte.simbot.event.AsyncEventResult.isTruncated","location":"simbot-api/love.forte.simbot.event/-async-event-result/is-truncated.html","searchKeys":["isTruncated","open override val isTruncated: Boolean","love.forte.simbot.event.AsyncEventResult.isTruncated"]},{"name":"open override val isTruncated: Boolean","description":"love.forte.simbot.event.EventResult.Invalid.isTruncated","location":"simbot-api/love.forte.simbot.event/-event-result/-invalid/is-truncated.html","searchKeys":["isTruncated","open override val isTruncated: Boolean","love.forte.simbot.event.EventResult.Invalid.isTruncated"]},{"name":"open override val isTruncated: Boolean = false","description":"love.forte.simbot.event.SimpleEventResult.isTruncated","location":"simbot-api/love.forte.simbot.event/-simple-event-result/is-truncated.html","searchKeys":["isTruncated","open override val isTruncated: Boolean = false","love.forte.simbot.event.SimpleEventResult.isTruncated"]},{"name":"open override val key: CoroutineContext.Key<*>","description":"love.forte.simbot.event.EventProcessingContext.key","location":"simbot-api/love.forte.simbot.event/-event-processing-context/key.html","searchKeys":["key","open override val key: CoroutineContext.Key<*>","love.forte.simbot.event.EventProcessingContext.key"]},{"name":"open override val key: Message.Key<At>","description":"love.forte.simbot.message.At.key","location":"simbot-api/love.forte.simbot.message/-at/key.html","searchKeys":["key","open override val key: Message.Key<At>","love.forte.simbot.message.At.key"]},{"name":"open override val key: Message.Key<AtAll>","description":"love.forte.simbot.message.AtAll.key","location":"simbot-api/love.forte.simbot.message/-at-all/key.html","searchKeys":["key","open override val key: Message.Key<AtAll>","love.forte.simbot.message.AtAll.key"]},{"name":"open override val key: Message.Key<Emoji>","description":"love.forte.simbot.message.Emoji.key","location":"simbot-api/love.forte.simbot.message/-emoji/key.html","searchKeys":["key","open override val key: Message.Key<Emoji>","love.forte.simbot.message.Emoji.key"]},{"name":"open override val key: Message.Key<Face>","description":"love.forte.simbot.message.Face.key","location":"simbot-api/love.forte.simbot.message/-face/key.html","searchKeys":["key","open override val key: Message.Key<Face>","love.forte.simbot.message.Face.key"]},{"name":"open override val key: Message.Key<ResourceImage>","description":"love.forte.simbot.message.ResourceImage.key","location":"simbot-api/love.forte.simbot.message/-resource-image/key.html","searchKeys":["key","open override val key: Message.Key<ResourceImage>","love.forte.simbot.message.ResourceImage.key"]},{"name":"open override val key: Message.Key<Text>","description":"love.forte.simbot.message.Text.key","location":"simbot-api/love.forte.simbot.message/-text/key.html","searchKeys":["key","open override val key: Message.Key<Text>","love.forte.simbot.message.Text.key"]},{"name":"open override val keys: MutableSet<K>","description":"love.forte.simbot.utils.WeakMap.keys","location":"simbot-api/love.forte.simbot.utils/-weak-map/keys.html","searchKeys":["keys","open override val keys: MutableSet<K>","love.forte.simbot.utils.WeakMap.keys"]},{"name":"open override val limit: Int","description":"love.forte.simbot.Limiter.ZERO.limit","location":"simbot-api/love.forte.simbot/-limiter/-z-e-r-o/limit.html","searchKeys":["limit","open override val limit: Int","love.forte.simbot.Limiter.ZERO.limit"]},{"name":"open override val millisecond: Long","description":"love.forte.simbot.InstantTimestamp.millisecond","location":"simbot-api/love.forte.simbot/-instant-timestamp/millisecond.html","searchKeys":["millisecond","open override val millisecond: Long","love.forte.simbot.InstantTimestamp.millisecond"]},{"name":"open override val millisecond: Long","description":"love.forte.simbot.Timestamp.NotSupport.millisecond","location":"simbot-api/love.forte.simbot/-timestamp/-not-support/millisecond.html","searchKeys":["millisecond","open override val millisecond: Long","love.forte.simbot.Timestamp.NotSupport.millisecond"]},{"name":"open override val name: String","description":"love.forte.simbot.bot.ByteArrayBotVerifyInfo.name","location":"simbot-api/love.forte.simbot.bot/-byte-array-bot-verify-info/name.html","searchKeys":["name","open override val name: String","love.forte.simbot.bot.ByteArrayBotVerifyInfo.name"]},{"name":"open override val name: String","description":"love.forte.simbot.definition.SimpleCategory.name","location":"simbot-api/love.forte.simbot.definition/-simple-category/name.html","searchKeys":["name","open override val name: String","love.forte.simbot.definition.SimpleCategory.name"]},{"name":"open override val name: String","description":"love.forte.simbot.resources.ByteArrayResource.name","location":"simbot-api/love.forte.simbot.resources/-byte-array-resource/name.html","searchKeys":["name","open override val name: String","love.forte.simbot.resources.ByteArrayResource.name"]},{"name":"open override val name: String","description":"love.forte.simbot.resources.FileResource.name","location":"simbot-api/love.forte.simbot.resources/-file-resource/name.html","searchKeys":["name","open override val name: String","love.forte.simbot.resources.FileResource.name"]},{"name":"open override val name: String","description":"love.forte.simbot.resources.PathResource.name","location":"simbot-api/love.forte.simbot.resources/-path-resource/name.html","searchKeys":["name","open override val name: String","love.forte.simbot.resources.PathResource.name"]},{"name":"open override val name: String","description":"love.forte.simbot.resources.URLResource.name","location":"simbot-api/love.forte.simbot.resources/-u-r-l-resource/name.html","searchKeys":["name","open override val name: String","love.forte.simbot.resources.URLResource.name"]},{"name":"open override val offset: Int","description":"love.forte.simbot.Limiter.ZERO.offset","location":"simbot-api/love.forte.simbot/-limiter/-z-e-r-o/offset.html","searchKeys":["offset","open override val offset: Int","love.forte.simbot.Limiter.ZERO.offset"]},{"name":"open override val parents: Set<Event.Key<*>>","description":"love.forte.simbot.event.BaseEventKey.parents","location":"simbot-api/love.forte.simbot.event/-base-event-key/parents.html","searchKeys":["parents","open override val parents: Set<Event.Key<*>>","love.forte.simbot.event.BaseEventKey.parents"]},{"name":"open override val parents: Set<Event.Key<*>>","description":"love.forte.simbot.event.Event.Root.parents","location":"simbot-api/love.forte.simbot.event/-event/-root/parents.html","searchKeys":["parents","open override val parents: Set<Event.Key<*>>","love.forte.simbot.event.Event.Root.parents"]},{"name":"open override val point: EventListenerInterceptor.Point","description":"love.forte.simbot.event.BlockingEventListenerInterceptor.point","location":"simbot-api/love.forte.simbot.event/-blocking-event-listener-interceptor/point.html","searchKeys":["point","open override val point: EventListenerInterceptor.Point","love.forte.simbot.event.BlockingEventListenerInterceptor.point"]},{"name":"open override val priority: Int","description":"love.forte.simbot.event.BlockingEventListenerInterceptor.priority","location":"simbot-api/love.forte.simbot.event/-blocking-event-listener-interceptor/priority.html","searchKeys":["priority","open override val priority: Int","love.forte.simbot.event.BlockingEventListenerInterceptor.priority"]},{"name":"open override val results: List<EventResult>","description":"love.forte.simbot.event.EventProcessingResult.Empty.results","location":"simbot-api/love.forte.simbot.event/-event-processing-result/-empty/results.html","searchKeys":["results","open override val results: List<EventResult>","love.forte.simbot.event.EventProcessingResult.Empty.results"]},{"name":"open override val resultsView: IndexAccessView<EventResult>","description":"love.forte.simbot.event.EventProcessingResult.Empty.resultsView","location":"simbot-api/love.forte.simbot.event/-event-processing-result/-empty/results-view.html","searchKeys":["resultsView","open override val resultsView: IndexAccessView<EventResult>","love.forte.simbot.event.EventProcessingResult.Empty.resultsView"]},{"name":"open override val second: Long","description":"love.forte.simbot.InstantTimestamp.second","location":"simbot-api/love.forte.simbot/-instant-timestamp/second.html","searchKeys":["second","open override val second: Long","love.forte.simbot.InstantTimestamp.second"]},{"name":"open override val second: Long","description":"love.forte.simbot.Timestamp.NotSupport.second","location":"simbot-api/love.forte.simbot/-timestamp/-not-support/second.html","searchKeys":["second","open override val second: Long","love.forte.simbot.Timestamp.NotSupport.second"]},{"name":"open override val size: Int","description":"love.forte.simbot.bot.OriginBotManager.size","location":"simbot-api/love.forte.simbot.bot/-origin-bot-manager/size.html","searchKeys":["size","open override val size: Int","love.forte.simbot.bot.OriginBotManager.size"]},{"name":"open override val size: Int","description":"love.forte.simbot.utils.WeakMap.size","location":"simbot-api/love.forte.simbot.utils/-weak-map/size.html","searchKeys":["size","open override val size: Int","love.forte.simbot.utils.WeakMap.size"]},{"name":"open override val text: String","description":"love.forte.simbot.message.Text.text","location":"simbot-api/love.forte.simbot.message/-text/text.html","searchKeys":["text","open override val text: String","love.forte.simbot.message.Text.text"]},{"name":"open override val timestamp: Timestamp","description":"love.forte.simbot.event.ChangedEvent.timestamp","location":"simbot-api/love.forte.simbot.event/-changed-event/timestamp.html","searchKeys":["timestamp","open override val timestamp: Timestamp","love.forte.simbot.event.ChangedEvent.timestamp"]},{"name":"open override val value: BigDecimal","description":"love.forte.simbot.BigDecimalID.value","location":"simbot-api/love.forte.simbot/-big-decimal-i-d/value.html","searchKeys":["value","open override val value: BigDecimal","love.forte.simbot.BigDecimalID.value"]},{"name":"open override val value: BigInteger","description":"love.forte.simbot.BigIntegerID.value","location":"simbot-api/love.forte.simbot/-big-integer-i-d/value.html","searchKeys":["value","open override val value: BigInteger","love.forte.simbot.BigIntegerID.value"]},{"name":"open override val value: Double","description":"love.forte.simbot.DoubleID.value","location":"simbot-api/love.forte.simbot/-double-i-d/value.html","searchKeys":["value","open override val value: Double","love.forte.simbot.DoubleID.value"]},{"name":"open override val value: Float","description":"love.forte.simbot.FloatID.value","location":"simbot-api/love.forte.simbot/-float-i-d/value.html","searchKeys":["value","open override val value: Float","love.forte.simbot.FloatID.value"]},{"name":"open override val value: Int","description":"love.forte.simbot.IntID.value","location":"simbot-api/love.forte.simbot/-int-i-d/value.html","searchKeys":["value","open override val value: Int","love.forte.simbot.IntID.value"]},{"name":"open override val value: Long","description":"love.forte.simbot.LongID.value","location":"simbot-api/love.forte.simbot/-long-i-d/value.html","searchKeys":["value","open override val value: Long","love.forte.simbot.LongID.value"]},{"name":"open override val values: MutableCollection<V>","description":"love.forte.simbot.utils.WeakMap.values","location":"simbot-api/love.forte.simbot.utils/-weak-map/values.html","searchKeys":["values","open override val values: MutableCollection<V>","love.forte.simbot.utils.WeakMap.values"]},{"name":"open suspend fun contactCount(): Int","description":"love.forte.simbot.definition.ContactsContainer.contactCount","location":"simbot-api/love.forte.simbot.definition/-contacts-container/contact-count.html","searchKeys":["contactCount","open suspend fun contactCount(): Int","love.forte.simbot.definition.ContactsContainer.contactCount"]},{"name":"open suspend fun friendCount(): Int","description":"love.forte.simbot.definition.FriendsContainer.friendCount","location":"simbot-api/love.forte.simbot.definition/-friends-container/friend-count.html","searchKeys":["friendCount","open suspend fun friendCount(): Int","love.forte.simbot.definition.FriendsContainer.friendCount"]},{"name":"open suspend fun groupCount(): Int","description":"love.forte.simbot.definition.GroupsContainer.groupCount","location":"simbot-api/love.forte.simbot.definition/-groups-container/group-count.html","searchKeys":["groupCount","open suspend fun groupCount(): Int","love.forte.simbot.definition.GroupsContainer.groupCount"]},{"name":"open suspend fun guildCount(): Int","description":"love.forte.simbot.definition.GuildsContainer.guildCount","location":"simbot-api/love.forte.simbot.definition/-guilds-container/guild-count.html","searchKeys":["guildCount","open suspend fun guildCount(): Int","love.forte.simbot.definition.GuildsContainer.guildCount"]},{"name":"open suspend fun isAdmin(): Boolean","description":"love.forte.simbot.definition.Member.isAdmin","location":"simbot-api/love.forte.simbot.definition/-member/is-admin.html","searchKeys":["isAdmin","open suspend fun isAdmin(): Boolean","love.forte.simbot.definition.Member.isAdmin"]},{"name":"open suspend fun isOwner(): Boolean","description":"love.forte.simbot.definition.Member.isOwner","location":"simbot-api/love.forte.simbot.definition/-member/is-owner.html","searchKeys":["isOwner","open suspend fun isOwner(): Boolean","love.forte.simbot.definition.Member.isOwner"]},{"name":"open suspend fun mute(time: Long, timeUnit: TimeUnit): Boolean","description":"love.forte.simbot.action.MuteSupport.mute","location":"simbot-api/love.forte.simbot.action/-mute-support/mute.html","searchKeys":["mute","open suspend fun mute(time: Long, timeUnit: TimeUnit): Boolean","love.forte.simbot.action.MuteSupport.mute"]},{"name":"open suspend fun reply(message: MessageContent): MessageReceipt","description":"love.forte.simbot.action.ReplySupport.reply","location":"simbot-api/love.forte.simbot.action/-reply-support/reply.html","searchKeys":["reply","open suspend fun reply(message: MessageContent): MessageReceipt","love.forte.simbot.action.ReplySupport.reply"]},{"name":"open suspend fun reply(text: String): MessageReceipt","description":"love.forte.simbot.action.ReplySupport.reply","location":"simbot-api/love.forte.simbot.action/-reply-support/reply.html","searchKeys":["reply","open suspend fun reply(text: String): MessageReceipt","love.forte.simbot.action.ReplySupport.reply"]},{"name":"open suspend fun send(message: MessageContent): MessageReceipt","description":"love.forte.simbot.action.SendSupport.send","location":"simbot-api/love.forte.simbot.action/-send-support/send.html","searchKeys":["send","open suspend fun send(message: MessageContent): MessageReceipt","love.forte.simbot.action.SendSupport.send"]},{"name":"open suspend fun send(text: String): MessageReceipt","description":"love.forte.simbot.action.SendSupport.send","location":"simbot-api/love.forte.simbot.action/-send-support/send.html","searchKeys":["send","open suspend fun send(text: String): MessageReceipt","love.forte.simbot.action.SendSupport.send"]},{"name":"open suspend operator override fun EventProcessingContext.invoke(event: Event): Boolean","description":"love.forte.simbot.event.ContinuousSessionEventMatcher.AlwaysTrue.invoke","location":"simbot-api/love.forte.simbot.event/-continuous-session-event-matcher/-always-true/invoke.html","searchKeys":["invoke","open suspend operator override fun EventProcessingContext.invoke(event: Event): Boolean","love.forte.simbot.event.ContinuousSessionEventMatcher.AlwaysTrue.invoke"]},{"name":"open suspend operator override fun invoke(): T","description":"love.forte.simbot.utils.LazyValue.invoke","location":"simbot-api/love.forte.simbot.utils/-lazy-value/invoke.html","searchKeys":["invoke","open suspend operator override fun invoke(): T","love.forte.simbot.utils.LazyValue.invoke"]},{"name":"open suspend operator override fun invoke(context: EventListenerProcessingContext): EventResult","description":"love.forte.simbot.event.BlockingEventListener.invoke","location":"simbot-api/love.forte.simbot.event/-blocking-event-listener/invoke.html","searchKeys":["invoke","open suspend operator override fun invoke(context: EventListenerProcessingContext): EventResult","love.forte.simbot.event.BlockingEventListener.invoke"]},{"name":"open suspend operator override fun invoke(context: EventListenerProcessingContext): EventResult","description":"love.forte.simbot.event.BlockingEventListenerFunction.invoke","location":"simbot-api/love.forte.simbot.event/-blocking-event-listener-function/invoke.html","searchKeys":["invoke","open suspend operator override fun invoke(context: EventListenerProcessingContext): EventResult","love.forte.simbot.event.BlockingEventListenerFunction.invoke"]},{"name":"open suspend override fun after(): Any?","description":"love.forte.simbot.event.EndPointEvent.after","location":"simbot-api/love.forte.simbot.event/-end-point-event/after.html","searchKeys":["after","open suspend override fun after(): Any?","love.forte.simbot.event.EndPointEvent.after"]},{"name":"open suspend override fun before(): Any?","description":"love.forte.simbot.event.StartPointEvent.before","location":"simbot-api/love.forte.simbot.event/-start-point-event/before.html","searchKeys":["before","open suspend override fun before(): Any?","love.forte.simbot.event.StartPointEvent.before"]},{"name":"open suspend override fun cancel(reason: Throwable?): Boolean","description":"love.forte.simbot.bot.BotManager.cancel","location":"simbot-api/love.forte.simbot.bot/-bot-manager/cancel.html","searchKeys":["cancel","open suspend override fun cancel(reason: Throwable?): Boolean","love.forte.simbot.bot.BotManager.cancel"]},{"name":"open suspend override fun child(id: ID): Organization?","description":"love.forte.simbot.definition.ChatRoom.child","location":"simbot-api/love.forte.simbot.definition/-chat-room/child.html","searchKeys":["child","open suspend override fun child(id: ID): Organization?","love.forte.simbot.definition.ChatRoom.child"]},{"name":"open suspend override fun collect(collector: suspend (T) -> Unit)","description":"love.forte.simbot.utils.item.CollectionItems.collect","location":"simbot-api/love.forte.simbot.utils.item/-collection-items/collect.html","searchKeys":["collect","open suspend override fun collect(collector: suspend (T) -> Unit)","love.forte.simbot.utils.item.CollectionItems.collect"]},{"name":"open suspend override fun collect(collector: suspend (T) -> Unit)","description":"love.forte.simbot.utils.item.FlowItems.collect","location":"simbot-api/love.forte.simbot.utils.item/-flow-items/collect.html","searchKeys":["collect","open suspend override fun collect(collector: suspend (T) -> Unit)","love.forte.simbot.utils.item.FlowItems.collect"]},{"name":"open suspend override fun collect(collector: suspend (T) -> Unit)","description":"love.forte.simbot.utils.item.SequenceItems.collect","location":"simbot-api/love.forte.simbot.utils.item/-sequence-items/collect.html","searchKeys":["collect","open suspend override fun collect(collector: suspend (T) -> Unit)","love.forte.simbot.utils.item.SequenceItems.collect"]},{"name":"open suspend override fun collect(collector: suspend (T) -> Unit)","description":"love.forte.simbot.utils.item.SimpleChannelIteratorItems.collect","location":"simbot-api/love.forte.simbot.utils.item/-simple-channel-iterator-items/collect.html","searchKeys":["collect","open suspend override fun collect(collector: suspend (T) -> Unit)","love.forte.simbot.utils.item.SimpleChannelIteratorItems.collect"]},{"name":"open suspend override fun collect(collector: suspend (T) -> Unit)","description":"love.forte.simbot.utils.item.SimpleIteratorItems.collect","location":"simbot-api/love.forte.simbot.utils.item/-simple-iterator-items/collect.html","searchKeys":["collect","open suspend override fun collect(collector: suspend (T) -> Unit)","love.forte.simbot.utils.item.SimpleIteratorItems.collect"]},{"name":"open suspend override fun collect(collector: suspend (T) -> Unit)","description":"love.forte.simbot.utils.item.SingleValueItems.collect","location":"simbot-api/love.forte.simbot.utils.item/-single-value-items/collect.html","searchKeys":["collect","open suspend override fun collect(collector: suspend (T) -> Unit)","love.forte.simbot.utils.item.SingleValueItems.collect"]},{"name":"open suspend override fun collect(collector: suspend (T) -> Unit)","description":"love.forte.simbot.utils.item.StreamItems.collect","location":"simbot-api/love.forte.simbot.utils.item/-stream-items/collect.html","searchKeys":["collect","open suspend override fun collect(collector: suspend (T) -> Unit)","love.forte.simbot.utils.item.StreamItems.collect"]},{"name":"open suspend override fun collect(collector: suspend (T) -> Unit)","description":"love.forte.simbot.utils.item.TransformItems.collect","location":"simbot-api/love.forte.simbot.utils.item/-transform-items/collect.html","searchKeys":["collect","open suspend override fun collect(collector: suspend (T) -> Unit)","love.forte.simbot.utils.item.TransformItems.collect"]},{"name":"open suspend override fun delete(): Boolean","description":"love.forte.simbot.message.AggregatedMessageReceipt.delete","location":"simbot-api/love.forte.simbot.message/-aggregated-message-receipt/delete.html","searchKeys":["delete","open suspend override fun delete(): Boolean","love.forte.simbot.message.AggregatedMessageReceipt.delete"]},{"name":"open suspend override fun intercept(context: EventListenerInterceptor.Context): EventResult","description":"love.forte.simbot.event.BlockingEventListenerInterceptor.intercept","location":"simbot-api/love.forte.simbot.event/-blocking-event-listener-interceptor/intercept.html","searchKeys":["intercept","open suspend override fun intercept(context: EventListenerInterceptor.Context): EventResult","love.forte.simbot.event.BlockingEventListenerInterceptor.intercept"]},{"name":"open suspend override fun intercept(context: EventProcessingInterceptor.Context): EventProcessingResult","description":"love.forte.simbot.event.BlockingEventProcessingInterceptor.intercept","location":"simbot-api/love.forte.simbot.event/-blocking-event-processing-interceptor/intercept.html","searchKeys":["intercept","open suspend override fun intercept(context: EventProcessingInterceptor.Context): EventProcessingResult","love.forte.simbot.event.BlockingEventProcessingInterceptor.intercept"]},{"name":"open suspend override fun organization(): Group","description":"love.forte.simbot.definition.GroupMember.organization","location":"simbot-api/love.forte.simbot.definition/-group-member/organization.html","searchKeys":["organization","open suspend override fun organization(): Group","love.forte.simbot.definition.GroupMember.organization"]},{"name":"open suspend override fun organization(): Guild","description":"love.forte.simbot.definition.GuildMember.organization","location":"simbot-api/love.forte.simbot.definition/-guild-member/organization.html","searchKeys":["organization","open suspend override fun organization(): Guild","love.forte.simbot.definition.GuildMember.organization"]},{"name":"open suspend override fun resource(): Resource","description":"love.forte.simbot.message.ResourceImage.resource","location":"simbot-api/love.forte.simbot.message/-resource-image/resource.html","searchKeys":["resource","open suspend override fun resource(): Resource","love.forte.simbot.message.ResourceImage.resource"]},{"name":"open suspend override fun test(context: EventListenerProcessingContext): Boolean","description":"love.forte.simbot.event.BlockingEventFilter.test","location":"simbot-api/love.forte.simbot.event/-blocking-event-filter/test.html","searchKeys":["test","open suspend override fun test(context: EventListenerProcessingContext): Boolean","love.forte.simbot.event.BlockingEventFilter.test"]},{"name":"open suspend override fun test(t: T): Boolean","description":"love.forte.simbot.BlockingFilter.test","location":"simbot-api/love.forte.simbot/-blocking-filter/test.html","searchKeys":["test","open suspend override fun test(t: T): Boolean","love.forte.simbot.BlockingFilter.test"]},{"name":"open val category: Category?","description":"love.forte.simbot.definition.OrganizationInfo.category","location":"simbot-api/love.forte.simbot.definition/-organization-info/category.html","searchKeys":["category","open val category: Category?","love.forte.simbot.definition.OrganizationInfo.category"]},{"name":"open val category: Category?","description":"love.forte.simbot.definition.UserInfo.category","location":"simbot-api/love.forte.simbot.definition/-user-info/category.html","searchKeys":["category","open val category: Category?","love.forte.simbot.definition.UserInfo.category"]},{"name":"open val isContactsSupported: Boolean","description":"love.forte.simbot.definition.ContactsContainer.isContactsSupported","location":"simbot-api/love.forte.simbot.definition/-contacts-container/is-contacts-supported.html","searchKeys":["isContactsSupported","open val isContactsSupported: Boolean","love.forte.simbot.definition.ContactsContainer.isContactsSupported"]},{"name":"open val isGroupsSupported: Boolean","description":"love.forte.simbot.definition.GroupsContainer.isGroupsSupported","location":"simbot-api/love.forte.simbot.definition/-groups-container/is-groups-supported.html","searchKeys":["isGroupsSupported","open val isGroupsSupported: Boolean","love.forte.simbot.definition.GroupsContainer.isGroupsSupported"]},{"name":"open val isGuildsSupported: Boolean","description":"love.forte.simbot.definition.GuildsContainer.isGuildsSupported","location":"simbot-api/love.forte.simbot.definition/-guilds-container/is-guilds-supported.html","searchKeys":["isGuildsSupported","open val isGuildsSupported: Boolean","love.forte.simbot.definition.GuildsContainer.isGuildsSupported"]},{"name":"open val listener: EventListener","description":"love.forte.simbot.event.EventListenerInterceptor.Context.listener","location":"simbot-api/love.forte.simbot.event/-event-listener-interceptor/-context/listener.html","searchKeys":["listener","open val listener: EventListener","love.forte.simbot.event.EventListenerInterceptor.Context.listener"]},{"name":"open val nickOrUsername: String","description":"love.forte.simbot.definition.MemberInfo.nickOrUsername","location":"simbot-api/love.forte.simbot.definition/-member-info/nick-or-username.html","searchKeys":["nickOrUsername","open val nickOrUsername: String","love.forte.simbot.definition.MemberInfo.nickOrUsername"]},{"name":"open val plainText: String","description":"love.forte.simbot.message.MessageContent.plainText","location":"simbot-api/love.forte.simbot.message/-message-content/plain-text.html","searchKeys":["plainText","open val plainText: String","love.forte.simbot.message.MessageContent.plainText"]},{"name":"open val point: EventListenerInterceptor.Point","description":"love.forte.simbot.event.EventListenerInterceptor.point","location":"simbot-api/love.forte.simbot.event/-event-listener-interceptor/point.html","searchKeys":["point","open val point: EventListenerInterceptor.Point","love.forte.simbot.event.EventListenerInterceptor.point"]},{"name":"open val priority: Int","description":"love.forte.simbot.event.EventFilter.priority","location":"simbot-api/love.forte.simbot.event/-event-filter/priority.html","searchKeys":["priority","open val priority: Int","love.forte.simbot.event.EventFilter.priority"]},{"name":"open val priority: Int","description":"love.forte.simbot.event.EventInterceptor.priority","location":"simbot-api/love.forte.simbot.event/-event-interceptor/priority.html","searchKeys":["priority","open val priority: Int","love.forte.simbot.event.EventInterceptor.priority"]},{"name":"open val remarkOrUsername: String","description":"love.forte.simbot.definition.FriendInfo.remarkOrUsername","location":"simbot-api/love.forte.simbot.definition/-friend-info/remark-or-username.html","searchKeys":["remarkOrUsername","open val remarkOrUsername: String","love.forte.simbot.definition.FriendInfo.remarkOrUsername"]},{"name":"open val results: List<EventResult>","description":"love.forte.simbot.event.EventProcessingContext.results","location":"simbot-api/love.forte.simbot.event/-event-processing-context/results.html","searchKeys":["results","open val results: List<EventResult>","love.forte.simbot.event.EventProcessingContext.results"]},{"name":"open val results: List<EventResult>","description":"love.forte.simbot.event.EventProcessingResult.results","location":"simbot-api/love.forte.simbot.event/-event-processing-result/results.html","searchKeys":["results","open val results: List<EventResult>","love.forte.simbot.event.EventProcessingResult.results"]},{"name":"open var coroutineContext: CoroutineContext","description":"love.forte.simbot.application.ApplicationConfiguration.coroutineContext","location":"simbot-api/love.forte.simbot.application/-application-configuration/coroutine-context.html","searchKeys":["coroutineContext","open var coroutineContext: CoroutineContext","love.forte.simbot.application.ApplicationConfiguration.coroutineContext"]},{"name":"open var isAsync: Boolean","description":"love.forte.simbot.event.EventListenerRegistrationDescription.isAsync","location":"simbot-api/love.forte.simbot.event/-event-listener-registration-description/is-async.html","searchKeys":["isAsync","open var isAsync: Boolean","love.forte.simbot.event.EventListenerRegistrationDescription.isAsync"]},{"name":"open var logger: Logger","description":"love.forte.simbot.application.ApplicationConfiguration.logger","location":"simbot-api/love.forte.simbot.application/-application-configuration/logger.html","searchKeys":["logger","open var logger: Logger","love.forte.simbot.application.ApplicationConfiguration.logger"]},{"name":"open var priority: Int","description":"love.forte.simbot.event.EventListenerRegistrationDescription.priority","location":"simbot-api/love.forte.simbot.event/-event-listener-registration-description/priority.html","searchKeys":["priority","open var priority: Int","love.forte.simbot.event.EventListenerRegistrationDescription.priority"]},{"name":"operator fun <T : Any> MutableAttributeMap.set(attribute: Attribute<T>, value: T)","description":"love.forte.simbot.set","location":"simbot-api/love.forte.simbot/set.html","searchKeys":["set","operator fun <T : Any> MutableAttributeMap.set(attribute: Attribute<T>, value: T)","love.forte.simbot.set"]},{"name":"operator fun Event.Key<*>.contains(parentIdMaybe: ID): Boolean","description":"love.forte.simbot.event.contains","location":"simbot-api/love.forte.simbot.event/contains.html","searchKeys":["contains","operator fun Event.Key<*>.contains(parentIdMaybe: ID): Boolean","love.forte.simbot.event.contains"]},{"name":"operator fun Event.Key<*>.contains(parentIdMaybe: String): Boolean","description":"love.forte.simbot.event.contains","location":"simbot-api/love.forte.simbot.event/contains.html","searchKeys":["contains","operator fun Event.Key<*>.contains(parentIdMaybe: String): Boolean","love.forte.simbot.event.contains"]},{"name":"operator fun Iterable<Message.Element<*>>.unaryPlus(): MessagesBuilder","description":"love.forte.simbot.message.MessagesBuilder.unaryPlus","location":"simbot-api/love.forte.simbot.message/-messages-builder/unary-plus.html","searchKeys":["unaryPlus","operator fun Iterable<Message.Element<*>>.unaryPlus(): MessagesBuilder","love.forte.simbot.message.MessagesBuilder.unaryPlus"]},{"name":"operator fun Message.Element<*>.plus(other: Message.Element<*>): Messages","description":"love.forte.simbot.message.plus","location":"simbot-api/love.forte.simbot.message/plus.html","searchKeys":["plus","operator fun Message.Element<*>.plus(other: Message.Element<*>): Messages","love.forte.simbot.message.plus"]},{"name":"operator fun Message.Element<*>.plus(other: Messages): Messages","description":"love.forte.simbot.message.plus","location":"simbot-api/love.forte.simbot.message/plus.html","searchKeys":["plus","operator fun Message.Element<*>.plus(other: Messages): Messages","love.forte.simbot.message.plus"]},{"name":"operator fun Message.Element<*>.unaryPlus(): MessagesBuilder","description":"love.forte.simbot.message.MessagesBuilder.unaryPlus","location":"simbot-api/love.forte.simbot.message/-messages-builder/unary-plus.html","searchKeys":["unaryPlus","operator fun Message.Element<*>.unaryPlus(): MessagesBuilder","love.forte.simbot.message.MessagesBuilder.unaryPlus"]},{"name":"operator fun String.unaryPlus(): MessagesBuilder","description":"love.forte.simbot.message.MessagesBuilder.unaryPlus","location":"simbot-api/love.forte.simbot.message/-messages-builder/unary-plus.html","searchKeys":["unaryPlus","operator fun String.unaryPlus(): MessagesBuilder","love.forte.simbot.message.MessagesBuilder.unaryPlus"]},{"name":"operator fun get(index: Int): Byte","description":"love.forte.simbot.resources.ByteArrayResource.get","location":"simbot-api/love.forte.simbot.resources/-byte-array-resource/get.html","searchKeys":["get","operator fun get(index: Int): Byte","love.forte.simbot.resources.ByteArrayResource.get"]},{"name":"operator fun invoke(id: ID, name: String = id.literal): SimpleCategory","description":"love.forte.simbot.definition.Category.Companion.invoke","location":"simbot-api/love.forte.simbot.definition/-category/-companion/invoke.html","searchKeys":["invoke","operator fun invoke(id: ID, name: String = id.literal): SimpleCategory","love.forte.simbot.definition.Category.Companion.invoke"]},{"name":"operator fun invoke(nameAlsoId: String): SimpleCategory","description":"love.forte.simbot.definition.Category.Companion.invoke","location":"simbot-api/love.forte.simbot.definition/-category/-companion/invoke.html","searchKeys":["invoke","operator fun invoke(nameAlsoId: String): SimpleCategory","love.forte.simbot.definition.Category.Companion.invoke"]},{"name":"operator fun plus(other: String): Text","description":"love.forte.simbot.message.Text.plus","location":"simbot-api/love.forte.simbot.message/-text/plus.html","searchKeys":["plus","operator fun plus(other: String): Text","love.forte.simbot.message.Text.plus"]},{"name":"operator fun plus(other: Text): Text","description":"love.forte.simbot.message.Text.plus","location":"simbot-api/love.forte.simbot.message/-text/plus.html","searchKeys":["plus","operator fun plus(other: Text): Text","love.forte.simbot.message.Text.plus"]},{"name":"operator override fun equals(other: Any?): Boolean","description":"love.forte.simbot.ID.equals","location":"simbot-api/love.forte.simbot/-i-d/equals.html","searchKeys":["equals","operator override fun equals(other: Any?): Boolean","love.forte.simbot.ID.equals"]},{"name":"override fun toString(): String","description":"love.forte.simbot.NumericalID.toString","location":"simbot-api/love.forte.simbot/-numerical-i-d/to-string.html","searchKeys":["toString","override fun toString(): String","love.forte.simbot.NumericalID.toString"]},{"name":"protected abstract fun InputStream.prepareToValue(): V","description":"love.forte.simbot.bot.StandardSerialFormatBotVerifyInfoDecoder.prepareToValue","location":"simbot-api/love.forte.simbot.bot/-standard-serial-format-bot-verify-info-decoder/prepare-to-value.html","searchKeys":["prepareToValue","protected abstract fun InputStream.prepareToValue(): V","love.forte.simbot.bot.StandardSerialFormatBotVerifyInfoDecoder.prepareToValue"]},{"name":"protected abstract fun doEquals(other: ID): Boolean","description":"love.forte.simbot.ID.doEquals","location":"simbot-api/love.forte.simbot/-i-d/do-equals.html","searchKeys":["doEquals","protected abstract fun doEquals(other: ID): Boolean","love.forte.simbot.ID.doEquals"]},{"name":"protected abstract suspend fun doCancel(reason: Throwable?): Boolean","description":"love.forte.simbot.bot.BotManager.doCancel","location":"simbot-api/love.forte.simbot.bot/-bot-manager/do-cancel.html","searchKeys":["doCancel","protected abstract suspend fun doCancel(reason: Throwable?): Boolean","love.forte.simbot.bot.BotManager.doCancel"]},{"name":"protected abstract val decoder: BotVerifyInfoDecoder","description":"love.forte.simbot.bot.DecoderBotVerifyInfo.decoder","location":"simbot-api/love.forte.simbot.bot/-decoder-bot-verify-info/decoder.html","searchKeys":["decoder","protected abstract val decoder: BotVerifyInfoDecoder","love.forte.simbot.bot.DecoderBotVerifyInfo.decoder"]},{"name":"protected abstract val modelDecoder: BinaryFormat","description":"love.forte.simbot.bot.StandardBinaryFormatBotVerifyInfoDecoder.modelDecoder","location":"simbot-api/love.forte.simbot.bot/-standard-binary-format-bot-verify-info-decoder/model-decoder.html","searchKeys":["modelDecoder","protected abstract val modelDecoder: BinaryFormat","love.forte.simbot.bot.StandardBinaryFormatBotVerifyInfoDecoder.modelDecoder"]},{"name":"protected abstract val modelDecoder: StringFormat","description":"love.forte.simbot.bot.StandardStringFormatBotVerifyInfoDecoder.modelDecoder","location":"simbot-api/love.forte.simbot.bot/-standard-string-format-bot-verify-info-decoder/model-decoder.html","searchKeys":["modelDecoder","protected abstract val modelDecoder: StringFormat","love.forte.simbot.bot.StandardStringFormatBotVerifyInfoDecoder.modelDecoder"]},{"name":"protected abstract val self: I","description":"love.forte.simbot.utils.item.BaseItems.self","location":"simbot-api/love.forte.simbot.utils.item/-base-items/self.html","searchKeys":["self","protected abstract val self: I","love.forte.simbot.utils.item.BaseItems.self"]},{"name":"protected fun ArbitraryNumericalID()","description":"love.forte.simbot.ArbitraryNumericalID.ArbitraryNumericalID","location":"simbot-api/love.forte.simbot/-arbitrary-numerical-i-d/-arbitrary-numerical-i-d.html","searchKeys":["ArbitraryNumericalID","protected fun ArbitraryNumericalID()","love.forte.simbot.ArbitraryNumericalID.ArbitraryNumericalID"]},{"name":"protected fun BaseStandardMessage()","description":"love.forte.simbot.message.BaseStandardMessage.BaseStandardMessage","location":"simbot-api/love.forte.simbot.message/-base-standard-message/-base-standard-message.html","searchKeys":["BaseStandardMessage","protected fun BaseStandardMessage()","love.forte.simbot.message.BaseStandardMessage.BaseStandardMessage"]},{"name":"protected fun ID()","description":"love.forte.simbot.ID.ID","location":"simbot-api/love.forte.simbot/-i-d/-i-d.html","searchKeys":["ID","protected fun ID()","love.forte.simbot.ID.ID"]},{"name":"protected fun MessageList()","description":"love.forte.simbot.message.MessageList.MessageList","location":"simbot-api/love.forte.simbot.message/-message-list/-message-list.html","searchKeys":["MessageList","protected fun MessageList()","love.forte.simbot.message.MessageList.MessageList"]},{"name":"protected fun NumericalID()","description":"love.forte.simbot.NumericalID.NumericalID","location":"simbot-api/love.forte.simbot/-numerical-i-d/-numerical-i-d.html","searchKeys":["NumericalID","protected fun NumericalID()","love.forte.simbot.NumericalID.NumericalID"]},{"name":"protected fun RemoteMessageContent()","description":"love.forte.simbot.message.RemoteMessageContent.RemoteMessageContent","location":"simbot-api/love.forte.simbot.message/-remote-message-content/-remote-message-content.html","searchKeys":["RemoteMessageContent","protected fun RemoteMessageContent()","love.forte.simbot.message.RemoteMessageContent.RemoteMessageContent"]},{"name":"protected fun SpecialEventResult()","description":"love.forte.simbot.event.SpecialEventResult.SpecialEventResult","location":"simbot-api/love.forte.simbot.event/-special-event-result/-special-event-result.html","searchKeys":["SpecialEventResult","protected fun SpecialEventResult()","love.forte.simbot.event.SpecialEventResult.SpecialEventResult"]},{"name":"protected fun StandardBotVerifyInfoDecoderFactory()","description":"love.forte.simbot.bot.StandardBotVerifyInfoDecoderFactory.StandardBotVerifyInfoDecoderFactory","location":"simbot-api/love.forte.simbot.bot/-standard-bot-verify-info-decoder-factory/-standard-bot-verify-info-decoder-factory.html","searchKeys":["StandardBotVerifyInfoDecoderFactory","protected fun StandardBotVerifyInfoDecoderFactory()","love.forte.simbot.bot.StandardBotVerifyInfoDecoderFactory.StandardBotVerifyInfoDecoderFactory"]},{"name":"protected fun StandardMessageReceipt()","description":"love.forte.simbot.message.StandardMessageReceipt.StandardMessageReceipt","location":"simbot-api/love.forte.simbot.message/-standard-message-receipt/-standard-message-receipt.html","searchKeys":["StandardMessageReceipt","protected fun StandardMessageReceipt()","love.forte.simbot.message.StandardMessageReceipt.StandardMessageReceipt"]},{"name":"protected fun StandardResource()","description":"love.forte.simbot.resources.StandardResource.StandardResource","location":"simbot-api/love.forte.simbot.resources/-standard-resource/-standard-resource.html","searchKeys":["StandardResource","protected fun StandardResource()","love.forte.simbot.resources.StandardResource.StandardResource"]},{"name":"protected fun Text(text: String)","description":"love.forte.simbot.message.Text.Text","location":"simbot-api/love.forte.simbot.message/-text/-text.html","searchKeys":["Text","protected fun Text(text: String)","love.forte.simbot.message.Text.Text"]},{"name":"protected fun Timestamp()","description":"love.forte.simbot.Timestamp.Timestamp","location":"simbot-api/love.forte.simbot/-timestamp/-timestamp.html","searchKeys":["Timestamp","protected fun Timestamp()","love.forte.simbot.Timestamp.Timestamp"]},{"name":"protected open fun InputStream.prepare(): ByteArray","description":"love.forte.simbot.resources.BinaryFormatDeserializableResourceDecoder.prepare","location":"simbot-api/love.forte.simbot.resources/-binary-format-deserializable-resource-decoder/prepare.html","searchKeys":["prepare","protected open fun InputStream.prepare(): ByteArray","love.forte.simbot.resources.BinaryFormatDeserializableResourceDecoder.prepare"]},{"name":"protected open fun InputStream.prepare(): String","description":"love.forte.simbot.resources.StringFormatDeserializableResourceDecoder.prepare","location":"simbot-api/love.forte.simbot.resources/-string-format-deserializable-resource-decoder/prepare.html","searchKeys":["prepare","protected open fun InputStream.prepare(): String","love.forte.simbot.resources.StringFormatDeserializableResourceDecoder.prepare"]},{"name":"protected open fun beManaged(): Boolean","description":"love.forte.simbot.bot.BotManager.beManaged","location":"simbot-api/love.forte.simbot.bot/-bot-manager/be-managed.html","searchKeys":["beManaged","protected open fun beManaged(): Boolean","love.forte.simbot.bot.BotManager.beManaged"]},{"name":"protected open override fun InputStream.prepareToValue(): ByteArray","description":"love.forte.simbot.bot.StandardBinaryFormatBotVerifyInfoDecoder.prepareToValue","location":"simbot-api/love.forte.simbot.bot/-standard-binary-format-bot-verify-info-decoder/prepare-to-value.html","searchKeys":["prepareToValue","protected open override fun InputStream.prepareToValue(): ByteArray","love.forte.simbot.bot.StandardBinaryFormatBotVerifyInfoDecoder.prepareToValue"]},{"name":"protected open override fun InputStream.prepareToValue(): Map<String, String>","description":"love.forte.simbot.bot.PropertiesBotVerifyInfoDecoder.prepareToValue","location":"simbot-api/love.forte.simbot.bot/-properties-bot-verify-info-decoder/prepare-to-value.html","searchKeys":["prepareToValue","protected open override fun InputStream.prepareToValue(): Map<String, String>","love.forte.simbot.bot.PropertiesBotVerifyInfoDecoder.prepareToValue"]},{"name":"protected open override fun InputStream.prepareToValue(): String","description":"love.forte.simbot.bot.StandardStringFormatBotVerifyInfoDecoder.prepareToValue","location":"simbot-api/love.forte.simbot.bot/-standard-string-format-bot-verify-info-decoder/prepare-to-value.html","searchKeys":["prepareToValue","protected open override fun InputStream.prepareToValue(): String","love.forte.simbot.bot.StandardStringFormatBotVerifyInfoDecoder.prepareToValue"]},{"name":"protected open override fun clone(): BigDecimalID","description":"love.forte.simbot.BigDecimalID.clone","location":"simbot-api/love.forte.simbot/-big-decimal-i-d/clone.html","searchKeys":["clone","protected open override fun clone(): BigDecimalID","love.forte.simbot.BigDecimalID.clone"]},{"name":"protected open override fun clone(): BigIntegerID","description":"love.forte.simbot.BigIntegerID.clone","location":"simbot-api/love.forte.simbot/-big-integer-i-d/clone.html","searchKeys":["clone","protected open override fun clone(): BigIntegerID","love.forte.simbot.BigIntegerID.clone"]},{"name":"protected open override fun clone(): CharSequenceID","description":"love.forte.simbot.CharSequenceID.clone","location":"simbot-api/love.forte.simbot/-char-sequence-i-d/clone.html","searchKeys":["clone","protected open override fun clone(): CharSequenceID","love.forte.simbot.CharSequenceID.clone"]},{"name":"protected open override fun clone(): DoubleID","description":"love.forte.simbot.DoubleID.clone","location":"simbot-api/love.forte.simbot/-double-i-d/clone.html","searchKeys":["clone","protected open override fun clone(): DoubleID","love.forte.simbot.DoubleID.clone"]},{"name":"protected open override fun clone(): FloatID","description":"love.forte.simbot.FloatID.clone","location":"simbot-api/love.forte.simbot/-float-i-d/clone.html","searchKeys":["clone","protected open override fun clone(): FloatID","love.forte.simbot.FloatID.clone"]},{"name":"protected open override fun clone(): IntID","description":"love.forte.simbot.IntID.clone","location":"simbot-api/love.forte.simbot/-int-i-d/clone.html","searchKeys":["clone","protected open override fun clone(): IntID","love.forte.simbot.IntID.clone"]},{"name":"protected open override fun clone(): LongID","description":"love.forte.simbot.LongID.clone","location":"simbot-api/love.forte.simbot/-long-i-d/clone.html","searchKeys":["clone","protected open override fun clone(): LongID","love.forte.simbot.LongID.clone"]},{"name":"protected open override fun doEquals(other: ID): Boolean","description":"love.forte.simbot.CharSequenceID.doEquals","location":"simbot-api/love.forte.simbot/-char-sequence-i-d/do-equals.html","searchKeys":["doEquals","protected open override fun doEquals(other: ID): Boolean","love.forte.simbot.CharSequenceID.doEquals"]},{"name":"protected open override fun doEquals(other: ID): Boolean","description":"love.forte.simbot.NumericalID.doEquals","location":"simbot-api/love.forte.simbot/-numerical-i-d/do-equals.html","searchKeys":["doEquals","protected open override fun doEquals(other: ID): Boolean","love.forte.simbot.NumericalID.doEquals"]},{"name":"protected open override val decoder: BotVerifyInfoDecoder","description":"love.forte.simbot.bot.ByteArrayBotVerifyInfo.decoder","location":"simbot-api/love.forte.simbot.bot/-byte-array-bot-verify-info/decoder.html","searchKeys":["decoder","protected open override val decoder: BotVerifyInfoDecoder","love.forte.simbot.bot.ByteArrayBotVerifyInfo.decoder"]},{"name":"protected open override val modelDecoder: StringFormat","description":"love.forte.simbot.bot.JsonBotVerifyInfoDecoder.modelDecoder","location":"simbot-api/love.forte.simbot.bot/-json-bot-verify-info-decoder/model-decoder.html","searchKeys":["modelDecoder","protected open override val modelDecoder: StringFormat","love.forte.simbot.bot.JsonBotVerifyInfoDecoder.modelDecoder"]},{"name":"protected open override val modelDecoder: StringFormat","description":"love.forte.simbot.bot.YamlBotVerifyInfoDecoder.modelDecoder","location":"simbot-api/love.forte.simbot.bot/-yaml-bot-verify-info-decoder/model-decoder.html","searchKeys":["modelDecoder","protected open override val modelDecoder: StringFormat","love.forte.simbot.bot.YamlBotVerifyInfoDecoder.modelDecoder"]},{"name":"protected open override val self: CollectionItems<T>","description":"love.forte.simbot.utils.item.CollectionItems.self","location":"simbot-api/love.forte.simbot.utils.item/-collection-items/self.html","searchKeys":["self","protected open override val self: CollectionItems<T>","love.forte.simbot.utils.item.CollectionItems.self"]},{"name":"protected open override val self: FlowItems<T>","description":"love.forte.simbot.utils.item.FlowItems.self","location":"simbot-api/love.forte.simbot.utils.item/-flow-items/self.html","searchKeys":["self","protected open override val self: FlowItems<T>","love.forte.simbot.utils.item.FlowItems.self"]},{"name":"protected open override val self: SequenceItems<T>","description":"love.forte.simbot.utils.item.SequenceItems.self","location":"simbot-api/love.forte.simbot.utils.item/-sequence-items/self.html","searchKeys":["self","protected open override val self: SequenceItems<T>","love.forte.simbot.utils.item.SequenceItems.self"]},{"name":"protected open override val self: SimpleChannelIteratorItems<T>","description":"love.forte.simbot.utils.item.SimpleChannelIteratorItems.self","location":"simbot-api/love.forte.simbot.utils.item/-simple-channel-iterator-items/self.html","searchKeys":["self","protected open override val self: SimpleChannelIteratorItems<T>","love.forte.simbot.utils.item.SimpleChannelIteratorItems.self"]},{"name":"protected open override val self: SimpleIteratorItems<T>","description":"love.forte.simbot.utils.item.SimpleIteratorItems.self","location":"simbot-api/love.forte.simbot.utils.item/-simple-iterator-items/self.html","searchKeys":["self","protected open override val self: SimpleIteratorItems<T>","love.forte.simbot.utils.item.SimpleIteratorItems.self"]},{"name":"protected open override val self: StreamItems<T>","description":"love.forte.simbot.utils.item.StreamItems.self","location":"simbot-api/love.forte.simbot.utils.item/-stream-items/self.html","searchKeys":["self","protected open override val self: StreamItems<T>","love.forte.simbot.utils.item.StreamItems.self"]},{"name":"protected open val initializedComponentId: String?","description":"love.forte.simbot.bot.DecoderBotVerifyInfo.initializedComponentId","location":"simbot-api/love.forte.simbot.bot/-decoder-bot-verify-info/initialized-component-id.html","searchKeys":["initializedComponentId","protected open val initializedComponentId: String?","love.forte.simbot.bot.DecoderBotVerifyInfo.initializedComponentId"]},{"name":"protected open val preprocessingProperties: Items.PreprocessingProperties","description":"love.forte.simbot.utils.item.BaseItems.preprocessingProperties","location":"simbot-api/love.forte.simbot.utils.item/-base-items/preprocessing-properties.html","searchKeys":["preprocessingProperties","protected open val preprocessingProperties: Items.PreprocessingProperties","love.forte.simbot.utils.item.BaseItems.preprocessingProperties"]},{"name":"protected var batch: Int","description":"love.forte.simbot.utils.item.BaseItems.batch","location":"simbot-api/love.forte.simbot.utils.item/-base-items/batch.html","searchKeys":["batch","protected var batch: Int","love.forte.simbot.utils.item.BaseItems.batch"]},{"name":"protected var limit: Int","description":"love.forte.simbot.utils.item.BaseItems.limit","location":"simbot-api/love.forte.simbot.utils.item/-base-items/limit.html","searchKeys":["limit","protected var limit: Int","love.forte.simbot.utils.item.BaseItems.limit"]},{"name":"protected var offset: Int","description":"love.forte.simbot.utils.item.BaseItems.offset","location":"simbot-api/love.forte.simbot.utils.item/-base-items/offset.html","searchKeys":["offset","protected var offset: Int","love.forte.simbot.utils.item.BaseItems.offset"]},{"name":"sealed class ArbitraryNumericalID<N : Number> : NumericalID<N> ","description":"love.forte.simbot.ArbitraryNumericalID","location":"simbot-api/love.forte.simbot/-arbitrary-numerical-i-d/index.html","searchKeys":["ArbitraryNumericalID","sealed class ArbitraryNumericalID<N : Number> : NumericalID<N> ","love.forte.simbot.ArbitraryNumericalID"]},{"name":"sealed class BaseStandardMessage<out E : Message.Element<E>> : StandardMessage<E> ","description":"love.forte.simbot.message.BaseStandardMessage","location":"simbot-api/love.forte.simbot.message/-base-standard-message/index.html","searchKeys":["BaseStandardMessage","sealed class BaseStandardMessage<out E : Message.Element<E>> : StandardMessage<E> ","love.forte.simbot.message.BaseStandardMessage"]},{"name":"sealed class ID : Comparable<ID> , Cloneable","description":"love.forte.simbot.ID","location":"simbot-api/love.forte.simbot/-i-d/index.html","searchKeys":["ID","sealed class ID : Comparable<ID> , Cloneable","love.forte.simbot.ID"]},{"name":"sealed class MessageList : Messages, IndexAccessView<Message.Element<*>> ","description":"love.forte.simbot.message.MessageList","location":"simbot-api/love.forte.simbot.message/-message-list/index.html","searchKeys":["MessageList","sealed class MessageList : Messages, IndexAccessView<Message.Element<*>> ","love.forte.simbot.message.MessageList"]},{"name":"sealed class NumericalID<N : Number> : ID","description":"love.forte.simbot.NumericalID","location":"simbot-api/love.forte.simbot/-numerical-i-d/index.html","searchKeys":["NumericalID","sealed class NumericalID<N : Number> : ID","love.forte.simbot.NumericalID"]},{"name":"sealed class RemoteMessageContent : MessageContent, DeleteSupport","description":"love.forte.simbot.message.RemoteMessageContent","location":"simbot-api/love.forte.simbot.message/-remote-message-content/index.html","searchKeys":["RemoteMessageContent","sealed class RemoteMessageContent : MessageContent, DeleteSupport","love.forte.simbot.message.RemoteMessageContent"]},{"name":"sealed class SpecialEventResult : EventResult","description":"love.forte.simbot.event.SpecialEventResult","location":"simbot-api/love.forte.simbot.event/-special-event-result/index.html","searchKeys":["SpecialEventResult","sealed class SpecialEventResult : EventResult","love.forte.simbot.event.SpecialEventResult"]},{"name":"sealed class StandardBotVerifyInfoDecoderFactory<C : Any, D : BotVerifyInfoDecoder> : BotVerifyInfoDecoderFactory<C, D> ","description":"love.forte.simbot.bot.StandardBotVerifyInfoDecoderFactory","location":"simbot-api/love.forte.simbot.bot/-standard-bot-verify-info-decoder-factory/index.html","searchKeys":["StandardBotVerifyInfoDecoderFactory","sealed class StandardBotVerifyInfoDecoderFactory<C : Any, D : BotVerifyInfoDecoder> : BotVerifyInfoDecoderFactory<C, D> ","love.forte.simbot.bot.StandardBotVerifyInfoDecoderFactory"]},{"name":"sealed class StandardMessageReceipt : MessageReceipt","description":"love.forte.simbot.message.StandardMessageReceipt","location":"simbot-api/love.forte.simbot.message/-standard-message-receipt/index.html","searchKeys":["StandardMessageReceipt","sealed class StandardMessageReceipt : MessageReceipt","love.forte.simbot.message.StandardMessageReceipt"]},{"name":"sealed class StandardResource : Resource, Closeable","description":"love.forte.simbot.resources.StandardResource","location":"simbot-api/love.forte.simbot.resources/-standard-resource/index.html","searchKeys":["StandardResource","sealed class StandardResource : Resource, Closeable","love.forte.simbot.resources.StandardResource"]},{"name":"sealed class Timestamp : Comparable<Timestamp> ","description":"love.forte.simbot.Timestamp","location":"simbot-api/love.forte.simbot/-timestamp/index.html","searchKeys":["Timestamp","sealed class Timestamp : Comparable<Timestamp> ","love.forte.simbot.Timestamp"]},{"name":"suspend fun <Config : ApplicationConfiguration, Builder : ApplicationBuilder<A>, A : Application> buildSimbotApplication(factory: ApplicationFactory<Config, Builder, A>, block: ApplicationDslBuilder<Config, Builder, A>.() -> Unit = {}): A","description":"love.forte.simbot.application.buildSimbotApplication","location":"simbot-api/love.forte.simbot.application/build-simbot-application.html","searchKeys":["buildSimbotApplication","suspend fun <Config : ApplicationConfiguration, Builder : ApplicationBuilder<A>, A : Application> buildSimbotApplication(factory: ApplicationFactory<Config, Builder, A>, block: ApplicationDslBuilder<Config, Builder, A>.() -> Unit = {}): A","love.forte.simbot.application.buildSimbotApplication"]},{"name":"suspend fun <Config : ApplicationConfiguration, Builder : ApplicationBuilder<A>, A : Application> createSimbotApplication(factory: ApplicationFactory<Config, Builder, A>, configurator: Config.() -> Unit = {}, builder: suspend Builder.(Config) -> Unit = {}): A","description":"love.forte.simbot.application.createSimbotApplication","location":"simbot-api/love.forte.simbot.application/create-simbot-application.html","searchKeys":["createSimbotApplication","suspend fun <Config : ApplicationConfiguration, Builder : ApplicationBuilder<A>, A : Application> createSimbotApplication(factory: ApplicationFactory<Config, Builder, A>, configurator: Config.() -> Unit = {}, builder: suspend Builder.(Config) -> Unit = {}): A","love.forte.simbot.application.createSimbotApplication"]},{"name":"suspend fun <E : Event> ContinuousSessionContext.waitingForNext(k: Event.Key<E>, matcher: ContinuousSessionEventMatcher<E> = ContinuousSessionEventMatcher): E","description":"love.forte.simbot.event.waitingForNext","location":"simbot-api/love.forte.simbot.event/waiting-for-next.html","searchKeys":["waitingForNext","suspend fun <E : Event> ContinuousSessionContext.waitingForNext(k: Event.Key<E>, matcher: ContinuousSessionEventMatcher<E> = ContinuousSessionEventMatcher): E","love.forte.simbot.event.waitingForNext"]},{"name":"suspend fun <E : Event> Event.next(id: String, key: Event.Key<E>): E","description":"love.forte.simbot.event.ContinuousSessionContext.next","location":"simbot-api/love.forte.simbot.event/-continuous-session-context/next.html","searchKeys":["next","suspend fun <E : Event> Event.next(id: String, key: Event.Key<E>): E","love.forte.simbot.event.ContinuousSessionContext.next"]},{"name":"suspend fun <E : Event> Event.next(key: Event.Key<E>): E","description":"love.forte.simbot.event.ContinuousSessionContext.next","location":"simbot-api/love.forte.simbot.event/-continuous-session-context/next.html","searchKeys":["next","suspend fun <E : Event> Event.next(key: Event.Key<E>): E","love.forte.simbot.event.ContinuousSessionContext.next"]},{"name":"suspend fun <E : Event> EventProcessingContext.next(id: String, key: Event.Key<E>): E","description":"love.forte.simbot.event.ContinuousSessionContext.next","location":"simbot-api/love.forte.simbot.event/-continuous-session-context/next.html","searchKeys":["next","suspend fun <E : Event> EventProcessingContext.next(id: String, key: Event.Key<E>): E","love.forte.simbot.event.ContinuousSessionContext.next"]},{"name":"suspend fun <E : Event> EventProcessingContext.next(key: Event.Key<E>): E","description":"love.forte.simbot.event.ContinuousSessionContext.next","location":"simbot-api/love.forte.simbot.event/-continuous-session-context/next.html","searchKeys":["next","suspend fun <E : Event> EventProcessingContext.next(key: Event.Key<E>): E","love.forte.simbot.event.ContinuousSessionContext.next"]},{"name":"suspend fun <E : Event> waitingForNext(id: String = randomIdStr(), key: Event.Key<E>, matcher: ContinuousSessionEventMatcher<E> = ContinuousSessionEventMatcher): E","description":"love.forte.simbot.event.ContinuousSessionContext.waitingForNext","location":"simbot-api/love.forte.simbot.event/-continuous-session-context/waiting-for-next.html","searchKeys":["waitingForNext","suspend fun <E : Event> waitingForNext(id: String = randomIdStr(), key: Event.Key<E>, matcher: ContinuousSessionEventMatcher<E> = ContinuousSessionEventMatcher): E","love.forte.simbot.event.ContinuousSessionContext.waitingForNext"]},{"name":"suspend fun <E : MessageEvent> ContinuousSessionContext.waitingForNextMessage(key: Event.Key<E>, matcher: ContinuousSessionEventMatcher<E> = ContinuousSessionEventMatcher): MessageContent","description":"love.forte.simbot.event.waitingForNextMessage","location":"simbot-api/love.forte.simbot.event/waiting-for-next-message.html","searchKeys":["waitingForNextMessage","suspend fun <E : MessageEvent> ContinuousSessionContext.waitingForNextMessage(key: Event.Key<E>, matcher: ContinuousSessionEventMatcher<E> = ContinuousSessionEventMatcher): MessageContent","love.forte.simbot.event.waitingForNextMessage"]},{"name":"suspend fun <E : MessageEvent> waitingForNextMessage(id: String, key: Event.Key<E>, matcher: ContinuousSessionEventMatcher<E> = ContinuousSessionEventMatcher): MessageContent","description":"love.forte.simbot.event.ContinuousSessionContext.waitingForNextMessage","location":"simbot-api/love.forte.simbot.event/-continuous-session-context/waiting-for-next-message.html","searchKeys":["waitingForNextMessage","suspend fun <E : MessageEvent> waitingForNextMessage(id: String, key: Event.Key<E>, matcher: ContinuousSessionEventMatcher<E> = ContinuousSessionEventMatcher): MessageContent","love.forte.simbot.event.ContinuousSessionContext.waitingForNextMessage"]},{"name":"suspend fun Event.next(id: String = randomIdStr()): Event","description":"love.forte.simbot.event.ContinuousSessionContext.next","location":"simbot-api/love.forte.simbot.event/-continuous-session-context/next.html","searchKeys":["next","suspend fun Event.next(id: String = randomIdStr()): Event","love.forte.simbot.event.ContinuousSessionContext.next"]},{"name":"suspend fun Event.nextMessage(id: String, key: Event.Key<out MessageEvent>): MessageContent","description":"love.forte.simbot.event.ContinuousSessionContext.nextMessage","location":"simbot-api/love.forte.simbot.event/-continuous-session-context/next-message.html","searchKeys":["nextMessage","suspend fun Event.nextMessage(id: String, key: Event.Key<out MessageEvent>): MessageContent","love.forte.simbot.event.ContinuousSessionContext.nextMessage"]},{"name":"suspend fun Event.nextMessage(key: Event.Key<out MessageEvent>): MessageContent","description":"love.forte.simbot.event.ContinuousSessionContext.nextMessage","location":"simbot-api/love.forte.simbot.event/-continuous-session-context/next-message.html","searchKeys":["nextMessage","suspend fun Event.nextMessage(key: Event.Key<out MessageEvent>): MessageContent","love.forte.simbot.event.ContinuousSessionContext.nextMessage"]},{"name":"suspend fun Event.replyIfSupport(message: () -> Message): MessageReceipt?","description":"love.forte.simbot.action.replyIfSupport","location":"simbot-api/love.forte.simbot.action/reply-if-support.html","searchKeys":["replyIfSupport","suspend fun Event.replyIfSupport(message: () -> Message): MessageReceipt?","love.forte.simbot.action.replyIfSupport"]},{"name":"suspend fun Event.replyIfSupport(message: Message): MessageReceipt?","description":"love.forte.simbot.action.replyIfSupport","location":"simbot-api/love.forte.simbot.action/reply-if-support.html","searchKeys":["replyIfSupport","suspend fun Event.replyIfSupport(message: Message): MessageReceipt?","love.forte.simbot.action.replyIfSupport"]},{"name":"suspend fun Event.replyIfSupport(message: MessageContent): MessageReceipt?","description":"love.forte.simbot.action.replyIfSupport","location":"simbot-api/love.forte.simbot.action/reply-if-support.html","searchKeys":["replyIfSupport","suspend fun Event.replyIfSupport(message: MessageContent): MessageReceipt?","love.forte.simbot.action.replyIfSupport"]},{"name":"suspend fun Event.replyIfSupport(message: String): MessageReceipt?","description":"love.forte.simbot.action.replyIfSupport","location":"simbot-api/love.forte.simbot.action/reply-if-support.html","searchKeys":["replyIfSupport","suspend fun Event.replyIfSupport(message: String): MessageReceipt?","love.forte.simbot.action.replyIfSupport"]},{"name":"suspend fun EventProcessingContext.next(id: String = randomIdStr()): Event","description":"love.forte.simbot.event.ContinuousSessionContext.next","location":"simbot-api/love.forte.simbot.event/-continuous-session-context/next.html","searchKeys":["next","suspend fun EventProcessingContext.next(id: String = randomIdStr()): Event","love.forte.simbot.event.ContinuousSessionContext.next"]},{"name":"suspend fun EventProcessingContext.nextMessage(id: String, key: Event.Key<out MessageEvent>): MessageContent","description":"love.forte.simbot.event.ContinuousSessionContext.nextMessage","location":"simbot-api/love.forte.simbot.event/-continuous-session-context/next-message.html","searchKeys":["nextMessage","suspend fun EventProcessingContext.nextMessage(id: String, key: Event.Key<out MessageEvent>): MessageContent","love.forte.simbot.event.ContinuousSessionContext.nextMessage"]},{"name":"suspend fun EventProcessingContext.nextMessage(key: Event.Key<out MessageEvent>): MessageContent","description":"love.forte.simbot.event.ContinuousSessionContext.nextMessage","location":"simbot-api/love.forte.simbot.event/-continuous-session-context/next-message.html","searchKeys":["nextMessage","suspend fun EventProcessingContext.nextMessage(key: Event.Key<out MessageEvent>): MessageContent","love.forte.simbot.event.ContinuousSessionContext.nextMessage"]},{"name":"suspend fun deleteAll(): Int","description":"love.forte.simbot.message.AggregatedMessageReceipt.deleteAll","location":"simbot-api/love.forte.simbot.message/-aggregated-message-receipt/delete-all.html","searchKeys":["deleteAll","suspend fun deleteAll(): Int","love.forte.simbot.message.AggregatedMessageReceipt.deleteAll"]},{"name":"suspend fun image(bot: Bot, id: ID): MessagesBuilder","description":"love.forte.simbot.message.MessagesBuilder.image","location":"simbot-api/love.forte.simbot.message/-messages-builder/image.html","searchKeys":["image","suspend fun image(bot: Bot, id: ID): MessagesBuilder","love.forte.simbot.message.MessagesBuilder.image"]},{"name":"suspend fun waitingForNext(id: String = randomIdStr(), matcher: ContinuousSessionEventMatcher<Event> = ContinuousSessionEventMatcher): Event","description":"love.forte.simbot.event.ContinuousSessionContext.waitingForNext","location":"simbot-api/love.forte.simbot.event/-continuous-session-context/waiting-for-next.html","searchKeys":["waitingForNext","suspend fun waitingForNext(id: String = randomIdStr(), matcher: ContinuousSessionEventMatcher<Event> = ContinuousSessionEventMatcher): Event","love.forte.simbot.event.ContinuousSessionContext.waitingForNext"]},{"name":"suspend fun waitingForNextMessage(id: String = randomIdStr(), matcher: ContinuousSessionEventMatcher<MessageEvent> = ContinuousSessionEventMatcher): MessageContent","description":"love.forte.simbot.event.ContinuousSessionContext.waitingForNextMessage","location":"simbot-api/love.forte.simbot.event/-continuous-session-context/waiting-for-next-message.html","searchKeys":["waitingForNextMessage","suspend fun waitingForNextMessage(id: String = randomIdStr(), matcher: ContinuousSessionEventMatcher<MessageEvent> = ContinuousSessionEventMatcher): MessageContent","love.forte.simbot.event.ContinuousSessionContext.waitingForNextMessage"]},{"name":"val AtomicInteger.ID: IntID","description":"love.forte.simbot.ID","location":"simbot-api/love.forte.simbot/-i-d.html","searchKeys":["ID","val AtomicInteger.ID: IntID","love.forte.simbot.ID"]},{"name":"val AtomicLong.ID: LongID","description":"love.forte.simbot.ID","location":"simbot-api/love.forte.simbot/-i-d.html","searchKeys":["ID","val AtomicLong.ID: LongID","love.forte.simbot.ID"]},{"name":"val BigDecimal.ID: BigDecimalID","description":"love.forte.simbot.ID","location":"simbot-api/love.forte.simbot/-i-d.html","searchKeys":["ID","val BigDecimal.ID: BigDecimalID","love.forte.simbot.ID"]},{"name":"val BigInteger.ID: BigIntegerID","description":"love.forte.simbot.ID","location":"simbot-api/love.forte.simbot/-i-d.html","searchKeys":["ID","val BigInteger.ID: BigIntegerID","love.forte.simbot.ID"]},{"name":"val Char.ID: IntID","description":"love.forte.simbot.ID","location":"simbot-api/love.forte.simbot/-i-d.html","searchKeys":["ID","val Char.ID: IntID","love.forte.simbot.ID"]},{"name":"val CharSequence.ID: CharSequenceID","description":"love.forte.simbot.ID","location":"simbot-api/love.forte.simbot/-i-d.html","searchKeys":["ID","val CharSequence.ID: CharSequenceID","love.forte.simbot.ID"]},{"name":"val DefaultAsyncContext: CoroutineContext","description":"love.forte.simbot.utils.DefaultAsyncContext","location":"simbot-api/love.forte.simbot.utils/-default-async-context.html","searchKeys":["DefaultAsyncContext","val DefaultAsyncContext: CoroutineContext","love.forte.simbot.utils.DefaultAsyncContext"]},{"name":"val DefaultAsyncDispatcher: CoroutineDispatcher","description":"love.forte.simbot.utils.DefaultAsyncDispatcher","location":"simbot-api/love.forte.simbot.utils/-default-async-dispatcher.html","searchKeys":["DefaultAsyncDispatcher","val DefaultAsyncDispatcher: CoroutineDispatcher","love.forte.simbot.utils.DefaultAsyncDispatcher"]},{"name":"val DefaultAsyncDispatcherOrNull: CoroutineDispatcher?","description":"love.forte.simbot.utils.DefaultAsyncDispatcherOrNull","location":"simbot-api/love.forte.simbot.utils/-default-async-dispatcher-or-null.html","searchKeys":["DefaultAsyncDispatcherOrNull","val DefaultAsyncDispatcherOrNull: CoroutineDispatcher?","love.forte.simbot.utils.DefaultAsyncDispatcherOrNull"]},{"name":"val DefaultBlockingContext: CoroutineContext","description":"love.forte.simbot.utils.DefaultBlockingContext","location":"simbot-api/love.forte.simbot.utils/-default-blocking-context.html","searchKeys":["DefaultBlockingContext","val DefaultBlockingContext: CoroutineContext","love.forte.simbot.utils.DefaultBlockingContext"]},{"name":"val DefaultBlockingDispatcher: CoroutineDispatcher","description":"love.forte.simbot.utils.DefaultBlockingDispatcher","location":"simbot-api/love.forte.simbot.utils/-default-blocking-dispatcher.html","searchKeys":["DefaultBlockingDispatcher","val DefaultBlockingDispatcher: CoroutineDispatcher","love.forte.simbot.utils.DefaultBlockingDispatcher"]},{"name":"val DefaultBlockingDispatcherOrNull: CoroutineDispatcher?","description":"love.forte.simbot.utils.DefaultBlockingDispatcherOrNull","location":"simbot-api/love.forte.simbot.utils/-default-blocking-dispatcher-or-null.html","searchKeys":["DefaultBlockingDispatcherOrNull","val DefaultBlockingDispatcherOrNull: CoroutineDispatcher?","love.forte.simbot.utils.DefaultBlockingDispatcherOrNull"]},{"name":"val Double.ID: DoubleID","description":"love.forte.simbot.ID","location":"simbot-api/love.forte.simbot/-i-d.html","searchKeys":["ID","val Double.ID: DoubleID","love.forte.simbot.ID"]},{"name":"val Duration.java: JavaDuration","description":"love.forte.simbot.java","location":"simbot-api/love.forte.simbot/java.html","searchKeys":["java","val Duration.java: JavaDuration","love.forte.simbot.java"]},{"name":"val Duration.javaOrNull: JavaDuration?","description":"love.forte.simbot.javaOrNull","location":"simbot-api/love.forte.simbot/java-or-null.html","searchKeys":["javaOrNull","val Duration.javaOrNull: JavaDuration?","love.forte.simbot.javaOrNull"]},{"name":"val EMPTY: CharSequenceID","description":"love.forte.simbot.CharSequenceID.Companion.EMPTY","location":"simbot-api/love.forte.simbot/-char-sequence-i-d/-companion/-e-m-p-t-y.html","searchKeys":["EMPTY","val EMPTY: CharSequenceID","love.forte.simbot.CharSequenceID.Companion.EMPTY"]},{"name":"val Float.ID: FloatID","description":"love.forte.simbot.ID","location":"simbot-api/love.forte.simbot/-i-d.html","searchKeys":["ID","val Float.ID: FloatID","love.forte.simbot.ID"]},{"name":"val ID.literal: String","description":"love.forte.simbot.literal","location":"simbot-api/love.forte.simbot/literal.html","searchKeys":["literal","val ID.literal: String","love.forte.simbot.literal"]},{"name":"val Int.ID: IntID","description":"love.forte.simbot.ID","location":"simbot-api/love.forte.simbot/-i-d.html","searchKeys":["ID","val Int.ID: IntID","love.forte.simbot.ID"]},{"name":"val JavaDuration.kotlin: Duration","description":"love.forte.simbot.kotlin","location":"simbot-api/love.forte.simbot/kotlin.html","searchKeys":["kotlin","val JavaDuration.kotlin: Duration","love.forte.simbot.kotlin"]},{"name":"val Json: JsonBotVerifyInfoDecoder.Factory","description":"love.forte.simbot.bot.StandardBotVerifyInfoDecoderFactory.Companion.Json","location":"simbot-api/love.forte.simbot.bot/-standard-bot-verify-info-decoder-factory/-companion/-json.html","searchKeys":["Json","val Json: JsonBotVerifyInfoDecoder.Factory","love.forte.simbot.bot.StandardBotVerifyInfoDecoderFactory.Companion.Json"]},{"name":"val Limiter.pageNum: Int","description":"love.forte.simbot.pageNum","location":"simbot-api/love.forte.simbot/page-num.html","searchKeys":["pageNum","val Limiter.pageNum: Int","love.forte.simbot.pageNum"]},{"name":"val Limiter.pageSize: Int","description":"love.forte.simbot.pageSize","location":"simbot-api/love.forte.simbot/page-size.html","searchKeys":["pageSize","val Limiter.pageSize: Int","love.forte.simbot.pageSize"]},{"name":"val Long.ID: LongID","description":"love.forte.simbot.ID","location":"simbot-api/love.forte.simbot/-i-d.html","searchKeys":["ID","val Long.ID: LongID","love.forte.simbot.ID"]},{"name":"val LongAccumulator.ID: LongID","description":"love.forte.simbot.ID","location":"simbot-api/love.forte.simbot/-i-d.html","searchKeys":["ID","val LongAccumulator.ID: LongID","love.forte.simbot.ID"]},{"name":"val LongAdder.ID: LongID","description":"love.forte.simbot.ID","location":"simbot-api/love.forte.simbot/-i-d.html","searchKeys":["ID","val LongAdder.ID: LongID","love.forte.simbot.ID"]},{"name":"val MemberInfo.notBlankValidName: String?","description":"love.forte.simbot.definition.notBlankValidName","location":"simbot-api/love.forte.simbot.definition/not-blank-valid-name.html","searchKeys":["notBlankValidName","val MemberInfo.notBlankValidName: String?","love.forte.simbot.definition.notBlankValidName"]},{"name":"val MemberInfo.validName: String?","description":"love.forte.simbot.definition.validName","location":"simbot-api/love.forte.simbot.definition/valid-name.html","searchKeys":["validName","val MemberInfo.validName: String?","love.forte.simbot.definition.validName"]},{"name":"val Message.Element<*>.isStandard: Boolean","description":"love.forte.simbot.message.isStandard","location":"simbot-api/love.forte.simbot.message/is-standard.html","searchKeys":["isStandard","val Message.Element<*>.isStandard: Boolean","love.forte.simbot.message.isStandard"]},{"name":"val ONE: BigDecimalID","description":"love.forte.simbot.BigDecimalID.Companion.ONE","location":"simbot-api/love.forte.simbot/-big-decimal-i-d/-companion/-o-n-e.html","searchKeys":["ONE","val ONE: BigDecimalID","love.forte.simbot.BigDecimalID.Companion.ONE"]},{"name":"val ONE: BigIntegerID","description":"love.forte.simbot.BigIntegerID.Companion.ONE","location":"simbot-api/love.forte.simbot/-big-integer-i-d/-companion/-o-n-e.html","searchKeys":["ONE","val ONE: BigIntegerID","love.forte.simbot.BigIntegerID.Companion.ONE"]},{"name":"val Properties: PropertiesBotVerifyInfoDecoder.Factory","description":"love.forte.simbot.bot.StandardBotVerifyInfoDecoderFactory.Companion.Properties","location":"simbot-api/love.forte.simbot.bot/-standard-bot-verify-info-decoder-factory/-companion/-properties.html","searchKeys":["Properties","val Properties: PropertiesBotVerifyInfoDecoder.Factory","love.forte.simbot.bot.StandardBotVerifyInfoDecoderFactory.Companion.Properties"]},{"name":"val TEN: BigDecimalID","description":"love.forte.simbot.BigDecimalID.Companion.TEN","location":"simbot-api/love.forte.simbot/-big-decimal-i-d/-companion/-t-e-n.html","searchKeys":["TEN","val TEN: BigDecimalID","love.forte.simbot.BigDecimalID.Companion.TEN"]},{"name":"val TEN: BigIntegerID","description":"love.forte.simbot.BigIntegerID.Companion.TEN","location":"simbot-api/love.forte.simbot/-big-integer-i-d/-companion/-t-e-n.html","searchKeys":["TEN","val TEN: BigIntegerID","love.forte.simbot.BigIntegerID.Companion.TEN"]},{"name":"val Timestamp.instantValue: Instant","description":"love.forte.simbot.instantValue","location":"simbot-api/love.forte.simbot/instant-value.html","searchKeys":["instantValue","val Timestamp.instantValue: Instant","love.forte.simbot.instantValue"]},{"name":"val UUID.ID: CharSequenceID","description":"love.forte.simbot.ID","location":"simbot-api/love.forte.simbot/-i-d.html","searchKeys":["ID","val UUID.ID: CharSequenceID","love.forte.simbot.ID"]},{"name":"val Yaml: YamlBotVerifyInfoDecoder.Factory","description":"love.forte.simbot.bot.StandardBotVerifyInfoDecoderFactory.Companion.Yaml","location":"simbot-api/love.forte.simbot.bot/-standard-bot-verify-info-decoder-factory/-companion/-yaml.html","searchKeys":["Yaml","val Yaml: YamlBotVerifyInfoDecoder.Factory","love.forte.simbot.bot.StandardBotVerifyInfoDecoderFactory.Companion.Yaml"]},{"name":"val ZERO: BigDecimalID","description":"love.forte.simbot.BigDecimalID.Companion.ZERO","location":"simbot-api/love.forte.simbot/-big-decimal-i-d/-companion/-z-e-r-o.html","searchKeys":["ZERO","val ZERO: BigDecimalID","love.forte.simbot.BigDecimalID.Companion.ZERO"]},{"name":"val ZERO: BigIntegerID","description":"love.forte.simbot.BigIntegerID.Companion.ZERO","location":"simbot-api/love.forte.simbot/-big-integer-i-d/-companion/-z-e-r-o.html","searchKeys":["ZERO","val ZERO: BigIntegerID","love.forte.simbot.BigIntegerID.Companion.ZERO"]},{"name":"val asyncAsProperty: Boolean = false","description":"love.forte.simbot.JvmSuspendTrans.asyncAsProperty","location":"simbot-api/love.forte.simbot/-jvm-suspend-trans/async-as-property.html","searchKeys":["asyncAsProperty","val asyncAsProperty: Boolean = false","love.forte.simbot.JvmSuspendTrans.asyncAsProperty"]},{"name":"val asyncAsProperty: Boolean = true","description":"love.forte.simbot.JvmSuspendTransProperty.asyncAsProperty","location":"simbot-api/love.forte.simbot/-jvm-suspend-trans-property/async-as-property.html","searchKeys":["asyncAsProperty","val asyncAsProperty: Boolean = true","love.forte.simbot.JvmSuspendTransProperty.asyncAsProperty"]},{"name":"val asyncBaseName: String","description":"love.forte.simbot.JvmSuspendTrans.asyncBaseName","location":"simbot-api/love.forte.simbot/-jvm-suspend-trans/async-base-name.html","searchKeys":["asyncBaseName","val asyncBaseName: String","love.forte.simbot.JvmSuspendTrans.asyncBaseName"]},{"name":"val asyncBaseName: String","description":"love.forte.simbot.JvmSuspendTransProperty.asyncBaseName","location":"simbot-api/love.forte.simbot/-jvm-suspend-trans-property/async-base-name.html","searchKeys":["asyncBaseName","val asyncBaseName: String","love.forte.simbot.JvmSuspendTransProperty.asyncBaseName"]},{"name":"val asyncSuffix: String","description":"love.forte.simbot.JvmSuspendTrans.asyncSuffix","location":"simbot-api/love.forte.simbot/-jvm-suspend-trans/async-suffix.html","searchKeys":["asyncSuffix","val asyncSuffix: String","love.forte.simbot.JvmSuspendTrans.asyncSuffix"]},{"name":"val asyncSuffix: String","description":"love.forte.simbot.JvmSuspendTransProperty.asyncSuffix","location":"simbot-api/love.forte.simbot/-jvm-suspend-trans-property/async-suffix.html","searchKeys":["asyncSuffix","val asyncSuffix: String","love.forte.simbot.JvmSuspendTransProperty.asyncSuffix"]},{"name":"val batch: Int","description":"love.forte.simbot.utils.item.Items.PreprocessingProperties.batch","location":"simbot-api/love.forte.simbot.utils.item/-items/-preprocessing-properties/batch.html","searchKeys":["batch","val batch: Int","love.forte.simbot.utils.item.Items.PreprocessingProperties.batch"]},{"name":"val blockingAsProperty: Boolean = false","description":"love.forte.simbot.JvmSuspendTrans.blockingAsProperty","location":"simbot-api/love.forte.simbot/-jvm-suspend-trans/blocking-as-property.html","searchKeys":["blockingAsProperty","val blockingAsProperty: Boolean = false","love.forte.simbot.JvmSuspendTrans.blockingAsProperty"]},{"name":"val blockingAsProperty: Boolean = true","description":"love.forte.simbot.JvmSuspendTransProperty.blockingAsProperty","location":"simbot-api/love.forte.simbot/-jvm-suspend-trans-property/blocking-as-property.html","searchKeys":["blockingAsProperty","val blockingAsProperty: Boolean = true","love.forte.simbot.JvmSuspendTransProperty.blockingAsProperty"]},{"name":"val blockingBaseName: String","description":"love.forte.simbot.JvmSuspendTrans.blockingBaseName","location":"simbot-api/love.forte.simbot/-jvm-suspend-trans/blocking-base-name.html","searchKeys":["blockingBaseName","val blockingBaseName: String","love.forte.simbot.JvmSuspendTrans.blockingBaseName"]},{"name":"val blockingBaseName: String","description":"love.forte.simbot.JvmSuspendTransProperty.blockingBaseName","location":"simbot-api/love.forte.simbot/-jvm-suspend-trans-property/blocking-base-name.html","searchKeys":["blockingBaseName","val blockingBaseName: String","love.forte.simbot.JvmSuspendTransProperty.blockingBaseName"]},{"name":"val blockingSuffix: String","description":"love.forte.simbot.JvmSuspendTrans.blockingSuffix","location":"simbot-api/love.forte.simbot/-jvm-suspend-trans/blocking-suffix.html","searchKeys":["blockingSuffix","val blockingSuffix: String","love.forte.simbot.JvmSuspendTrans.blockingSuffix"]},{"name":"val blockingSuffix: String","description":"love.forte.simbot.JvmSuspendTransProperty.blockingSuffix","location":"simbot-api/love.forte.simbot/-jvm-suspend-trans-property/blocking-suffix.html","searchKeys":["blockingSuffix","val blockingSuffix: String","love.forte.simbot.JvmSuspendTransProperty.blockingSuffix"]},{"name":"val bytes: ByteArray","description":"love.forte.simbot.resources.ByteArrayResource.bytes","location":"simbot-api/love.forte.simbot.resources/-byte-array-resource/bytes.html","searchKeys":["bytes","val bytes: ByteArray","love.forte.simbot.resources.ByteArrayResource.bytes"]},{"name":"val component: String? = null","description":"love.forte.simbot.bot.ComponentModel.component","location":"simbot-api/love.forte.simbot.bot/-component-model/component.html","searchKeys":["component","val component: String? = null","love.forte.simbot.bot.ComponentModel.component"]},{"name":"val defaultJson: Json","description":"love.forte.simbot.message.MessageSerializationUtil.defaultJson","location":"simbot-api/love.forte.simbot.message/-message-serialization-util/default-json.html","searchKeys":["defaultJson","val defaultJson: Json","love.forte.simbot.message.MessageSerializationUtil.defaultJson"]},{"name":"val entries: MutableSet<MutableMap.MutableEntry<Attribute<*>, Any>>","description":"love.forte.simbot.AttributeMutableMap.entries","location":"simbot-api/love.forte.simbot/-attribute-mutable-map/entries.html","searchKeys":["entries","val entries: MutableSet<MutableMap.MutableEntry<Attribute<*>, Any>>","love.forte.simbot.AttributeMutableMap.entries"]},{"name":"val executor: Executor","description":"love.forte.simbot.utils.DefaultBlockingDispatcherTaskRejectedExecutionException.executor","location":"simbot-api/love.forte.simbot.utils/-default-blocking-dispatcher-task-rejected-execution-exception/executor.html","searchKeys":["executor","val executor: Executor","love.forte.simbot.utils.DefaultBlockingDispatcherTaskRejectedExecutionException.executor"]},{"name":"val file: File","description":"love.forte.simbot.resources.FileResource.file","location":"simbot-api/love.forte.simbot.resources/-file-resource/file.html","searchKeys":["file","val file: File","love.forte.simbot.resources.FileResource.file"]},{"name":"val id: ID","description":"love.forte.simbot.message.Emoji.id","location":"simbot-api/love.forte.simbot.message/-emoji/id.html","searchKeys":["id","val id: ID","love.forte.simbot.message.Emoji.id"]},{"name":"val id: ID","description":"love.forte.simbot.message.Face.id","location":"simbot-api/love.forte.simbot.message/-face/id.html","searchKeys":["id","val id: ID","love.forte.simbot.message.Face.id"]},{"name":"val id: String","description":"love.forte.simbot.event.EventKey.id","location":"simbot-api/love.forte.simbot.event/-event-key/id.html","searchKeys":["id","val id: String","love.forte.simbot.event.EventKey.id"]},{"name":"val length: Int","description":"love.forte.simbot.CharSequenceID.length","location":"simbot-api/love.forte.simbot/-char-sequence-i-d/length.html","searchKeys":["length","val length: Int","love.forte.simbot.CharSequenceID.length"]},{"name":"val limit: Int","description":"love.forte.simbot.utils.item.Items.PreprocessingProperties.limit","location":"simbot-api/love.forte.simbot.utils.item/-items/-preprocessing-properties/limit.html","searchKeys":["limit","val limit: Int","love.forte.simbot.utils.item.Items.PreprocessingProperties.limit"]},{"name":"val name: String","description":"love.forte.simbot.Attribute.name","location":"simbot-api/love.forte.simbot/-attribute/name.html","searchKeys":["name","val name: String","love.forte.simbot.Attribute.name"]},{"name":"val nanos: Int","description":"love.forte.simbot.InstantTimestamp.nanos","location":"simbot-api/love.forte.simbot/-instant-timestamp/nanos.html","searchKeys":["nanos","val nanos: Int","love.forte.simbot.InstantTimestamp.nanos"]},{"name":"val number: Double","description":"love.forte.simbot.DoubleID.number","location":"simbot-api/love.forte.simbot/-double-i-d/number.html","searchKeys":["number","val number: Double","love.forte.simbot.DoubleID.number"]},{"name":"val number: Float","description":"love.forte.simbot.FloatID.number","location":"simbot-api/love.forte.simbot/-float-i-d/number.html","searchKeys":["number","val number: Float","love.forte.simbot.FloatID.number"]},{"name":"val number: Int","description":"love.forte.simbot.IntID.number","location":"simbot-api/love.forte.simbot/-int-i-d/number.html","searchKeys":["number","val number: Int","love.forte.simbot.IntID.number"]},{"name":"val number: Long","description":"love.forte.simbot.LongID.number","location":"simbot-api/love.forte.simbot/-long-i-d/number.html","searchKeys":["number","val number: Long","love.forte.simbot.LongID.number"]},{"name":"val offset: Int","description":"love.forte.simbot.utils.item.Items.PreprocessingProperties.offset","location":"simbot-api/love.forte.simbot.utils.item/-items/-preprocessing-properties/offset.html","searchKeys":["offset","val offset: Int","love.forte.simbot.utils.item.Items.PreprocessingProperties.offset"]},{"name":"val originContent: String","description":"love.forte.simbot.message.At.originContent","location":"simbot-api/love.forte.simbot.message/-at/origin-content.html","searchKeys":["originContent","val originContent: String","love.forte.simbot.message.At.originContent"]},{"name":"val parents: Array<KClass<out Event>>","description":"love.forte.simbot.event.EventKey.parents","location":"simbot-api/love.forte.simbot.event/-event-key/parents.html","searchKeys":["parents","val parents: Array<KClass<out Event>>","love.forte.simbot.event.EventKey.parents"]},{"name":"val path: Path","description":"love.forte.simbot.resources.PathResource.path","location":"simbot-api/love.forte.simbot.resources/-path-resource/path.html","searchKeys":["path","val path: Path","love.forte.simbot.resources.PathResource.path"]},{"name":"val runnable: Runnable","description":"love.forte.simbot.utils.DefaultBlockingDispatcherTaskRejectedExecutionException.runnable","location":"simbot-api/love.forte.simbot.utils/-default-blocking-dispatcher-task-rejected-execution-exception/runnable.html","searchKeys":["runnable","val runnable: Runnable","love.forte.simbot.utils.DefaultBlockingDispatcherTaskRejectedExecutionException.runnable"]},{"name":"val serializer: KSerializer<Messages>","description":"love.forte.simbot.message.Messages.Companion.serializer","location":"simbot-api/love.forte.simbot.message/-messages/-companion/serializer.html","searchKeys":["serializer","val serializer: KSerializer<Messages>","love.forte.simbot.message.Messages.Companion.serializer"]},{"name":"val serializersModule: SerializersModule","description":"love.forte.simbot.message.Messages.Companion.serializersModule","location":"simbot-api/love.forte.simbot.message/-messages/-companion/serializers-module.html","searchKeys":["serializersModule","val serializersModule: SerializersModule","love.forte.simbot.message.Messages.Companion.serializersModule"]},{"name":"val size: Int","description":"love.forte.simbot.resources.ByteArrayResource.size","location":"simbot-api/love.forte.simbot.resources/-byte-array-resource/size.html","searchKeys":["size","val size: Int","love.forte.simbot.resources.ByteArrayResource.size"]},{"name":"val target: ID","description":"love.forte.simbot.message.At.target","location":"simbot-api/love.forte.simbot.message/-at/target.html","searchKeys":["target","val target: ID","love.forte.simbot.message.At.target"]},{"name":"val type: KClass<out Event>","description":"love.forte.simbot.event.EventKey.type","location":"simbot-api/love.forte.simbot.event/-event-key/type.html","searchKeys":["type","val type: KClass<out Event>","love.forte.simbot.event.EventKey.type"]},{"name":"val type: String","description":"love.forte.simbot.message.At.type","location":"simbot-api/love.forte.simbot.message/-at/type.html","searchKeys":["type","val type: String","love.forte.simbot.message.At.type"]},{"name":"val url: URL","description":"love.forte.simbot.resources.URLResource.url","location":"simbot-api/love.forte.simbot.resources/-u-r-l-resource/url.html","searchKeys":["url","val url: URL","love.forte.simbot.resources.URLResource.url"]},{"name":"val value: CharSequence","description":"love.forte.simbot.CharSequenceID.value","location":"simbot-api/love.forte.simbot/-char-sequence-i-d/value.html","searchKeys":["value","val value: CharSequence","love.forte.simbot.CharSequenceID.value"]},{"name":"var serializersModule: SerializersModule","description":"love.forte.simbot.bot.PropertiesBotVerifyInfoDecoder.PropertiesConfiguration.serializersModule","location":"simbot-api/love.forte.simbot.bot/-properties-bot-verify-info-decoder/-properties-configuration/serializers-module.html","searchKeys":["serializersModule","var serializersModule: SerializersModule","love.forte.simbot.bot.PropertiesBotVerifyInfoDecoder.PropertiesConfiguration.serializersModule"]},{"name":"var serializersModule: SerializersModule","description":"love.forte.simbot.bot.YamlBotVerifyInfoDecoder.YamlBotVerifyInfoDecoderConfiguration.serializersModule","location":"simbot-api/love.forte.simbot.bot/-yaml-bot-verify-info-decoder/-yaml-bot-verify-info-decoder-configuration/serializers-module.html","searchKeys":["serializersModule","var serializersModule: SerializersModule","love.forte.simbot.bot.YamlBotVerifyInfoDecoder.YamlBotVerifyInfoDecoderConfiguration.serializersModule"]},{"name":"abstract fun <T : Any> getAll(type: KClass<T>? = null): List<String>","description":"love.forte.di.BeanContainer.getAll","location":"simbot-util-di-api/love.forte.di/-bean-container/get-all.html","searchKeys":["getAll","abstract fun <T : Any> getAll(type: KClass<T>? = null): List<String>","love.forte.di.BeanContainer.getAll"]},{"name":"abstract fun <T : Any> getOrNull(type: KClass<T>): T?","description":"love.forte.di.BeanContainer.getOrNull","location":"simbot-util-di-api/love.forte.di/-bean-container/get-or-null.html","searchKeys":["getOrNull","abstract fun <T : Any> getOrNull(type: KClass<T>): T?","love.forte.di.BeanContainer.getOrNull"]},{"name":"abstract fun containsLocal(name: String): Boolean","description":"love.forte.di.HierarchicalBeanContainer.containsLocal","location":"simbot-util-di-api/love.forte.di/-hierarchical-bean-container/contains-local.html","searchKeys":["containsLocal","abstract fun containsLocal(name: String): Boolean","love.forte.di.HierarchicalBeanContainer.containsLocal"]},{"name":"abstract fun getOrNull(name: String): Any?","description":"love.forte.di.BeanContainer.getOrNull","location":"simbot-util-di-api/love.forte.di/-bean-container/get-or-null.html","searchKeys":["getOrNull","abstract fun getOrNull(name: String): Any?","love.forte.di.BeanContainer.getOrNull"]},{"name":"abstract fun getTypeOrNull(name: String): KClass<*>?","description":"love.forte.di.BeanContainer.getTypeOrNull","location":"simbot-util-di-api/love.forte.di/-bean-container/get-type-or-null.html","searchKeys":["getTypeOrNull","abstract fun getTypeOrNull(name: String): KClass<*>?","love.forte.di.BeanContainer.getTypeOrNull"]},{"name":"abstract fun register(name: String, bean: Bean<*>)","description":"love.forte.di.BeanRegistrar.register","location":"simbot-util-di-api/love.forte.di/-bean-registrar/register.html","searchKeys":["register","abstract fun register(name: String, bean: Bean<*>)","love.forte.di.BeanRegistrar.register"]},{"name":"abstract operator fun contains(name: String): Boolean","description":"love.forte.di.BeanContainer.contains","location":"simbot-util-di-api/love.forte.di/-bean-container/contains.html","searchKeys":["contains","abstract operator fun contains(name: String): Boolean","love.forte.di.BeanContainer.contains"]},{"name":"abstract override fun get(): T","description":"love.forte.di.Bean.get","location":"simbot-util-di-api/love.forte.di/-bean/get.html","searchKeys":["get","abstract override fun get(): T","love.forte.di.Bean.get"]},{"name":"abstract override val type: KClass<T>","description":"love.forte.di.Bean.type","location":"simbot-util-di-api/love.forte.di/-bean/type.html","searchKeys":["type","abstract override val type: KClass<T>","love.forte.di.Bean.type"]},{"name":"abstract val isPreferred: Boolean","description":"love.forte.di.Bean.isPreferred","location":"simbot-util-di-api/love.forte.di/-bean/is-preferred.html","searchKeys":["isPreferred","abstract val isPreferred: Boolean","love.forte.di.Bean.isPreferred"]},{"name":"abstract val isSingleton: Boolean","description":"love.forte.di.Bean.isSingleton","location":"simbot-util-di-api/love.forte.di/-bean/is-singleton.html","searchKeys":["isSingleton","abstract val isSingleton: Boolean","love.forte.di.Bean.isSingleton"]},{"name":"abstract val parentContainer: BeanContainer?","description":"love.forte.di.HierarchicalBeanContainer.parentContainer","location":"simbot-util-di-api/love.forte.di/-hierarchical-bean-container/parent-container.html","searchKeys":["parentContainer","abstract val parentContainer: BeanContainer?","love.forte.di.HierarchicalBeanContainer.parentContainer"]},{"name":"abstract val type: KClass<*>","description":"love.forte.di.BeanDescription.type","location":"simbot-util-di-api/love.forte.di/-bean-description/type.html","searchKeys":["type","abstract val type: KClass<*>","love.forte.di.BeanDescription.type"]},{"name":"annotation class Api4J","description":"love.forte.di.Api4J","location":"simbot-util-di-api/love.forte.di/-api4-j/index.html","searchKeys":["Api4J","annotation class Api4J","love.forte.di.Api4J"]},{"name":"annotation class Beans(val parentBeanName: String = \"\", val value: String = \"\", val childBeanName: Array<String> = [], val priority: Int = 1000)","description":"love.forte.di.annotation.Beans","location":"simbot-util-di-api/love.forte.di.annotation/-beans/index.html","searchKeys":["Beans","annotation class Beans(val parentBeanName: String = \"\", val value: String = \"\", val childBeanName: Array<String> = [], val priority: Int = 1000)","love.forte.di.annotation.Beans"]},{"name":"annotation class BeansFactory(val name: String = \"\")","description":"love.forte.di.annotation.BeansFactory","location":"simbot-util-di-api/love.forte.di.annotation/-beans-factory/index.html","searchKeys":["BeansFactory","annotation class BeansFactory(val name: String = \"\")","love.forte.di.annotation.BeansFactory"]},{"name":"annotation class Configurable(val prefix: String = \"\", val ignoreUnknownFields: Boolean = true)","description":"love.forte.di.annotation.Configurable","location":"simbot-util-di-api/love.forte.di.annotation/-configurable/index.html","searchKeys":["Configurable","annotation class Configurable(val prefix: String = \"\", val ignoreUnknownFields: Boolean = true)","love.forte.di.annotation.Configurable"]},{"name":"annotation class Depend(val name: String = \"\", val required: Boolean = true)","description":"love.forte.di.annotation.Depend","location":"simbot-util-di-api/love.forte.di.annotation/-depend/index.html","searchKeys":["Depend","annotation class Depend(val name: String = \"\", val required: Boolean = true)","love.forte.di.annotation.Depend"]},{"name":"annotation class Preferred","description":"love.forte.di.annotation.Preferred","location":"simbot-util-di-api/love.forte.di.annotation/-preferred/index.html","searchKeys":["Preferred","annotation class Preferred","love.forte.di.annotation.Preferred"]},{"name":"annotation class SpareBean(val value: KClass<*>)","description":"love.forte.di.annotation.SpareBean","location":"simbot-util-di-api/love.forte.di.annotation/-spare-bean/index.html","searchKeys":["SpareBean","annotation class SpareBean(val value: KClass<*>)","love.forte.di.annotation.SpareBean"]},{"name":"fun <T : Any> Bean<T>.postValue(block: (source: Bean<T>, value: T) -> T): Bean<T>","description":"love.forte.di.postValue","location":"simbot-util-di-api/love.forte.di/post-value.html","searchKeys":["postValue","fun <T : Any> Bean<T>.postValue(block: (source: Bean<T>, value: T) -> T): Bean<T>","love.forte.di.postValue"]},{"name":"fun <T : Any> T.asBean(isPreferred: Boolean = false, type: KClass<T> = this::class as KClass<T>): Bean<out T>","description":"love.forte.di.asBean","location":"simbot-util-di-api/love.forte.di/as-bean.html","searchKeys":["asBean","fun <T : Any> T.asBean(isPreferred: Boolean = false, type: KClass<T> = this::class as KClass<T>): Bean<out T>","love.forte.di.asBean"]},{"name":"fun BeanDefineAlreadyExistException()","description":"love.forte.di.BeanDefineAlreadyExistException.BeanDefineAlreadyExistException","location":"simbot-util-di-api/love.forte.di/-bean-define-already-exist-exception/-bean-define-already-exist-exception.html","searchKeys":["BeanDefineAlreadyExistException","fun BeanDefineAlreadyExistException()","love.forte.di.BeanDefineAlreadyExistException.BeanDefineAlreadyExistException"]},{"name":"fun BeanDefineAlreadyExistException(cause: Throwable?)","description":"love.forte.di.BeanDefineAlreadyExistException.BeanDefineAlreadyExistException","location":"simbot-util-di-api/love.forte.di/-bean-define-already-exist-exception/-bean-define-already-exist-exception.html","searchKeys":["BeanDefineAlreadyExistException","fun BeanDefineAlreadyExistException(cause: Throwable?)","love.forte.di.BeanDefineAlreadyExistException.BeanDefineAlreadyExistException"]},{"name":"fun BeanDefineAlreadyExistException(message: String?, cause: Throwable?)","description":"love.forte.di.BeanDefineAlreadyExistException.BeanDefineAlreadyExistException","location":"simbot-util-di-api/love.forte.di/-bean-define-already-exist-exception/-bean-define-already-exist-exception.html","searchKeys":["BeanDefineAlreadyExistException","fun BeanDefineAlreadyExistException(message: String?, cause: Throwable?)","love.forte.di.BeanDefineAlreadyExistException.BeanDefineAlreadyExistException"]},{"name":"fun BeanDefineAlreadyExistException(s: String?)","description":"love.forte.di.BeanDefineAlreadyExistException.BeanDefineAlreadyExistException","location":"simbot-util-di-api/love.forte.di/-bean-define-already-exist-exception/-bean-define-already-exist-exception.html","searchKeys":["BeanDefineAlreadyExistException","fun BeanDefineAlreadyExistException(s: String?)","love.forte.di.BeanDefineAlreadyExistException.BeanDefineAlreadyExistException"]},{"name":"fun BeanNameAlreadyExistsException()","description":"love.forte.di.BeanNameAlreadyExistsException.BeanNameAlreadyExistsException","location":"simbot-util-di-api/love.forte.di/-bean-name-already-exists-exception/-bean-name-already-exists-exception.html","searchKeys":["BeanNameAlreadyExistsException","fun BeanNameAlreadyExistsException()","love.forte.di.BeanNameAlreadyExistsException.BeanNameAlreadyExistsException"]},{"name":"fun BeanNameAlreadyExistsException(cause: Throwable?)","description":"love.forte.di.BeanNameAlreadyExistsException.BeanNameAlreadyExistsException","location":"simbot-util-di-api/love.forte.di/-bean-name-already-exists-exception/-bean-name-already-exists-exception.html","searchKeys":["BeanNameAlreadyExistsException","fun BeanNameAlreadyExistsException(cause: Throwable?)","love.forte.di.BeanNameAlreadyExistsException.BeanNameAlreadyExistsException"]},{"name":"fun BeanNameAlreadyExistsException(message: String?, cause: Throwable?)","description":"love.forte.di.BeanNameAlreadyExistsException.BeanNameAlreadyExistsException","location":"simbot-util-di-api/love.forte.di/-bean-name-already-exists-exception/-bean-name-already-exists-exception.html","searchKeys":["BeanNameAlreadyExistsException","fun BeanNameAlreadyExistsException(message: String?, cause: Throwable?)","love.forte.di.BeanNameAlreadyExistsException.BeanNameAlreadyExistsException"]},{"name":"fun BeanNameAlreadyExistsException(s: String?)","description":"love.forte.di.BeanNameAlreadyExistsException.BeanNameAlreadyExistsException","location":"simbot-util-di-api/love.forte.di/-bean-name-already-exists-exception/-bean-name-already-exists-exception.html","searchKeys":["BeanNameAlreadyExistsException","fun BeanNameAlreadyExistsException(s: String?)","love.forte.di.BeanNameAlreadyExistsException.BeanNameAlreadyExistsException"]},{"name":"fun BeansException()","description":"love.forte.di.BeansException.BeansException","location":"simbot-util-di-api/love.forte.di/-beans-exception/-beans-exception.html","searchKeys":["BeansException","fun BeansException()","love.forte.di.BeansException.BeansException"]},{"name":"fun BeansException(cause: Throwable?)","description":"love.forte.di.BeansException.BeansException","location":"simbot-util-di-api/love.forte.di/-beans-exception/-beans-exception.html","searchKeys":["BeansException","fun BeansException(cause: Throwable?)","love.forte.di.BeansException.BeansException"]},{"name":"fun BeansException(message: String?, cause: Throwable?)","description":"love.forte.di.BeansException.BeansException","location":"simbot-util-di-api/love.forte.di/-beans-exception/-beans-exception.html","searchKeys":["BeansException","fun BeansException(message: String?, cause: Throwable?)","love.forte.di.BeansException.BeansException"]},{"name":"fun BeansException(s: String?)","description":"love.forte.di.BeansException.BeansException","location":"simbot-util-di-api/love.forte.di/-beans-exception/-beans-exception.html","searchKeys":["BeansException","fun BeansException(s: String?)","love.forte.di.BeansException.BeansException"]},{"name":"fun MultiSameTypeBeanException()","description":"love.forte.di.MultiSameTypeBeanException.MultiSameTypeBeanException","location":"simbot-util-di-api/love.forte.di/-multi-same-type-bean-exception/-multi-same-type-bean-exception.html","searchKeys":["MultiSameTypeBeanException","fun MultiSameTypeBeanException()","love.forte.di.MultiSameTypeBeanException.MultiSameTypeBeanException"]},{"name":"fun MultiSameTypeBeanException(cause: Throwable?)","description":"love.forte.di.MultiSameTypeBeanException.MultiSameTypeBeanException","location":"simbot-util-di-api/love.forte.di/-multi-same-type-bean-exception/-multi-same-type-bean-exception.html","searchKeys":["MultiSameTypeBeanException","fun MultiSameTypeBeanException(cause: Throwable?)","love.forte.di.MultiSameTypeBeanException.MultiSameTypeBeanException"]},{"name":"fun MultiSameTypeBeanException(message: String?, cause: Throwable?)","description":"love.forte.di.MultiSameTypeBeanException.MultiSameTypeBeanException","location":"simbot-util-di-api/love.forte.di/-multi-same-type-bean-exception/-multi-same-type-bean-exception.html","searchKeys":["MultiSameTypeBeanException","fun MultiSameTypeBeanException(message: String?, cause: Throwable?)","love.forte.di.MultiSameTypeBeanException.MultiSameTypeBeanException"]},{"name":"fun MultiSameTypeBeanException(s: String?)","description":"love.forte.di.MultiSameTypeBeanException.MultiSameTypeBeanException","location":"simbot-util-di-api/love.forte.di/-multi-same-type-bean-exception/-multi-same-type-bean-exception.html","searchKeys":["MultiSameTypeBeanException","fun MultiSameTypeBeanException(s: String?)","love.forte.di.MultiSameTypeBeanException.MultiSameTypeBeanException"]},{"name":"fun NoSuchBeanException()","description":"love.forte.di.NoSuchBeanException.NoSuchBeanException","location":"simbot-util-di-api/love.forte.di/-no-such-bean-exception/-no-such-bean-exception.html","searchKeys":["NoSuchBeanException","fun NoSuchBeanException()","love.forte.di.NoSuchBeanException.NoSuchBeanException"]},{"name":"fun NoSuchBeanException(cause: Throwable?)","description":"love.forte.di.NoSuchBeanException.NoSuchBeanException","location":"simbot-util-di-api/love.forte.di/-no-such-bean-exception/-no-such-bean-exception.html","searchKeys":["NoSuchBeanException","fun NoSuchBeanException(cause: Throwable?)","love.forte.di.NoSuchBeanException.NoSuchBeanException"]},{"name":"fun NoSuchBeanException(message: String?, cause: Throwable?)","description":"love.forte.di.NoSuchBeanException.NoSuchBeanException","location":"simbot-util-di-api/love.forte.di/-no-such-bean-exception/-no-such-bean-exception.html","searchKeys":["NoSuchBeanException","fun NoSuchBeanException(message: String?, cause: Throwable?)","love.forte.di.NoSuchBeanException.NoSuchBeanException"]},{"name":"fun NoSuchBeanException(s: String?)","description":"love.forte.di.NoSuchBeanException.NoSuchBeanException","location":"simbot-util-di-api/love.forte.di/-no-such-bean-exception/-no-such-bean-exception.html","searchKeys":["NoSuchBeanException","fun NoSuchBeanException(s: String?)","love.forte.di.NoSuchBeanException.NoSuchBeanException"]},{"name":"inline fun <T : Any> Bean<*>.getWithCast(type: () -> KClass<T>): T","description":"love.forte.di.getWithCast","location":"simbot-util-di-api/love.forte.di/get-with-cast.html","searchKeys":["getWithCast","inline fun <T : Any> Bean<*>.getWithCast(type: () -> KClass<T>): T","love.forte.di.getWithCast"]},{"name":"inline fun <T : Any> BeanContainer.all(): List<String>","description":"love.forte.di.all","location":"simbot-util-di-api/love.forte.di/all.html","searchKeys":["all","inline fun <T : Any> BeanContainer.all(): List<String>","love.forte.di.all"]},{"name":"inline fun <T : Any> BeanContainer.allInstance(): List<T>","description":"love.forte.di.allInstance","location":"simbot-util-di-api/love.forte.di/all-instance.html","searchKeys":["allInstance","inline fun <T : Any> BeanContainer.allInstance(): List<T>","love.forte.di.allInstance"]},{"name":"inline fun noSuchBeanDefine(e: Throwable? = null, name: () -> String): Nothing","description":"love.forte.di.noSuchBeanDefine","location":"simbot-util-di-api/love.forte.di/no-such-bean-define.html","searchKeys":["noSuchBeanDefine","inline fun noSuchBeanDefine(e: Throwable? = null, name: () -> String): Nothing","love.forte.di.noSuchBeanDefine"]},{"name":"interface Bean<T : Any> : Provider<T> , BeanDescription","description":"love.forte.di.Bean","location":"simbot-util-di-api/love.forte.di/-bean/index.html","searchKeys":["Bean","interface Bean<T : Any> : Provider<T> , BeanDescription","love.forte.di.Bean"]},{"name":"interface BeanContainer","description":"love.forte.di.BeanContainer","location":"simbot-util-di-api/love.forte.di/-bean-container/index.html","searchKeys":["BeanContainer","interface BeanContainer","love.forte.di.BeanContainer"]},{"name":"interface BeanDescription","description":"love.forte.di.BeanDescription","location":"simbot-util-di-api/love.forte.di/-bean-description/index.html","searchKeys":["BeanDescription","interface BeanDescription","love.forte.di.BeanDescription"]},{"name":"interface BeanManager : BeanRegistrar, BeanContainer","description":"love.forte.di.BeanManager","location":"simbot-util-di-api/love.forte.di/-bean-manager/index.html","searchKeys":["BeanManager","interface BeanManager : BeanRegistrar, BeanContainer","love.forte.di.BeanManager"]},{"name":"interface BeanRegistrar","description":"love.forte.di.BeanRegistrar","location":"simbot-util-di-api/love.forte.di/-bean-registrar/index.html","searchKeys":["BeanRegistrar","interface BeanRegistrar","love.forte.di.BeanRegistrar"]},{"name":"interface HierarchicalBeanContainer : BeanContainer","description":"love.forte.di.HierarchicalBeanContainer","location":"simbot-util-di-api/love.forte.di/-hierarchical-bean-container/index.html","searchKeys":["HierarchicalBeanContainer","interface HierarchicalBeanContainer : BeanContainer","love.forte.di.HierarchicalBeanContainer"]},{"name":"object Empty : BeanContainer","description":"love.forte.di.BeanContainer.Empty","location":"simbot-util-di-api/love.forte.di/-bean-container/-empty/index.html","searchKeys":["Empty","object Empty : BeanContainer","love.forte.di.BeanContainer.Empty"]},{"name":"object Empty : HierarchicalBeanContainer, BeanContainer","description":"love.forte.di.HierarchicalBeanContainer.Empty","location":"simbot-util-di-api/love.forte.di/-hierarchical-bean-container/-empty/index.html","searchKeys":["Empty","object Empty : HierarchicalBeanContainer, BeanContainer","love.forte.di.HierarchicalBeanContainer.Empty"]},{"name":"open class BeanDefineAlreadyExistException : BeansException","description":"love.forte.di.BeanDefineAlreadyExistException","location":"simbot-util-di-api/love.forte.di/-bean-define-already-exist-exception/index.html","searchKeys":["BeanDefineAlreadyExistException","open class BeanDefineAlreadyExistException : BeansException","love.forte.di.BeanDefineAlreadyExistException"]},{"name":"open class BeanNameAlreadyExistsException : BeansException","description":"love.forte.di.BeanNameAlreadyExistsException","location":"simbot-util-di-api/love.forte.di/-bean-name-already-exists-exception/index.html","searchKeys":["BeanNameAlreadyExistsException","open class BeanNameAlreadyExistsException : BeansException","love.forte.di.BeanNameAlreadyExistsException"]},{"name":"open class BeansException : IllegalStateException","description":"love.forte.di.BeansException","location":"simbot-util-di-api/love.forte.di/-beans-exception/index.html","searchKeys":["BeansException","open class BeansException : IllegalStateException","love.forte.di.BeansException"]},{"name":"open class MultiSameTypeBeanException : BeansException","description":"love.forte.di.MultiSameTypeBeanException","location":"simbot-util-di-api/love.forte.di/-multi-same-type-bean-exception/index.html","searchKeys":["MultiSameTypeBeanException","open class MultiSameTypeBeanException : BeansException","love.forte.di.MultiSameTypeBeanException"]},{"name":"open class NoSuchBeanException : BeansException","description":"love.forte.di.NoSuchBeanException","location":"simbot-util-di-api/love.forte.di/-no-such-bean-exception/index.html","searchKeys":["NoSuchBeanException","open class NoSuchBeanException : BeansException","love.forte.di.NoSuchBeanException"]},{"name":"open fun <T : Any> getAll(type: Class<T>? = null): List<String>","description":"love.forte.di.BeanContainer.getAll","location":"simbot-util-di-api/love.forte.di/-bean-container/get-all.html","searchKeys":["getAll","open fun <T : Any> getAll(type: Class<T>? = null): List<String>","love.forte.di.BeanContainer.getAll"]},{"name":"open fun <T : Any> getOrNull(name: String, type: Class<T>): T?","description":"love.forte.di.BeanContainer.getOrNull","location":"simbot-util-di-api/love.forte.di/-bean-container/get-or-null.html","searchKeys":["getOrNull","open fun <T : Any> getOrNull(name: String, type: Class<T>): T?","love.forte.di.BeanContainer.getOrNull"]},{"name":"open fun <T : Any> getOrNull(name: String, type: KClass<T>): T?","description":"love.forte.di.BeanContainer.getOrNull","location":"simbot-util-di-api/love.forte.di/-bean-container/get-or-null.html","searchKeys":["getOrNull","open fun <T : Any> getOrNull(name: String, type: KClass<T>): T?","love.forte.di.BeanContainer.getOrNull"]},{"name":"open fun <T : Any> getOrNull(type: Class<T>): T?","description":"love.forte.di.BeanContainer.getOrNull","location":"simbot-util-di-api/love.forte.di/-bean-container/get-or-null.html","searchKeys":["getOrNull","open fun <T : Any> getOrNull(type: Class<T>): T?","love.forte.di.BeanContainer.getOrNull"]},{"name":"open fun getType(name: String): KClass<*>","description":"love.forte.di.BeanContainer.getType","location":"simbot-util-di-api/love.forte.di/-bean-container/get-type.html","searchKeys":["getType","open fun getType(name: String): KClass<*>","love.forte.di.BeanContainer.getType"]},{"name":"open fun getTypeClass(name: String): Class<*>","description":"love.forte.di.BeanContainer.getTypeClass","location":"simbot-util-di-api/love.forte.di/-bean-container/get-type-class.html","searchKeys":["getTypeClass","open fun getTypeClass(name: String): Class<*>","love.forte.di.BeanContainer.getTypeClass"]},{"name":"open fun getTypeClassOrNull(name: String): Class<*>?","description":"love.forte.di.BeanContainer.getTypeClassOrNull","location":"simbot-util-di-api/love.forte.di/-bean-container/get-type-class-or-null.html","searchKeys":["getTypeClassOrNull","open fun getTypeClassOrNull(name: String): Class<*>?","love.forte.di.BeanContainer.getTypeClassOrNull"]},{"name":"open operator fun <T : Any> get(name: String, type: Class<T>): T","description":"love.forte.di.BeanContainer.get","location":"simbot-util-di-api/love.forte.di/-bean-container/get.html","searchKeys":["get","open operator fun <T : Any> get(name: String, type: Class<T>): T","love.forte.di.BeanContainer.get"]},{"name":"open operator fun <T : Any> get(name: String, type: KClass<T>): T","description":"love.forte.di.BeanContainer.get","location":"simbot-util-di-api/love.forte.di/-bean-container/get.html","searchKeys":["get","open operator fun <T : Any> get(name: String, type: KClass<T>): T","love.forte.di.BeanContainer.get"]},{"name":"open operator fun <T : Any> get(type: Class<T>): T","description":"love.forte.di.BeanContainer.get","location":"simbot-util-di-api/love.forte.di/-bean-container/get.html","searchKeys":["get","open operator fun <T : Any> get(type: Class<T>): T","love.forte.di.BeanContainer.get"]},{"name":"open operator fun <T : Any> get(type: KClass<T>): T","description":"love.forte.di.BeanContainer.get","location":"simbot-util-di-api/love.forte.di/-bean-container/get.html","searchKeys":["get","open operator fun <T : Any> get(type: KClass<T>): T","love.forte.di.BeanContainer.get"]},{"name":"open operator fun get(name: String): Any","description":"love.forte.di.BeanContainer.get","location":"simbot-util-di-api/love.forte.di/-bean-container/get.html","searchKeys":["get","open operator fun get(name: String): Any","love.forte.di.BeanContainer.get"]},{"name":"open operator override fun contains(name: String): Boolean","description":"love.forte.di.BeanContainer.Empty.contains","location":"simbot-util-di-api/love.forte.di/-bean-container/-empty/contains.html","searchKeys":["contains","open operator override fun contains(name: String): Boolean","love.forte.di.BeanContainer.Empty.contains"]},{"name":"open override fun <T : Any> getAll(type: KClass<T>?): List<String>","description":"love.forte.di.BeanContainer.Empty.getAll","location":"simbot-util-di-api/love.forte.di/-bean-container/-empty/get-all.html","searchKeys":["getAll","open override fun <T : Any> getAll(type: KClass<T>?): List<String>","love.forte.di.BeanContainer.Empty.getAll"]},{"name":"open override fun <T : Any> getOrNull(type: KClass<T>): T?","description":"love.forte.di.BeanContainer.Empty.getOrNull","location":"simbot-util-di-api/love.forte.di/-bean-container/-empty/get-or-null.html","searchKeys":["getOrNull","open override fun <T : Any> getOrNull(type: KClass<T>): T?","love.forte.di.BeanContainer.Empty.getOrNull"]},{"name":"open override fun containsLocal(name: String): Boolean","description":"love.forte.di.HierarchicalBeanContainer.Empty.containsLocal","location":"simbot-util-di-api/love.forte.di/-hierarchical-bean-container/-empty/contains-local.html","searchKeys":["containsLocal","open override fun containsLocal(name: String): Boolean","love.forte.di.HierarchicalBeanContainer.Empty.containsLocal"]},{"name":"open override fun getOrNull(name: String): Any?","description":"love.forte.di.BeanContainer.Empty.getOrNull","location":"simbot-util-di-api/love.forte.di/-bean-container/-empty/get-or-null.html","searchKeys":["getOrNull","open override fun getOrNull(name: String): Any?","love.forte.di.BeanContainer.Empty.getOrNull"]},{"name":"open override fun getTypeOrNull(name: String): KClass<*>?","description":"love.forte.di.BeanContainer.Empty.getTypeOrNull","location":"simbot-util-di-api/love.forte.di/-bean-container/-empty/get-type-or-null.html","searchKeys":["getTypeOrNull","open override fun getTypeOrNull(name: String): KClass<*>?","love.forte.di.BeanContainer.Empty.getTypeOrNull"]},{"name":"open override val parentContainer: BeanContainer?","description":"love.forte.di.HierarchicalBeanContainer.Empty.parentContainer","location":"simbot-util-di-api/love.forte.di/-hierarchical-bean-container/-empty/parent-container.html","searchKeys":["parentContainer","open override val parentContainer: BeanContainer?","love.forte.di.HierarchicalBeanContainer.Empty.parentContainer"]},{"name":"open val priority: Int","description":"love.forte.di.Bean.priority","location":"simbot-util-di-api/love.forte.di/-bean/priority.html","searchKeys":["priority","open val priority: Int","love.forte.di.Bean.priority"]},{"name":"val <T : Any> Bean<T>.value: T","description":"love.forte.di.value","location":"simbot-util-di-api/love.forte.di/value.html","searchKeys":["value","val <T : Any> Bean<T>.value: T","love.forte.di.value"]},{"name":"val childBeanName: Array<String>","description":"love.forte.di.annotation.Beans.childBeanName","location":"simbot-util-di-api/love.forte.di.annotation/-beans/child-bean-name.html","searchKeys":["childBeanName","val childBeanName: Array<String>","love.forte.di.annotation.Beans.childBeanName"]},{"name":"val ignoreUnknownFields: Boolean = true","description":"love.forte.di.annotation.Configurable.ignoreUnknownFields","location":"simbot-util-di-api/love.forte.di.annotation/-configurable/ignore-unknown-fields.html","searchKeys":["ignoreUnknownFields","val ignoreUnknownFields: Boolean = true","love.forte.di.annotation.Configurable.ignoreUnknownFields"]},{"name":"val name: String","description":"love.forte.di.annotation.BeansFactory.name","location":"simbot-util-di-api/love.forte.di.annotation/-beans-factory/name.html","searchKeys":["name","val name: String","love.forte.di.annotation.BeansFactory.name"]},{"name":"val name: String","description":"love.forte.di.annotation.Depend.name","location":"simbot-util-di-api/love.forte.di.annotation/-depend/name.html","searchKeys":["name","val name: String","love.forte.di.annotation.Depend.name"]},{"name":"val parentBeanName: String","description":"love.forte.di.annotation.Beans.parentBeanName","location":"simbot-util-di-api/love.forte.di.annotation/-beans/parent-bean-name.html","searchKeys":["parentBeanName","val parentBeanName: String","love.forte.di.annotation.Beans.parentBeanName"]},{"name":"val prefix: String","description":"love.forte.di.annotation.Configurable.prefix","location":"simbot-util-di-api/love.forte.di.annotation/-configurable/prefix.html","searchKeys":["prefix","val prefix: String","love.forte.di.annotation.Configurable.prefix"]},{"name":"val priority: Int = 1000","description":"love.forte.di.annotation.Beans.priority","location":"simbot-util-di-api/love.forte.di.annotation/-beans/priority.html","searchKeys":["priority","val priority: Int = 1000","love.forte.di.annotation.Beans.priority"]},{"name":"val required: Boolean = true","description":"love.forte.di.annotation.Depend.required","location":"simbot-util-di-api/love.forte.di.annotation/-depend/required.html","searchKeys":["required","val required: Boolean = true","love.forte.di.annotation.Depend.required"]},{"name":"val value: Array<out KClass<*>>","description":"love.forte.di.annotation.SpareBean.value","location":"simbot-util-di-api/love.forte.di.annotation/-spare-bean/value.html","searchKeys":["value","val value: Array<out KClass<*>>","love.forte.di.annotation.SpareBean.value"]},{"name":"val value: String","description":"love.forte.di.annotation.Beans.value","location":"simbot-util-di-api/love.forte.di.annotation/-beans/value.html","searchKeys":["value","val value: String","love.forte.di.annotation.Beans.value"]},{"name":"BLACK","description":"love.forte.simbot.logger.slf4j.color.BackGroundColor.BLACK","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j.color/-back-ground-color/-b-l-a-c-k/index.html","searchKeys":["BLACK","BLACK","love.forte.simbot.logger.slf4j.color.BackGroundColor.BLACK"]},{"name":"BLACK","description":"love.forte.simbot.logger.slf4j.color.FontColor.BLACK","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j.color/-font-color/-b-l-a-c-k/index.html","searchKeys":["BLACK","BLACK","love.forte.simbot.logger.slf4j.color.FontColor.BLACK"]},{"name":"BLUE","description":"love.forte.simbot.logger.slf4j.color.BackGroundColor.BLUE","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j.color/-back-ground-color/-b-l-u-e/index.html","searchKeys":["BLUE","BLUE","love.forte.simbot.logger.slf4j.color.BackGroundColor.BLUE"]},{"name":"BLUE","description":"love.forte.simbot.logger.slf4j.color.FontColor.BLUE","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j.color/-font-color/-b-l-u-e/index.html","searchKeys":["BLUE","BLUE","love.forte.simbot.logger.slf4j.color.FontColor.BLUE"]},{"name":"DARK_GREEN","description":"love.forte.simbot.logger.slf4j.color.BackGroundColor.DARK_GREEN","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j.color/-back-ground-color/-d-a-r-k_-g-r-e-e-n/index.html","searchKeys":["DARK_GREEN","DARK_GREEN","love.forte.simbot.logger.slf4j.color.BackGroundColor.DARK_GREEN"]},{"name":"DARK_GREEN","description":"love.forte.simbot.logger.slf4j.color.FontColor.DARK_GREEN","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j.color/-font-color/-d-a-r-k_-g-r-e-e-n/index.html","searchKeys":["DARK_GREEN","DARK_GREEN","love.forte.simbot.logger.slf4j.color.FontColor.DARK_GREEN"]},{"name":"DARK_RED","description":"love.forte.simbot.logger.slf4j.color.BackGroundColor.DARK_RED","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j.color/-back-ground-color/-d-a-r-k_-r-e-d/index.html","searchKeys":["DARK_RED","DARK_RED","love.forte.simbot.logger.slf4j.color.BackGroundColor.DARK_RED"]},{"name":"GREEN","description":"love.forte.simbot.logger.slf4j.color.BackGroundColor.GREEN","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j.color/-back-ground-color/-g-r-e-e-n/index.html","searchKeys":["GREEN","GREEN","love.forte.simbot.logger.slf4j.color.BackGroundColor.GREEN"]},{"name":"GREEN","description":"love.forte.simbot.logger.slf4j.color.FontColor.GREEN","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j.color/-font-color/-g-r-e-e-n/index.html","searchKeys":["GREEN","GREEN","love.forte.simbot.logger.slf4j.color.FontColor.GREEN"]},{"name":"PURPLE","description":"love.forte.simbot.logger.slf4j.color.BackGroundColor.PURPLE","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j.color/-back-ground-color/-p-u-r-p-l-e/index.html","searchKeys":["PURPLE","PURPLE","love.forte.simbot.logger.slf4j.color.BackGroundColor.PURPLE"]},{"name":"PURPLE","description":"love.forte.simbot.logger.slf4j.color.FontColor.PURPLE","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j.color/-font-color/-p-u-r-p-l-e/index.html","searchKeys":["PURPLE","PURPLE","love.forte.simbot.logger.slf4j.color.FontColor.PURPLE"]},{"name":"RED","description":"love.forte.simbot.logger.slf4j.color.FontColor.RED","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j.color/-font-color/-r-e-d/index.html","searchKeys":["RED","RED","love.forte.simbot.logger.slf4j.color.FontColor.RED"]},{"name":"WHITE","description":"love.forte.simbot.logger.slf4j.color.BackGroundColor.WHITE","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j.color/-back-ground-color/-w-h-i-t-e/index.html","searchKeys":["WHITE","WHITE","love.forte.simbot.logger.slf4j.color.BackGroundColor.WHITE"]},{"name":"WHITE","description":"love.forte.simbot.logger.slf4j.color.FontColor.WHITE","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j.color/-font-color/-w-h-i-t-e/index.html","searchKeys":["WHITE","WHITE","love.forte.simbot.logger.slf4j.color.FontColor.WHITE"]},{"name":"YELLOW","description":"love.forte.simbot.logger.slf4j.color.BackGroundColor.YELLOW","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j.color/-back-ground-color/-y-e-l-l-o-w/index.html","searchKeys":["YELLOW","YELLOW","love.forte.simbot.logger.slf4j.color.BackGroundColor.YELLOW"]},{"name":"YELLOW","description":"love.forte.simbot.logger.slf4j.color.FontColor.YELLOW","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j.color/-font-color/-y-e-l-l-o-w/index.html","searchKeys":["YELLOW","YELLOW","love.forte.simbot.logger.slf4j.color.FontColor.YELLOW"]},{"name":"abstract class SimbotLoggerConfiguration","description":"love.forte.simbot.logger.slf4j.SimbotLoggerConfiguration","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger-configuration/index.html","searchKeys":["SimbotLoggerConfiguration","abstract class SimbotLoggerConfiguration","love.forte.simbot.logger.slf4j.SimbotLoggerConfiguration"]},{"name":"abstract fun doHandle(info: LogInfo)","description":"love.forte.simbot.logger.slf4j.SimbotLoggerProcessor.doHandle","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger-processor/do-handle.html","searchKeys":["doHandle","abstract fun doHandle(info: LogInfo)","love.forte.simbot.logger.slf4j.SimbotLoggerProcessor.doHandle"]},{"name":"abstract fun getProcessors(configuration: SimbotLoggerConfiguration): List<SimbotLoggerProcessor>","description":"love.forte.simbot.logger.slf4j.SimbotLoggerProcessorsFactory.getProcessors","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger-processors-factory/get-processors.html","searchKeys":["getProcessors","abstract fun getProcessors(configuration: SimbotLoggerConfiguration): List<SimbotLoggerProcessor>","love.forte.simbot.logger.slf4j.SimbotLoggerProcessorsFactory.getProcessors"]},{"name":"abstract fun isLevelEnabled(name: String?, level: LogLevel, marker: Marker?): Boolean","description":"love.forte.simbot.logger.slf4j.SimbotLoggerProcessor.isLevelEnabled","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger-processor/is-level-enabled.html","searchKeys":["isLevelEnabled","abstract fun isLevelEnabled(name: String?, level: LogLevel, marker: Marker?): Boolean","love.forte.simbot.logger.slf4j.SimbotLoggerProcessor.isLevelEnabled"]},{"name":"abstract val colorIndex: Int","description":"love.forte.simbot.logger.slf4j.color.Color.colorIndex","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j.color/-color/color-index.html","searchKeys":["colorIndex","abstract val colorIndex: Int","love.forte.simbot.logger.slf4j.color.Color.colorIndex"]},{"name":"abstract val defaultLevel: LogLevel?","description":"love.forte.simbot.logger.slf4j.SimbotLoggerConfiguration.defaultLevel","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger-configuration/default-level.html","searchKeys":["defaultLevel","abstract val defaultLevel: LogLevel?","love.forte.simbot.logger.slf4j.SimbotLoggerConfiguration.defaultLevel"]},{"name":"abstract val key: String","description":"love.forte.simbot.logger.slf4j.SimbotLoggerConfiguration.Property.key","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger-configuration/-property/key.html","searchKeys":["key","abstract val key: String","love.forte.simbot.logger.slf4j.SimbotLoggerConfiguration.Property.key"]},{"name":"abstract val level: LogLevel","description":"love.forte.simbot.logger.slf4j.SimbotLoggerConfiguration.PrefixLogLevel.level","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger-configuration/-prefix-log-level/level.html","searchKeys":["level","abstract val level: LogLevel","love.forte.simbot.logger.slf4j.SimbotLoggerConfiguration.PrefixLogLevel.level"]},{"name":"abstract val prefix: String","description":"love.forte.simbot.logger.slf4j.SimbotLoggerConfiguration.PrefixLogLevel.prefix","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger-configuration/-prefix-log-level/prefix.html","searchKeys":["prefix","abstract val prefix: String","love.forte.simbot.logger.slf4j.SimbotLoggerConfiguration.PrefixLogLevel.prefix"]},{"name":"abstract val prefix: String","description":"love.forte.simbot.logger.slf4j.color.Color.prefix","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j.color/-color/prefix.html","searchKeys":["prefix","abstract val prefix: String","love.forte.simbot.logger.slf4j.color.Color.prefix"]},{"name":"abstract val prefixLevelList: List<SimbotLoggerConfiguration.PrefixLogLevel>","description":"love.forte.simbot.logger.slf4j.SimbotLoggerConfiguration.prefixLevelList","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger-configuration/prefix-level-list.html","searchKeys":["prefixLevelList","abstract val prefixLevelList: List<SimbotLoggerConfiguration.PrefixLogLevel>","love.forte.simbot.logger.slf4j.SimbotLoggerConfiguration.prefixLevelList"]},{"name":"abstract val properties: Map<String, SimbotLoggerConfiguration.Property>","description":"love.forte.simbot.logger.slf4j.SimbotLoggerConfiguration.properties","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger-configuration/properties.html","searchKeys":["properties","abstract val properties: Map<String, SimbotLoggerConfiguration.Property>","love.forte.simbot.logger.slf4j.SimbotLoggerConfiguration.properties"]},{"name":"abstract val stringValue: String","description":"love.forte.simbot.logger.slf4j.SimbotLoggerConfiguration.Property.stringValue","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger-configuration/-property/string-value.html","searchKeys":["stringValue","abstract val stringValue: String","love.forte.simbot.logger.slf4j.SimbotLoggerConfiguration.Property.stringValue"]},{"name":"abstract val suffix: String","description":"love.forte.simbot.logger.slf4j.color.Color.suffix","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j.color/-color/suffix.html","searchKeys":["suffix","abstract val suffix: String","love.forte.simbot.logger.slf4j.color.Color.suffix"]},{"name":"class ConsoleSimbotLoggerProcessor(configuration: SimbotLoggerConfiguration) : SimbotLoggerProcessor","description":"love.forte.simbot.logger.slf4j.ConsoleSimbotLoggerProcessor","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-console-simbot-logger-processor/index.html","searchKeys":["ConsoleSimbotLoggerProcessor","class ConsoleSimbotLoggerProcessor(configuration: SimbotLoggerConfiguration) : SimbotLoggerProcessor","love.forte.simbot.logger.slf4j.ConsoleSimbotLoggerProcessor"]},{"name":"class LogInfo(val level: LogLevel, val marker: Marker?, val msg: String, val args: Array<out Any?>, val error: Throwable?, val name: String, val fullName: String, val thread: Thread, val timestamp: Long)","description":"love.forte.simbot.logger.slf4j.LogInfo","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-log-info/index.html","searchKeys":["LogInfo","class LogInfo(val level: LogLevel, val marker: Marker?, val msg: String, val args: Array<out Any?>, val error: Throwable?, val name: String, val fullName: String, val thread: Thread, val timestamp: Long)","love.forte.simbot.logger.slf4j.LogInfo"]},{"name":"class SimbotLogger(fullyQualifiedCallerName: String, processors: List<SimbotLoggerProcessor>, sendLog: (LogInfo) -> Unit) : Logger","description":"love.forte.simbot.logger.slf4j.SimbotLogger","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger/index.html","searchKeys":["SimbotLogger","class SimbotLogger(fullyQualifiedCallerName: String, processors: List<SimbotLoggerProcessor>, sendLog: (LogInfo) -> Unit) : Logger","love.forte.simbot.logger.slf4j.SimbotLogger"]},{"name":"class SimbotLoggerFactory(processors: List<SimbotLoggerProcessor>) : ILoggerFactory","description":"love.forte.simbot.logger.slf4j.SimbotLoggerFactory","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger-factory/index.html","searchKeys":["SimbotLoggerFactory","class SimbotLoggerFactory(processors: List<SimbotLoggerProcessor>) : ILoggerFactory","love.forte.simbot.logger.slf4j.SimbotLoggerFactory"]},{"name":"const val DEFAULT_LEVEL_PROPERTY: String","description":"love.forte.simbot.logger.slf4j.SimbotLoggerConfiguration.Companion.DEFAULT_LEVEL_PROPERTY","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger-configuration/-companion/-d-e-f-a-u-l-t_-l-e-v-e-l_-p-r-o-p-e-r-t-y.html","searchKeys":["DEFAULT_LEVEL_PROPERTY","const val DEFAULT_LEVEL_PROPERTY: String","love.forte.simbot.logger.slf4j.SimbotLoggerConfiguration.Companion.DEFAULT_LEVEL_PROPERTY"]},{"name":"const val JVM_PROPERTY_PREFIX: String","description":"love.forte.simbot.logger.slf4j.SimbotLoggerConfiguration.Companion.JVM_PROPERTY_PREFIX","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger-configuration/-companion/-j-v-m_-p-r-o-p-e-r-t-y_-p-r-e-f-i-x.html","searchKeys":["JVM_PROPERTY_PREFIX","const val JVM_PROPERTY_PREFIX: String","love.forte.simbot.logger.slf4j.SimbotLoggerConfiguration.Companion.JVM_PROPERTY_PREFIX"]},{"name":"enum BackGroundColor : Enum<BackGroundColor> , Color","description":"love.forte.simbot.logger.slf4j.color.BackGroundColor","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j.color/-back-ground-color/index.html","searchKeys":["BackGroundColor","enum BackGroundColor : Enum<BackGroundColor> , Color","love.forte.simbot.logger.slf4j.color.BackGroundColor"]},{"name":"enum FontColor : Enum<FontColor> , Color","description":"love.forte.simbot.logger.slf4j.color.FontColor","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j.color/-font-color/index.html","searchKeys":["FontColor","enum FontColor : Enum<FontColor> , Color","love.forte.simbot.logger.slf4j.color.FontColor"]},{"name":"fun ConsoleSimbotLoggerProcessor(configuration: SimbotLoggerConfiguration)","description":"love.forte.simbot.logger.slf4j.ConsoleSimbotLoggerProcessor.ConsoleSimbotLoggerProcessor","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-console-simbot-logger-processor/-console-simbot-logger-processor.html","searchKeys":["ConsoleSimbotLoggerProcessor","fun ConsoleSimbotLoggerProcessor(configuration: SimbotLoggerConfiguration)","love.forte.simbot.logger.slf4j.ConsoleSimbotLoggerProcessor.ConsoleSimbotLoggerProcessor"]},{"name":"fun LogInfo(level: LogLevel, marker: Marker?, msg: String, args: Array<out Any?>, error: Throwable?, name: String, fullName: String, thread: Thread, timestamp: Long)","description":"love.forte.simbot.logger.slf4j.LogInfo.LogInfo","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-log-info/-log-info.html","searchKeys":["LogInfo","fun LogInfo(level: LogLevel, marker: Marker?, msg: String, args: Array<out Any?>, error: Throwable?, name: String, fullName: String, thread: Thread, timestamp: Long)","love.forte.simbot.logger.slf4j.LogInfo.LogInfo"]},{"name":"fun SimbotLogger(fullyQualifiedCallerName: String, processors: List<SimbotLoggerProcessor>, sendLog: (LogInfo) -> Unit)","description":"love.forte.simbot.logger.slf4j.SimbotLogger.SimbotLogger","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger/-simbot-logger.html","searchKeys":["SimbotLogger","fun SimbotLogger(fullyQualifiedCallerName: String, processors: List<SimbotLoggerProcessor>, sendLog: (LogInfo) -> Unit)","love.forte.simbot.logger.slf4j.SimbotLogger.SimbotLogger"]},{"name":"fun SimbotLoggerConfiguration()","description":"love.forte.simbot.logger.slf4j.SimbotLoggerConfiguration.SimbotLoggerConfiguration","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger-configuration/-simbot-logger-configuration.html","searchKeys":["SimbotLoggerConfiguration","fun SimbotLoggerConfiguration()","love.forte.simbot.logger.slf4j.SimbotLoggerConfiguration.SimbotLoggerConfiguration"]},{"name":"fun SimbotLoggerFactory(processors: List<SimbotLoggerProcessor>)","description":"love.forte.simbot.logger.slf4j.SimbotLoggerFactory.SimbotLoggerFactory","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger-factory/-simbot-logger-factory.html","searchKeys":["SimbotLoggerFactory","fun SimbotLoggerFactory(processors: List<SimbotLoggerProcessor>)","love.forte.simbot.logger.slf4j.SimbotLoggerFactory.SimbotLoggerFactory"]},{"name":"fun String.decorativeColor(color: Color): String","description":"love.forte.simbot.logger.slf4j.color.decorativeColor","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j.color/decorative-color.html","searchKeys":["decorativeColor","fun String.decorativeColor(color: Color): String","love.forte.simbot.logger.slf4j.color.decorativeColor"]},{"name":"fun StringBuilder.appendColor(color: Color, value: Char): StringBuilder","description":"love.forte.simbot.logger.slf4j.color.appendColor","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j.color/append-color.html","searchKeys":["appendColor","fun StringBuilder.appendColor(color: Color, value: Char): StringBuilder","love.forte.simbot.logger.slf4j.color.appendColor"]},{"name":"fun StringBuilder.appendColor(color: Color, value: String): StringBuilder","description":"love.forte.simbot.logger.slf4j.color.appendColor","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j.color/append-color.html","searchKeys":["appendColor","fun StringBuilder.appendColor(color: Color, value: String): StringBuilder","love.forte.simbot.logger.slf4j.color.appendColor"]},{"name":"fun StringBuilder.appendColorPrefix(color: Color): StringBuilder","description":"love.forte.simbot.logger.slf4j.color.appendColorPrefix","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j.color/append-color-prefix.html","searchKeys":["appendColorPrefix","fun StringBuilder.appendColorPrefix(color: Color): StringBuilder","love.forte.simbot.logger.slf4j.color.appendColorPrefix"]},{"name":"fun StringBuilder.appendColorSuffix(color: Color): StringBuilder","description":"love.forte.simbot.logger.slf4j.color.appendColorSuffix","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j.color/append-color-suffix.html","searchKeys":["appendColorSuffix","fun StringBuilder.appendColorSuffix(color: Color): StringBuilder","love.forte.simbot.logger.slf4j.color.appendColorSuffix"]},{"name":"fun getColor(index: Int): BackGroundColor?","description":"love.forte.simbot.logger.slf4j.color.BackGroundColor.Companion.getColor","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j.color/-back-ground-color/-companion/get-color.html","searchKeys":["getColor","fun getColor(index: Int): BackGroundColor?","love.forte.simbot.logger.slf4j.color.BackGroundColor.Companion.getColor"]},{"name":"fun getColor(index: Int): FontColor?","description":"love.forte.simbot.logger.slf4j.color.FontColor.Companion.getColor","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j.color/-font-color/-companion/get-color.html","searchKeys":["getColor","fun getColor(index: Int): FontColor?","love.forte.simbot.logger.slf4j.color.FontColor.Companion.getColor"]},{"name":"fun getFullyQualifiedCallerName(): String","description":"love.forte.simbot.logger.slf4j.SimbotLogger.getFullyQualifiedCallerName","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger/get-fully-qualified-caller-name.html","searchKeys":["getFullyQualifiedCallerName","fun getFullyQualifiedCallerName(): String","love.forte.simbot.logger.slf4j.SimbotLogger.getFullyQualifiedCallerName"]},{"name":"fun getSingleton(): StaticLoggerBinder","description":"org.slf4j.impl.StaticLoggerBinder.getSingleton","location":"simbot-logger-slf4j-impl/org.slf4j.impl/-static-logger-binder/get-singleton.html","searchKeys":["getSingleton","fun getSingleton(): StaticLoggerBinder","org.slf4j.impl.StaticLoggerBinder.getSingleton"]},{"name":"fun valueOf(value: String): BackGroundColor","description":"love.forte.simbot.logger.slf4j.color.BackGroundColor.valueOf","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j.color/-back-ground-color/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): BackGroundColor","love.forte.simbot.logger.slf4j.color.BackGroundColor.valueOf"]},{"name":"fun valueOf(value: String): FontColor","description":"love.forte.simbot.logger.slf4j.color.FontColor.valueOf","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j.color/-font-color/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): FontColor","love.forte.simbot.logger.slf4j.color.FontColor.valueOf"]},{"name":"fun values(): Array<BackGroundColor>","description":"love.forte.simbot.logger.slf4j.color.BackGroundColor.values","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j.color/-back-ground-color/values.html","searchKeys":["values","fun values(): Array<BackGroundColor>","love.forte.simbot.logger.slf4j.color.BackGroundColor.values"]},{"name":"fun values(): Array<FontColor>","description":"love.forte.simbot.logger.slf4j.color.FontColor.values","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j.color/-font-color/values.html","searchKeys":["values","fun values(): Array<FontColor>","love.forte.simbot.logger.slf4j.color.FontColor.values"]},{"name":"interface Color","description":"love.forte.simbot.logger.slf4j.color.Color","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j.color/-color/index.html","searchKeys":["Color","interface Color","love.forte.simbot.logger.slf4j.color.Color"]},{"name":"interface PrefixLogLevel","description":"love.forte.simbot.logger.slf4j.SimbotLoggerConfiguration.PrefixLogLevel","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger-configuration/-prefix-log-level/index.html","searchKeys":["PrefixLogLevel","interface PrefixLogLevel","love.forte.simbot.logger.slf4j.SimbotLoggerConfiguration.PrefixLogLevel"]},{"name":"interface Property","description":"love.forte.simbot.logger.slf4j.SimbotLoggerConfiguration.Property","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger-configuration/-property/index.html","searchKeys":["Property","interface Property","love.forte.simbot.logger.slf4j.SimbotLoggerConfiguration.Property"]},{"name":"interface SimbotLoggerProcessor","description":"love.forte.simbot.logger.slf4j.SimbotLoggerProcessor","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger-processor/index.html","searchKeys":["SimbotLoggerProcessor","interface SimbotLoggerProcessor","love.forte.simbot.logger.slf4j.SimbotLoggerProcessor"]},{"name":"interface SimbotLoggerProcessorsFactory","description":"love.forte.simbot.logger.slf4j.SimbotLoggerProcessorsFactory","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger-processors-factory/index.html","searchKeys":["SimbotLoggerProcessorsFactory","interface SimbotLoggerProcessorsFactory","love.forte.simbot.logger.slf4j.SimbotLoggerProcessorsFactory"]},{"name":"object Companion","description":"love.forte.simbot.logger.slf4j.ConsoleSimbotLoggerProcessor.Companion","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-console-simbot-logger-processor/-companion/index.html","searchKeys":["Companion","object Companion","love.forte.simbot.logger.slf4j.ConsoleSimbotLoggerProcessor.Companion"]},{"name":"object Companion","description":"love.forte.simbot.logger.slf4j.LogInfo.Companion","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-log-info/-companion/index.html","searchKeys":["Companion","object Companion","love.forte.simbot.logger.slf4j.LogInfo.Companion"]},{"name":"object Companion","description":"love.forte.simbot.logger.slf4j.SimbotLogger.Companion","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger/-companion/index.html","searchKeys":["Companion","object Companion","love.forte.simbot.logger.slf4j.SimbotLogger.Companion"]},{"name":"object Companion","description":"love.forte.simbot.logger.slf4j.SimbotLoggerConfiguration.Companion","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger-configuration/-companion/index.html","searchKeys":["Companion","object Companion","love.forte.simbot.logger.slf4j.SimbotLoggerConfiguration.Companion"]},{"name":"object Companion","description":"love.forte.simbot.logger.slf4j.SimbotLoggerFactory.Companion","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger-factory/-companion/index.html","searchKeys":["Companion","object Companion","love.forte.simbot.logger.slf4j.SimbotLoggerFactory.Companion"]},{"name":"object Companion","description":"love.forte.simbot.logger.slf4j.color.BackGroundColor.Companion","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j.color/-back-ground-color/-companion/index.html","searchKeys":["Companion","object Companion","love.forte.simbot.logger.slf4j.color.BackGroundColor.Companion"]},{"name":"object Companion","description":"love.forte.simbot.logger.slf4j.color.FontColor.Companion","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j.color/-font-color/-companion/index.html","searchKeys":["Companion","object Companion","love.forte.simbot.logger.slf4j.color.FontColor.Companion"]},{"name":"object DefaultSimbotLoggerProcessorsFactory : SimbotLoggerProcessorsFactory","description":"love.forte.simbot.logger.slf4j.DefaultSimbotLoggerProcessorsFactory","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-default-simbot-logger-processors-factory/index.html","searchKeys":["DefaultSimbotLoggerProcessorsFactory","object DefaultSimbotLoggerProcessorsFactory : SimbotLoggerProcessorsFactory","love.forte.simbot.logger.slf4j.DefaultSimbotLoggerProcessorsFactory"]},{"name":"object StaticLoggerBinder : LoggerFactoryBinder","description":"org.slf4j.impl.StaticLoggerBinder","location":"simbot-logger-slf4j-impl/org.slf4j.impl/-static-logger-binder/index.html","searchKeys":["StaticLoggerBinder","object StaticLoggerBinder : LoggerFactoryBinder","org.slf4j.impl.StaticLoggerBinder"]},{"name":"open override fun debug(format: String?, arg1: Any?, arg2: Any?)","description":"love.forte.simbot.logger.slf4j.SimbotLogger.debug","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger/debug.html","searchKeys":["debug","open override fun debug(format: String?, arg1: Any?, arg2: Any?)","love.forte.simbot.logger.slf4j.SimbotLogger.debug"]},{"name":"open override fun debug(format: String?, arg: Any?)","description":"love.forte.simbot.logger.slf4j.SimbotLogger.debug","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger/debug.html","searchKeys":["debug","open override fun debug(format: String?, arg: Any?)","love.forte.simbot.logger.slf4j.SimbotLogger.debug"]},{"name":"open override fun debug(format: String?, vararg arguments: Any?)","description":"love.forte.simbot.logger.slf4j.SimbotLogger.debug","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger/debug.html","searchKeys":["debug","open override fun debug(format: String?, vararg arguments: Any?)","love.forte.simbot.logger.slf4j.SimbotLogger.debug"]},{"name":"open override fun debug(marker: Marker?, format: String?, arg1: Any?, arg2: Any?)","description":"love.forte.simbot.logger.slf4j.SimbotLogger.debug","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger/debug.html","searchKeys":["debug","open override fun debug(marker: Marker?, format: String?, arg1: Any?, arg2: Any?)","love.forte.simbot.logger.slf4j.SimbotLogger.debug"]},{"name":"open override fun debug(marker: Marker?, format: String?, arg: Any?)","description":"love.forte.simbot.logger.slf4j.SimbotLogger.debug","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger/debug.html","searchKeys":["debug","open override fun debug(marker: Marker?, format: String?, arg: Any?)","love.forte.simbot.logger.slf4j.SimbotLogger.debug"]},{"name":"open override fun debug(marker: Marker?, format: String?, vararg arguments: Any?)","description":"love.forte.simbot.logger.slf4j.SimbotLogger.debug","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger/debug.html","searchKeys":["debug","open override fun debug(marker: Marker?, format: String?, vararg arguments: Any?)","love.forte.simbot.logger.slf4j.SimbotLogger.debug"]},{"name":"open override fun debug(marker: Marker?, msg: String?)","description":"love.forte.simbot.logger.slf4j.SimbotLogger.debug","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger/debug.html","searchKeys":["debug","open override fun debug(marker: Marker?, msg: String?)","love.forte.simbot.logger.slf4j.SimbotLogger.debug"]},{"name":"open override fun debug(marker: Marker?, msg: String?, t: Throwable?)","description":"love.forte.simbot.logger.slf4j.SimbotLogger.debug","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger/debug.html","searchKeys":["debug","open override fun debug(marker: Marker?, msg: String?, t: Throwable?)","love.forte.simbot.logger.slf4j.SimbotLogger.debug"]},{"name":"open override fun debug(msg: String?)","description":"love.forte.simbot.logger.slf4j.SimbotLogger.debug","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger/debug.html","searchKeys":["debug","open override fun debug(msg: String?)","love.forte.simbot.logger.slf4j.SimbotLogger.debug"]},{"name":"open override fun debug(msg: String?, t: Throwable?)","description":"love.forte.simbot.logger.slf4j.SimbotLogger.debug","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger/debug.html","searchKeys":["debug","open override fun debug(msg: String?, t: Throwable?)","love.forte.simbot.logger.slf4j.SimbotLogger.debug"]},{"name":"open override fun doHandle(info: LogInfo)","description":"love.forte.simbot.logger.slf4j.ConsoleSimbotLoggerProcessor.doHandle","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-console-simbot-logger-processor/do-handle.html","searchKeys":["doHandle","open override fun doHandle(info: LogInfo)","love.forte.simbot.logger.slf4j.ConsoleSimbotLoggerProcessor.doHandle"]},{"name":"open override fun error(format: String?, arg1: Any?, arg2: Any?)","description":"love.forte.simbot.logger.slf4j.SimbotLogger.error","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger/error.html","searchKeys":["error","open override fun error(format: String?, arg1: Any?, arg2: Any?)","love.forte.simbot.logger.slf4j.SimbotLogger.error"]},{"name":"open override fun error(format: String?, arg: Any?)","description":"love.forte.simbot.logger.slf4j.SimbotLogger.error","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger/error.html","searchKeys":["error","open override fun error(format: String?, arg: Any?)","love.forte.simbot.logger.slf4j.SimbotLogger.error"]},{"name":"open override fun error(format: String?, vararg arguments: Any?)","description":"love.forte.simbot.logger.slf4j.SimbotLogger.error","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger/error.html","searchKeys":["error","open override fun error(format: String?, vararg arguments: Any?)","love.forte.simbot.logger.slf4j.SimbotLogger.error"]},{"name":"open override fun error(marker: Marker?, format: String?, arg1: Any?, arg2: Any?)","description":"love.forte.simbot.logger.slf4j.SimbotLogger.error","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger/error.html","searchKeys":["error","open override fun error(marker: Marker?, format: String?, arg1: Any?, arg2: Any?)","love.forte.simbot.logger.slf4j.SimbotLogger.error"]},{"name":"open override fun error(marker: Marker?, format: String?, arg: Any?)","description":"love.forte.simbot.logger.slf4j.SimbotLogger.error","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger/error.html","searchKeys":["error","open override fun error(marker: Marker?, format: String?, arg: Any?)","love.forte.simbot.logger.slf4j.SimbotLogger.error"]},{"name":"open override fun error(marker: Marker?, format: String?, vararg arguments: Any?)","description":"love.forte.simbot.logger.slf4j.SimbotLogger.error","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger/error.html","searchKeys":["error","open override fun error(marker: Marker?, format: String?, vararg arguments: Any?)","love.forte.simbot.logger.slf4j.SimbotLogger.error"]},{"name":"open override fun error(marker: Marker?, msg: String?)","description":"love.forte.simbot.logger.slf4j.SimbotLogger.error","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger/error.html","searchKeys":["error","open override fun error(marker: Marker?, msg: String?)","love.forte.simbot.logger.slf4j.SimbotLogger.error"]},{"name":"open override fun error(marker: Marker?, msg: String?, t: Throwable?)","description":"love.forte.simbot.logger.slf4j.SimbotLogger.error","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger/error.html","searchKeys":["error","open override fun error(marker: Marker?, msg: String?, t: Throwable?)","love.forte.simbot.logger.slf4j.SimbotLogger.error"]},{"name":"open override fun error(msg: String?)","description":"love.forte.simbot.logger.slf4j.SimbotLogger.error","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger/error.html","searchKeys":["error","open override fun error(msg: String?)","love.forte.simbot.logger.slf4j.SimbotLogger.error"]},{"name":"open override fun error(msg: String?, t: Throwable?)","description":"love.forte.simbot.logger.slf4j.SimbotLogger.error","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger/error.html","searchKeys":["error","open override fun error(msg: String?, t: Throwable?)","love.forte.simbot.logger.slf4j.SimbotLogger.error"]},{"name":"open override fun getLogger(name: String?): Logger","description":"love.forte.simbot.logger.slf4j.SimbotLoggerFactory.getLogger","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger-factory/get-logger.html","searchKeys":["getLogger","open override fun getLogger(name: String?): Logger","love.forte.simbot.logger.slf4j.SimbotLoggerFactory.getLogger"]},{"name":"open override fun getLoggerFactory(): ILoggerFactory","description":"org.slf4j.impl.StaticLoggerBinder.getLoggerFactory","location":"simbot-logger-slf4j-impl/org.slf4j.impl/-static-logger-binder/get-logger-factory.html","searchKeys":["getLoggerFactory","open override fun getLoggerFactory(): ILoggerFactory","org.slf4j.impl.StaticLoggerBinder.getLoggerFactory"]},{"name":"open override fun getLoggerFactoryClassStr(): String","description":"org.slf4j.impl.StaticLoggerBinder.getLoggerFactoryClassStr","location":"simbot-logger-slf4j-impl/org.slf4j.impl/-static-logger-binder/get-logger-factory-class-str.html","searchKeys":["getLoggerFactoryClassStr","open override fun getLoggerFactoryClassStr(): String","org.slf4j.impl.StaticLoggerBinder.getLoggerFactoryClassStr"]},{"name":"open override fun getName(): String","description":"love.forte.simbot.logger.slf4j.SimbotLogger.getName","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger/get-name.html","searchKeys":["getName","open override fun getName(): String","love.forte.simbot.logger.slf4j.SimbotLogger.getName"]},{"name":"open override fun getProcessors(configuration: SimbotLoggerConfiguration): List<SimbotLoggerProcessor>","description":"love.forte.simbot.logger.slf4j.DefaultSimbotLoggerProcessorsFactory.getProcessors","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-default-simbot-logger-processors-factory/get-processors.html","searchKeys":["getProcessors","open override fun getProcessors(configuration: SimbotLoggerConfiguration): List<SimbotLoggerProcessor>","love.forte.simbot.logger.slf4j.DefaultSimbotLoggerProcessorsFactory.getProcessors"]},{"name":"open override fun info(format: String?, arg1: Any?, arg2: Any?)","description":"love.forte.simbot.logger.slf4j.SimbotLogger.info","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger/info.html","searchKeys":["info","open override fun info(format: String?, arg1: Any?, arg2: Any?)","love.forte.simbot.logger.slf4j.SimbotLogger.info"]},{"name":"open override fun info(format: String?, arg: Any?)","description":"love.forte.simbot.logger.slf4j.SimbotLogger.info","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger/info.html","searchKeys":["info","open override fun info(format: String?, arg: Any?)","love.forte.simbot.logger.slf4j.SimbotLogger.info"]},{"name":"open override fun info(format: String?, vararg arguments: Any?)","description":"love.forte.simbot.logger.slf4j.SimbotLogger.info","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger/info.html","searchKeys":["info","open override fun info(format: String?, vararg arguments: Any?)","love.forte.simbot.logger.slf4j.SimbotLogger.info"]},{"name":"open override fun info(marker: Marker?, format: String?, arg1: Any?, arg2: Any?)","description":"love.forte.simbot.logger.slf4j.SimbotLogger.info","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger/info.html","searchKeys":["info","open override fun info(marker: Marker?, format: String?, arg1: Any?, arg2: Any?)","love.forte.simbot.logger.slf4j.SimbotLogger.info"]},{"name":"open override fun info(marker: Marker?, format: String?, arg: Any?)","description":"love.forte.simbot.logger.slf4j.SimbotLogger.info","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger/info.html","searchKeys":["info","open override fun info(marker: Marker?, format: String?, arg: Any?)","love.forte.simbot.logger.slf4j.SimbotLogger.info"]},{"name":"open override fun info(marker: Marker?, format: String?, vararg arguments: Any?)","description":"love.forte.simbot.logger.slf4j.SimbotLogger.info","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger/info.html","searchKeys":["info","open override fun info(marker: Marker?, format: String?, vararg arguments: Any?)","love.forte.simbot.logger.slf4j.SimbotLogger.info"]},{"name":"open override fun info(marker: Marker?, msg: String?)","description":"love.forte.simbot.logger.slf4j.SimbotLogger.info","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger/info.html","searchKeys":["info","open override fun info(marker: Marker?, msg: String?)","love.forte.simbot.logger.slf4j.SimbotLogger.info"]},{"name":"open override fun info(marker: Marker?, msg: String?, t: Throwable?)","description":"love.forte.simbot.logger.slf4j.SimbotLogger.info","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger/info.html","searchKeys":["info","open override fun info(marker: Marker?, msg: String?, t: Throwable?)","love.forte.simbot.logger.slf4j.SimbotLogger.info"]},{"name":"open override fun info(msg: String?)","description":"love.forte.simbot.logger.slf4j.SimbotLogger.info","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger/info.html","searchKeys":["info","open override fun info(msg: String?)","love.forte.simbot.logger.slf4j.SimbotLogger.info"]},{"name":"open override fun info(msg: String?, t: Throwable?)","description":"love.forte.simbot.logger.slf4j.SimbotLogger.info","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger/info.html","searchKeys":["info","open override fun info(msg: String?, t: Throwable?)","love.forte.simbot.logger.slf4j.SimbotLogger.info"]},{"name":"open override fun isDebugEnabled(): Boolean","description":"love.forte.simbot.logger.slf4j.SimbotLogger.isDebugEnabled","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger/is-debug-enabled.html","searchKeys":["isDebugEnabled","open override fun isDebugEnabled(): Boolean","love.forte.simbot.logger.slf4j.SimbotLogger.isDebugEnabled"]},{"name":"open override fun isDebugEnabled(marker: Marker?): Boolean","description":"love.forte.simbot.logger.slf4j.SimbotLogger.isDebugEnabled","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger/is-debug-enabled.html","searchKeys":["isDebugEnabled","open override fun isDebugEnabled(marker: Marker?): Boolean","love.forte.simbot.logger.slf4j.SimbotLogger.isDebugEnabled"]},{"name":"open override fun isErrorEnabled(): Boolean","description":"love.forte.simbot.logger.slf4j.SimbotLogger.isErrorEnabled","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger/is-error-enabled.html","searchKeys":["isErrorEnabled","open override fun isErrorEnabled(): Boolean","love.forte.simbot.logger.slf4j.SimbotLogger.isErrorEnabled"]},{"name":"open override fun isErrorEnabled(marker: Marker?): Boolean","description":"love.forte.simbot.logger.slf4j.SimbotLogger.isErrorEnabled","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger/is-error-enabled.html","searchKeys":["isErrorEnabled","open override fun isErrorEnabled(marker: Marker?): Boolean","love.forte.simbot.logger.slf4j.SimbotLogger.isErrorEnabled"]},{"name":"open override fun isInfoEnabled(): Boolean","description":"love.forte.simbot.logger.slf4j.SimbotLogger.isInfoEnabled","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger/is-info-enabled.html","searchKeys":["isInfoEnabled","open override fun isInfoEnabled(): Boolean","love.forte.simbot.logger.slf4j.SimbotLogger.isInfoEnabled"]},{"name":"open override fun isInfoEnabled(marker: Marker?): Boolean","description":"love.forte.simbot.logger.slf4j.SimbotLogger.isInfoEnabled","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger/is-info-enabled.html","searchKeys":["isInfoEnabled","open override fun isInfoEnabled(marker: Marker?): Boolean","love.forte.simbot.logger.slf4j.SimbotLogger.isInfoEnabled"]},{"name":"open override fun isLevelEnabled(name: String?, level: LogLevel, marker: Marker?): Boolean","description":"love.forte.simbot.logger.slf4j.ConsoleSimbotLoggerProcessor.isLevelEnabled","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-console-simbot-logger-processor/is-level-enabled.html","searchKeys":["isLevelEnabled","open override fun isLevelEnabled(name: String?, level: LogLevel, marker: Marker?): Boolean","love.forte.simbot.logger.slf4j.ConsoleSimbotLoggerProcessor.isLevelEnabled"]},{"name":"open override fun isTraceEnabled(): Boolean","description":"love.forte.simbot.logger.slf4j.SimbotLogger.isTraceEnabled","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger/is-trace-enabled.html","searchKeys":["isTraceEnabled","open override fun isTraceEnabled(): Boolean","love.forte.simbot.logger.slf4j.SimbotLogger.isTraceEnabled"]},{"name":"open override fun isTraceEnabled(marker: Marker?): Boolean","description":"love.forte.simbot.logger.slf4j.SimbotLogger.isTraceEnabled","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger/is-trace-enabled.html","searchKeys":["isTraceEnabled","open override fun isTraceEnabled(marker: Marker?): Boolean","love.forte.simbot.logger.slf4j.SimbotLogger.isTraceEnabled"]},{"name":"open override fun isWarnEnabled(): Boolean","description":"love.forte.simbot.logger.slf4j.SimbotLogger.isWarnEnabled","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger/is-warn-enabled.html","searchKeys":["isWarnEnabled","open override fun isWarnEnabled(): Boolean","love.forte.simbot.logger.slf4j.SimbotLogger.isWarnEnabled"]},{"name":"open override fun isWarnEnabled(marker: Marker?): Boolean","description":"love.forte.simbot.logger.slf4j.SimbotLogger.isWarnEnabled","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger/is-warn-enabled.html","searchKeys":["isWarnEnabled","open override fun isWarnEnabled(marker: Marker?): Boolean","love.forte.simbot.logger.slf4j.SimbotLogger.isWarnEnabled"]},{"name":"open override fun toString(): String","description":"love.forte.simbot.logger.slf4j.color.BackGroundColor.toString","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j.color/-back-ground-color/to-string.html","searchKeys":["toString","open override fun toString(): String","love.forte.simbot.logger.slf4j.color.BackGroundColor.toString"]},{"name":"open override fun toString(): String","description":"love.forte.simbot.logger.slf4j.color.FontColor.toString","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j.color/-font-color/to-string.html","searchKeys":["toString","open override fun toString(): String","love.forte.simbot.logger.slf4j.color.FontColor.toString"]},{"name":"open override fun trace(format: String?, arg1: Any?, arg2: Any?)","description":"love.forte.simbot.logger.slf4j.SimbotLogger.trace","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger/trace.html","searchKeys":["trace","open override fun trace(format: String?, arg1: Any?, arg2: Any?)","love.forte.simbot.logger.slf4j.SimbotLogger.trace"]},{"name":"open override fun trace(format: String?, arg: Any?)","description":"love.forte.simbot.logger.slf4j.SimbotLogger.trace","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger/trace.html","searchKeys":["trace","open override fun trace(format: String?, arg: Any?)","love.forte.simbot.logger.slf4j.SimbotLogger.trace"]},{"name":"open override fun trace(format: String?, vararg arguments: Any?)","description":"love.forte.simbot.logger.slf4j.SimbotLogger.trace","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger/trace.html","searchKeys":["trace","open override fun trace(format: String?, vararg arguments: Any?)","love.forte.simbot.logger.slf4j.SimbotLogger.trace"]},{"name":"open override fun trace(marker: Marker?, format: String?, arg1: Any?, arg2: Any?)","description":"love.forte.simbot.logger.slf4j.SimbotLogger.trace","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger/trace.html","searchKeys":["trace","open override fun trace(marker: Marker?, format: String?, arg1: Any?, arg2: Any?)","love.forte.simbot.logger.slf4j.SimbotLogger.trace"]},{"name":"open override fun trace(marker: Marker?, format: String?, arg: Any?)","description":"love.forte.simbot.logger.slf4j.SimbotLogger.trace","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger/trace.html","searchKeys":["trace","open override fun trace(marker: Marker?, format: String?, arg: Any?)","love.forte.simbot.logger.slf4j.SimbotLogger.trace"]},{"name":"open override fun trace(marker: Marker?, format: String?, vararg argArray: Any?)","description":"love.forte.simbot.logger.slf4j.SimbotLogger.trace","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger/trace.html","searchKeys":["trace","open override fun trace(marker: Marker?, format: String?, vararg argArray: Any?)","love.forte.simbot.logger.slf4j.SimbotLogger.trace"]},{"name":"open override fun trace(marker: Marker?, msg: String?)","description":"love.forte.simbot.logger.slf4j.SimbotLogger.trace","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger/trace.html","searchKeys":["trace","open override fun trace(marker: Marker?, msg: String?)","love.forte.simbot.logger.slf4j.SimbotLogger.trace"]},{"name":"open override fun trace(marker: Marker?, msg: String?, t: Throwable?)","description":"love.forte.simbot.logger.slf4j.SimbotLogger.trace","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger/trace.html","searchKeys":["trace","open override fun trace(marker: Marker?, msg: String?, t: Throwable?)","love.forte.simbot.logger.slf4j.SimbotLogger.trace"]},{"name":"open override fun trace(msg: String?)","description":"love.forte.simbot.logger.slf4j.SimbotLogger.trace","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger/trace.html","searchKeys":["trace","open override fun trace(msg: String?)","love.forte.simbot.logger.slf4j.SimbotLogger.trace"]},{"name":"open override fun trace(msg: String?, t: Throwable?)","description":"love.forte.simbot.logger.slf4j.SimbotLogger.trace","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger/trace.html","searchKeys":["trace","open override fun trace(msg: String?, t: Throwable?)","love.forte.simbot.logger.slf4j.SimbotLogger.trace"]},{"name":"open override fun warn(format: String?, arg1: Any?, arg2: Any?)","description":"love.forte.simbot.logger.slf4j.SimbotLogger.warn","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger/warn.html","searchKeys":["warn","open override fun warn(format: String?, arg1: Any?, arg2: Any?)","love.forte.simbot.logger.slf4j.SimbotLogger.warn"]},{"name":"open override fun warn(format: String?, arg: Any?)","description":"love.forte.simbot.logger.slf4j.SimbotLogger.warn","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger/warn.html","searchKeys":["warn","open override fun warn(format: String?, arg: Any?)","love.forte.simbot.logger.slf4j.SimbotLogger.warn"]},{"name":"open override fun warn(format: String?, vararg arguments: Any?)","description":"love.forte.simbot.logger.slf4j.SimbotLogger.warn","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger/warn.html","searchKeys":["warn","open override fun warn(format: String?, vararg arguments: Any?)","love.forte.simbot.logger.slf4j.SimbotLogger.warn"]},{"name":"open override fun warn(marker: Marker?, format: String?, arg1: Any?, arg2: Any?)","description":"love.forte.simbot.logger.slf4j.SimbotLogger.warn","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger/warn.html","searchKeys":["warn","open override fun warn(marker: Marker?, format: String?, arg1: Any?, arg2: Any?)","love.forte.simbot.logger.slf4j.SimbotLogger.warn"]},{"name":"open override fun warn(marker: Marker?, format: String?, arg: Any?)","description":"love.forte.simbot.logger.slf4j.SimbotLogger.warn","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger/warn.html","searchKeys":["warn","open override fun warn(marker: Marker?, format: String?, arg: Any?)","love.forte.simbot.logger.slf4j.SimbotLogger.warn"]},{"name":"open override fun warn(marker: Marker?, format: String?, vararg arguments: Any?)","description":"love.forte.simbot.logger.slf4j.SimbotLogger.warn","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger/warn.html","searchKeys":["warn","open override fun warn(marker: Marker?, format: String?, vararg arguments: Any?)","love.forte.simbot.logger.slf4j.SimbotLogger.warn"]},{"name":"open override fun warn(marker: Marker?, msg: String?)","description":"love.forte.simbot.logger.slf4j.SimbotLogger.warn","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger/warn.html","searchKeys":["warn","open override fun warn(marker: Marker?, msg: String?)","love.forte.simbot.logger.slf4j.SimbotLogger.warn"]},{"name":"open override fun warn(marker: Marker?, msg: String?, t: Throwable?)","description":"love.forte.simbot.logger.slf4j.SimbotLogger.warn","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger/warn.html","searchKeys":["warn","open override fun warn(marker: Marker?, msg: String?, t: Throwable?)","love.forte.simbot.logger.slf4j.SimbotLogger.warn"]},{"name":"open override fun warn(msg: String?)","description":"love.forte.simbot.logger.slf4j.SimbotLogger.warn","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger/warn.html","searchKeys":["warn","open override fun warn(msg: String?)","love.forte.simbot.logger.slf4j.SimbotLogger.warn"]},{"name":"open override fun warn(msg: String?, t: Throwable?)","description":"love.forte.simbot.logger.slf4j.SimbotLogger.warn","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-simbot-logger/warn.html","searchKeys":["warn","open override fun warn(msg: String?, t: Throwable?)","love.forte.simbot.logger.slf4j.SimbotLogger.warn"]},{"name":"open override val colorIndex: Int","description":"love.forte.simbot.logger.slf4j.color.BackGroundColor.colorIndex","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j.color/-back-ground-color/color-index.html","searchKeys":["colorIndex","open override val colorIndex: Int","love.forte.simbot.logger.slf4j.color.BackGroundColor.colorIndex"]},{"name":"open override val colorIndex: Int","description":"love.forte.simbot.logger.slf4j.color.FontColor.colorIndex","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j.color/-font-color/color-index.html","searchKeys":["colorIndex","open override val colorIndex: Int","love.forte.simbot.logger.slf4j.color.FontColor.colorIndex"]},{"name":"open override val prefix: String","description":"love.forte.simbot.logger.slf4j.color.BackGroundColor.prefix","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j.color/-back-ground-color/prefix.html","searchKeys":["prefix","open override val prefix: String","love.forte.simbot.logger.slf4j.color.BackGroundColor.prefix"]},{"name":"open override val prefix: String","description":"love.forte.simbot.logger.slf4j.color.FontColor.prefix","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j.color/-font-color/prefix.html","searchKeys":["prefix","open override val prefix: String","love.forte.simbot.logger.slf4j.color.FontColor.prefix"]},{"name":"open override val suffix: String","description":"love.forte.simbot.logger.slf4j.color.BackGroundColor.suffix","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j.color/-back-ground-color/suffix.html","searchKeys":["suffix","open override val suffix: String","love.forte.simbot.logger.slf4j.color.BackGroundColor.suffix"]},{"name":"open override val suffix: String","description":"love.forte.simbot.logger.slf4j.color.FontColor.suffix","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j.color/-font-color/suffix.html","searchKeys":["suffix","open override val suffix: String","love.forte.simbot.logger.slf4j.color.FontColor.suffix"]},{"name":"open val isBackGround: Boolean","description":"love.forte.simbot.logger.slf4j.color.Color.isBackGround","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j.color/-color/is-back-ground.html","searchKeys":["isBackGround","open val isBackGround: Boolean","love.forte.simbot.logger.slf4j.color.Color.isBackGround"]},{"name":"open val isFont: Boolean","description":"love.forte.simbot.logger.slf4j.color.Color.isFont","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j.color/-color/is-font.html","searchKeys":["isFont","open val isFont: Boolean","love.forte.simbot.logger.slf4j.color.Color.isFont"]},{"name":"val args: Array<out Any?>","description":"love.forte.simbot.logger.slf4j.LogInfo.args","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-log-info/args.html","searchKeys":["args","val args: Array<out Any?>","love.forte.simbot.logger.slf4j.LogInfo.args"]},{"name":"val error: Throwable?","description":"love.forte.simbot.logger.slf4j.LogInfo.error","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-log-info/error.html","searchKeys":["error","val error: Throwable?","love.forte.simbot.logger.slf4j.LogInfo.error"]},{"name":"val formattedMsg: String","description":"love.forte.simbot.logger.slf4j.LogInfo.formattedMsg","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-log-info/formatted-msg.html","searchKeys":["formattedMsg","val formattedMsg: String","love.forte.simbot.logger.slf4j.LogInfo.formattedMsg"]},{"name":"val fullName: String","description":"love.forte.simbot.logger.slf4j.LogInfo.fullName","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-log-info/full-name.html","searchKeys":["fullName","val fullName: String","love.forte.simbot.logger.slf4j.LogInfo.fullName"]},{"name":"val level: LogLevel","description":"love.forte.simbot.logger.slf4j.LogInfo.level","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-log-info/level.html","searchKeys":["level","val level: LogLevel","love.forte.simbot.logger.slf4j.LogInfo.level"]},{"name":"val marker: Marker?","description":"love.forte.simbot.logger.slf4j.LogInfo.marker","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-log-info/marker.html","searchKeys":["marker","val marker: Marker?","love.forte.simbot.logger.slf4j.LogInfo.marker"]},{"name":"val msg: String","description":"love.forte.simbot.logger.slf4j.LogInfo.msg","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-log-info/msg.html","searchKeys":["msg","val msg: String","love.forte.simbot.logger.slf4j.LogInfo.msg"]},{"name":"val name: String","description":"love.forte.simbot.logger.slf4j.LogInfo.name","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-log-info/name.html","searchKeys":["name","val name: String","love.forte.simbot.logger.slf4j.LogInfo.name"]},{"name":"val thread: Thread","description":"love.forte.simbot.logger.slf4j.LogInfo.thread","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-log-info/thread.html","searchKeys":["thread","val thread: Thread","love.forte.simbot.logger.slf4j.LogInfo.thread"]},{"name":"val timestamp: Long","description":"love.forte.simbot.logger.slf4j.LogInfo.timestamp","location":"simbot-logger-slf4j-impl/love.forte.simbot.logger.slf4j/-log-info/timestamp.html","searchKeys":["timestamp","val timestamp: Long","love.forte.simbot.logger.slf4j.LogInfo.timestamp"]},{"name":"abstract class BaseHttpAPI<in RQ : Requestor, out R> : HttpAPI<RQ, R> ","description":"love.forte.simbot.util.api.requestor.ktor.http.BaseHttpAPI","location":"simbot-util-api-requestor-ktor/love.forte.simbot.util.api.requestor.ktor.http/-base-http-a-p-i/index.html","searchKeys":["BaseHttpAPI","abstract class BaseHttpAPI<in RQ : Requestor, out R> : HttpAPI<RQ, R> ","love.forte.simbot.util.api.requestor.ktor.http.BaseHttpAPI"]},{"name":"abstract suspend override fun requestBy(requestor: RQ): R","description":"love.forte.simbot.util.api.requestor.ktor.KtorAPI.requestBy","location":"simbot-util-api-requestor-ktor/love.forte.simbot.util.api.requestor.ktor/-ktor-a-p-i/request-by.html","searchKeys":["requestBy","abstract suspend override fun requestBy(requestor: RQ): R","love.forte.simbot.util.api.requestor.ktor.KtorAPI.requestBy"]},{"name":"abstract suspend override fun requestBy(requestor: RQ): R","description":"love.forte.simbot.util.api.requestor.ktor.http.HttpAPI.requestBy","location":"simbot-util-api-requestor-ktor/love.forte.simbot.util.api.requestor.ktor.http/-http-a-p-i/request-by.html","searchKeys":["requestBy","abstract suspend override fun requestBy(requestor: RQ): R","love.forte.simbot.util.api.requestor.ktor.http.HttpAPI.requestBy"]},{"name":"abstract val httpClient: HttpClient","description":"love.forte.simbot.util.api.requestor.ktor.http.HttpRequestor.httpClient","location":"simbot-util-api-requestor-ktor/love.forte.simbot.util.api.requestor.ktor.http/-http-requestor/http-client.html","searchKeys":["httpClient","abstract val httpClient: HttpClient","love.forte.simbot.util.api.requestor.ktor.http.HttpRequestor.httpClient"]},{"name":"abstract val method: HttpMethod","description":"love.forte.simbot.util.api.requestor.ktor.http.HttpAPI.method","location":"simbot-util-api-requestor-ktor/love.forte.simbot.util.api.requestor.ktor.http/-http-a-p-i/method.html","searchKeys":["method","abstract val method: HttpMethod","love.forte.simbot.util.api.requestor.ktor.http.HttpAPI.method"]},{"name":"abstract val url: Url","description":"love.forte.simbot.util.api.requestor.ktor.http.HttpAPI.url","location":"simbot-util-api-requestor-ktor/love.forte.simbot.util.api.requestor.ktor.http/-http-a-p-i/url.html","searchKeys":["url","abstract val url: Url","love.forte.simbot.util.api.requestor.ktor.http.HttpAPI.url"]},{"name":"fun BaseHttpAPI()","description":"love.forte.simbot.util.api.requestor.ktor.http.BaseHttpAPI.BaseHttpAPI","location":"simbot-util-api-requestor-ktor/love.forte.simbot.util.api.requestor.ktor.http/-base-http-a-p-i/-base-http-a-p-i.html","searchKeys":["BaseHttpAPI","fun BaseHttpAPI()","love.forte.simbot.util.api.requestor.ktor.http.BaseHttpAPI.BaseHttpAPI"]},{"name":"inline fun <T> ParametersBuilder.appendIfNotnull(name: String, value: T?, toStringBlock: (T) -> String = { it.toString() })","description":"love.forte.simbot.util.api.requestor.ktor.appendIfNotnull","location":"simbot-util-api-requestor-ktor/love.forte.simbot.util.api.requestor.ktor/append-if-notnull.html","searchKeys":["appendIfNotnull","inline fun <T> ParametersBuilder.appendIfNotnull(name: String, value: T?, toStringBlock: (T) -> String = { it.toString() })","love.forte.simbot.util.api.requestor.ktor.appendIfNotnull"]},{"name":"interface HttpAPI<in RQ : Requestor, out R> : KtorAPI<RQ, R> ","description":"love.forte.simbot.util.api.requestor.ktor.http.HttpAPI","location":"simbot-util-api-requestor-ktor/love.forte.simbot.util.api.requestor.ktor.http/-http-a-p-i/index.html","searchKeys":["HttpAPI","interface HttpAPI<in RQ : Requestor, out R> : KtorAPI<RQ, R> ","love.forte.simbot.util.api.requestor.ktor.http.HttpAPI"]},{"name":"interface HttpRequestor : Requestor","description":"love.forte.simbot.util.api.requestor.ktor.http.HttpRequestor","location":"simbot-util-api-requestor-ktor/love.forte.simbot.util.api.requestor.ktor.http/-http-requestor/index.html","searchKeys":["HttpRequestor","interface HttpRequestor : Requestor","love.forte.simbot.util.api.requestor.ktor.http.HttpRequestor"]},{"name":"interface KtorAPI<in RQ : Requestor, out R> : API<RQ, R> ","description":"love.forte.simbot.util.api.requestor.ktor.KtorAPI","location":"simbot-util-api-requestor-ktor/love.forte.simbot.util.api.requestor.ktor/-ktor-a-p-i/index.html","searchKeys":["KtorAPI","interface KtorAPI<in RQ : Requestor, out R> : API<RQ, R> ","love.forte.simbot.util.api.requestor.ktor.KtorAPI"]},{"name":"open suspend override fun requestBy(requestor: RQ): R","description":"love.forte.simbot.util.api.requestor.ktor.http.BaseHttpAPI.requestBy","location":"simbot-util-api-requestor-ktor/love.forte.simbot.util.api.requestor.ktor.http/-base-http-a-p-i/request-by.html","searchKeys":["requestBy","open suspend override fun requestBy(requestor: RQ): R","love.forte.simbot.util.api.requestor.ktor.http.BaseHttpAPI.requestBy"]},{"name":"protected abstract suspend fun httpRequestBy(requestor: RQ): HttpResponse","description":"love.forte.simbot.util.api.requestor.ktor.http.BaseHttpAPI.httpRequestBy","location":"simbot-util-api-requestor-ktor/love.forte.simbot.util.api.requestor.ktor.http/-base-http-a-p-i/http-request-by.html","searchKeys":["httpRequestBy","protected abstract suspend fun httpRequestBy(requestor: RQ): HttpResponse","love.forte.simbot.util.api.requestor.ktor.http.BaseHttpAPI.httpRequestBy"]},{"name":"protected abstract suspend fun processResponse(requestor: RQ, response: HttpResponse): R","description":"love.forte.simbot.util.api.requestor.ktor.http.BaseHttpAPI.processResponse","location":"simbot-util-api-requestor-ktor/love.forte.simbot.util.api.requestor.ktor.http/-base-http-a-p-i/process-response.html","searchKeys":["processResponse","protected abstract suspend fun processResponse(requestor: RQ, response: HttpResponse): R","love.forte.simbot.util.api.requestor.ktor.http.BaseHttpAPI.processResponse"]},{"name":"CURRENT","description":"love.forte.simboot.annotation.Binder.Scope.CURRENT","location":"simboot-core-annotation/love.forte.simboot.annotation/-binder/-scope/-c-u-r-r-e-n-t/index.html","searchKeys":["CURRENT","CURRENT","love.forte.simboot.annotation.Binder.Scope.CURRENT"]},{"name":"DEFAULT","description":"love.forte.simboot.annotation.Binder.Scope.DEFAULT","location":"simboot-core-annotation/love.forte.simboot.annotation/-binder/-scope/-d-e-f-a-u-l-t/index.html","searchKeys":["DEFAULT","DEFAULT","love.forte.simboot.annotation.Binder.Scope.DEFAULT"]},{"name":"GLOBAL","description":"love.forte.simboot.annotation.Binder.Scope.GLOBAL","location":"simboot-core-annotation/love.forte.simboot.annotation/-binder/-scope/-g-l-o-b-a-l/index.html","searchKeys":["GLOBAL","GLOBAL","love.forte.simboot.annotation.Binder.Scope.GLOBAL"]},{"name":"INDEPENDENT","description":"love.forte.simboot.annotation.AnnotationEventFilter.InitType.INDEPENDENT","location":"simboot-core-annotation/love.forte.simboot.annotation/-annotation-event-filter/-init-type/-i-n-d-e-p-e-n-d-e-n-t/index.html","searchKeys":["INDEPENDENT","INDEPENDENT","love.forte.simboot.annotation.AnnotationEventFilter.InitType.INDEPENDENT"]},{"name":"SPECIFY","description":"love.forte.simboot.annotation.Binder.Scope.SPECIFY","location":"simboot-core-annotation/love.forte.simboot.annotation/-binder/-scope/-s-p-e-c-i-f-y/index.html","searchKeys":["SPECIFY","SPECIFY","love.forte.simboot.annotation.Binder.Scope.SPECIFY"]},{"name":"UNITED","description":"love.forte.simboot.annotation.AnnotationEventFilter.InitType.UNITED","location":"simboot-core-annotation/love.forte.simboot.annotation/-annotation-event-filter/-init-type/-u-n-i-t-e-d/index.html","searchKeys":["UNITED","UNITED","love.forte.simboot.annotation.AnnotationEventFilter.InitType.UNITED"]},{"name":"abstract fun init(listener: EventListener, filter: Filter, filters: Filters)","description":"love.forte.simboot.annotation.AnnotationEventFilter.init","location":"simboot-core-annotation/love.forte.simboot.annotation/-annotation-event-filter/init.html","searchKeys":["init","abstract fun init(listener: EventListener, filter: Filter, filters: Filters)","love.forte.simboot.annotation.AnnotationEventFilter.init"]},{"name":"abstract fun resolveFilter(listener: EventListener, listenerAttributes: MutableAttributeMap, filter: Filter, filters: Filters): EventFilter?","description":"love.forte.simboot.annotation.AnnotationEventFilterFactory.resolveFilter","location":"simboot-core-annotation/love.forte.simboot.annotation/-annotation-event-filter-factory/resolve-filter.html","searchKeys":["resolveFilter","abstract fun resolveFilter(listener: EventListener, listenerAttributes: MutableAttributeMap, filter: Filter, filters: Filters): EventFilter?","love.forte.simboot.annotation.AnnotationEventFilterFactory.resolveFilter"]},{"name":"abstract override fun testBlocking(context: EventListenerProcessingContext): Boolean","description":"love.forte.simboot.annotation.BlockingAnnotationEventFilter.testBlocking","location":"simboot-core-annotation/love.forte.simboot.annotation/-blocking-annotation-event-filter/test-blocking.html","searchKeys":["testBlocking","abstract override fun testBlocking(context: EventListenerProcessingContext): Boolean","love.forte.simboot.annotation.BlockingAnnotationEventFilter.testBlocking"]},{"name":"abstract suspend override fun test(context: EventListenerProcessingContext): Boolean","description":"love.forte.simboot.annotation.AnnotationEventFilter.test","location":"simboot-core-annotation/love.forte.simboot.annotation/-annotation-event-filter/test.html","searchKeys":["test","abstract suspend override fun test(context: EventListenerProcessingContext): Boolean","love.forte.simboot.annotation.AnnotationEventFilter.test"]},{"name":"annotation class Binder(val value: Array<String> = [], val scope: Binder.Scope = Scope.DEFAULT)","description":"love.forte.simboot.annotation.Binder","location":"simboot-core-annotation/love.forte.simboot.annotation/-binder/index.html","searchKeys":["Binder","annotation class Binder(val value: Array<String> = [], val scope: Binder.Scope = Scope.DEFAULT)","love.forte.simboot.annotation.Binder"]},{"name":"annotation class ContentToNull(val priority: Int = PriorityConstant.FIRST)","description":"love.forte.simboot.annotation.ContentToNull","location":"simboot-core-annotation/love.forte.simboot.annotation/-content-to-null/index.html","searchKeys":["ContentToNull","annotation class ContentToNull(val priority: Int = PriorityConstant.FIRST)","love.forte.simboot.annotation.ContentToNull"]},{"name":"annotation class ContentTrim(val priority: Int = PriorityConstant.FIRST)","description":"love.forte.simboot.annotation.ContentTrim","location":"simboot-core-annotation/love.forte.simboot.annotation/-content-trim/index.html","searchKeys":["ContentTrim","annotation class ContentTrim(val priority: Int = PriorityConstant.FIRST)","love.forte.simboot.annotation.ContentTrim"]},{"name":"annotation class CurrentBinder","description":"love.forte.simboot.annotation.CurrentBinder","location":"simboot-core-annotation/love.forte.simboot.annotation/-current-binder/index.html","searchKeys":["CurrentBinder","annotation class CurrentBinder","love.forte.simboot.annotation.CurrentBinder"]},{"name":"annotation class Filter(val value: String = \"\", val ifNullPass: Boolean = false, val matchType: MatchType = MatchType.REGEX_MATCHES, val targets: Filter.Targets = Targets(), val by: KClass<out AnnotationEventFilterFactory> = AnnotationEventFilterFactory::class)","description":"love.forte.simboot.annotation.Filter","location":"simboot-core-annotation/love.forte.simboot.annotation/-filter/index.html","searchKeys":["Filter","annotation class Filter(val value: String = \"\", val ifNullPass: Boolean = false, val matchType: MatchType = MatchType.REGEX_MATCHES, val targets: Filter.Targets = Targets(), val by: KClass<out AnnotationEventFilterFactory> = AnnotationEventFilterFactory::class)","love.forte.simboot.annotation.Filter"]},{"name":"annotation class FilterValue(val value: String, val required: Boolean = true)","description":"love.forte.simboot.annotation.FilterValue","location":"simboot-core-annotation/love.forte.simboot.annotation/-filter-value/index.html","searchKeys":["FilterValue","annotation class FilterValue(val value: String, val required: Boolean = true)","love.forte.simboot.annotation.FilterValue"]},{"name":"annotation class Filters(val value: Filter, val multiMatchType: MultiFilterMatchType = MultiFilterMatchType.ANY)","description":"love.forte.simboot.annotation.Filters","location":"simboot-core-annotation/love.forte.simboot.annotation/-filters/index.html","searchKeys":["Filters","annotation class Filters(val value: Filter, val multiMatchType: MultiFilterMatchType = MultiFilterMatchType.ANY)","love.forte.simboot.annotation.Filters"]},{"name":"annotation class GlobalBinder","description":"love.forte.simboot.annotation.GlobalBinder","location":"simboot-core-annotation/love.forte.simboot.annotation/-global-binder/index.html","searchKeys":["GlobalBinder","annotation class GlobalBinder","love.forte.simboot.annotation.GlobalBinder"]},{"name":"annotation class Interceptor(val value: String = \"\", val type: KClass<out AnnotatedEventListenerInterceptor> = AnnotatedEventListenerInterceptor::class, val priority: Int = PriorityConstant.NORMAL)","description":"love.forte.simboot.annotation.Interceptor","location":"simboot-core-annotation/love.forte.simboot.annotation/-interceptor/index.html","searchKeys":["Interceptor","annotation class Interceptor(val value: String = \"\", val type: KClass<out AnnotatedEventListenerInterceptor> = AnnotatedEventListenerInterceptor::class, val priority: Int = PriorityConstant.NORMAL)","love.forte.simboot.annotation.Interceptor"]},{"name":"annotation class Interceptors(val value: Interceptor)","description":"love.forte.simboot.annotation.Interceptors","location":"simboot-core-annotation/love.forte.simboot.annotation/-interceptors/index.html","searchKeys":["Interceptors","annotation class Interceptors(val value: Interceptor)","love.forte.simboot.annotation.Interceptors"]},{"name":"annotation class Listen(val value: KClass<out Event>)","description":"love.forte.simboot.annotation.Listen","location":"simboot-core-annotation/love.forte.simboot.annotation/-listen/index.html","searchKeys":["Listen","annotation class Listen(val value: KClass<out Event>)","love.forte.simboot.annotation.Listen"]},{"name":"annotation class Listener(val id: String = \"\", val priority: Int = PriorityConstant.NORMAL, val async: Boolean = false)","description":"love.forte.simboot.annotation.Listener","location":"simboot-core-annotation/love.forte.simboot.annotation/-listener/index.html","searchKeys":["Listener","annotation class Listener(val id: String = \"\", val priority: Int = PriorityConstant.NORMAL, val async: Boolean = false)","love.forte.simboot.annotation.Listener"]},{"name":"annotation class Listens(val value: Listen)","description":"love.forte.simboot.annotation.Listens","location":"simboot-core-annotation/love.forte.simboot.annotation/-listens/index.html","searchKeys":["Listens","annotation class Listens(val value: Listen)","love.forte.simboot.annotation.Listens"]},{"name":"annotation class MessageValue(val isReversed: Boolean = false)","description":"love.forte.simboot.annotation.MessageValue","location":"simboot-core-annotation/love.forte.simboot.annotation/-message-value/index.html","searchKeys":["MessageValue","annotation class MessageValue(val isReversed: Boolean = false)","love.forte.simboot.annotation.MessageValue"]},{"name":"annotation class Preparer(val value: KClass<out ListenerPreparer>, val name: String = \"\", val priority: Int = PriorityConstant.NORMAL)","description":"love.forte.simboot.annotation.Preparer","location":"simboot-core-annotation/love.forte.simboot.annotation/-preparer/index.html","searchKeys":["Preparer","annotation class Preparer(val value: KClass<out ListenerPreparer>, val name: String = \"\", val priority: Int = PriorityConstant.NORMAL)","love.forte.simboot.annotation.Preparer"]},{"name":"annotation class Preparers(val value: Preparer)","description":"love.forte.simboot.annotation.Preparers","location":"simboot-core-annotation/love.forte.simboot.annotation/-preparers/index.html","searchKeys":["Preparers","annotation class Preparers(val value: Preparer)","love.forte.simboot.annotation.Preparers"]},{"name":"annotation class SpecifyBinder(val value: Array<String>)","description":"love.forte.simboot.annotation.SpecifyBinder","location":"simboot-core-annotation/love.forte.simboot.annotation/-specify-binder/index.html","searchKeys":["SpecifyBinder","annotation class SpecifyBinder(val value: Array<String>)","love.forte.simboot.annotation.SpecifyBinder"]},{"name":"annotation class Targets(val components: Array<String> = [], val bots: Array<String> = [], val authors: Array<String> = [], val groups: Array<String> = [], val channels: Array<String> = [], val guilds: Array<String> = [], val atBot: Boolean = false)","description":"love.forte.simboot.annotation.Filter.Targets","location":"simboot-core-annotation/love.forte.simboot.annotation/-filter/-targets/index.html","searchKeys":["Targets","annotation class Targets(val components: Array<String> = [], val bots: Array<String> = [], val authors: Array<String> = [], val groups: Array<String> = [], val channels: Array<String> = [], val guilds: Array<String> = [], val atBot: Boolean = false)","love.forte.simboot.annotation.Filter.Targets"]},{"name":"const val NON_PREFIX: String","description":"love.forte.simboot.annotation.Filter.Targets.Companion.NON_PREFIX","location":"simboot-core-annotation/love.forte.simboot.annotation/-filter/-targets/-companion/-n-o-n_-p-r-e-f-i-x.html","searchKeys":["NON_PREFIX","const val NON_PREFIX: String","love.forte.simboot.annotation.Filter.Targets.Companion.NON_PREFIX"]},{"name":"enum InitType : Enum<AnnotationEventFilter.InitType> ","description":"love.forte.simboot.annotation.AnnotationEventFilter.InitType","location":"simboot-core-annotation/love.forte.simboot.annotation/-annotation-event-filter/-init-type/index.html","searchKeys":["InitType","enum InitType : Enum<AnnotationEventFilter.InitType> ","love.forte.simboot.annotation.AnnotationEventFilter.InitType"]},{"name":"enum Scope : Enum<Binder.Scope> ","description":"love.forte.simboot.annotation.Binder.Scope","location":"simboot-core-annotation/love.forte.simboot.annotation/-binder/-scope/index.html","searchKeys":["Scope","enum Scope : Enum<Binder.Scope> ","love.forte.simboot.annotation.Binder.Scope"]},{"name":"fun valueOf(value: String): AnnotationEventFilter.InitType","description":"love.forte.simboot.annotation.AnnotationEventFilter.InitType.valueOf","location":"simboot-core-annotation/love.forte.simboot.annotation/-annotation-event-filter/-init-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): AnnotationEventFilter.InitType","love.forte.simboot.annotation.AnnotationEventFilter.InitType.valueOf"]},{"name":"fun valueOf(value: String): Binder.Scope","description":"love.forte.simboot.annotation.Binder.Scope.valueOf","location":"simboot-core-annotation/love.forte.simboot.annotation/-binder/-scope/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): Binder.Scope","love.forte.simboot.annotation.Binder.Scope.valueOf"]},{"name":"fun values(): Array<AnnotationEventFilter.InitType>","description":"love.forte.simboot.annotation.AnnotationEventFilter.InitType.values","location":"simboot-core-annotation/love.forte.simboot.annotation/-annotation-event-filter/-init-type/values.html","searchKeys":["values","fun values(): Array<AnnotationEventFilter.InitType>","love.forte.simboot.annotation.AnnotationEventFilter.InitType.values"]},{"name":"fun values(): Array<Binder.Scope>","description":"love.forte.simboot.annotation.Binder.Scope.values","location":"simboot-core-annotation/love.forte.simboot.annotation/-binder/-scope/values.html","searchKeys":["values","fun values(): Array<Binder.Scope>","love.forte.simboot.annotation.Binder.Scope.values"]},{"name":"inline fun Binder.scopeIfDefault(block: () -> Binder.Scope): Binder.Scope","description":"love.forte.simboot.annotation.scopeIfDefault","location":"simboot-core-annotation/love.forte.simboot.annotation/scope-if-default.html","searchKeys":["scopeIfDefault","inline fun Binder.scopeIfDefault(block: () -> Binder.Scope): Binder.Scope","love.forte.simboot.annotation.scopeIfDefault"]},{"name":"interface AnnotationEventFilter : EventFilter","description":"love.forte.simboot.annotation.AnnotationEventFilter","location":"simboot-core-annotation/love.forte.simboot.annotation/-annotation-event-filter/index.html","searchKeys":["AnnotationEventFilter","interface AnnotationEventFilter : EventFilter","love.forte.simboot.annotation.AnnotationEventFilter"]},{"name":"interface AnnotationEventFilterFactory","description":"love.forte.simboot.annotation.AnnotationEventFilterFactory","location":"simboot-core-annotation/love.forte.simboot.annotation/-annotation-event-filter-factory/index.html","searchKeys":["AnnotationEventFilterFactory","interface AnnotationEventFilterFactory","love.forte.simboot.annotation.AnnotationEventFilterFactory"]},{"name":"interface BlockingAnnotationEventFilter : AnnotationEventFilter, BlockingEventFilter","description":"love.forte.simboot.annotation.BlockingAnnotationEventFilter","location":"simboot-core-annotation/love.forte.simboot.annotation/-blocking-annotation-event-filter/index.html","searchKeys":["BlockingAnnotationEventFilter","interface BlockingAnnotationEventFilter : AnnotationEventFilter, BlockingEventFilter","love.forte.simboot.annotation.BlockingAnnotationEventFilter"]},{"name":"object Companion","description":"love.forte.simboot.annotation.Filter.Targets.Companion","location":"simboot-core-annotation/love.forte.simboot.annotation/-filter/-targets/-companion/index.html","searchKeys":["Companion","object Companion","love.forte.simboot.annotation.Filter.Targets.Companion"]},{"name":"open suspend override fun test(context: EventListenerProcessingContext): Boolean","description":"love.forte.simboot.annotation.BlockingAnnotationEventFilter.test","location":"simboot-core-annotation/love.forte.simboot.annotation/-blocking-annotation-event-filter/test.html","searchKeys":["test","open suspend override fun test(context: EventListenerProcessingContext): Boolean","love.forte.simboot.annotation.BlockingAnnotationEventFilter.test"]},{"name":"val async: Boolean = false","description":"love.forte.simboot.annotation.Listener.async","location":"simboot-core-annotation/love.forte.simboot.annotation/-listener/async.html","searchKeys":["async","val async: Boolean = false","love.forte.simboot.annotation.Listener.async"]},{"name":"val atBot: Boolean = false","description":"love.forte.simboot.annotation.Filter.Targets.atBot","location":"simboot-core-annotation/love.forte.simboot.annotation/-filter/-targets/at-bot.html","searchKeys":["atBot","val atBot: Boolean = false","love.forte.simboot.annotation.Filter.Targets.atBot"]},{"name":"val authors: Array<String>","description":"love.forte.simboot.annotation.Filter.Targets.authors","location":"simboot-core-annotation/love.forte.simboot.annotation/-filter/-targets/authors.html","searchKeys":["authors","val authors: Array<String>","love.forte.simboot.annotation.Filter.Targets.authors"]},{"name":"val bots: Array<String>","description":"love.forte.simboot.annotation.Filter.Targets.bots","location":"simboot-core-annotation/love.forte.simboot.annotation/-filter/-targets/bots.html","searchKeys":["bots","val bots: Array<String>","love.forte.simboot.annotation.Filter.Targets.bots"]},{"name":"val by: KClass<out AnnotationEventFilterFactory>","description":"love.forte.simboot.annotation.Filter.by","location":"simboot-core-annotation/love.forte.simboot.annotation/-filter/by.html","searchKeys":["by","val by: KClass<out AnnotationEventFilterFactory>","love.forte.simboot.annotation.Filter.by"]},{"name":"val channels: Array<String>","description":"love.forte.simboot.annotation.Filter.Targets.channels","location":"simboot-core-annotation/love.forte.simboot.annotation/-filter/-targets/channels.html","searchKeys":["channels","val channels: Array<String>","love.forte.simboot.annotation.Filter.Targets.channels"]},{"name":"val components: Array<String>","description":"love.forte.simboot.annotation.Filter.Targets.components","location":"simboot-core-annotation/love.forte.simboot.annotation/-filter/-targets/components.html","searchKeys":["components","val components: Array<String>","love.forte.simboot.annotation.Filter.Targets.components"]},{"name":"val groups: Array<String>","description":"love.forte.simboot.annotation.Filter.Targets.groups","location":"simboot-core-annotation/love.forte.simboot.annotation/-filter/-targets/groups.html","searchKeys":["groups","val groups: Array<String>","love.forte.simboot.annotation.Filter.Targets.groups"]},{"name":"val guilds: Array<String>","description":"love.forte.simboot.annotation.Filter.Targets.guilds","location":"simboot-core-annotation/love.forte.simboot.annotation/-filter/-targets/guilds.html","searchKeys":["guilds","val guilds: Array<String>","love.forte.simboot.annotation.Filter.Targets.guilds"]},{"name":"val id: String","description":"love.forte.simboot.annotation.Listener.id","location":"simboot-core-annotation/love.forte.simboot.annotation/-listener/id.html","searchKeys":["id","val id: String","love.forte.simboot.annotation.Listener.id"]},{"name":"val ifNullPass: Boolean = false","description":"love.forte.simboot.annotation.Filter.ifNullPass","location":"simboot-core-annotation/love.forte.simboot.annotation/-filter/if-null-pass.html","searchKeys":["ifNullPass","val ifNullPass: Boolean = false","love.forte.simboot.annotation.Filter.ifNullPass"]},{"name":"val isReversed: Boolean = false","description":"love.forte.simboot.annotation.MessageValue.isReversed","location":"simboot-core-annotation/love.forte.simboot.annotation/-message-value/is-reversed.html","searchKeys":["isReversed","val isReversed: Boolean = false","love.forte.simboot.annotation.MessageValue.isReversed"]},{"name":"val matchType: MatchType","description":"love.forte.simboot.annotation.Filter.matchType","location":"simboot-core-annotation/love.forte.simboot.annotation/-filter/match-type.html","searchKeys":["matchType","val matchType: MatchType","love.forte.simboot.annotation.Filter.matchType"]},{"name":"val multiMatchType: MultiFilterMatchType","description":"love.forte.simboot.annotation.Filters.multiMatchType","location":"simboot-core-annotation/love.forte.simboot.annotation/-filters/multi-match-type.html","searchKeys":["multiMatchType","val multiMatchType: MultiFilterMatchType","love.forte.simboot.annotation.Filters.multiMatchType"]},{"name":"val name: String","description":"love.forte.simboot.annotation.Preparer.name","location":"simboot-core-annotation/love.forte.simboot.annotation/-preparer/name.html","searchKeys":["name","val name: String","love.forte.simboot.annotation.Preparer.name"]},{"name":"val priority: Int","description":"love.forte.simboot.annotation.ContentToNull.priority","location":"simboot-core-annotation/love.forte.simboot.annotation/-content-to-null/priority.html","searchKeys":["priority","val priority: Int","love.forte.simboot.annotation.ContentToNull.priority"]},{"name":"val priority: Int","description":"love.forte.simboot.annotation.ContentTrim.priority","location":"simboot-core-annotation/love.forte.simboot.annotation/-content-trim/priority.html","searchKeys":["priority","val priority: Int","love.forte.simboot.annotation.ContentTrim.priority"]},{"name":"val priority: Int","description":"love.forte.simboot.annotation.Interceptor.priority","location":"simboot-core-annotation/love.forte.simboot.annotation/-interceptor/priority.html","searchKeys":["priority","val priority: Int","love.forte.simboot.annotation.Interceptor.priority"]},{"name":"val priority: Int","description":"love.forte.simboot.annotation.Listener.priority","location":"simboot-core-annotation/love.forte.simboot.annotation/-listener/priority.html","searchKeys":["priority","val priority: Int","love.forte.simboot.annotation.Listener.priority"]},{"name":"val priority: Int","description":"love.forte.simboot.annotation.Preparer.priority","location":"simboot-core-annotation/love.forte.simboot.annotation/-preparer/priority.html","searchKeys":["priority","val priority: Int","love.forte.simboot.annotation.Preparer.priority"]},{"name":"val required: Boolean = true","description":"love.forte.simboot.annotation.FilterValue.required","location":"simboot-core-annotation/love.forte.simboot.annotation/-filter-value/required.html","searchKeys":["required","val required: Boolean = true","love.forte.simboot.annotation.FilterValue.required"]},{"name":"val scope: Binder.Scope","description":"love.forte.simboot.annotation.Binder.scope","location":"simboot-core-annotation/love.forte.simboot.annotation/-binder/scope.html","searchKeys":["scope","val scope: Binder.Scope","love.forte.simboot.annotation.Binder.scope"]},{"name":"val targets: Filter.Targets","description":"love.forte.simboot.annotation.Filter.targets","location":"simboot-core-annotation/love.forte.simboot.annotation/-filter/targets.html","searchKeys":["targets","val targets: Filter.Targets","love.forte.simboot.annotation.Filter.targets"]},{"name":"val type: KClass<out AnnotatedEventListenerInterceptor>","description":"love.forte.simboot.annotation.Interceptor.type","location":"simboot-core-annotation/love.forte.simboot.annotation/-interceptor/type.html","searchKeys":["type","val type: KClass<out AnnotatedEventListenerInterceptor>","love.forte.simboot.annotation.Interceptor.type"]},{"name":"val value: Array<String>","description":"love.forte.simboot.annotation.Binder.value","location":"simboot-core-annotation/love.forte.simboot.annotation/-binder/value.html","searchKeys":["value","val value: Array<String>","love.forte.simboot.annotation.Binder.value"]},{"name":"val value: Array<String>","description":"love.forte.simboot.annotation.SpecifyBinder.value","location":"simboot-core-annotation/love.forte.simboot.annotation/-specify-binder/value.html","searchKeys":["value","val value: Array<String>","love.forte.simboot.annotation.SpecifyBinder.value"]},{"name":"val value: Array<out Filter>","description":"love.forte.simboot.annotation.Filters.value","location":"simboot-core-annotation/love.forte.simboot.annotation/-filters/value.html","searchKeys":["value","val value: Array<out Filter>","love.forte.simboot.annotation.Filters.value"]},{"name":"val value: Array<out Interceptor>","description":"love.forte.simboot.annotation.Interceptors.value","location":"simboot-core-annotation/love.forte.simboot.annotation/-interceptors/value.html","searchKeys":["value","val value: Array<out Interceptor>","love.forte.simboot.annotation.Interceptors.value"]},{"name":"val value: Array<out Listen>","description":"love.forte.simboot.annotation.Listens.value","location":"simboot-core-annotation/love.forte.simboot.annotation/-listens/value.html","searchKeys":["value","val value: Array<out Listen>","love.forte.simboot.annotation.Listens.value"]},{"name":"val value: Array<out Preparer>","description":"love.forte.simboot.annotation.Preparers.value","location":"simboot-core-annotation/love.forte.simboot.annotation/-preparers/value.html","searchKeys":["value","val value: Array<out Preparer>","love.forte.simboot.annotation.Preparers.value"]},{"name":"val value: KClass<out Event>","description":"love.forte.simboot.annotation.Listen.value","location":"simboot-core-annotation/love.forte.simboot.annotation/-listen/value.html","searchKeys":["value","val value: KClass<out Event>","love.forte.simboot.annotation.Listen.value"]},{"name":"val value: KClass<out ListenerPreparer>","description":"love.forte.simboot.annotation.Preparer.value","location":"simboot-core-annotation/love.forte.simboot.annotation/-preparer/value.html","searchKeys":["value","val value: KClass<out ListenerPreparer>","love.forte.simboot.annotation.Preparer.value"]},{"name":"val value: String","description":"love.forte.simboot.annotation.Filter.value","location":"simboot-core-annotation/love.forte.simboot.annotation/-filter/value.html","searchKeys":["value","val value: String","love.forte.simboot.annotation.Filter.value"]},{"name":"val value: String","description":"love.forte.simboot.annotation.FilterValue.value","location":"simboot-core-annotation/love.forte.simboot.annotation/-filter-value/value.html","searchKeys":["value","val value: String","love.forte.simboot.annotation.FilterValue.value"]},{"name":"val value: String","description":"love.forte.simboot.annotation.Interceptor.value","location":"simboot-core-annotation/love.forte.simboot.annotation/-interceptor/value.html","searchKeys":["value","val value: String","love.forte.simboot.annotation.Interceptor.value"]},{"name":"abstract class Stage<S : Stage<S>>","description":"love.forte.simbot.util.stageloop.Stage","location":"simbot-util-stage-loop/love.forte.simbot.util.stageloop/-stage/index.html","searchKeys":["Stage","abstract class Stage<S : Stage<S>>","love.forte.simbot.util.stageloop.Stage"]},{"name":"abstract suspend operator fun invoke(loop: StageLoop<S>)","description":"love.forte.simbot.util.stageloop.Stage.invoke","location":"simbot-util-stage-loop/love.forte.simbot.util.stageloop/-stage/invoke.html","searchKeys":["invoke","abstract suspend operator fun invoke(loop: StageLoop<S>)","love.forte.simbot.util.stageloop.Stage.invoke"]},{"name":"expect fun StageLoop()","description":"love.forte.simbot.util.stageloop.StageLoop.StageLoop","location":"simbot-util-stage-loop/love.forte.simbot.util.stageloop/-stage-loop/-stage-loop.html","searchKeys":["StageLoop","expect fun StageLoop()","love.forte.simbot.util.stageloop.StageLoop.StageLoop"]},{"name":"expect open class StageLoop<S : Stage<S>>","description":"love.forte.simbot.util.stageloop.StageLoop","location":"simbot-util-stage-loop/love.forte.simbot.util.stageloop/-stage-loop/index.html","searchKeys":["StageLoop","expect open class StageLoop<S : Stage<S>>","love.forte.simbot.util.stageloop.StageLoop"]},{"name":"expect open fun appendStage(stage: S)","description":"love.forte.simbot.util.stageloop.StageLoop.appendStage","location":"simbot-util-stage-loop/love.forte.simbot.util.stageloop/-stage-loop/append-stage.html","searchKeys":["appendStage","expect open fun appendStage(stage: S)","love.forte.simbot.util.stageloop.StageLoop.appendStage"]},{"name":"expect open fun poll(): S?","description":"love.forte.simbot.util.stageloop.StageLoop.poll","location":"simbot-util-stage-loop/love.forte.simbot.util.stageloop/-stage-loop/poll.html","searchKeys":["poll","expect open fun poll(): S?","love.forte.simbot.util.stageloop.StageLoop.poll"]},{"name":"expect open suspend operator fun invoke(stage: S?)","description":"love.forte.simbot.util.stageloop.StageLoop.invoke","location":"simbot-util-stage-loop/love.forte.simbot.util.stageloop/-stage-loop/invoke.html","searchKeys":["invoke","expect open suspend operator fun invoke(stage: S?)","love.forte.simbot.util.stageloop.StageLoop.invoke"]},{"name":"expect open val currentStage: S?","description":"love.forte.simbot.util.stageloop.StageLoop.currentStage","location":"simbot-util-stage-loop/love.forte.simbot.util.stageloop/-stage-loop/current-stage.html","searchKeys":["currentStage","expect open val currentStage: S?","love.forte.simbot.util.stageloop.StageLoop.currentStage"]},{"name":"fun Stage()","description":"love.forte.simbot.util.stageloop.Stage.Stage","location":"simbot-util-stage-loop/love.forte.simbot.util.stageloop/-stage/-stage.html","searchKeys":["Stage","fun Stage()","love.forte.simbot.util.stageloop.Stage.Stage"]},{"name":"inline suspend fun <S : Stage<S>> StageLoop<S>.loop(crossinline condition: (next: S?) -> Boolean = { next -> next != null }, crossinline exceptionHandle: (Throwable) -> Unit = { e ->\n        throw e\n    })","description":"love.forte.simbot.util.stageloop.loop","location":"simbot-util-stage-loop/love.forte.simbot.util.stageloop/loop.html","searchKeys":["loop","inline suspend fun <S : Stage<S>> StageLoop<S>.loop(crossinline condition: (next: S?) -> Boolean = { next -> next != null }, crossinline exceptionHandle: (Throwable) -> Unit = { e ->\n        throw e\n    })","love.forte.simbot.util.stageloop.loop"]},{"name":"abstract fun SpringBootApplicationBuilder.config(configuration: SpringBootApplicationConfiguration)","description":"love.forte.simboot.spring.autoconfigure.SimbotSpringBootApplicationBuildConfigure.config","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-simbot-spring-boot-application-build-configure/config.html","searchKeys":["config","abstract fun SpringBootApplicationBuilder.config(configuration: SpringBootApplicationConfiguration)","love.forte.simboot.spring.autoconfigure.SimbotSpringBootApplicationBuildConfigure.config"]},{"name":"abstract fun SpringBootApplicationConfiguration.config()","description":"love.forte.simboot.spring.autoconfigure.SimbotSpringBootApplicationConfigurationConfigure.config","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-simbot-spring-boot-application-configuration-configure/config.html","searchKeys":["config","abstract fun SpringBootApplicationConfiguration.config()","love.forte.simboot.spring.autoconfigure.SimbotSpringBootApplicationConfigurationConfigure.config"]},{"name":"abstract fun build(listenerProcessor: KFunctionListenerProcessor, binderManager: BinderManager, beanContainer: BeanContainer): EventListenerRegistrationDescription","description":"love.forte.simboot.spring.autoconfigure.TopLevelEventListenerBuilder.build","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-top-level-event-listener-builder/build.html","searchKeys":["build","abstract fun build(listenerProcessor: KFunctionListenerProcessor, binderManager: BinderManager, beanContainer: BeanContainer): EventListenerRegistrationDescription","love.forte.simboot.spring.autoconfigure.TopLevelEventListenerBuilder.build"]},{"name":"abstract fun processApplicationBlocking(application: Application)","description":"love.forte.simboot.spring.autoconfigure.BlockingApplicationPostProcessor.processApplicationBlocking","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-blocking-application-post-processor/process-application-blocking.html","searchKeys":["processApplicationBlocking","abstract fun processApplicationBlocking(application: Application)","love.forte.simboot.spring.autoconfigure.BlockingApplicationPostProcessor.processApplicationBlocking"]},{"name":"abstract override fun eventProcessor(configurator: SimpleListenerManagerConfiguration.(environment: Application.Environment) -> Unit)","description":"love.forte.simboot.spring.autoconfigure.application.SpringBootApplicationBuilder.eventProcessor","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure.application/-spring-boot-application-builder/event-processor.html","searchKeys":["eventProcessor","abstract override fun eventProcessor(configurator: SimpleListenerManagerConfiguration.(environment: Application.Environment) -> Unit)","love.forte.simboot.spring.autoconfigure.application.SpringBootApplicationBuilder.eventProcessor"]},{"name":"abstract suspend fun processApplication(application: Application)","description":"love.forte.simboot.spring.autoconfigure.ApplicationPostProcessor.processApplication","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-application-post-processor/process-application.html","searchKeys":["processApplication","abstract suspend fun processApplication(application: Application)","love.forte.simboot.spring.autoconfigure.ApplicationPostProcessor.processApplication"]},{"name":"annotation class EnableSimbot","description":"love.forte.simboot.spring.autoconfigure.EnableSimbot","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-enable-simbot/index.html","searchKeys":["EnableSimbot","annotation class EnableSimbot","love.forte.simboot.spring.autoconfigure.EnableSimbot"]},{"name":"annotation class SimbotTopLevelBinderScan(val value: Array<String> = [])","description":"love.forte.simboot.spring.autoconfigure.SimbotTopLevelBinderScan","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-simbot-top-level-binder-scan/index.html","searchKeys":["SimbotTopLevelBinderScan","annotation class SimbotTopLevelBinderScan(val value: Array<String> = [])","love.forte.simboot.spring.autoconfigure.SimbotTopLevelBinderScan"]},{"name":"annotation class SimbotTopLevelListenerScan(val value: Array<String> = [])","description":"love.forte.simboot.spring.autoconfigure.SimbotTopLevelListenerScan","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-simbot-top-level-listener-scan/index.html","searchKeys":["SimbotTopLevelListenerScan","annotation class SimbotTopLevelListenerScan(val value: Array<String> = [])","love.forte.simboot.spring.autoconfigure.SimbotTopLevelListenerScan"]},{"name":"class SimbotListenerMethodProcessor : ConfigurationClassPostProcessor, ApplicationContextAware","description":"love.forte.simboot.spring.autoconfigure.SimbotListenerMethodProcessor","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-simbot-listener-method-processor/index.html","searchKeys":["SimbotListenerMethodProcessor","class SimbotListenerMethodProcessor : ConfigurationClassPostProcessor, ApplicationContextAware","love.forte.simboot.spring.autoconfigure.SimbotListenerMethodProcessor"]},{"name":"class SimbotTopLevelBinderScanProcessor : AbstractSimbotTopLevelScanProcessor","description":"love.forte.simboot.spring.autoconfigure.SimbotTopLevelBinderScanProcessor","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-simbot-top-level-binder-scan-processor/index.html","searchKeys":["SimbotTopLevelBinderScanProcessor","class SimbotTopLevelBinderScanProcessor : AbstractSimbotTopLevelScanProcessor","love.forte.simboot.spring.autoconfigure.SimbotTopLevelBinderScanProcessor"]},{"name":"class SimbotTopLevelListenerScanProcessor : AbstractSimbotTopLevelScanProcessor","description":"love.forte.simboot.spring.autoconfigure.SimbotTopLevelListenerScanProcessor","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-simbot-top-level-listener-scan-processor/index.html","searchKeys":["SimbotTopLevelListenerScanProcessor","class SimbotTopLevelListenerScanProcessor : AbstractSimbotTopLevelScanProcessor","love.forte.simboot.spring.autoconfigure.SimbotTopLevelListenerScanProcessor"]},{"name":"class SpringAnnotationTool(tool: KAnnotationTool = KAnnotationTool()) : KAnnotationTool","description":"love.forte.simboot.spring.autoconfigure.utils.SpringAnnotationTool","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure.utils/-spring-annotation-tool/index.html","searchKeys":["SpringAnnotationTool","class SpringAnnotationTool(tool: KAnnotationTool = KAnnotationTool()) : KAnnotationTool","love.forte.simboot.spring.autoconfigure.utils.SpringAnnotationTool"]},{"name":"class SpringBootApplicationConfigurationProperties","description":"love.forte.simboot.spring.autoconfigure.application.SpringBootApplicationConfigurationProperties","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure.application/-spring-boot-application-configuration-properties/index.html","searchKeys":["SpringBootApplicationConfigurationProperties","class SpringBootApplicationConfigurationProperties","love.forte.simboot.spring.autoconfigure.application.SpringBootApplicationConfigurationProperties"]},{"name":"fun AutowiredConfig()","description":"love.forte.simboot.spring.autoconfigure.AutowiredConfig.AutowiredConfig","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-autowired-config/-autowired-config.html","searchKeys":["AutowiredConfig","fun AutowiredConfig()","love.forte.simboot.spring.autoconfigure.AutowiredConfig.AutowiredConfig"]},{"name":"fun Context(importingClassMetadata: AnnotationMetadata, registry: BeanDefinitionRegistry, importBeanNameGenerator: BeanNameGenerator, topFunctionSequence: Sequence<AnnotationMetadata>)","description":"love.forte.simboot.spring.autoconfigure.AbstractSimbotTopLevelScanProcessor.Context.Context","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-abstract-simbot-top-level-scan-processor/-context/-context.html","searchKeys":["Context","fun Context(importingClassMetadata: AnnotationMetadata, registry: BeanDefinitionRegistry, importBeanNameGenerator: BeanNameGenerator, topFunctionSequence: Sequence<AnnotationMetadata>)","love.forte.simboot.spring.autoconfigure.AbstractSimbotTopLevelScanProcessor.Context.Context"]},{"name":"fun CoroutineDispatcherConfiguration()","description":"love.forte.simboot.spring.autoconfigure.CoroutineDispatcherConfiguration.CoroutineDispatcherConfiguration","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-coroutine-dispatcher-configuration/-coroutine-dispatcher-configuration.html","searchKeys":["CoroutineDispatcherConfiguration","fun CoroutineDispatcherConfiguration()","love.forte.simboot.spring.autoconfigure.CoroutineDispatcherConfiguration.CoroutineDispatcherConfiguration"]},{"name":"fun CoroutineDispatcherContainer(dispatcher: CoroutineDispatcher)","description":"love.forte.simboot.spring.autoconfigure.CoroutineDispatcherContainer.CoroutineDispatcherContainer","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-coroutine-dispatcher-container/-coroutine-dispatcher-container.html","searchKeys":["CoroutineDispatcherContainer","fun CoroutineDispatcherContainer(dispatcher: CoroutineDispatcher)","love.forte.simboot.spring.autoconfigure.CoroutineDispatcherContainer.CoroutineDispatcherContainer"]},{"name":"fun DefaultBinderFactoryConfigure()","description":"love.forte.simboot.spring.autoconfigure.DefaultBinderFactoryConfigure.DefaultBinderFactoryConfigure","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-default-binder-factory-configure/-default-binder-factory-configure.html","searchKeys":["DefaultBinderFactoryConfigure","fun DefaultBinderFactoryConfigure()","love.forte.simboot.spring.autoconfigure.DefaultBinderFactoryConfigure.DefaultBinderFactoryConfigure"]},{"name":"fun EventListenerRegistryPostProcessor()","description":"love.forte.simboot.spring.autoconfigure.EventListenerRegistryPostProcessor.EventListenerRegistryPostProcessor","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-event-listener-registry-post-processor/-event-listener-registry-post-processor.html","searchKeys":["EventListenerRegistryPostProcessor","fun EventListenerRegistryPostProcessor()","love.forte.simboot.spring.autoconfigure.EventListenerRegistryPostProcessor.EventListenerRegistryPostProcessor"]},{"name":"fun SimbotIncludesSelector()","description":"love.forte.simboot.spring.autoconfigure.SimbotIncludesSelector.SimbotIncludesSelector","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-simbot-includes-selector/-simbot-includes-selector.html","searchKeys":["SimbotIncludesSelector","fun SimbotIncludesSelector()","love.forte.simboot.spring.autoconfigure.SimbotIncludesSelector.SimbotIncludesSelector"]},{"name":"fun SimbotListenerMethodProcessor()","description":"love.forte.simboot.spring.autoconfigure.SimbotListenerMethodProcessor.SimbotListenerMethodProcessor","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-simbot-listener-method-processor/-simbot-listener-method-processor.html","searchKeys":["SimbotListenerMethodProcessor","fun SimbotListenerMethodProcessor()","love.forte.simboot.spring.autoconfigure.SimbotListenerMethodProcessor.SimbotListenerMethodProcessor"]},{"name":"fun SimbotSpringBootApplicationConfiguration()","description":"love.forte.simboot.spring.autoconfigure.SimbotSpringBootApplicationConfiguration.SimbotSpringBootApplicationConfiguration","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-simbot-spring-boot-application-configuration/-simbot-spring-boot-application-configuration.html","searchKeys":["SimbotSpringBootApplicationConfiguration","fun SimbotSpringBootApplicationConfiguration()","love.forte.simboot.spring.autoconfigure.SimbotSpringBootApplicationConfiguration.SimbotSpringBootApplicationConfiguration"]},{"name":"fun SimbotSpringBootBotAutoRegisterBuildConfigure()","description":"love.forte.simboot.spring.autoconfigure.SimbotSpringBootBotAutoRegisterBuildConfigure.SimbotSpringBootBotAutoRegisterBuildConfigure","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-simbot-spring-boot-bot-auto-register-build-configure/-simbot-spring-boot-bot-auto-register-build-configure.html","searchKeys":["SimbotSpringBootBotAutoRegisterBuildConfigure","fun SimbotSpringBootBotAutoRegisterBuildConfigure()","love.forte.simboot.spring.autoconfigure.SimbotSpringBootBotAutoRegisterBuildConfigure.SimbotSpringBootBotAutoRegisterBuildConfigure"]},{"name":"fun SimbotSpringBootComponentAutoInstallBuildConfigure()","description":"love.forte.simboot.spring.autoconfigure.SimbotSpringBootComponentAutoInstallBuildConfigure.SimbotSpringBootComponentAutoInstallBuildConfigure","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-simbot-spring-boot-component-auto-install-build-configure/-simbot-spring-boot-component-auto-install-build-configure.html","searchKeys":["SimbotSpringBootComponentAutoInstallBuildConfigure","fun SimbotSpringBootComponentAutoInstallBuildConfigure()","love.forte.simboot.spring.autoconfigure.SimbotSpringBootComponentAutoInstallBuildConfigure.SimbotSpringBootComponentAutoInstallBuildConfigure"]},{"name":"fun SimbotSpringBootDefaultConfigures()","description":"love.forte.simboot.spring.autoconfigure.SimbotSpringBootDefaultConfigures.SimbotSpringBootDefaultConfigures","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-simbot-spring-boot-default-configures/-simbot-spring-boot-default-configures.html","searchKeys":["SimbotSpringBootDefaultConfigures","fun SimbotSpringBootDefaultConfigures()","love.forte.simboot.spring.autoconfigure.SimbotSpringBootDefaultConfigures.SimbotSpringBootDefaultConfigures"]},{"name":"fun SimbotSpringBootEventProviderAutoInstallBuildConfigure()","description":"love.forte.simboot.spring.autoconfigure.SimbotSpringBootEventProviderAutoInstallBuildConfigure.SimbotSpringBootEventProviderAutoInstallBuildConfigure","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-simbot-spring-boot-event-provider-auto-install-build-configure/-simbot-spring-boot-event-provider-auto-install-build-configure.html","searchKeys":["SimbotSpringBootEventProviderAutoInstallBuildConfigure","fun SimbotSpringBootEventProviderAutoInstallBuildConfigure()","love.forte.simboot.spring.autoconfigure.SimbotSpringBootEventProviderAutoInstallBuildConfigure.SimbotSpringBootEventProviderAutoInstallBuildConfigure"]},{"name":"fun SimbotSpringBootInterceptorsAutoConfigure()","description":"love.forte.simboot.spring.autoconfigure.SimbotSpringBootInterceptorsAutoConfigure.SimbotSpringBootInterceptorsAutoConfigure","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-simbot-spring-boot-interceptors-auto-configure/-simbot-spring-boot-interceptors-auto-configure.html","searchKeys":["SimbotSpringBootInterceptorsAutoConfigure","fun SimbotSpringBootInterceptorsAutoConfigure()","love.forte.simboot.spring.autoconfigure.SimbotSpringBootInterceptorsAutoConfigure.SimbotSpringBootInterceptorsAutoConfigure"]},{"name":"fun SimbotSpringBootListenerAutoRegisterBuildConfigure()","description":"love.forte.simboot.spring.autoconfigure.SimbotSpringBootListenerAutoRegisterBuildConfigure.SimbotSpringBootListenerAutoRegisterBuildConfigure","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-simbot-spring-boot-listener-auto-register-build-configure/-simbot-spring-boot-listener-auto-register-build-configure.html","searchKeys":["SimbotSpringBootListenerAutoRegisterBuildConfigure","fun SimbotSpringBootListenerAutoRegisterBuildConfigure()","love.forte.simboot.spring.autoconfigure.SimbotSpringBootListenerAutoRegisterBuildConfigure.SimbotSpringBootListenerAutoRegisterBuildConfigure"]},{"name":"fun SimbotTopLevelBinderScanProcessor()","description":"love.forte.simboot.spring.autoconfigure.SimbotTopLevelBinderScanProcessor.SimbotTopLevelBinderScanProcessor","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-simbot-top-level-binder-scan-processor/-simbot-top-level-binder-scan-processor.html","searchKeys":["SimbotTopLevelBinderScanProcessor","fun SimbotTopLevelBinderScanProcessor()","love.forte.simboot.spring.autoconfigure.SimbotTopLevelBinderScanProcessor.SimbotTopLevelBinderScanProcessor"]},{"name":"fun SimbotTopLevelListenerScanProcessor()","description":"love.forte.simboot.spring.autoconfigure.SimbotTopLevelListenerScanProcessor.SimbotTopLevelListenerScanProcessor","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-simbot-top-level-listener-scan-processor/-simbot-top-level-listener-scan-processor.html","searchKeys":["SimbotTopLevelListenerScanProcessor","fun SimbotTopLevelListenerScanProcessor()","love.forte.simboot.spring.autoconfigure.SimbotTopLevelListenerScanProcessor.SimbotTopLevelListenerScanProcessor"]},{"name":"fun SpringAnnotationTool(tool: KAnnotationTool = KAnnotationTool())","description":"love.forte.simboot.spring.autoconfigure.utils.SpringAnnotationTool.SpringAnnotationTool","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure.utils/-spring-annotation-tool/-spring-annotation-tool.html","searchKeys":["SpringAnnotationTool","fun SpringAnnotationTool(tool: KAnnotationTool = KAnnotationTool())","love.forte.simboot.spring.autoconfigure.utils.SpringAnnotationTool.SpringAnnotationTool"]},{"name":"fun SpringBeanContainer(listableBeanFactory: ListableBeanFactory)","description":"love.forte.simboot.spring.autoconfigure.SpringBeanContainer.SpringBeanContainer","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-spring-bean-container/-spring-bean-container.html","searchKeys":["SpringBeanContainer","fun SpringBeanContainer(listableBeanFactory: ListableBeanFactory)","love.forte.simboot.spring.autoconfigure.SpringBeanContainer.SpringBeanContainer"]},{"name":"fun SpringBeanContainerFactory(listableBeanFactory: ListableBeanFactory)","description":"love.forte.simboot.spring.autoconfigure.SpringBeanContainerFactory.SpringBeanContainerFactory","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-spring-bean-container-factory/-spring-bean-container-factory.html","searchKeys":["SpringBeanContainerFactory","fun SpringBeanContainerFactory(listableBeanFactory: ListableBeanFactory)","love.forte.simboot.spring.autoconfigure.SpringBeanContainerFactory.SpringBeanContainerFactory"]},{"name":"fun SpringBootApplicationConfiguration()","description":"love.forte.simboot.spring.autoconfigure.application.SpringBootApplicationConfiguration.SpringBootApplicationConfiguration","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure.application/-spring-boot-application-configuration/-spring-boot-application-configuration.html","searchKeys":["SpringBootApplicationConfiguration","fun SpringBootApplicationConfiguration()","love.forte.simboot.spring.autoconfigure.application.SpringBootApplicationConfiguration.SpringBootApplicationConfiguration"]},{"name":"fun SpringBootApplicationConfigurationProperties()","description":"love.forte.simboot.spring.autoconfigure.application.SpringBootApplicationConfigurationProperties.SpringBootApplicationConfigurationProperties","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure.application/-spring-boot-application-configuration-properties/-spring-boot-application-configuration-properties.html","searchKeys":["SpringBootApplicationConfigurationProperties","fun SpringBootApplicationConfigurationProperties()","love.forte.simboot.spring.autoconfigure.application.SpringBootApplicationConfigurationProperties.SpringBootApplicationConfigurationProperties"]},{"name":"fun applicationConfiguration(applicationConfigurationProperties: SpringBootApplicationConfigurationProperties, applicationContext: ApplicationContext, applicationArguments: ApplicationArguments): SpringBootApplicationConfiguration","description":"love.forte.simboot.spring.autoconfigure.SimbotSpringBootApplicationConfiguration.applicationConfiguration","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-simbot-spring-boot-application-configuration/application-configuration.html","searchKeys":["applicationConfiguration","fun applicationConfiguration(applicationConfigurationProperties: SpringBootApplicationConfigurationProperties, applicationContext: ApplicationContext, applicationArguments: ApplicationArguments): SpringBootApplicationConfiguration","love.forte.simboot.spring.autoconfigure.SimbotSpringBootApplicationConfiguration.applicationConfiguration"]},{"name":"fun applicationConfigurationProperties(): SpringBootApplicationConfigurationProperties","description":"love.forte.simboot.spring.autoconfigure.SimbotSpringBootApplicationConfiguration.applicationConfigurationProperties","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-simbot-spring-boot-application-configuration/application-configuration-properties.html","searchKeys":["applicationConfigurationProperties","fun applicationConfigurationProperties(): SpringBootApplicationConfigurationProperties","love.forte.simboot.spring.autoconfigure.SimbotSpringBootApplicationConfiguration.applicationConfigurationProperties"]},{"name":"fun autoInjectBinderFactory(): AutoInjectBinderFactory","description":"love.forte.simboot.spring.autoconfigure.DefaultBinderFactoryConfigure.autoInjectBinderFactory","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-default-binder-factory-configure/auto-inject-binder-factory.html","searchKeys":["autoInjectBinderFactory","fun autoInjectBinderFactory(): AutoInjectBinderFactory","love.forte.simboot.spring.autoconfigure.DefaultBinderFactoryConfigure.autoInjectBinderFactory"]},{"name":"fun eventParameterBinderFactory(): EventParameterBinderFactory","description":"love.forte.simboot.spring.autoconfigure.DefaultBinderFactoryConfigure.eventParameterBinderFactory","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-default-binder-factory-configure/event-parameter-binder-factory.html","searchKeys":["eventParameterBinderFactory","fun eventParameterBinderFactory(): EventParameterBinderFactory","love.forte.simboot.spring.autoconfigure.DefaultBinderFactoryConfigure.eventParameterBinderFactory"]},{"name":"fun instanceInjectBinderFactory(): InstanceInjectBinderFactory","description":"love.forte.simboot.spring.autoconfigure.DefaultBinderFactoryConfigure.instanceInjectBinderFactory","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-default-binder-factory-configure/instance-inject-binder-factory.html","searchKeys":["instanceInjectBinderFactory","fun instanceInjectBinderFactory(): InstanceInjectBinderFactory","love.forte.simboot.spring.autoconfigure.DefaultBinderFactoryConfigure.instanceInjectBinderFactory"]},{"name":"fun interceptorAutoConfigure(eventProcessingInterceptors: Map<String, EventProcessingInterceptor>? = null, eventListenerInterceptors: Map<String, EventListenerInterceptor>? = null): SimbotSpringBootApplicationBuildConfigure","description":"love.forte.simboot.spring.autoconfigure.SimbotSpringBootInterceptorsAutoConfigure.interceptorAutoConfigure","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-simbot-spring-boot-interceptors-auto-configure/interceptor-auto-configure.html","searchKeys":["interceptorAutoConfigure","fun interceptorAutoConfigure(eventProcessingInterceptors: Map<String, EventProcessingInterceptor>? = null, eventListenerInterceptors: Map<String, EventListenerInterceptor>? = null): SimbotSpringBootApplicationBuildConfigure","love.forte.simboot.spring.autoconfigure.SimbotSpringBootInterceptorsAutoConfigure.interceptorAutoConfigure"]},{"name":"fun interface SimbotSpringBootApplicationBuildConfigure","description":"love.forte.simboot.spring.autoconfigure.SimbotSpringBootApplicationBuildConfigure","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-simbot-spring-boot-application-build-configure/index.html","searchKeys":["SimbotSpringBootApplicationBuildConfigure","fun interface SimbotSpringBootApplicationBuildConfigure","love.forte.simboot.spring.autoconfigure.SimbotSpringBootApplicationBuildConfigure"]},{"name":"fun interface SimbotSpringBootApplicationConfigurationConfigure","description":"love.forte.simboot.spring.autoconfigure.SimbotSpringBootApplicationConfigurationConfigure","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-simbot-spring-boot-application-configuration-configure/index.html","searchKeys":["SimbotSpringBootApplicationConfigurationConfigure","fun interface SimbotSpringBootApplicationConfigurationConfigure","love.forte.simboot.spring.autoconfigure.SimbotSpringBootApplicationConfigurationConfigure"]},{"name":"fun interface TopLevelEventListenerBuilder","description":"love.forte.simboot.spring.autoconfigure.TopLevelEventListenerBuilder","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-top-level-event-listener-builder/index.html","searchKeys":["TopLevelEventListenerBuilder","fun interface TopLevelEventListenerBuilder","love.forte.simboot.spring.autoconfigure.TopLevelEventListenerBuilder"]},{"name":"fun keywordBinderFactory(): KeywordBinderFactory","description":"love.forte.simboot.spring.autoconfigure.DefaultBinderFactoryConfigure.keywordBinderFactory","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-default-binder-factory-configure/keyword-binder-factory.html","searchKeys":["keywordBinderFactory","fun keywordBinderFactory(): KeywordBinderFactory","love.forte.simboot.spring.autoconfigure.DefaultBinderFactoryConfigure.keywordBinderFactory"]},{"name":"fun simbotApplicationAfterApplication(application: Application, applicationPostProcessors: List<ApplicationPostProcessor>? = null): AutoConfigureMarker.AfterApplicationPostProcessor","description":"love.forte.simboot.spring.autoconfigure.SimbotSpringBootApplicationConfiguration.simbotApplicationAfterApplication","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-simbot-spring-boot-application-configuration/simbot-application-after-application.html","searchKeys":["simbotApplicationAfterApplication","fun simbotApplicationAfterApplication(application: Application, applicationPostProcessors: List<ApplicationPostProcessor>? = null): AutoConfigureMarker.AfterApplicationPostProcessor","love.forte.simboot.spring.autoconfigure.SimbotSpringBootApplicationConfiguration.simbotApplicationAfterApplication"]},{"name":"fun simbotApplicationBotManagers(application: Application, marker: AutoConfigureMarker.AfterApplicationPostProcessor): BotManagers","description":"love.forte.simboot.spring.autoconfigure.SimbotSpringBootApplicationConfiguration.simbotApplicationBotManagers","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-simbot-spring-boot-application-configuration/simbot-application-bot-managers.html","searchKeys":["simbotApplicationBotManagers","fun simbotApplicationBotManagers(application: Application, marker: AutoConfigureMarker.AfterApplicationPostProcessor): BotManagers","love.forte.simboot.spring.autoconfigure.SimbotSpringBootApplicationConfiguration.simbotApplicationBotManagers"]},{"name":"fun simbotApplicationEnvironment(application: Application): Application.Environment","description":"love.forte.simboot.spring.autoconfigure.SimbotSpringBootApplicationConfiguration.simbotApplicationEnvironment","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-simbot-spring-boot-application-configuration/simbot-application-environment.html","searchKeys":["simbotApplicationEnvironment","fun simbotApplicationEnvironment(application: Application): Application.Environment","love.forte.simboot.spring.autoconfigure.SimbotSpringBootApplicationConfiguration.simbotApplicationEnvironment"]},{"name":"fun simbotApplicationEventListenerManager(application: Application, marker: AutoConfigureMarker.AfterApplicationPostProcessor): EventListenerManager","description":"love.forte.simboot.spring.autoconfigure.SimbotSpringBootApplicationConfiguration.simbotApplicationEventListenerManager","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-simbot-spring-boot-application-configuration/simbot-application-event-listener-manager.html","searchKeys":["simbotApplicationEventListenerManager","fun simbotApplicationEventListenerManager(application: Application, marker: AutoConfigureMarker.AfterApplicationPostProcessor): EventListenerManager","love.forte.simboot.spring.autoconfigure.SimbotSpringBootApplicationConfiguration.simbotApplicationEventListenerManager"]},{"name":"fun simbotSpringBootApplication(initialConfiguration: SpringBootApplicationConfiguration, configurationConfigures: List<SimbotSpringBootApplicationConfigurationConfigure>? = null, applicationConfigures: List<SimbotSpringBootApplicationBuildConfigure>? = null, coroutineDispatcherContainer: CoroutineDispatcherContainer): SpringBootApplication","description":"love.forte.simboot.spring.autoconfigure.SimbotSpringBootApplicationConfiguration.simbotSpringBootApplication","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-simbot-spring-boot-application-configuration/simbot-spring-boot-application.html","searchKeys":["simbotSpringBootApplication","fun simbotSpringBootApplication(initialConfiguration: SpringBootApplicationConfiguration, configurationConfigures: List<SimbotSpringBootApplicationConfigurationConfigure>? = null, applicationConfigures: List<SimbotSpringBootApplicationBuildConfigure>? = null, coroutineDispatcherContainer: CoroutineDispatcherContainer): SpringBootApplication","love.forte.simboot.spring.autoconfigure.SimbotSpringBootApplicationConfiguration.simbotSpringBootApplication"]},{"name":"fun simbotSpringBootBotAutoRegisterPostProcessor(customDecoderFactories: List<BotVerifyInfoDecoderFactory<*, *>>? = null): ApplicationPostProcessor","description":"love.forte.simboot.spring.autoconfigure.SimbotSpringBootBotAutoRegisterBuildConfigure.simbotSpringBootBotAutoRegisterPostProcessor","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-simbot-spring-boot-bot-auto-register-build-configure/simbot-spring-boot-bot-auto-register-post-processor.html","searchKeys":["simbotSpringBootBotAutoRegisterPostProcessor","fun simbotSpringBootBotAutoRegisterPostProcessor(customDecoderFactories: List<BotVerifyInfoDecoderFactory<*, *>>? = null): ApplicationPostProcessor","love.forte.simboot.spring.autoconfigure.SimbotSpringBootBotAutoRegisterBuildConfigure.simbotSpringBootBotAutoRegisterPostProcessor"]},{"name":"fun simbotSpringBootComponentAutoInstallBuildConfigure(factories: List<ComponentFactory<*, *>>? = null): SimbotSpringBootApplicationBuildConfigure","description":"love.forte.simboot.spring.autoconfigure.SimbotSpringBootComponentAutoInstallBuildConfigure.simbotSpringBootComponentAutoInstallBuildConfigure","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-simbot-spring-boot-component-auto-install-build-configure/simbot-spring-boot-component-auto-install-build-configure.html","searchKeys":["simbotSpringBootComponentAutoInstallBuildConfigure","fun simbotSpringBootComponentAutoInstallBuildConfigure(factories: List<ComponentFactory<*, *>>? = null): SimbotSpringBootApplicationBuildConfigure","love.forte.simboot.spring.autoconfigure.SimbotSpringBootComponentAutoInstallBuildConfigure.simbotSpringBootComponentAutoInstallBuildConfigure"]},{"name":"fun simbotSpringBootEventProviderAutoInstallBuildConfigure(factories: List<EventProviderFactory<*, *>>? = null): SimbotSpringBootApplicationBuildConfigure","description":"love.forte.simboot.spring.autoconfigure.SimbotSpringBootEventProviderAutoInstallBuildConfigure.simbotSpringBootEventProviderAutoInstallBuildConfigure","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-simbot-spring-boot-event-provider-auto-install-build-configure/simbot-spring-boot-event-provider-auto-install-build-configure.html","searchKeys":["simbotSpringBootEventProviderAutoInstallBuildConfigure","fun simbotSpringBootEventProviderAutoInstallBuildConfigure(factories: List<EventProviderFactory<*, *>>? = null): SimbotSpringBootApplicationBuildConfigure","love.forte.simboot.spring.autoconfigure.SimbotSpringBootEventProviderAutoInstallBuildConfigure.simbotSpringBootEventProviderAutoInstallBuildConfigure"]},{"name":"fun simbotSpringBootListenerAutoRegisterPostProcessor(listeners: Map<String, EventListener>? = null, listenerDescriptions: Map<String, EventListenerRegistrationDescription>? = null, listenerBuilders: Map<String, EventListenerBuilder>? = null): ApplicationPostProcessor","description":"love.forte.simboot.spring.autoconfigure.SimbotSpringBootListenerAutoRegisterBuildConfigure.simbotSpringBootListenerAutoRegisterPostProcessor","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-simbot-spring-boot-listener-auto-register-build-configure/simbot-spring-boot-listener-auto-register-post-processor.html","searchKeys":["simbotSpringBootListenerAutoRegisterPostProcessor","fun simbotSpringBootListenerAutoRegisterPostProcessor(listeners: Map<String, EventListener>? = null, listenerDescriptions: Map<String, EventListenerRegistrationDescription>? = null, listenerBuilders: Map<String, EventListenerBuilder>? = null): ApplicationPostProcessor","love.forte.simboot.spring.autoconfigure.SimbotSpringBootListenerAutoRegisterBuildConfigure.simbotSpringBootListenerAutoRegisterPostProcessor"]},{"name":"fun springBootApplication(initialConfiguration: SpringBootApplicationConfiguration = SpringBootApplicationConfiguration(), configurator: SpringBootApplicationConfiguration.() -> Unit = {}, builder: SpringBootApplicationBuilder.(SpringBootApplicationConfiguration) -> Unit = {}): ApplicationLauncher<SpringBootApplication>","description":"love.forte.simboot.spring.autoconfigure.application.springBootApplication","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure.application/spring-boot-application.html","searchKeys":["springBootApplication","fun springBootApplication(initialConfiguration: SpringBootApplicationConfiguration = SpringBootApplicationConfiguration(), configurator: SpringBootApplicationConfiguration.() -> Unit = {}, builder: SpringBootApplicationBuilder.(SpringBootApplicationConfiguration) -> Unit = {}): ApplicationLauncher<SpringBootApplication>","love.forte.simboot.spring.autoconfigure.application.springBootApplication"]},{"name":"fun toConfiguration(applicationArguments: ApplicationArguments, applicationContext: ApplicationContext): SpringBootApplicationConfiguration","description":"love.forte.simboot.spring.autoconfigure.application.SpringBootApplicationConfigurationProperties.toConfiguration","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure.application/-spring-boot-application-configuration-properties/to-configuration.html","searchKeys":["toConfiguration","fun toConfiguration(applicationArguments: ApplicationArguments, applicationContext: ApplicationContext): SpringBootApplicationConfiguration","love.forte.simboot.spring.autoconfigure.application.SpringBootApplicationConfigurationProperties.toConfiguration"]},{"name":"interface ApplicationPostProcessor","description":"love.forte.simboot.spring.autoconfigure.ApplicationPostProcessor","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-application-post-processor/index.html","searchKeys":["ApplicationPostProcessor","interface ApplicationPostProcessor","love.forte.simboot.spring.autoconfigure.ApplicationPostProcessor"]},{"name":"interface BlockingApplicationPostProcessor : ApplicationPostProcessor","description":"love.forte.simboot.spring.autoconfigure.BlockingApplicationPostProcessor","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-blocking-application-post-processor/index.html","searchKeys":["BlockingApplicationPostProcessor","interface BlockingApplicationPostProcessor : ApplicationPostProcessor","love.forte.simboot.spring.autoconfigure.BlockingApplicationPostProcessor"]},{"name":"interface SpringBootApplication : Application","description":"love.forte.simboot.spring.autoconfigure.application.SpringBootApplication","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure.application/-spring-boot-application/index.html","searchKeys":["SpringBootApplication","interface SpringBootApplication : Application","love.forte.simboot.spring.autoconfigure.application.SpringBootApplication"]},{"name":"interface SpringBootApplicationBuilder : ApplicationBuilder<SpringBootApplication> , EventProcessableApplicationBuilder<SpringBootApplication> ","description":"love.forte.simboot.spring.autoconfigure.application.SpringBootApplicationBuilder","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure.application/-spring-boot-application-builder/index.html","searchKeys":["SpringBootApplicationBuilder","interface SpringBootApplicationBuilder : ApplicationBuilder<SpringBootApplication> , EventProcessableApplicationBuilder<SpringBootApplication> ","love.forte.simboot.spring.autoconfigure.application.SpringBootApplicationBuilder"]},{"name":"object AfterApplicationPostProcessor : AutoConfigureMarker","description":"love.forte.simboot.spring.autoconfigure.AutoConfigureMarker.AfterApplicationPostProcessor","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-auto-configure-marker/-after-application-post-processor/index.html","searchKeys":["AfterApplicationPostProcessor","object AfterApplicationPostProcessor : AutoConfigureMarker","love.forte.simboot.spring.autoconfigure.AutoConfigureMarker.AfterApplicationPostProcessor"]},{"name":"object Companion","description":"love.forte.simboot.spring.autoconfigure.EventListenerRegistryPostProcessor.Companion","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-event-listener-registry-post-processor/-companion/index.html","searchKeys":["Companion","object Companion","love.forte.simboot.spring.autoconfigure.EventListenerRegistryPostProcessor.Companion"]},{"name":"object Companion","description":"love.forte.simboot.spring.autoconfigure.SimbotIncludesSelector.Companion","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-simbot-includes-selector/-companion/index.html","searchKeys":["Companion","object Companion","love.forte.simboot.spring.autoconfigure.SimbotIncludesSelector.Companion"]},{"name":"object Companion","description":"love.forte.simboot.spring.autoconfigure.SimbotSpringBootApplicationConfiguration.Companion","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-simbot-spring-boot-application-configuration/-companion/index.html","searchKeys":["Companion","object Companion","love.forte.simboot.spring.autoconfigure.SimbotSpringBootApplicationConfiguration.Companion"]},{"name":"object Companion","description":"love.forte.simboot.spring.autoconfigure.SimbotSpringBootBotAutoRegisterBuildConfigure.Companion","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-simbot-spring-boot-bot-auto-register-build-configure/-companion/index.html","searchKeys":["Companion","object Companion","love.forte.simboot.spring.autoconfigure.SimbotSpringBootBotAutoRegisterBuildConfigure.Companion"]},{"name":"object Companion","description":"love.forte.simboot.spring.autoconfigure.SimbotSpringBootComponentAutoInstallBuildConfigure.Companion","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-simbot-spring-boot-component-auto-install-build-configure/-companion/index.html","searchKeys":["Companion","object Companion","love.forte.simboot.spring.autoconfigure.SimbotSpringBootComponentAutoInstallBuildConfigure.Companion"]},{"name":"object Companion","description":"love.forte.simboot.spring.autoconfigure.SimbotSpringBootEventProviderAutoInstallBuildConfigure.Companion","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-simbot-spring-boot-event-provider-auto-install-build-configure/-companion/index.html","searchKeys":["Companion","object Companion","love.forte.simboot.spring.autoconfigure.SimbotSpringBootEventProviderAutoInstallBuildConfigure.Companion"]},{"name":"object SpringBoot : ApplicationFactory<SpringBootApplicationConfiguration, SpringBootApplicationBuilder, SpringBootApplication> ","description":"love.forte.simboot.spring.autoconfigure.application.SpringBoot","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure.application/-spring-boot/index.html","searchKeys":["SpringBoot","object SpringBoot : ApplicationFactory<SpringBootApplicationConfiguration, SpringBootApplicationBuilder, SpringBootApplication> ","love.forte.simboot.spring.autoconfigure.application.SpringBoot"]},{"name":"open class AutowiredConfig : SmartInstantiationAwareBeanPostProcessor","description":"love.forte.simboot.spring.autoconfigure.AutowiredConfig","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-autowired-config/index.html","searchKeys":["AutowiredConfig","open class AutowiredConfig : SmartInstantiationAwareBeanPostProcessor","love.forte.simboot.spring.autoconfigure.AutowiredConfig"]},{"name":"open class CoroutineDispatcherConfiguration","description":"love.forte.simboot.spring.autoconfigure.CoroutineDispatcherConfiguration","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-coroutine-dispatcher-configuration/index.html","searchKeys":["CoroutineDispatcherConfiguration","open class CoroutineDispatcherConfiguration","love.forte.simboot.spring.autoconfigure.CoroutineDispatcherConfiguration"]},{"name":"open class CoroutineDispatcherContainer(val dispatcher: CoroutineDispatcher)","description":"love.forte.simboot.spring.autoconfigure.CoroutineDispatcherContainer","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-coroutine-dispatcher-container/index.html","searchKeys":["CoroutineDispatcherContainer","open class CoroutineDispatcherContainer(val dispatcher: CoroutineDispatcher)","love.forte.simboot.spring.autoconfigure.CoroutineDispatcherContainer"]},{"name":"open class DefaultBinderFactoryConfigure","description":"love.forte.simboot.spring.autoconfigure.DefaultBinderFactoryConfigure","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-default-binder-factory-configure/index.html","searchKeys":["DefaultBinderFactoryConfigure","open class DefaultBinderFactoryConfigure","love.forte.simboot.spring.autoconfigure.DefaultBinderFactoryConfigure"]},{"name":"open class EventListenerRegistryPostProcessor : BeanDefinitionRegistryPostProcessor, ResourceLoaderAware","description":"love.forte.simboot.spring.autoconfigure.EventListenerRegistryPostProcessor","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-event-listener-registry-post-processor/index.html","searchKeys":["EventListenerRegistryPostProcessor","open class EventListenerRegistryPostProcessor : BeanDefinitionRegistryPostProcessor, ResourceLoaderAware","love.forte.simboot.spring.autoconfigure.EventListenerRegistryPostProcessor"]},{"name":"open class SimbotIncludesSelector : ImportSelector, BeanClassLoaderAware","description":"love.forte.simboot.spring.autoconfigure.SimbotIncludesSelector","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-simbot-includes-selector/index.html","searchKeys":["SimbotIncludesSelector","open class SimbotIncludesSelector : ImportSelector, BeanClassLoaderAware","love.forte.simboot.spring.autoconfigure.SimbotIncludesSelector"]},{"name":"open class SimbotSpringBootApplicationConfiguration : ResourceLoaderAware","description":"love.forte.simboot.spring.autoconfigure.SimbotSpringBootApplicationConfiguration","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-simbot-spring-boot-application-configuration/index.html","searchKeys":["SimbotSpringBootApplicationConfiguration","open class SimbotSpringBootApplicationConfiguration : ResourceLoaderAware","love.forte.simboot.spring.autoconfigure.SimbotSpringBootApplicationConfiguration"]},{"name":"open class SimbotSpringBootBotAutoRegisterBuildConfigure","description":"love.forte.simboot.spring.autoconfigure.SimbotSpringBootBotAutoRegisterBuildConfigure","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-simbot-spring-boot-bot-auto-register-build-configure/index.html","searchKeys":["SimbotSpringBootBotAutoRegisterBuildConfigure","open class SimbotSpringBootBotAutoRegisterBuildConfigure","love.forte.simboot.spring.autoconfigure.SimbotSpringBootBotAutoRegisterBuildConfigure"]},{"name":"open class SimbotSpringBootComponentAutoInstallBuildConfigure","description":"love.forte.simboot.spring.autoconfigure.SimbotSpringBootComponentAutoInstallBuildConfigure","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-simbot-spring-boot-component-auto-install-build-configure/index.html","searchKeys":["SimbotSpringBootComponentAutoInstallBuildConfigure","open class SimbotSpringBootComponentAutoInstallBuildConfigure","love.forte.simboot.spring.autoconfigure.SimbotSpringBootComponentAutoInstallBuildConfigure"]},{"name":"open class SimbotSpringBootDefaultConfigures","description":"love.forte.simboot.spring.autoconfigure.SimbotSpringBootDefaultConfigures","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-simbot-spring-boot-default-configures/index.html","searchKeys":["SimbotSpringBootDefaultConfigures","open class SimbotSpringBootDefaultConfigures","love.forte.simboot.spring.autoconfigure.SimbotSpringBootDefaultConfigures"]},{"name":"open class SimbotSpringBootEventProviderAutoInstallBuildConfigure","description":"love.forte.simboot.spring.autoconfigure.SimbotSpringBootEventProviderAutoInstallBuildConfigure","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-simbot-spring-boot-event-provider-auto-install-build-configure/index.html","searchKeys":["SimbotSpringBootEventProviderAutoInstallBuildConfigure","open class SimbotSpringBootEventProviderAutoInstallBuildConfigure","love.forte.simboot.spring.autoconfigure.SimbotSpringBootEventProviderAutoInstallBuildConfigure"]},{"name":"open class SimbotSpringBootInterceptorsAutoConfigure","description":"love.forte.simboot.spring.autoconfigure.SimbotSpringBootInterceptorsAutoConfigure","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-simbot-spring-boot-interceptors-auto-configure/index.html","searchKeys":["SimbotSpringBootInterceptorsAutoConfigure","open class SimbotSpringBootInterceptorsAutoConfigure","love.forte.simboot.spring.autoconfigure.SimbotSpringBootInterceptorsAutoConfigure"]},{"name":"open class SimbotSpringBootListenerAutoRegisterBuildConfigure","description":"love.forte.simboot.spring.autoconfigure.SimbotSpringBootListenerAutoRegisterBuildConfigure","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-simbot-spring-boot-listener-auto-register-build-configure/index.html","searchKeys":["SimbotSpringBootListenerAutoRegisterBuildConfigure","open class SimbotSpringBootListenerAutoRegisterBuildConfigure","love.forte.simboot.spring.autoconfigure.SimbotSpringBootListenerAutoRegisterBuildConfigure"]},{"name":"open class SpringBeanContainer(listableBeanFactory: ListableBeanFactory) : BeanContainer","description":"love.forte.simboot.spring.autoconfigure.SpringBeanContainer","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-spring-bean-container/index.html","searchKeys":["SpringBeanContainer","open class SpringBeanContainer(listableBeanFactory: ListableBeanFactory) : BeanContainer","love.forte.simboot.spring.autoconfigure.SpringBeanContainer"]},{"name":"open class SpringBeanContainerFactory(listableBeanFactory: ListableBeanFactory) : BeanContainerFactory","description":"love.forte.simboot.spring.autoconfigure.SpringBeanContainerFactory","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-spring-bean-container-factory/index.html","searchKeys":["SpringBeanContainerFactory","open class SpringBeanContainerFactory(listableBeanFactory: ListableBeanFactory) : BeanContainerFactory","love.forte.simboot.spring.autoconfigure.SpringBeanContainerFactory"]},{"name":"open class SpringBootApplicationConfiguration : BootApplicationConfiguration","description":"love.forte.simboot.spring.autoconfigure.application.SpringBootApplicationConfiguration","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure.application/-spring-boot-application-configuration/index.html","searchKeys":["SpringBootApplicationConfiguration","open class SpringBootApplicationConfiguration : BootApplicationConfiguration","love.forte.simboot.spring.autoconfigure.application.SpringBootApplicationConfiguration"]},{"name":"open fun defaultSimbotEventDispatcher(executor: ThreadPoolTaskExecutor): CoroutineDispatcherContainer","description":"love.forte.simboot.spring.autoconfigure.CoroutineDispatcherConfiguration.defaultSimbotEventDispatcher","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-coroutine-dispatcher-configuration/default-simbot-event-dispatcher.html","searchKeys":["defaultSimbotEventDispatcher","open fun defaultSimbotEventDispatcher(executor: ThreadPoolTaskExecutor): CoroutineDispatcherContainer","love.forte.simboot.spring.autoconfigure.CoroutineDispatcherConfiguration.defaultSimbotEventDispatcher"]},{"name":"open lateinit var applicationArguments: ApplicationArguments","description":"love.forte.simboot.spring.autoconfigure.application.SpringBootApplicationConfiguration.applicationArguments","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure.application/-spring-boot-application-configuration/application-arguments.html","searchKeys":["applicationArguments","open lateinit var applicationArguments: ApplicationArguments","love.forte.simboot.spring.autoconfigure.application.SpringBootApplicationConfiguration.applicationArguments"]},{"name":"open lateinit var applicationContext: ApplicationContext","description":"love.forte.simboot.spring.autoconfigure.application.SpringBootApplicationConfiguration.applicationContext","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure.application/-spring-boot-application-configuration/application-context.html","searchKeys":["applicationContext","open lateinit var applicationContext: ApplicationContext","love.forte.simboot.spring.autoconfigure.application.SpringBootApplicationConfiguration.applicationContext"]},{"name":"open operator override fun <T : Any> get(name: String, type: Class<T>): T","description":"love.forte.simboot.spring.autoconfigure.SpringBeanContainer.get","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-spring-bean-container/get.html","searchKeys":["get","open operator override fun <T : Any> get(name: String, type: Class<T>): T","love.forte.simboot.spring.autoconfigure.SpringBeanContainer.get"]},{"name":"open operator override fun <T : Any> get(name: String, type: KClass<T>): T","description":"love.forte.simboot.spring.autoconfigure.SpringBeanContainer.get","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-spring-bean-container/get.html","searchKeys":["get","open operator override fun <T : Any> get(name: String, type: KClass<T>): T","love.forte.simboot.spring.autoconfigure.SpringBeanContainer.get"]},{"name":"open operator override fun <T : Any> get(type: Class<T>): T","description":"love.forte.simboot.spring.autoconfigure.SpringBeanContainer.get","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-spring-bean-container/get.html","searchKeys":["get","open operator override fun <T : Any> get(type: Class<T>): T","love.forte.simboot.spring.autoconfigure.SpringBeanContainer.get"]},{"name":"open operator override fun <T : Any> get(type: KClass<T>): T","description":"love.forte.simboot.spring.autoconfigure.SpringBeanContainer.get","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-spring-bean-container/get.html","searchKeys":["get","open operator override fun <T : Any> get(type: KClass<T>): T","love.forte.simboot.spring.autoconfigure.SpringBeanContainer.get"]},{"name":"open operator override fun contains(name: String): Boolean","description":"love.forte.simboot.spring.autoconfigure.SpringBeanContainer.contains","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-spring-bean-container/contains.html","searchKeys":["contains","open operator override fun contains(name: String): Boolean","love.forte.simboot.spring.autoconfigure.SpringBeanContainer.contains"]},{"name":"open operator override fun get(name: String): Any","description":"love.forte.simboot.spring.autoconfigure.SpringBeanContainer.get","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-spring-bean-container/get.html","searchKeys":["get","open operator override fun get(name: String): Any","love.forte.simboot.spring.autoconfigure.SpringBeanContainer.get"]},{"name":"open operator override fun invoke(configuration: Configuration): BeanContainer","description":"love.forte.simboot.spring.autoconfigure.SpringBeanContainerFactory.invoke","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-spring-bean-container-factory/invoke.html","searchKeys":["invoke","open operator override fun invoke(configuration: Configuration): BeanContainer","love.forte.simboot.spring.autoconfigure.SpringBeanContainerFactory.invoke"]},{"name":"open override fun <A : Annotation> createAnnotationInstance(annotationType: KClass<A>, properties: Map<String, Any>, base: A?): A","description":"love.forte.simboot.spring.autoconfigure.utils.SpringAnnotationTool.createAnnotationInstance","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure.utils/-spring-annotation-tool/create-annotation-instance.html","searchKeys":["createAnnotationInstance","open override fun <A : Annotation> createAnnotationInstance(annotationType: KClass<A>, properties: Map<String, Any>, base: A?): A","love.forte.simboot.spring.autoconfigure.utils.SpringAnnotationTool.createAnnotationInstance"]},{"name":"open override fun <A : Annotation> getAnnotation(fromElement: KAnnotatedElement, annotationType: KClass<A>, excludes: Set<String>): A?","description":"love.forte.simboot.spring.autoconfigure.utils.SpringAnnotationTool.getAnnotation","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure.utils/-spring-annotation-tool/get-annotation.html","searchKeys":["getAnnotation","open override fun <A : Annotation> getAnnotation(fromElement: KAnnotatedElement, annotationType: KClass<A>, excludes: Set<String>): A?","love.forte.simboot.spring.autoconfigure.utils.SpringAnnotationTool.getAnnotation"]},{"name":"open override fun <A : Annotation> getAnnotationValues(annotation: A): Map<String, Any>","description":"love.forte.simboot.spring.autoconfigure.utils.SpringAnnotationTool.getAnnotationValues","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure.utils/-spring-annotation-tool/get-annotation-values.html","searchKeys":["getAnnotationValues","open override fun <A : Annotation> getAnnotationValues(annotation: A): Map<String, Any>","love.forte.simboot.spring.autoconfigure.utils.SpringAnnotationTool.getAnnotationValues"]},{"name":"open override fun <A : Annotation> getAnnotations(element: KAnnotatedElement, annotationType: KClass<A>, excludes: Set<String>): List<A>","description":"love.forte.simboot.spring.autoconfigure.utils.SpringAnnotationTool.getAnnotations","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure.utils/-spring-annotation-tool/get-annotations.html","searchKeys":["getAnnotations","open override fun <A : Annotation> getAnnotations(element: KAnnotatedElement, annotationType: KClass<A>, excludes: Set<String>): List<A>","love.forte.simboot.spring.autoconfigure.utils.SpringAnnotationTool.getAnnotations"]},{"name":"open override fun <T : Any> getAll(type: Class<T>?): List<String>","description":"love.forte.simboot.spring.autoconfigure.SpringBeanContainer.getAll","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-spring-bean-container/get-all.html","searchKeys":["getAll","open override fun <T : Any> getAll(type: Class<T>?): List<String>","love.forte.simboot.spring.autoconfigure.SpringBeanContainer.getAll"]},{"name":"open override fun <T : Any> getAll(type: KClass<T>?): List<String>","description":"love.forte.simboot.spring.autoconfigure.SpringBeanContainer.getAll","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-spring-bean-container/get-all.html","searchKeys":["getAll","open override fun <T : Any> getAll(type: KClass<T>?): List<String>","love.forte.simboot.spring.autoconfigure.SpringBeanContainer.getAll"]},{"name":"open override fun <T : Any> getOrNull(name: String, type: Class<T>): T?","description":"love.forte.simboot.spring.autoconfigure.SpringBeanContainer.getOrNull","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-spring-bean-container/get-or-null.html","searchKeys":["getOrNull","open override fun <T : Any> getOrNull(name: String, type: Class<T>): T?","love.forte.simboot.spring.autoconfigure.SpringBeanContainer.getOrNull"]},{"name":"open override fun <T : Any> getOrNull(name: String, type: KClass<T>): T?","description":"love.forte.simboot.spring.autoconfigure.SpringBeanContainer.getOrNull","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-spring-bean-container/get-or-null.html","searchKeys":["getOrNull","open override fun <T : Any> getOrNull(name: String, type: KClass<T>): T?","love.forte.simboot.spring.autoconfigure.SpringBeanContainer.getOrNull"]},{"name":"open override fun <T : Any> getOrNull(type: Class<T>): T?","description":"love.forte.simboot.spring.autoconfigure.SpringBeanContainer.getOrNull","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-spring-bean-container/get-or-null.html","searchKeys":["getOrNull","open override fun <T : Any> getOrNull(type: Class<T>): T?","love.forte.simboot.spring.autoconfigure.SpringBeanContainer.getOrNull"]},{"name":"open override fun <T : Any> getOrNull(type: KClass<T>): T?","description":"love.forte.simboot.spring.autoconfigure.SpringBeanContainer.getOrNull","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-spring-bean-container/get-or-null.html","searchKeys":["getOrNull","open override fun <T : Any> getOrNull(type: KClass<T>): T?","love.forte.simboot.spring.autoconfigure.SpringBeanContainer.getOrNull"]},{"name":"open override fun clearCache()","description":"love.forte.simboot.spring.autoconfigure.utils.SpringAnnotationTool.clearCache","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure.utils/-spring-annotation-tool/clear-cache.html","searchKeys":["clearCache","open override fun clearCache()","love.forte.simboot.spring.autoconfigure.utils.SpringAnnotationTool.clearCache"]},{"name":"open override fun getAnnotationPropertyTypes(annotationType: KClass<out Annotation>): Map<String, KType>","description":"love.forte.simboot.spring.autoconfigure.utils.SpringAnnotationTool.getAnnotationPropertyTypes","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure.utils/-spring-annotation-tool/get-annotation-property-types.html","searchKeys":["getAnnotationPropertyTypes","open override fun getAnnotationPropertyTypes(annotationType: KClass<out Annotation>): Map<String, KType>","love.forte.simboot.spring.autoconfigure.utils.SpringAnnotationTool.getAnnotationPropertyTypes"]},{"name":"open override fun getOrNull(name: String): Any?","description":"love.forte.simboot.spring.autoconfigure.SpringBeanContainer.getOrNull","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-spring-bean-container/get-or-null.html","searchKeys":["getOrNull","open override fun getOrNull(name: String): Any?","love.forte.simboot.spring.autoconfigure.SpringBeanContainer.getOrNull"]},{"name":"open override fun getPropertyNames(annotation: Annotation): Set<String>","description":"love.forte.simboot.spring.autoconfigure.utils.SpringAnnotationTool.getPropertyNames","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure.utils/-spring-annotation-tool/get-property-names.html","searchKeys":["getPropertyNames","open override fun getPropertyNames(annotation: Annotation): Set<String>","love.forte.simboot.spring.autoconfigure.utils.SpringAnnotationTool.getPropertyNames"]},{"name":"open override fun getType(name: String): KClass<*>","description":"love.forte.simboot.spring.autoconfigure.SpringBeanContainer.getType","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-spring-bean-container/get-type.html","searchKeys":["getType","open override fun getType(name: String): KClass<*>","love.forte.simboot.spring.autoconfigure.SpringBeanContainer.getType"]},{"name":"open override fun getTypeClass(name: String): Class<*>","description":"love.forte.simboot.spring.autoconfigure.SpringBeanContainer.getTypeClass","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-spring-bean-container/get-type-class.html","searchKeys":["getTypeClass","open override fun getTypeClass(name: String): Class<*>","love.forte.simboot.spring.autoconfigure.SpringBeanContainer.getTypeClass"]},{"name":"open override fun getTypeClassOrNull(name: String): Class<*>?","description":"love.forte.simboot.spring.autoconfigure.SpringBeanContainer.getTypeClassOrNull","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-spring-bean-container/get-type-class-or-null.html","searchKeys":["getTypeClassOrNull","open override fun getTypeClassOrNull(name: String): Class<*>?","love.forte.simboot.spring.autoconfigure.SpringBeanContainer.getTypeClassOrNull"]},{"name":"open override fun getTypeOrNull(name: String): KClass<*>?","description":"love.forte.simboot.spring.autoconfigure.SpringBeanContainer.getTypeOrNull","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-spring-bean-container/get-type-or-null.html","searchKeys":["getTypeOrNull","open override fun getTypeOrNull(name: String): KClass<*>?","love.forte.simboot.spring.autoconfigure.SpringBeanContainer.getTypeOrNull"]},{"name":"open override fun postProcessBeanDefinitionRegistry(registry: BeanDefinitionRegistry)","description":"love.forte.simboot.spring.autoconfigure.EventListenerRegistryPostProcessor.postProcessBeanDefinitionRegistry","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-event-listener-registry-post-processor/post-process-bean-definition-registry.html","searchKeys":["postProcessBeanDefinitionRegistry","open override fun postProcessBeanDefinitionRegistry(registry: BeanDefinitionRegistry)","love.forte.simboot.spring.autoconfigure.EventListenerRegistryPostProcessor.postProcessBeanDefinitionRegistry"]},{"name":"open override fun postProcessBeanDefinitionRegistry(registry: BeanDefinitionRegistry)","description":"love.forte.simboot.spring.autoconfigure.SimbotListenerMethodProcessor.postProcessBeanDefinitionRegistry","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-simbot-listener-method-processor/post-process-bean-definition-registry.html","searchKeys":["postProcessBeanDefinitionRegistry","open override fun postProcessBeanDefinitionRegistry(registry: BeanDefinitionRegistry)","love.forte.simboot.spring.autoconfigure.SimbotListenerMethodProcessor.postProcessBeanDefinitionRegistry"]},{"name":"open override fun postProcessBeanFactory(beanFactory: ConfigurableListableBeanFactory)","description":"love.forte.simboot.spring.autoconfigure.EventListenerRegistryPostProcessor.postProcessBeanFactory","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-event-listener-registry-post-processor/post-process-bean-factory.html","searchKeys":["postProcessBeanFactory","open override fun postProcessBeanFactory(beanFactory: ConfigurableListableBeanFactory)","love.forte.simboot.spring.autoconfigure.EventListenerRegistryPostProcessor.postProcessBeanFactory"]},{"name":"open override fun postProcessBeanFactory(beanFactory: ConfigurableListableBeanFactory)","description":"love.forte.simboot.spring.autoconfigure.SimbotListenerMethodProcessor.postProcessBeanFactory","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-simbot-listener-method-processor/post-process-bean-factory.html","searchKeys":["postProcessBeanFactory","open override fun postProcessBeanFactory(beanFactory: ConfigurableListableBeanFactory)","love.forte.simboot.spring.autoconfigure.SimbotListenerMethodProcessor.postProcessBeanFactory"]},{"name":"open override fun registerBeanDefinitions(importingClassMetadata: AnnotationMetadata, registry: BeanDefinitionRegistry, importBeanNameGenerator: BeanNameGenerator)","description":"love.forte.simboot.spring.autoconfigure.AbstractSimbotTopLevelScanProcessor.registerBeanDefinitions","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-abstract-simbot-top-level-scan-processor/register-bean-definitions.html","searchKeys":["registerBeanDefinitions","open override fun registerBeanDefinitions(importingClassMetadata: AnnotationMetadata, registry: BeanDefinitionRegistry, importBeanNameGenerator: BeanNameGenerator)","love.forte.simboot.spring.autoconfigure.AbstractSimbotTopLevelScanProcessor.registerBeanDefinitions"]},{"name":"open override fun selectImports(importingClassMetadata: AnnotationMetadata): Array<String>","description":"love.forte.simboot.spring.autoconfigure.SimbotIncludesSelector.selectImports","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-simbot-includes-selector/select-imports.html","searchKeys":["selectImports","open override fun selectImports(importingClassMetadata: AnnotationMetadata): Array<String>","love.forte.simboot.spring.autoconfigure.SimbotIncludesSelector.selectImports"]},{"name":"open override fun setApplicationContext(applicationContext: ApplicationContext)","description":"love.forte.simboot.spring.autoconfigure.SimbotListenerMethodProcessor.setApplicationContext","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-simbot-listener-method-processor/set-application-context.html","searchKeys":["setApplicationContext","open override fun setApplicationContext(applicationContext: ApplicationContext)","love.forte.simboot.spring.autoconfigure.SimbotListenerMethodProcessor.setApplicationContext"]},{"name":"open override fun setBeanClassLoader(classLoader: ClassLoader)","description":"love.forte.simboot.spring.autoconfigure.SimbotIncludesSelector.setBeanClassLoader","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-simbot-includes-selector/set-bean-class-loader.html","searchKeys":["setBeanClassLoader","open override fun setBeanClassLoader(classLoader: ClassLoader)","love.forte.simboot.spring.autoconfigure.SimbotIncludesSelector.setBeanClassLoader"]},{"name":"open override fun setEnvironment(environment: Environment)","description":"love.forte.simboot.spring.autoconfigure.AbstractSimbotTopLevelScanProcessor.setEnvironment","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-abstract-simbot-top-level-scan-processor/set-environment.html","searchKeys":["setEnvironment","open override fun setEnvironment(environment: Environment)","love.forte.simboot.spring.autoconfigure.AbstractSimbotTopLevelScanProcessor.setEnvironment"]},{"name":"open override fun setResourceLoader(resourceLoader: ResourceLoader)","description":"love.forte.simboot.spring.autoconfigure.AbstractSimbotTopLevelScanProcessor.setResourceLoader","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-abstract-simbot-top-level-scan-processor/set-resource-loader.html","searchKeys":["setResourceLoader","open override fun setResourceLoader(resourceLoader: ResourceLoader)","love.forte.simboot.spring.autoconfigure.AbstractSimbotTopLevelScanProcessor.setResourceLoader"]},{"name":"open override fun setResourceLoader(resourceLoader: ResourceLoader)","description":"love.forte.simboot.spring.autoconfigure.EventListenerRegistryPostProcessor.setResourceLoader","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-event-listener-registry-post-processor/set-resource-loader.html","searchKeys":["setResourceLoader","open override fun setResourceLoader(resourceLoader: ResourceLoader)","love.forte.simboot.spring.autoconfigure.EventListenerRegistryPostProcessor.setResourceLoader"]},{"name":"open override fun setResourceLoader(resourceLoader: ResourceLoader)","description":"love.forte.simboot.spring.autoconfigure.SimbotSpringBootApplicationConfiguration.setResourceLoader","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-simbot-spring-boot-application-configuration/set-resource-loader.html","searchKeys":["setResourceLoader","open override fun setResourceLoader(resourceLoader: ResourceLoader)","love.forte.simboot.spring.autoconfigure.SimbotSpringBootApplicationConfiguration.setResourceLoader"]},{"name":"open override var classLoader: ClassLoader","description":"love.forte.simboot.spring.autoconfigure.application.SpringBootApplicationConfiguration.classLoader","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure.application/-spring-boot-application-configuration/class-loader.html","searchKeys":["classLoader","open override var classLoader: ClassLoader","love.forte.simboot.spring.autoconfigure.application.SpringBootApplicationConfiguration.classLoader"]},{"name":"open override var logger: Logger","description":"love.forte.simboot.spring.autoconfigure.application.SpringBootApplicationConfiguration.logger","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure.application/-spring-boot-application-configuration/logger.html","searchKeys":["logger","open override var logger: Logger","love.forte.simboot.spring.autoconfigure.application.SpringBootApplicationConfiguration.logger"]},{"name":"open override var topLevelBinderScanPackage: List<String>","description":"love.forte.simboot.spring.autoconfigure.application.SpringBootApplicationConfiguration.topLevelBinderScanPackage","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure.application/-spring-boot-application-configuration/top-level-binder-scan-package.html","searchKeys":["topLevelBinderScanPackage","open override var topLevelBinderScanPackage: List<String>","love.forte.simboot.spring.autoconfigure.application.SpringBootApplicationConfiguration.topLevelBinderScanPackage"]},{"name":"open override var topLevelListenerScanPackage: List<String>","description":"love.forte.simboot.spring.autoconfigure.application.SpringBootApplicationConfiguration.topLevelListenerScanPackage","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure.application/-spring-boot-application-configuration/top-level-listener-scan-package.html","searchKeys":["topLevelListenerScanPackage","open override var topLevelListenerScanPackage: List<String>","love.forte.simboot.spring.autoconfigure.application.SpringBootApplicationConfiguration.topLevelListenerScanPackage"]},{"name":"open suspend override fun create(configurator: SpringBootApplicationConfiguration.() -> Unit, builder: suspend SpringBootApplicationBuilder.(SpringBootApplicationConfiguration) -> Unit): SpringBootApplication","description":"love.forte.simboot.spring.autoconfigure.application.SpringBoot.create","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure.application/-spring-boot/create.html","searchKeys":["create","open suspend override fun create(configurator: SpringBootApplicationConfiguration.() -> Unit, builder: suspend SpringBootApplicationBuilder.(SpringBootApplicationConfiguration) -> Unit): SpringBootApplication","love.forte.simboot.spring.autoconfigure.application.SpringBoot.create"]},{"name":"open suspend override fun processApplication(application: Application)","description":"love.forte.simboot.spring.autoconfigure.BlockingApplicationPostProcessor.processApplication","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-blocking-application-post-processor/process-application.html","searchKeys":["processApplication","open suspend override fun processApplication(application: Application)","love.forte.simboot.spring.autoconfigure.BlockingApplicationPostProcessor.processApplication"]},{"name":"open val dispatcher: CoroutineDispatcher","description":"love.forte.simboot.spring.autoconfigure.CoroutineDispatcherContainer.dispatcher","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-coroutine-dispatcher-container/dispatcher.html","searchKeys":["dispatcher","open val dispatcher: CoroutineDispatcher","love.forte.simboot.spring.autoconfigure.CoroutineDispatcherContainer.dispatcher"]},{"name":"protected abstract fun process(context: AbstractSimbotTopLevelScanProcessor.Context)","description":"love.forte.simboot.spring.autoconfigure.AbstractSimbotTopLevelScanProcessor.process","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-abstract-simbot-top-level-scan-processor/process.html","searchKeys":["process","protected abstract fun process(context: AbstractSimbotTopLevelScanProcessor.Context)","love.forte.simboot.spring.autoconfigure.AbstractSimbotTopLevelScanProcessor.process"]},{"name":"protected abstract val annotationPackageAttributeName: String","description":"love.forte.simboot.spring.autoconfigure.AbstractSimbotTopLevelScanProcessor.annotationPackageAttributeName","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-abstract-simbot-top-level-scan-processor/annotation-package-attribute-name.html","searchKeys":["annotationPackageAttributeName","protected abstract val annotationPackageAttributeName: String","love.forte.simboot.spring.autoconfigure.AbstractSimbotTopLevelScanProcessor.annotationPackageAttributeName"]},{"name":"protected abstract val annotationType: KClass<out Annotation>","description":"love.forte.simboot.spring.autoconfigure.AbstractSimbotTopLevelScanProcessor.annotationType","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-abstract-simbot-top-level-scan-processor/annotation-type.html","searchKeys":["annotationType","protected abstract val annotationType: KClass<out Annotation>","love.forte.simboot.spring.autoconfigure.AbstractSimbotTopLevelScanProcessor.annotationType"]},{"name":"protected abstract val methodAnnotationType: KClass<out Annotation>","description":"love.forte.simboot.spring.autoconfigure.AbstractSimbotTopLevelScanProcessor.methodAnnotationType","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-abstract-simbot-top-level-scan-processor/method-annotation-type.html","searchKeys":["methodAnnotationType","protected abstract val methodAnnotationType: KClass<out Annotation>","love.forte.simboot.spring.autoconfigure.AbstractSimbotTopLevelScanProcessor.methodAnnotationType"]},{"name":"protected data class Context(val importingClassMetadata: AnnotationMetadata, val registry: BeanDefinitionRegistry, val importBeanNameGenerator: BeanNameGenerator, val topFunctionSequence: Sequence<AnnotationMetadata>)","description":"love.forte.simboot.spring.autoconfigure.AbstractSimbotTopLevelScanProcessor.Context","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-abstract-simbot-top-level-scan-processor/-context/index.html","searchKeys":["Context","protected data class Context(val importingClassMetadata: AnnotationMetadata, val registry: BeanDefinitionRegistry, val importBeanNameGenerator: BeanNameGenerator, val topFunctionSequence: Sequence<AnnotationMetadata>)","love.forte.simboot.spring.autoconfigure.AbstractSimbotTopLevelScanProcessor.Context"]},{"name":"protected fun AbstractSimbotTopLevelScanProcessor()","description":"love.forte.simboot.spring.autoconfigure.AbstractSimbotTopLevelScanProcessor.AbstractSimbotTopLevelScanProcessor","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-abstract-simbot-top-level-scan-processor/-abstract-simbot-top-level-scan-processor.html","searchKeys":["AbstractSimbotTopLevelScanProcessor","protected fun AbstractSimbotTopLevelScanProcessor()","love.forte.simboot.spring.autoconfigure.AbstractSimbotTopLevelScanProcessor.AbstractSimbotTopLevelScanProcessor"]},{"name":"protected fun AutoConfigureMarker()","description":"love.forte.simboot.spring.autoconfigure.AutoConfigureMarker.AutoConfigureMarker","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-auto-configure-marker/-auto-configure-marker.html","searchKeys":["AutoConfigureMarker","protected fun AutoConfigureMarker()","love.forte.simboot.spring.autoconfigure.AutoConfigureMarker.AutoConfigureMarker"]},{"name":"protected lateinit var lateEnvironment: Environment","description":"love.forte.simboot.spring.autoconfigure.AbstractSimbotTopLevelScanProcessor.lateEnvironment","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-abstract-simbot-top-level-scan-processor/late-environment.html","searchKeys":["lateEnvironment","protected lateinit var lateEnvironment: Environment","love.forte.simboot.spring.autoconfigure.AbstractSimbotTopLevelScanProcessor.lateEnvironment"]},{"name":"protected lateinit var lateResourceLoader: ResourceLoader","description":"love.forte.simboot.spring.autoconfigure.AbstractSimbotTopLevelScanProcessor.lateResourceLoader","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-abstract-simbot-top-level-scan-processor/late-resource-loader.html","searchKeys":["lateResourceLoader","protected lateinit var lateResourceLoader: ResourceLoader","love.forte.simboot.spring.autoconfigure.AbstractSimbotTopLevelScanProcessor.lateResourceLoader"]},{"name":"protected open override fun process(context: AbstractSimbotTopLevelScanProcessor.Context)","description":"love.forte.simboot.spring.autoconfigure.SimbotTopLevelBinderScanProcessor.process","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-simbot-top-level-binder-scan-processor/process.html","searchKeys":["process","protected open override fun process(context: AbstractSimbotTopLevelScanProcessor.Context)","love.forte.simboot.spring.autoconfigure.SimbotTopLevelBinderScanProcessor.process"]},{"name":"protected open override fun process(context: AbstractSimbotTopLevelScanProcessor.Context)","description":"love.forte.simboot.spring.autoconfigure.SimbotTopLevelListenerScanProcessor.process","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-simbot-top-level-listener-scan-processor/process.html","searchKeys":["process","protected open override fun process(context: AbstractSimbotTopLevelScanProcessor.Context)","love.forte.simboot.spring.autoconfigure.SimbotTopLevelListenerScanProcessor.process"]},{"name":"protected open override val annotationPackageAttributeName: String","description":"love.forte.simboot.spring.autoconfigure.SimbotTopLevelBinderScanProcessor.annotationPackageAttributeName","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-simbot-top-level-binder-scan-processor/annotation-package-attribute-name.html","searchKeys":["annotationPackageAttributeName","protected open override val annotationPackageAttributeName: String","love.forte.simboot.spring.autoconfigure.SimbotTopLevelBinderScanProcessor.annotationPackageAttributeName"]},{"name":"protected open override val annotationPackageAttributeName: String","description":"love.forte.simboot.spring.autoconfigure.SimbotTopLevelListenerScanProcessor.annotationPackageAttributeName","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-simbot-top-level-listener-scan-processor/annotation-package-attribute-name.html","searchKeys":["annotationPackageAttributeName","protected open override val annotationPackageAttributeName: String","love.forte.simboot.spring.autoconfigure.SimbotTopLevelListenerScanProcessor.annotationPackageAttributeName"]},{"name":"protected open override val annotationType: KClass<SimbotTopLevelListenerScan>","description":"love.forte.simboot.spring.autoconfigure.SimbotTopLevelListenerScanProcessor.annotationType","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-simbot-top-level-listener-scan-processor/annotation-type.html","searchKeys":["annotationType","protected open override val annotationType: KClass<SimbotTopLevelListenerScan>","love.forte.simboot.spring.autoconfigure.SimbotTopLevelListenerScanProcessor.annotationType"]},{"name":"protected open override val annotationType: KClass<out Annotation>","description":"love.forte.simboot.spring.autoconfigure.SimbotTopLevelBinderScanProcessor.annotationType","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-simbot-top-level-binder-scan-processor/annotation-type.html","searchKeys":["annotationType","protected open override val annotationType: KClass<out Annotation>","love.forte.simboot.spring.autoconfigure.SimbotTopLevelBinderScanProcessor.annotationType"]},{"name":"protected open override val methodAnnotationType: KClass<Listener>","description":"love.forte.simboot.spring.autoconfigure.SimbotTopLevelListenerScanProcessor.methodAnnotationType","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-simbot-top-level-listener-scan-processor/method-annotation-type.html","searchKeys":["methodAnnotationType","protected open override val methodAnnotationType: KClass<Listener>","love.forte.simboot.spring.autoconfigure.SimbotTopLevelListenerScanProcessor.methodAnnotationType"]},{"name":"protected open override val methodAnnotationType: KClass<out Annotation>","description":"love.forte.simboot.spring.autoconfigure.SimbotTopLevelBinderScanProcessor.methodAnnotationType","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-simbot-top-level-binder-scan-processor/method-annotation-type.html","searchKeys":["methodAnnotationType","protected open override val methodAnnotationType: KClass<out Annotation>","love.forte.simboot.spring.autoconfigure.SimbotTopLevelBinderScanProcessor.methodAnnotationType"]},{"name":"sealed class AbstractSimbotTopLevelScanProcessor : ImportBeanDefinitionRegistrar, EnvironmentAware, ResourceLoaderAware","description":"love.forte.simboot.spring.autoconfigure.AbstractSimbotTopLevelScanProcessor","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-abstract-simbot-top-level-scan-processor/index.html","searchKeys":["AbstractSimbotTopLevelScanProcessor","sealed class AbstractSimbotTopLevelScanProcessor : ImportBeanDefinitionRegistrar, EnvironmentAware, ResourceLoaderAware","love.forte.simboot.spring.autoconfigure.AbstractSimbotTopLevelScanProcessor"]},{"name":"sealed class AutoConfigureMarker","description":"love.forte.simboot.spring.autoconfigure.AutoConfigureMarker","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-auto-configure-marker/index.html","searchKeys":["AutoConfigureMarker","sealed class AutoConfigureMarker","love.forte.simboot.spring.autoconfigure.AutoConfigureMarker"]},{"name":"suspend fun create(configuration: SpringBootApplicationConfiguration, builder: suspend SpringBootApplicationBuilder.(SpringBootApplicationConfiguration) -> Unit): SpringBootApplication","description":"love.forte.simboot.spring.autoconfigure.application.SpringBoot.create","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure.application/-spring-boot/create.html","searchKeys":["create","suspend fun create(configuration: SpringBootApplicationConfiguration, builder: suspend SpringBootApplicationBuilder.(SpringBootApplicationConfiguration) -> Unit): SpringBootApplication","love.forte.simboot.spring.autoconfigure.application.SpringBoot.create"]},{"name":"val importBeanNameGenerator: BeanNameGenerator","description":"love.forte.simboot.spring.autoconfigure.AbstractSimbotTopLevelScanProcessor.Context.importBeanNameGenerator","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-abstract-simbot-top-level-scan-processor/-context/import-bean-name-generator.html","searchKeys":["importBeanNameGenerator","val importBeanNameGenerator: BeanNameGenerator","love.forte.simboot.spring.autoconfigure.AbstractSimbotTopLevelScanProcessor.Context.importBeanNameGenerator"]},{"name":"val importingClassMetadata: AnnotationMetadata","description":"love.forte.simboot.spring.autoconfigure.AbstractSimbotTopLevelScanProcessor.Context.importingClassMetadata","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-abstract-simbot-top-level-scan-processor/-context/importing-class-metadata.html","searchKeys":["importingClassMetadata","val importingClassMetadata: AnnotationMetadata","love.forte.simboot.spring.autoconfigure.AbstractSimbotTopLevelScanProcessor.Context.importingClassMetadata"]},{"name":"val registry: BeanDefinitionRegistry","description":"love.forte.simboot.spring.autoconfigure.AbstractSimbotTopLevelScanProcessor.Context.registry","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-abstract-simbot-top-level-scan-processor/-context/registry.html","searchKeys":["registry","val registry: BeanDefinitionRegistry","love.forte.simboot.spring.autoconfigure.AbstractSimbotTopLevelScanProcessor.Context.registry"]},{"name":"val topFunctionSequence: Sequence<AnnotationMetadata>","description":"love.forte.simboot.spring.autoconfigure.AbstractSimbotTopLevelScanProcessor.Context.topFunctionSequence","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-abstract-simbot-top-level-scan-processor/-context/top-function-sequence.html","searchKeys":["topFunctionSequence","val topFunctionSequence: Sequence<AnnotationMetadata>","love.forte.simboot.spring.autoconfigure.AbstractSimbotTopLevelScanProcessor.Context.topFunctionSequence"]},{"name":"val value: Array<String>","description":"love.forte.simboot.spring.autoconfigure.SimbotTopLevelBinderScan.value","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-simbot-top-level-binder-scan/value.html","searchKeys":["value","val value: Array<String>","love.forte.simboot.spring.autoconfigure.SimbotTopLevelBinderScan.value"]},{"name":"val value: Array<String>","description":"love.forte.simboot.spring.autoconfigure.SimbotTopLevelListenerScan.value","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure/-simbot-top-level-listener-scan/value.html","searchKeys":["value","val value: Array<String>","love.forte.simboot.spring.autoconfigure.SimbotTopLevelListenerScan.value"]},{"name":"var botConfigurationResources: List<String>","description":"love.forte.simboot.spring.autoconfigure.application.SpringBootApplicationConfigurationProperties.botConfigurationResources","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure.application/-spring-boot-application-configuration-properties/bot-configuration-resources.html","searchKeys":["botConfigurationResources","var botConfigurationResources: List<String>","love.forte.simboot.spring.autoconfigure.application.SpringBootApplicationConfigurationProperties.botConfigurationResources"]},{"name":"var isAutoStartBots: Boolean = true","description":"love.forte.simboot.spring.autoconfigure.application.SpringBootApplicationConfigurationProperties.isAutoStartBots","location":"simboot-core-spring-boot-starter/love.forte.simboot.spring.autoconfigure.application/-spring-boot-application-configuration-properties/is-auto-start-bots.html","searchKeys":["isAutoStartBots","var isAutoStartBots: Boolean = true","love.forte.simboot.spring.autoconfigure.application.SpringBootApplicationConfigurationProperties.isAutoStartBots"]},{"name":"DEBUG","description":"love.forte.simbot.logger.LogLevel.DEBUG","location":"simbot-logger/love.forte.simbot.logger/-log-level/-d-e-b-u-g/index.html","searchKeys":["DEBUG","DEBUG","love.forte.simbot.logger.LogLevel.DEBUG"]},{"name":"ERROR","description":"love.forte.simbot.logger.LogLevel.ERROR","location":"simbot-logger/love.forte.simbot.logger/-log-level/-e-r-r-o-r/index.html","searchKeys":["ERROR","ERROR","love.forte.simbot.logger.LogLevel.ERROR"]},{"name":"INFO","description":"love.forte.simbot.logger.LogLevel.INFO","location":"simbot-logger/love.forte.simbot.logger/-log-level/-i-n-f-o/index.html","searchKeys":["INFO","INFO","love.forte.simbot.logger.LogLevel.INFO"]},{"name":"TRACE","description":"love.forte.simbot.logger.LogLevel.TRACE","location":"simbot-logger/love.forte.simbot.logger/-log-level/-t-r-a-c-e/index.html","searchKeys":["TRACE","TRACE","love.forte.simbot.logger.LogLevel.TRACE"]},{"name":"WARN","description":"love.forte.simbot.logger.LogLevel.WARN","location":"simbot-logger/love.forte.simbot.logger/-log-level/-w-a-r-n/index.html","searchKeys":["WARN","WARN","love.forte.simbot.logger.LogLevel.WARN"]},{"name":"expect abstract fun debug(log: String)","description":"love.forte.simbot.logger.Logger.debug","location":"simbot-logger/love.forte.simbot.logger/-logger/debug.html","searchKeys":["debug","expect abstract fun debug(log: String)","love.forte.simbot.logger.Logger.debug"]},{"name":"expect abstract fun debug(log: String, vararg arg: Any?)","description":"love.forte.simbot.logger.Logger.debug","location":"simbot-logger/love.forte.simbot.logger/-logger/debug.html","searchKeys":["debug","expect abstract fun debug(log: String, vararg arg: Any?)","love.forte.simbot.logger.Logger.debug"]},{"name":"expect abstract fun error(log: String)","description":"love.forte.simbot.logger.Logger.error","location":"simbot-logger/love.forte.simbot.logger/-logger/error.html","searchKeys":["error","expect abstract fun error(log: String)","love.forte.simbot.logger.Logger.error"]},{"name":"expect abstract fun error(log: String, vararg arg: Any?)","description":"love.forte.simbot.logger.Logger.error","location":"simbot-logger/love.forte.simbot.logger/-logger/error.html","searchKeys":["error","expect abstract fun error(log: String, vararg arg: Any?)","love.forte.simbot.logger.Logger.error"]},{"name":"expect abstract fun getName(): String","description":"love.forte.simbot.logger.Logger.getName","location":"simbot-logger/love.forte.simbot.logger/-logger/get-name.html","searchKeys":["getName","expect abstract fun getName(): String","love.forte.simbot.logger.Logger.getName"]},{"name":"expect abstract fun info(log: String)","description":"love.forte.simbot.logger.Logger.info","location":"simbot-logger/love.forte.simbot.logger/-logger/info.html","searchKeys":["info","expect abstract fun info(log: String)","love.forte.simbot.logger.Logger.info"]},{"name":"expect abstract fun info(log: String, vararg arg: Any?)","description":"love.forte.simbot.logger.Logger.info","location":"simbot-logger/love.forte.simbot.logger/-logger/info.html","searchKeys":["info","expect abstract fun info(log: String, vararg arg: Any?)","love.forte.simbot.logger.Logger.info"]},{"name":"expect abstract fun isDebugEnabled(): Boolean","description":"love.forte.simbot.logger.Logger.isDebugEnabled","location":"simbot-logger/love.forte.simbot.logger/-logger/is-debug-enabled.html","searchKeys":["isDebugEnabled","expect abstract fun isDebugEnabled(): Boolean","love.forte.simbot.logger.Logger.isDebugEnabled"]},{"name":"expect abstract fun isErrorEnabled(): Boolean","description":"love.forte.simbot.logger.Logger.isErrorEnabled","location":"simbot-logger/love.forte.simbot.logger/-logger/is-error-enabled.html","searchKeys":["isErrorEnabled","expect abstract fun isErrorEnabled(): Boolean","love.forte.simbot.logger.Logger.isErrorEnabled"]},{"name":"expect abstract fun isInfoEnabled(): Boolean","description":"love.forte.simbot.logger.Logger.isInfoEnabled","location":"simbot-logger/love.forte.simbot.logger/-logger/is-info-enabled.html","searchKeys":["isInfoEnabled","expect abstract fun isInfoEnabled(): Boolean","love.forte.simbot.logger.Logger.isInfoEnabled"]},{"name":"expect abstract fun isTraceEnabled(): Boolean","description":"love.forte.simbot.logger.Logger.isTraceEnabled","location":"simbot-logger/love.forte.simbot.logger/-logger/is-trace-enabled.html","searchKeys":["isTraceEnabled","expect abstract fun isTraceEnabled(): Boolean","love.forte.simbot.logger.Logger.isTraceEnabled"]},{"name":"expect abstract fun isWarnEnabled(): Boolean","description":"love.forte.simbot.logger.Logger.isWarnEnabled","location":"simbot-logger/love.forte.simbot.logger/-logger/is-warn-enabled.html","searchKeys":["isWarnEnabled","expect abstract fun isWarnEnabled(): Boolean","love.forte.simbot.logger.Logger.isWarnEnabled"]},{"name":"expect abstract fun trace(log: String)","description":"love.forte.simbot.logger.Logger.trace","location":"simbot-logger/love.forte.simbot.logger/-logger/trace.html","searchKeys":["trace","expect abstract fun trace(log: String)","love.forte.simbot.logger.Logger.trace"]},{"name":"expect abstract fun trace(log: String, vararg arg: Any?)","description":"love.forte.simbot.logger.Logger.trace","location":"simbot-logger/love.forte.simbot.logger/-logger/trace.html","searchKeys":["trace","expect abstract fun trace(log: String, vararg arg: Any?)","love.forte.simbot.logger.Logger.trace"]},{"name":"expect abstract fun warn(log: String)","description":"love.forte.simbot.logger.Logger.warn","location":"simbot-logger/love.forte.simbot.logger/-logger/warn.html","searchKeys":["warn","expect abstract fun warn(log: String)","love.forte.simbot.logger.Logger.warn"]},{"name":"expect abstract fun warn(log: String, vararg arg: Any?)","description":"love.forte.simbot.logger.Logger.warn","location":"simbot-logger/love.forte.simbot.logger/-logger/warn.html","searchKeys":["warn","expect abstract fun warn(log: String, vararg arg: Any?)","love.forte.simbot.logger.Logger.warn"]},{"name":"expect enum LogLevel : Enum<LogLevel> ","description":"love.forte.simbot.logger.LogLevel","location":"simbot-logger/love.forte.simbot.logger/-log-level/index.html","searchKeys":["LogLevel","expect enum LogLevel : Enum<LogLevel> ","love.forte.simbot.logger.LogLevel"]},{"name":"expect fun getLogger(name: String): Logger","description":"love.forte.simbot.logger.LoggerFactory.getLogger","location":"simbot-logger/love.forte.simbot.logger/-logger-factory/get-logger.html","searchKeys":["getLogger","expect fun getLogger(name: String): Logger","love.forte.simbot.logger.LoggerFactory.getLogger"]},{"name":"expect inline fun <T> LoggerFactory.logger(): Logger","description":"love.forte.simbot.logger.logger","location":"simbot-logger/love.forte.simbot.logger/logger.html","searchKeys":["logger","expect inline fun <T> LoggerFactory.logger(): Logger","love.forte.simbot.logger.logger"]},{"name":"expect interface Logger","description":"love.forte.simbot.logger.Logger","location":"simbot-logger/love.forte.simbot.logger/-logger/index.html","searchKeys":["Logger","expect interface Logger","love.forte.simbot.logger.Logger"]},{"name":"expect object LoggerFactory","description":"love.forte.simbot.logger.LoggerFactory","location":"simbot-logger/love.forte.simbot.logger/-logger-factory/index.html","searchKeys":["LoggerFactory","expect object LoggerFactory","love.forte.simbot.logger.LoggerFactory"]},{"name":"fun getLogger(name: String, level: LogLevel): Logger","description":"love.forte.simbot.logger.LoggerFactory.getLogger","location":"simbot-logger/love.forte.simbot.logger/-logger-factory/[js]get-logger.html","searchKeys":["getLogger","fun getLogger(name: String, level: LogLevel): Logger","love.forte.simbot.logger.LoggerFactory.getLogger"]},{"name":"fun getLogger(name: String, level: LogLevel): Logger","description":"love.forte.simbot.logger.LoggerFactory.getLogger","location":"simbot-logger/love.forte.simbot.logger/-logger-factory/[native]get-logger.html","searchKeys":["getLogger","fun getLogger(name: String, level: LogLevel): Logger","love.forte.simbot.logger.LoggerFactory.getLogger"]},{"name":"fun getLogger(type: Class<*>): Logger","description":"love.forte.simbot.logger.LoggerFactory.getLogger","location":"simbot-logger/love.forte.simbot.logger/-logger-factory/get-logger.html","searchKeys":["getLogger","fun getLogger(type: Class<*>): Logger","love.forte.simbot.logger.LoggerFactory.getLogger"]},{"name":"fun getLogger(type: KClass<*>): Logger","description":"love.forte.simbot.logger.LoggerFactory.getLogger","location":"simbot-logger/love.forte.simbot.logger/-logger-factory/get-logger.html","searchKeys":["getLogger","fun getLogger(type: KClass<*>): Logger","love.forte.simbot.logger.LoggerFactory.getLogger"]},{"name":"fun valueOf(value: String): LogLevel","description":"love.forte.simbot.logger.LogLevel.valueOf","location":"simbot-logger/love.forte.simbot.logger/-log-level/[common]value-of.html","searchKeys":["valueOf","fun valueOf(value: String): LogLevel","love.forte.simbot.logger.LogLevel.valueOf"]},{"name":"fun valueOf(value: String): LogLevel","description":"love.forte.simbot.logger.LogLevel.valueOf","location":"simbot-logger/love.forte.simbot.logger/-log-level/[js]value-of.html","searchKeys":["valueOf","fun valueOf(value: String): LogLevel","love.forte.simbot.logger.LogLevel.valueOf"]},{"name":"fun valueOf(value: String): LogLevel","description":"love.forte.simbot.logger.LogLevel.valueOf","location":"simbot-logger/love.forte.simbot.logger/-log-level/[native]value-of.html","searchKeys":["valueOf","fun valueOf(value: String): LogLevel","love.forte.simbot.logger.LogLevel.valueOf"]},{"name":"fun values(): Array<LogLevel>","description":"love.forte.simbot.logger.LogLevel.values","location":"simbot-logger/love.forte.simbot.logger/-log-level/[common]values.html","searchKeys":["values","fun values(): Array<LogLevel>","love.forte.simbot.logger.LogLevel.values"]},{"name":"fun values(): Array<LogLevel>","description":"love.forte.simbot.logger.LogLevel.values","location":"simbot-logger/love.forte.simbot.logger/-log-level/[js]values.html","searchKeys":["values","fun values(): Array<LogLevel>","love.forte.simbot.logger.LogLevel.values"]},{"name":"fun values(): Array<LogLevel>","description":"love.forte.simbot.logger.LogLevel.values","location":"simbot-logger/love.forte.simbot.logger/-log-level/[native]values.html","searchKeys":["values","fun values(): Array<LogLevel>","love.forte.simbot.logger.LogLevel.values"]},{"name":"val Logger.isDebugEnabled: Boolean","description":"love.forte.simbot.logger.isDebugEnabled","location":"simbot-logger/love.forte.simbot.logger/is-debug-enabled.html","searchKeys":["isDebugEnabled","val Logger.isDebugEnabled: Boolean","love.forte.simbot.logger.isDebugEnabled"]},{"name":"val Logger.isErrorEnabled: Boolean","description":"love.forte.simbot.logger.isErrorEnabled","location":"simbot-logger/love.forte.simbot.logger/is-error-enabled.html","searchKeys":["isErrorEnabled","val Logger.isErrorEnabled: Boolean","love.forte.simbot.logger.isErrorEnabled"]},{"name":"val Logger.isInfoEnabled: Boolean","description":"love.forte.simbot.logger.isInfoEnabled","location":"simbot-logger/love.forte.simbot.logger/is-info-enabled.html","searchKeys":["isInfoEnabled","val Logger.isInfoEnabled: Boolean","love.forte.simbot.logger.isInfoEnabled"]},{"name":"val Logger.isTraceEnabled: Boolean","description":"love.forte.simbot.logger.isTraceEnabled","location":"simbot-logger/love.forte.simbot.logger/is-trace-enabled.html","searchKeys":["isTraceEnabled","val Logger.isTraceEnabled: Boolean","love.forte.simbot.logger.isTraceEnabled"]},{"name":"val Logger.isWarnEnabled: Boolean","description":"love.forte.simbot.logger.isWarnEnabled","location":"simbot-logger/love.forte.simbot.logger/is-warn-enabled.html","searchKeys":["isWarnEnabled","val Logger.isWarnEnabled: Boolean","love.forte.simbot.logger.isWarnEnabled"]},{"name":"val Logger.name: String","description":"love.forte.simbot.logger.name","location":"simbot-logger/love.forte.simbot.logger/name.html","searchKeys":["name","val Logger.name: String","love.forte.simbot.logger.name"]},{"name":"var LoggerFactory.defaultLoggerLevel: LogLevel","description":"love.forte.simbot.logger.defaultLoggerLevel","location":"simbot-logger/love.forte.simbot.logger/default-logger-level.html","searchKeys":["defaultLoggerLevel","var LoggerFactory.defaultLoggerLevel: LogLevel","love.forte.simbot.logger.defaultLoggerLevel"]},{"name":"var defaultLevel: LogLevel","description":"love.forte.simbot.logger.LoggerFactory.defaultLevel","location":"simbot-logger/love.forte.simbot.logger/-logger-factory/default-level.html","searchKeys":["defaultLevel","var defaultLevel: LogLevel","love.forte.simbot.logger.LoggerFactory.defaultLevel"]},{"name":"abstract suspend fun requestBy(requestor: RQ): R","description":"love.forte.simbot.util.api.requestor.API.requestBy","location":"simbot-util-api-requestor-core/love.forte.simbot.util.api.requestor/-a-p-i/request-by.html","searchKeys":["requestBy","abstract suspend fun requestBy(requestor: RQ): R","love.forte.simbot.util.api.requestor.API.requestBy"]},{"name":"inline suspend fun <RQ : Requestor, R> RQ.request(api: API<RQ, R>): R","description":"love.forte.simbot.util.api.requestor.request","location":"simbot-util-api-requestor-core/love.forte.simbot.util.api.requestor/request.html","searchKeys":["request","inline suspend fun <RQ : Requestor, R> RQ.request(api: API<RQ, R>): R","love.forte.simbot.util.api.requestor.request"]},{"name":"interface API<in RQ : Requestor, out R>","description":"love.forte.simbot.util.api.requestor.API","location":"simbot-util-api-requestor-core/love.forte.simbot.util.api.requestor/-a-p-i/index.html","searchKeys":["API","interface API<in RQ : Requestor, out R>","love.forte.simbot.util.api.requestor.API"]},{"name":"interface Requestor","description":"love.forte.simbot.util.api.requestor.Requestor","location":"simbot-util-api-requestor-core/love.forte.simbot.util.api.requestor/-requestor/index.html","searchKeys":["Requestor","interface Requestor","love.forte.simbot.util.api.requestor.Requestor"]},{"name":"abstract fun <A : Annotation> createAnnotationInstance(annotationType: KClass<A>, properties: Map<String, Any>, base: A?): A","description":"love.forte.annotationtool.core.KAnnotationTool.createAnnotationInstance","location":"simbot-util-annotation-tool/love.forte.annotationtool.core/-k-annotation-tool/create-annotation-instance.html","searchKeys":["createAnnotationInstance","abstract fun <A : Annotation> createAnnotationInstance(annotationType: KClass<A>, properties: Map<String, Any>, base: A?): A","love.forte.annotationtool.core.KAnnotationTool.createAnnotationInstance"]},{"name":"abstract fun <A : Annotation> getAnnotation(fromElement: KAnnotatedElement, annotationType: KClass<A>, excludes: Set<String>): A?","description":"love.forte.annotationtool.core.KAnnotationTool.getAnnotation","location":"simbot-util-annotation-tool/love.forte.annotationtool.core/-k-annotation-tool/get-annotation.html","searchKeys":["getAnnotation","abstract fun <A : Annotation> getAnnotation(fromElement: KAnnotatedElement, annotationType: KClass<A>, excludes: Set<String>): A?","love.forte.annotationtool.core.KAnnotationTool.getAnnotation"]},{"name":"abstract fun <A : Annotation> getAnnotationMetadata(annotationType: KClass<A>): KAnnotationMetadata<A>","description":"love.forte.annotationtool.core.KAnnotationMetadataFactory.getAnnotationMetadata","location":"simbot-util-annotation-tool/love.forte.annotationtool.core/-k-annotation-metadata-factory/get-annotation-metadata.html","searchKeys":["getAnnotationMetadata","abstract fun <A : Annotation> getAnnotationMetadata(annotationType: KClass<A>): KAnnotationMetadata<A>","love.forte.annotationtool.core.KAnnotationMetadataFactory.getAnnotationMetadata"]},{"name":"abstract fun <A : Annotation> getAnnotationValues(annotation: A): Map<String, Any>","description":"love.forte.annotationtool.core.KAnnotationTool.getAnnotationValues","location":"simbot-util-annotation-tool/love.forte.annotationtool.core/-k-annotation-tool/get-annotation-values.html","searchKeys":["getAnnotationValues","abstract fun <A : Annotation> getAnnotationValues(annotation: A): Map<String, Any>","love.forte.annotationtool.core.KAnnotationTool.getAnnotationValues"]},{"name":"abstract fun <A : Annotation> getAnnotations(element: KAnnotatedElement, annotationType: KClass<A>, excludes: Set<String>): List<A>","description":"love.forte.annotationtool.core.KAnnotationTool.getAnnotations","location":"simbot-util-annotation-tool/love.forte.annotationtool.core/-k-annotation-tool/get-annotations.html","searchKeys":["getAnnotations","abstract fun <A : Annotation> getAnnotations(element: KAnnotatedElement, annotationType: KClass<A>, excludes: Set<String>): List<A>","love.forte.annotationtool.core.KAnnotationTool.getAnnotations"]},{"name":"abstract fun <FROM : Any, TO : Any> convert(from: KClass<FROM>? = null, instance: FROM, to: KClass<TO>): TO","description":"love.forte.annotationtool.core.Converters.convert","location":"simbot-util-annotation-tool/love.forte.annotationtool.core/-converters/convert.html","searchKeys":["convert","abstract fun <FROM : Any, TO : Any> convert(from: KClass<FROM>? = null, instance: FROM, to: KClass<TO>): TO","love.forte.annotationtool.core.Converters.convert"]},{"name":"abstract fun clearCache()","description":"love.forte.annotationtool.core.KAnnotationTool.clearCache","location":"simbot-util-annotation-tool/love.forte.annotationtool.core/-k-annotation-tool/clear-cache.html","searchKeys":["clearCache","abstract fun clearCache()","love.forte.annotationtool.core.KAnnotationTool.clearCache"]},{"name":"abstract fun convert(instance: FROM): TO?","description":"love.forte.annotationtool.core.Converter.convert","location":"simbot-util-annotation-tool/love.forte.annotationtool.core/-converter/convert.html","searchKeys":["convert","abstract fun convert(instance: FROM): TO?","love.forte.annotationtool.core.Converter.convert"]},{"name":"abstract fun getAnnotationPropertyTypes(annotationType: KClass<out Annotation>): Map<String, KType>","description":"love.forte.annotationtool.core.KAnnotationTool.getAnnotationPropertyTypes","location":"simbot-util-annotation-tool/love.forte.annotationtool.core/-k-annotation-tool/get-annotation-property-types.html","searchKeys":["getAnnotationPropertyTypes","abstract fun getAnnotationPropertyTypes(annotationType: KClass<out Annotation>): Map<String, KType>","love.forte.annotationtool.core.KAnnotationTool.getAnnotationPropertyTypes"]},{"name":"abstract fun getAnnotationValue(property: String, annotation: A): Any?","description":"love.forte.annotationtool.core.KAnnotationMetadata.getAnnotationValue","location":"simbot-util-annotation-tool/love.forte.annotationtool.core/-k-annotation-metadata/get-annotation-value.html","searchKeys":["getAnnotationValue","abstract fun getAnnotationValue(property: String, annotation: A): Any?","love.forte.annotationtool.core.KAnnotationMetadata.getAnnotationValue"]},{"name":"abstract fun getProperties(annotation: A): Map<String, Any>","description":"love.forte.annotationtool.core.KAnnotationMetadata.getProperties","location":"simbot-util-annotation-tool/love.forte.annotationtool.core/-k-annotation-metadata/get-properties.html","searchKeys":["getProperties","abstract fun getProperties(annotation: A): Map<String, Any>","love.forte.annotationtool.core.KAnnotationMetadata.getProperties"]},{"name":"abstract fun getPropertyDefaultValue(property: String): Any?","description":"love.forte.annotationtool.core.KAnnotationMetadata.getPropertyDefaultValue","location":"simbot-util-annotation-tool/love.forte.annotationtool.core/-k-annotation-metadata/get-property-default-value.html","searchKeys":["getPropertyDefaultValue","abstract fun getPropertyDefaultValue(property: String): Any?","love.forte.annotationtool.core.KAnnotationMetadata.getPropertyDefaultValue"]},{"name":"abstract fun getPropertyNames(annotation: Annotation): Set<String>","description":"love.forte.annotationtool.core.KAnnotationTool.getPropertyNames","location":"simbot-util-annotation-tool/love.forte.annotationtool.core/-k-annotation-tool/get-property-names.html","searchKeys":["getPropertyNames","abstract fun getPropertyNames(annotation: Annotation): Set<String>","love.forte.annotationtool.core.KAnnotationTool.getPropertyNames"]},{"name":"abstract fun getPropertyNamingMap(targetType: KClass<out Annotation>, targetPropertyName: String): String?","description":"love.forte.annotationtool.core.KAnnotationMetadata.getPropertyNamingMap","location":"simbot-util-annotation-tool/love.forte.annotationtool.core/-k-annotation-metadata/get-property-naming-map.html","searchKeys":["getPropertyNamingMap","abstract fun getPropertyNamingMap(targetType: KClass<out Annotation>, targetPropertyName: String): String?","love.forte.annotationtool.core.KAnnotationMetadata.getPropertyNamingMap"]},{"name":"abstract fun getPropertyNamingMaps(targetType: KClass<out Annotation>): Map<String, String>","description":"love.forte.annotationtool.core.KAnnotationMetadata.getPropertyNamingMaps","location":"simbot-util-annotation-tool/love.forte.annotationtool.core/-k-annotation-metadata/get-property-naming-maps.html","searchKeys":["getPropertyNamingMaps","abstract fun getPropertyNamingMaps(targetType: KClass<out Annotation>): Map<String, String>","love.forte.annotationtool.core.KAnnotationMetadata.getPropertyNamingMaps"]},{"name":"abstract fun getPropertyType(property: String): KType?","description":"love.forte.annotationtool.core.KAnnotationMetadata.getPropertyType","location":"simbot-util-annotation-tool/love.forte.annotationtool.core/-k-annotation-metadata/get-property-type.html","searchKeys":["getPropertyType","abstract fun getPropertyType(property: String): KType?","love.forte.annotationtool.core.KAnnotationMetadata.getPropertyType"]},{"name":"abstract operator fun contains(name: String): Boolean","description":"love.forte.annotationtool.core.KAnnotationMetadata.contains","location":"simbot-util-annotation-tool/love.forte.annotationtool.core/-k-annotation-metadata/contains.html","searchKeys":["contains","abstract operator fun contains(name: String): Boolean","love.forte.annotationtool.core.KAnnotationMetadata.contains"]},{"name":"abstract operator fun contains(type: AnnotationTarget): Boolean","description":"love.forte.annotationtool.core.KAnnotationMetadata.contains","location":"simbot-util-annotation-tool/love.forte.annotationtool.core/-k-annotation-metadata/contains.html","searchKeys":["contains","abstract operator fun contains(type: AnnotationTarget): Boolean","love.forte.annotationtool.core.KAnnotationMetadata.contains"]},{"name":"abstract val annotationType: KClass<A>","description":"love.forte.annotationtool.core.KAnnotationMetadata.annotationType","location":"simbot-util-annotation-tool/love.forte.annotationtool.core/-k-annotation-metadata/annotation-type.html","searchKeys":["annotationType","abstract val annotationType: KClass<A>","love.forte.annotationtool.core.KAnnotationMetadata.annotationType"]},{"name":"abstract val deprecatedLevel: DeprecationLevel?","description":"love.forte.annotationtool.core.KAnnotationMetadata.deprecatedLevel","location":"simbot-util-annotation-tool/love.forte.annotationtool.core/-k-annotation-metadata/deprecated-level.html","searchKeys":["deprecatedLevel","abstract val deprecatedLevel: DeprecationLevel?","love.forte.annotationtool.core.KAnnotationMetadata.deprecatedLevel"]},{"name":"abstract val deprecatedMessage: String?","description":"love.forte.annotationtool.core.KAnnotationMetadata.deprecatedMessage","location":"simbot-util-annotation-tool/love.forte.annotationtool.core/-k-annotation-metadata/deprecated-message.html","searchKeys":["deprecatedMessage","abstract val deprecatedMessage: String?","love.forte.annotationtool.core.KAnnotationMetadata.deprecatedMessage"]},{"name":"abstract val deprecatedReplaceWithExpression: String?","description":"love.forte.annotationtool.core.KAnnotationMetadata.deprecatedReplaceWithExpression","location":"simbot-util-annotation-tool/love.forte.annotationtool.core/-k-annotation-metadata/deprecated-replace-with-expression.html","searchKeys":["deprecatedReplaceWithExpression","abstract val deprecatedReplaceWithExpression: String?","love.forte.annotationtool.core.KAnnotationMetadata.deprecatedReplaceWithExpression"]},{"name":"abstract val deprecatedReplaceWithImports: Set<String>?","description":"love.forte.annotationtool.core.KAnnotationMetadata.deprecatedReplaceWithImports","location":"simbot-util-annotation-tool/love.forte.annotationtool.core/-k-annotation-metadata/deprecated-replace-with-imports.html","searchKeys":["deprecatedReplaceWithImports","abstract val deprecatedReplaceWithImports: Set<String>?","love.forte.annotationtool.core.KAnnotationMetadata.deprecatedReplaceWithImports"]},{"name":"abstract val isDeprecated: Boolean","description":"love.forte.annotationtool.core.KAnnotationMetadata.isDeprecated","location":"simbot-util-annotation-tool/love.forte.annotationtool.core/-k-annotation-metadata/is-deprecated.html","searchKeys":["isDeprecated","abstract val isDeprecated: Boolean","love.forte.annotationtool.core.KAnnotationMetadata.isDeprecated"]},{"name":"abstract val isMustBeDocumented: Boolean","description":"love.forte.annotationtool.core.KAnnotationMetadata.isMustBeDocumented","location":"simbot-util-annotation-tool/love.forte.annotationtool.core/-k-annotation-metadata/is-must-be-documented.html","searchKeys":["isMustBeDocumented","abstract val isMustBeDocumented: Boolean","love.forte.annotationtool.core.KAnnotationMetadata.isMustBeDocumented"]},{"name":"abstract val isRepeatable: Boolean","description":"love.forte.annotationtool.core.KAnnotationMetadata.isRepeatable","location":"simbot-util-annotation-tool/love.forte.annotationtool.core/-k-annotation-metadata/is-repeatable.html","searchKeys":["isRepeatable","abstract val isRepeatable: Boolean","love.forte.annotationtool.core.KAnnotationMetadata.isRepeatable"]},{"name":"abstract val propertyDefaultValues: Map<String, Any>","description":"love.forte.annotationtool.core.KAnnotationMetadata.propertyDefaultValues","location":"simbot-util-annotation-tool/love.forte.annotationtool.core/-k-annotation-metadata/property-default-values.html","searchKeys":["propertyDefaultValues","abstract val propertyDefaultValues: Map<String, Any>","love.forte.annotationtool.core.KAnnotationMetadata.propertyDefaultValues"]},{"name":"abstract val propertyNames: Set<String>","description":"love.forte.annotationtool.core.KAnnotationMetadata.propertyNames","location":"simbot-util-annotation-tool/love.forte.annotationtool.core/-k-annotation-metadata/property-names.html","searchKeys":["propertyNames","abstract val propertyNames: Set<String>","love.forte.annotationtool.core.KAnnotationMetadata.propertyNames"]},{"name":"abstract val propertyTypes: Map<String, KType>","description":"love.forte.annotationtool.core.KAnnotationMetadata.propertyTypes","location":"simbot-util-annotation-tool/love.forte.annotationtool.core/-k-annotation-metadata/property-types.html","searchKeys":["propertyTypes","abstract val propertyTypes: Map<String, KType>","love.forte.annotationtool.core.KAnnotationMetadata.propertyTypes"]},{"name":"abstract val retention: AnnotationRetention","description":"love.forte.annotationtool.core.KAnnotationMetadata.retention","location":"simbot-util-annotation-tool/love.forte.annotationtool.core/-k-annotation-metadata/retention.html","searchKeys":["retention","abstract val retention: AnnotationRetention","love.forte.annotationtool.core.KAnnotationMetadata.retention"]},{"name":"abstract val targets: Set<AnnotationTarget>","description":"love.forte.annotationtool.core.KAnnotationMetadata.targets","location":"simbot-util-annotation-tool/love.forte.annotationtool.core/-k-annotation-metadata/targets.html","searchKeys":["targets","abstract val targets: Set<AnnotationTarget>","love.forte.annotationtool.core.KAnnotationMetadata.targets"]},{"name":"annotation class AnnotationMapper(val value: KClass<out Annotation>)","description":"love.forte.annotationtool.AnnotationMapper","location":"simbot-util-annotation-tool/love.forte.annotationtool/-annotation-mapper/index.html","searchKeys":["AnnotationMapper","annotation class AnnotationMapper(val value: KClass<out Annotation>)","love.forte.annotationtool.AnnotationMapper"]},{"name":"annotation class Properties(val value: AnnotationMapper.Property)","description":"love.forte.annotationtool.AnnotationMapper.Properties","location":"simbot-util-annotation-tool/love.forte.annotationtool/-annotation-mapper/-properties/index.html","searchKeys":["Properties","annotation class Properties(val value: AnnotationMapper.Property)","love.forte.annotationtool.AnnotationMapper.Properties"]},{"name":"annotation class Property(val target: KClass<out Annotation> = Annotation::class, val value: String)","description":"love.forte.annotationtool.AnnotationMapper.Property","location":"simbot-util-annotation-tool/love.forte.annotationtool/-annotation-mapper/-property/index.html","searchKeys":["Property","annotation class Property(val target: KClass<out Annotation> = Annotation::class, val value: String)","love.forte.annotationtool.AnnotationMapper.Property"]},{"name":"annotation class a","description":"love.forte.annotationtool.core.a","location":"simbot-util-annotation-tool/love.forte.annotationtool.core/a/index.html","searchKeys":["a","annotation class a","love.forte.annotationtool.core.a"]},{"name":"class ConvertException : TypeCastException","description":"love.forte.annotationtool.core.ConvertException","location":"simbot-util-annotation-tool/love.forte.annotationtool.core/-convert-exception/index.html","searchKeys":["ConvertException","class ConvertException : TypeCastException","love.forte.annotationtool.core.ConvertException"]},{"name":"fun <A : Annotation> KClass<A>.metadata(): KAnnotationMetadata<A>","description":"love.forte.annotationtool.core.metadata","location":"simbot-util-annotation-tool/love.forte.annotationtool.core/metadata.html","searchKeys":["metadata","fun <A : Annotation> KClass<A>.metadata(): KAnnotationMetadata<A>","love.forte.annotationtool.core.metadata"]},{"name":"fun <A : Annotation> resolve(annotationType: KClass<A>): KAnnotationMetadata<A>","description":"love.forte.annotationtool.core.KAnnotationMetadata.Companion.resolve","location":"simbot-util-annotation-tool/love.forte.annotationtool.core/-k-annotation-metadata/-companion/resolve.html","searchKeys":["resolve","fun <A : Annotation> resolve(annotationType: KClass<A>): KAnnotationMetadata<A>","love.forte.annotationtool.core.KAnnotationMetadata.Companion.resolve"]},{"name":"fun ConvertException()","description":"love.forte.annotationtool.core.ConvertException.ConvertException","location":"simbot-util-annotation-tool/love.forte.annotationtool.core/-convert-exception/-convert-exception.html","searchKeys":["ConvertException","fun ConvertException()","love.forte.annotationtool.core.ConvertException.ConvertException"]},{"name":"fun ConvertException(from: KClass<*>, to: KClass<*>, instance: Any)","description":"love.forte.annotationtool.core.ConvertException.ConvertException","location":"simbot-util-annotation-tool/love.forte.annotationtool.core/-convert-exception/-convert-exception.html","searchKeys":["ConvertException","fun ConvertException(from: KClass<*>, to: KClass<*>, instance: Any)","love.forte.annotationtool.core.ConvertException.ConvertException"]},{"name":"fun ConvertException(s: String?)","description":"love.forte.annotationtool.core.ConvertException.ConvertException","location":"simbot-util-annotation-tool/love.forte.annotationtool.core/-convert-exception/-convert-exception.html","searchKeys":["ConvertException","fun ConvertException(s: String?)","love.forte.annotationtool.core.ConvertException.ConvertException"]},{"name":"fun KAnnotationTool(cacheMap: MutableMap<KAnnotatedElement, MutableMap<KClass<out Annotation>, Annotation>> = WeakHashMap(), nullCacheMap: MutableMap<KAnnotatedElement, MutableSet<KClass<out Annotation>>> = mutableMapOf(), converters: Converters = nonConverters()): KAnnotationTool","description":"love.forte.annotationtool.core.KAnnotationTool","location":"simbot-util-annotation-tool/love.forte.annotationtool.core/-k-annotation-tool.html","searchKeys":["KAnnotationTool","fun KAnnotationTool(cacheMap: MutableMap<KAnnotatedElement, MutableMap<KClass<out Annotation>, Annotation>> = WeakHashMap(), nullCacheMap: MutableMap<KAnnotatedElement, MutableSet<KClass<out Annotation>>> = mutableMapOf(), converters: Converters = nonConverters()): KAnnotationTool","love.forte.annotationtool.core.KAnnotationTool"]},{"name":"fun nonConverters(): Converters","description":"love.forte.annotationtool.core.nonConverters","location":"simbot-util-annotation-tool/love.forte.annotationtool.core/non-converters.html","searchKeys":["nonConverters","fun nonConverters(): Converters","love.forte.annotationtool.core.nonConverters"]},{"name":"inline fun <A : Annotation> KAnnotationTool.createAnnotation(properties: Map<String, Any> = emptyMap(), base: A? = null): A","description":"love.forte.annotationtool.core.createAnnotation","location":"simbot-util-annotation-tool/love.forte.annotationtool.core/create-annotation.html","searchKeys":["createAnnotation","inline fun <A : Annotation> KAnnotationTool.createAnnotation(properties: Map<String, Any> = emptyMap(), base: A? = null): A","love.forte.annotationtool.core.createAnnotation"]},{"name":"inline fun <A : Annotation> KAnnotationTool.getAnnotation(element: KAnnotatedElement, exclude: Set<String> = emptySet()): A?","description":"love.forte.annotationtool.core.getAnnotation","location":"simbot-util-annotation-tool/love.forte.annotationtool.core/get-annotation.html","searchKeys":["getAnnotation","inline fun <A : Annotation> KAnnotationTool.getAnnotation(element: KAnnotatedElement, exclude: Set<String> = emptySet()): A?","love.forte.annotationtool.core.getAnnotation"]},{"name":"inline fun <A : Annotation> KAnnotationTool.getAnnotations(element: KAnnotatedElement, exclude: Set<String> = emptySet()): List<A>","description":"love.forte.annotationtool.core.getAnnotations","location":"simbot-util-annotation-tool/love.forte.annotationtool.core/get-annotations.html","searchKeys":["getAnnotations","inline fun <A : Annotation> KAnnotationTool.getAnnotations(element: KAnnotatedElement, exclude: Set<String> = emptySet()): List<A>","love.forte.annotationtool.core.getAnnotations"]},{"name":"inline fun <A : Annotation> metadata(): KAnnotationMetadata<A>","description":"love.forte.annotationtool.core.metadata","location":"simbot-util-annotation-tool/love.forte.annotationtool.core/metadata.html","searchKeys":["metadata","inline fun <A : Annotation> metadata(): KAnnotationMetadata<A>","love.forte.annotationtool.core.metadata"]},{"name":"interface Converter<FROM : Any, TO : Any>","description":"love.forte.annotationtool.core.Converter","location":"simbot-util-annotation-tool/love.forte.annotationtool.core/-converter/index.html","searchKeys":["Converter","interface Converter<FROM : Any, TO : Any>","love.forte.annotationtool.core.Converter"]},{"name":"interface Converters","description":"love.forte.annotationtool.core.Converters","location":"simbot-util-annotation-tool/love.forte.annotationtool.core/-converters/index.html","searchKeys":["Converters","interface Converters","love.forte.annotationtool.core.Converters"]},{"name":"interface KAnnotationMetadata<A : Annotation>","description":"love.forte.annotationtool.core.KAnnotationMetadata","location":"simbot-util-annotation-tool/love.forte.annotationtool.core/-k-annotation-metadata/index.html","searchKeys":["KAnnotationMetadata","interface KAnnotationMetadata<A : Annotation>","love.forte.annotationtool.core.KAnnotationMetadata"]},{"name":"interface KAnnotationMetadataFactory","description":"love.forte.annotationtool.core.KAnnotationMetadataFactory","location":"simbot-util-annotation-tool/love.forte.annotationtool.core/-k-annotation-metadata-factory/index.html","searchKeys":["KAnnotationMetadataFactory","interface KAnnotationMetadataFactory","love.forte.annotationtool.core.KAnnotationMetadataFactory"]},{"name":"interface KAnnotationTool","description":"love.forte.annotationtool.core.KAnnotationTool","location":"simbot-util-annotation-tool/love.forte.annotationtool.core/-k-annotation-tool/index.html","searchKeys":["KAnnotationTool","interface KAnnotationTool","love.forte.annotationtool.core.KAnnotationTool"]},{"name":"object Companion","description":"love.forte.annotationtool.core.KAnnotationMetadata.Companion","location":"simbot-util-annotation-tool/love.forte.annotationtool.core/-k-annotation-metadata/-companion/index.html","searchKeys":["Companion","object Companion","love.forte.annotationtool.core.KAnnotationMetadata.Companion"]},{"name":"open fun <A : Annotation> createAnnotationInstance(annotationType: KClass<A>): A","description":"love.forte.annotationtool.core.KAnnotationTool.createAnnotationInstance","location":"simbot-util-annotation-tool/love.forte.annotationtool.core/-k-annotation-tool/create-annotation-instance.html","searchKeys":["createAnnotationInstance","open fun <A : Annotation> createAnnotationInstance(annotationType: KClass<A>): A","love.forte.annotationtool.core.KAnnotationTool.createAnnotationInstance"]},{"name":"open fun <A : Annotation> createAnnotationInstance(annotationType: KClass<A>, properties: Map<String, Any>): A","description":"love.forte.annotationtool.core.KAnnotationTool.createAnnotationInstance","location":"simbot-util-annotation-tool/love.forte.annotationtool.core/-k-annotation-tool/create-annotation-instance.html","searchKeys":["createAnnotationInstance","open fun <A : Annotation> createAnnotationInstance(annotationType: KClass<A>, properties: Map<String, Any>): A","love.forte.annotationtool.core.KAnnotationTool.createAnnotationInstance"]},{"name":"open fun <A : Annotation> getAnnotation(fromElement: KAnnotatedElement, annotationType: KClass<A>): A?","description":"love.forte.annotationtool.core.KAnnotationTool.getAnnotation","location":"simbot-util-annotation-tool/love.forte.annotationtool.core/-k-annotation-tool/get-annotation.html","searchKeys":["getAnnotation","open fun <A : Annotation> getAnnotation(fromElement: KAnnotatedElement, annotationType: KClass<A>): A?","love.forte.annotationtool.core.KAnnotationTool.getAnnotation"]},{"name":"open fun <A : Annotation> getAnnotations(element: KAnnotatedElement, annotationType: KClass<A>): List<A>","description":"love.forte.annotationtool.core.KAnnotationTool.getAnnotations","location":"simbot-util-annotation-tool/love.forte.annotationtool.core/-k-annotation-tool/get-annotations.html","searchKeys":["getAnnotations","open fun <A : Annotation> getAnnotations(element: KAnnotatedElement, annotationType: KClass<A>): List<A>","love.forte.annotationtool.core.KAnnotationTool.getAnnotations"]},{"name":"open fun containsProperty(name: String): Boolean","description":"love.forte.annotationtool.core.KAnnotationMetadata.containsProperty","location":"simbot-util-annotation-tool/love.forte.annotationtool.core/-k-annotation-metadata/contains-property.html","searchKeys":["containsProperty","open fun containsProperty(name: String): Boolean","love.forte.annotationtool.core.KAnnotationMetadata.containsProperty"]},{"name":"open fun containsTarget(type: AnnotationTarget): Boolean","description":"love.forte.annotationtool.core.KAnnotationMetadata.containsTarget","location":"simbot-util-annotation-tool/love.forte.annotationtool.core/-k-annotation-metadata/contains-target.html","searchKeys":["containsTarget","open fun containsTarget(type: AnnotationTarget): Boolean","love.forte.annotationtool.core.KAnnotationMetadata.containsTarget"]},{"name":"open fun getProperties(annotation: Annotation): Set<String>","description":"love.forte.annotationtool.core.KAnnotationTool.getProperties","location":"simbot-util-annotation-tool/love.forte.annotationtool.core/-k-annotation-tool/get-properties.html","searchKeys":["getProperties","open fun getProperties(annotation: Annotation): Set<String>","love.forte.annotationtool.core.KAnnotationTool.getProperties"]},{"name":"val target: KClass<out Annotation>","description":"love.forte.annotationtool.AnnotationMapper.Property.target","location":"simbot-util-annotation-tool/love.forte.annotationtool/-annotation-mapper/-property/target.html","searchKeys":["target","val target: KClass<out Annotation>","love.forte.annotationtool.AnnotationMapper.Property.target"]},{"name":"val value: Array<out AnnotationMapper.Property>","description":"love.forte.annotationtool.AnnotationMapper.Properties.value","location":"simbot-util-annotation-tool/love.forte.annotationtool/-annotation-mapper/-properties/value.html","searchKeys":["value","val value: Array<out AnnotationMapper.Property>","love.forte.annotationtool.AnnotationMapper.Properties.value"]},{"name":"val value: Array<out KClass<out Annotation>>","description":"love.forte.annotationtool.AnnotationMapper.value","location":"simbot-util-annotation-tool/love.forte.annotationtool/-annotation-mapper/value.html","searchKeys":["value","val value: Array<out KClass<out Annotation>>","love.forte.annotationtool.AnnotationMapper.value"]},{"name":"val value: String","description":"love.forte.annotationtool.AnnotationMapper.Property.value","location":"simbot-util-annotation-tool/love.forte.annotationtool/-annotation-mapper/-property/value.html","searchKeys":["value","val value: String","love.forte.annotationtool.AnnotationMapper.Property.value"]},{"name":"abstract override val bot: HttpServerBot","description":"love.forte.simbot.component.http.server.api.event.HttpRequestEvent.bot","location":"simbot-component-http-server-api/love.forte.simbot.component.http.server.api.event/-http-request-event/bot.html","searchKeys":["bot","abstract override val bot: HttpServerBot","love.forte.simbot.component.http.server.api.event.HttpRequestEvent.bot"]},{"name":"abstract override val id: ID","description":"love.forte.simbot.component.http.server.api.bot.HttpServerBot.id","location":"simbot-component-http-server-api/love.forte.simbot.component.http.server.api.bot/-http-server-bot/id.html","searchKeys":["id","abstract override val id: ID","love.forte.simbot.component.http.server.api.bot.HttpServerBot.id"]},{"name":"abstract val host: String","description":"love.forte.simbot.component.http.server.api.bot.HttpServerBot.host","location":"simbot-component-http-server-api/love.forte.simbot.component.http.server.api.bot/-http-server-bot/host.html","searchKeys":["host","abstract val host: String","love.forte.simbot.component.http.server.api.bot.HttpServerBot.host"]},{"name":"abstract val port: Int","description":"love.forte.simbot.component.http.server.api.bot.HttpServerBot.port","location":"simbot-component-http-server-api/love.forte.simbot.component.http.server.api.bot/-http-server-bot/port.html","searchKeys":["port","abstract val port: Int","love.forte.simbot.component.http.server.api.bot.HttpServerBot.port"]},{"name":"abstract val request: HttpRequestEvent.Request","description":"love.forte.simbot.component.http.server.api.event.HttpRequestEvent.request","location":"simbot-component-http-server-api/love.forte.simbot.component.http.server.api.event/-http-request-event/request.html","searchKeys":["request","abstract val request: HttpRequestEvent.Request","love.forte.simbot.component.http.server.api.event.HttpRequestEvent.request"]},{"name":"abstract val response: HttpRequestEvent.Response","description":"love.forte.simbot.component.http.server.api.event.HttpRequestEvent.response","location":"simbot-component-http-server-api/love.forte.simbot.component.http.server.api.event/-http-request-event/response.html","searchKeys":["response","abstract val response: HttpRequestEvent.Response","love.forte.simbot.component.http.server.api.event.HttpRequestEvent.response"]},{"name":"interface HttpRequestEvent : Event","description":"love.forte.simbot.component.http.server.api.event.HttpRequestEvent","location":"simbot-component-http-server-api/love.forte.simbot.component.http.server.api.event/-http-request-event/index.html","searchKeys":["HttpRequestEvent","interface HttpRequestEvent : Event","love.forte.simbot.component.http.server.api.event.HttpRequestEvent"]},{"name":"interface HttpServerBot : Bot","description":"love.forte.simbot.component.http.server.api.bot.HttpServerBot","location":"simbot-component-http-server-api/love.forte.simbot.component.http.server.api.bot/-http-server-bot/index.html","searchKeys":["HttpServerBot","interface HttpServerBot : Bot","love.forte.simbot.component.http.server.api.bot.HttpServerBot"]},{"name":"interface Request","description":"love.forte.simbot.component.http.server.api.event.HttpRequestEvent.Request","location":"simbot-component-http-server-api/love.forte.simbot.component.http.server.api.event/-http-request-event/-request/index.html","searchKeys":["Request","interface Request","love.forte.simbot.component.http.server.api.event.HttpRequestEvent.Request"]},{"name":"interface Response","description":"love.forte.simbot.component.http.server.api.event.HttpRequestEvent.Response","location":"simbot-component-http-server-api/love.forte.simbot.component.http.server.api.event/-http-request-event/-response/index.html","searchKeys":["Response","interface Response","love.forte.simbot.component.http.server.api.event.HttpRequestEvent.Response"]},{"name":"object HttpServerComponent","description":"love.forte.simbot.component.http.server.api.HttpServerComponent","location":"simbot-component-http-server-api/love.forte.simbot.component.http.server.api/-http-server-component/index.html","searchKeys":["HttpServerComponent","object HttpServerComponent","love.forte.simbot.component.http.server.api.HttpServerComponent"]},{"name":"CONTINUE","description":"love.forte.simbot.core.event.ListenerInvokeType.CONTINUE","location":"simbot-core/love.forte.simbot.core.event/-listener-invoke-type/-c-o-n-t-i-n-u-e/index.html","searchKeys":["CONTINUE","CONTINUE","love.forte.simbot.core.event.ListenerInvokeType.CONTINUE"]},{"name":"TRUNCATED","description":"love.forte.simbot.core.event.ListenerInvokeType.TRUNCATED","location":"simbot-core/love.forte.simbot.core.event/-listener-invoke-type/-t-r-u-n-c-a-t-e-d/index.html","searchKeys":["TRUNCATED","TRUNCATED","love.forte.simbot.core.event.ListenerInvokeType.TRUNCATED"]},{"name":"abstract class BaseApplication : Application","description":"love.forte.simbot.core.application.BaseApplication","location":"simbot-core/love.forte.simbot.core.application/-base-application/index.html","searchKeys":["BaseApplication","abstract class BaseApplication : Application","love.forte.simbot.core.application.BaseApplication"]},{"name":"abstract class BaseApplicationBuilder<A : Application> : ApplicationBuilder<A> ","description":"love.forte.simbot.core.application.BaseApplicationBuilder","location":"simbot-core/love.forte.simbot.core.application/-base-application-builder/index.html","searchKeys":["BaseApplicationBuilder","abstract class BaseApplicationBuilder<A : Application> : ApplicationBuilder<A> ","love.forte.simbot.core.application.BaseApplicationBuilder"]},{"name":"abstract class BaseStandardApplicationBuilder<A : Application> : BaseApplicationBuilder<A> , StandardApplicationBuilder<A> ","description":"love.forte.simbot.core.application.BaseStandardApplicationBuilder","location":"simbot-core/love.forte.simbot.core.application/-base-standard-application-builder/index.html","searchKeys":["BaseStandardApplicationBuilder","abstract class BaseStandardApplicationBuilder<A : Application> : BaseApplicationBuilder<A> , StandardApplicationBuilder<A> ","love.forte.simbot.core.application.BaseStandardApplicationBuilder"]},{"name":"abstract class EventInterceptEntrance<C : EventInterceptor.Context<R>, R, EC : EventProcessingContext>","description":"love.forte.simbot.core.event.EventInterceptEntrance","location":"simbot-core/love.forte.simbot.core.event/-event-intercept-entrance/index.html","searchKeys":["EventInterceptEntrance","abstract class EventInterceptEntrance<C : EventInterceptor.Context<R>, R, EC : EventProcessingContext>","love.forte.simbot.core.event.EventInterceptEntrance"]},{"name":"abstract class IteratorInterceptorContext<C : EventInterceptor.Context<R>, I : EventInterceptor<C, R>, R, EC : EventProcessingContext>(interceptorsIterator: Iterator<I>, processing: suspend (EC) -> R)","description":"love.forte.simbot.core.event.EventInterceptEntrance.IteratorInterceptorContext","location":"simbot-core/love.forte.simbot.core.event/-event-intercept-entrance/-iterator-interceptor-context/index.html","searchKeys":["IteratorInterceptorContext","abstract class IteratorInterceptorContext<C : EventInterceptor.Context<R>, I : EventInterceptor<C, R>, R, EC : EventProcessingContext>(interceptorsIterator: Iterator<I>, processing: suspend (EC) -> R)","love.forte.simbot.core.event.EventInterceptEntrance.IteratorInterceptorContext"]},{"name":"abstract fun eventProcessor(configurator: SimpleListenerManagerConfiguration.(environment: Application.Environment) -> Unit)","description":"love.forte.simbot.core.application.EventProcessableApplicationBuilder.eventProcessor","location":"simbot-core/love.forte.simbot.core.application/-event-processable-application-builder/event-processor.html","searchKeys":["eventProcessor","abstract fun eventProcessor(configurator: SimpleListenerManagerConfiguration.(environment: Application.Environment) -> Unit)","love.forte.simbot.core.application.EventProcessableApplicationBuilder.eventProcessor"]},{"name":"abstract fun isProcessable(eventKey: Event.Key<*>): Boolean","description":"love.forte.simbot.core.event.EventProcessingContextResolver.isProcessable","location":"simbot-core/love.forte.simbot.core.event/-event-processing-context-resolver/is-processable.html","searchKeys":["isProcessable","abstract fun isProcessable(eventKey: Event.Key<*>): Boolean","love.forte.simbot.core.event.EventProcessingContextResolver.isProcessable"]},{"name":"abstract fun listener(listener: EventListener): EventListenersGenerator","description":"love.forte.simbot.core.event.EventListenersGenerator.listener","location":"simbot-core/love.forte.simbot.core.event/-event-listeners-generator/listener.html","searchKeys":["listener","abstract fun listener(listener: EventListener): EventListenersGenerator","love.forte.simbot.core.event.EventListenersGenerator.listener"]},{"name":"abstract operator fun EventListener.unaryPlus()","description":"love.forte.simbot.core.event.EventListenersGenerator.unaryPlus","location":"simbot-core/love.forte.simbot.core.event/-event-listeners-generator/unary-plus.html","searchKeys":["unaryPlus","abstract operator fun EventListener.unaryPlus()","love.forte.simbot.core.event.EventListenersGenerator.unaryPlus"]},{"name":"abstract operator fun SimpleListenerRegistrationDescriptionBuilder<E>.invoke()","description":"love.forte.simbot.core.event.SimpleListenerBuilderDslFunction.invoke","location":"simbot-core/love.forte.simbot.core.event/-simple-listener-builder-dsl-function/invoke.html","searchKeys":["invoke","abstract operator fun SimpleListenerRegistrationDescriptionBuilder<E>.invoke()","love.forte.simbot.core.event.SimpleListenerBuilderDslFunction.invoke"]},{"name":"abstract operator fun contains(eventType: Event.Key<*>): Boolean","description":"love.forte.simbot.core.event.SimpleEventListenerManager.contains","location":"simbot-core/love.forte.simbot.core.event/-simple-event-listener-manager/contains.html","searchKeys":["contains","abstract operator fun contains(eventType: Event.Key<*>): Boolean","love.forte.simbot.core.event.SimpleEventListenerManager.contains"]},{"name":"abstract override fun eventProcessor(configurator: SimpleListenerManagerConfiguration.(environment: Application.Environment) -> Unit)","description":"love.forte.simbot.core.application.StandardApplicationBuilder.eventProcessor","location":"simbot-core/love.forte.simbot.core.application/-standard-application-builder/event-processor.html","searchKeys":["eventProcessor","abstract override fun eventProcessor(configurator: SimpleListenerManagerConfiguration.(environment: Application.Environment) -> Unit)","love.forte.simbot.core.application.StandardApplicationBuilder.eventProcessor"]},{"name":"abstract override val coroutineContext: CoroutineContext","description":"love.forte.simbot.core.application.BaseApplication.coroutineContext","location":"simbot-core/love.forte.simbot.core.application/-base-application/coroutine-context.html","searchKeys":["coroutineContext","abstract override val coroutineContext: CoroutineContext","love.forte.simbot.core.application.BaseApplication.coroutineContext"]},{"name":"abstract override val eventListenerManager: SimpleEventListenerManager","description":"love.forte.simbot.core.application.SimpleApplication.eventListenerManager","location":"simbot-core/love.forte.simbot.core.application/-simple-application/event-listener-manager.html","searchKeys":["eventListenerManager","abstract override val eventListenerManager: SimpleEventListenerManager","love.forte.simbot.core.application.SimpleApplication.eventListenerManager"]},{"name":"abstract override val providers: List<EventProvider>","description":"love.forte.simbot.core.application.SimpleApplication.providers","location":"simbot-core/love.forte.simbot.core.application/-simple-application/providers.html","searchKeys":["providers","abstract override val providers: List<EventProvider>","love.forte.simbot.core.application.SimpleApplication.providers"]},{"name":"abstract suspend fun appendResultIntoContext(context: C, result: EventResult): ListenerInvokeType","description":"love.forte.simbot.core.event.EventProcessingContextResolver.appendResultIntoContext","location":"simbot-core/love.forte.simbot.core.event/-event-processing-context-resolver/append-result-into-context.html","searchKeys":["appendResultIntoContext","abstract suspend fun appendResultIntoContext(context: C, result: EventResult): ListenerInvokeType","love.forte.simbot.core.event.EventProcessingContextResolver.appendResultIntoContext"]},{"name":"abstract suspend fun doIntercept(context: EC, processing: suspend (EC) -> R): R","description":"love.forte.simbot.core.event.EventInterceptEntrance.doIntercept","location":"simbot-core/love.forte.simbot.core.event/-event-intercept-entrance/do-intercept.html","searchKeys":["doIntercept","abstract suspend fun doIntercept(context: EC, processing: suspend (EC) -> R): R","love.forte.simbot.core.event.EventInterceptEntrance.doIntercept"]},{"name":"abstract suspend fun resolveEventToContext(event: Event, listenerSize: Int): C?","description":"love.forte.simbot.core.event.EventProcessingContextResolver.resolveEventToContext","location":"simbot-core/love.forte.simbot.core.event/-event-processing-context-resolver/resolve-event-to-context.html","searchKeys":["resolveEventToContext","abstract suspend fun resolveEventToContext(event: Event, listenerSize: Int): C?","love.forte.simbot.core.event.EventProcessingContextResolver.resolveEventToContext"]},{"name":"abstract val continuousSessionContext: ContinuousSessionContext","description":"love.forte.simbot.core.event.EventProcessingContextResolver.continuousSessionContext","location":"simbot-core/love.forte.simbot.core.event/-event-processing-context-resolver/continuous-session-context.html","searchKeys":["continuousSessionContext","abstract val continuousSessionContext: ContinuousSessionContext","love.forte.simbot.core.event.EventProcessingContextResolver.continuousSessionContext"]},{"name":"abstract val continuousSessionContext: ContinuousSessionContext","description":"love.forte.simbot.core.event.SimpleEventListenerManager.continuousSessionContext","location":"simbot-core/love.forte.simbot.core.event/-simple-event-listener-manager/continuous-session-context.html","searchKeys":["continuousSessionContext","abstract val continuousSessionContext: ContinuousSessionContext","love.forte.simbot.core.event.SimpleEventListenerManager.continuousSessionContext"]},{"name":"abstract val eventContext: EC","description":"love.forte.simbot.core.event.EventInterceptEntrance.IteratorInterceptorContext.eventContext","location":"simbot-core/love.forte.simbot.core.event/-event-intercept-entrance/-iterator-interceptor-context/event-context.html","searchKeys":["eventContext","abstract val eventContext: EC","love.forte.simbot.core.event.EventInterceptEntrance.IteratorInterceptorContext.eventContext"]},{"name":"abstract val globalContext: ScopeContext","description":"love.forte.simbot.core.event.EventProcessingContextResolver.globalContext","location":"simbot-core/love.forte.simbot.core.event/-event-processing-context-resolver/global-context.html","searchKeys":["globalContext","abstract val globalContext: ScopeContext","love.forte.simbot.core.event.EventProcessingContextResolver.globalContext"]},{"name":"abstract val globalScopeContext: ScopeContext","description":"love.forte.simbot.core.event.SimpleEventListenerManager.globalScopeContext","location":"simbot-core/love.forte.simbot.core.event/-simple-event-listener-manager/global-scope-context.html","searchKeys":["globalScopeContext","abstract val globalScopeContext: ScopeContext","love.forte.simbot.core.event.SimpleEventListenerManager.globalScopeContext"]},{"name":"abstract val interceptFunction: suspend (C) -> R","description":"love.forte.simbot.core.event.SimpleFunctionalEventInterceptor.interceptFunction","location":"simbot-core/love.forte.simbot.core.event/-simple-functional-event-interceptor/intercept-function.html","searchKeys":["interceptFunction","abstract val interceptFunction: suspend (C) -> R","love.forte.simbot.core.event.SimpleFunctionalEventInterceptor.interceptFunction"]},{"name":"class EventInterceptorsGenerator constructor","description":"love.forte.simbot.core.event.EventInterceptorsGenerator","location":"simbot-core/love.forte.simbot.core.event/-event-interceptors-generator/index.html","searchKeys":["EventInterceptorsGenerator","class EventInterceptorsGenerator constructor","love.forte.simbot.core.event.EventInterceptorsGenerator"]},{"name":"class EventListenerRegistrationDescriptionsGenerator constructor : EventListenersGenerator","description":"love.forte.simbot.core.event.EventListenerRegistrationDescriptionsGenerator","location":"simbot-core/love.forte.simbot.core.event/-event-listener-registration-descriptions-generator/index.html","searchKeys":["EventListenerRegistrationDescriptionsGenerator","class EventListenerRegistrationDescriptionsGenerator constructor : EventListenersGenerator","love.forte.simbot.core.event.EventListenerRegistrationDescriptionsGenerator"]},{"name":"class ListView<T>(delegate: List<T>) : List<T> ","description":"love.forte.simbot.utils.ListView","location":"simbot-core/love.forte.simbot.utils/-list-view/index.html","searchKeys":["ListView","class ListView<T>(delegate: List<T>) : List<T> ","love.forte.simbot.utils.ListView"]},{"name":"class SimpleFunctionalEventListenerInterceptor(val point: EventListenerInterceptor.Point, val priority: Int = PriorityConstant.NORMAL, val interceptFunction: suspend (EventListenerInterceptor.Context) -> EventResult) : SimpleFunctionalEventInterceptor<EventListenerInterceptor.Context, EventResult> , EventListenerInterceptor","description":"love.forte.simbot.core.event.SimpleFunctionalEventListenerInterceptor","location":"simbot-core/love.forte.simbot.core.event/-simple-functional-event-listener-interceptor/index.html","searchKeys":["SimpleFunctionalEventListenerInterceptor","class SimpleFunctionalEventListenerInterceptor(val point: EventListenerInterceptor.Point, val priority: Int = PriorityConstant.NORMAL, val interceptFunction: suspend (EventListenerInterceptor.Context) -> EventResult) : SimpleFunctionalEventInterceptor<EventListenerInterceptor.Context, EventResult> , EventListenerInterceptor","love.forte.simbot.core.event.SimpleFunctionalEventListenerInterceptor"]},{"name":"class SimpleFunctionalEventProcessingInterceptor(val priority: Int = PriorityConstant.NORMAL, val interceptFunction: suspend (EventProcessingInterceptor.Context) -> EventProcessingResult) : SimpleFunctionalEventInterceptor<EventProcessingInterceptor.Context, EventProcessingResult> , EventProcessingInterceptor","description":"love.forte.simbot.core.event.SimpleFunctionalEventProcessingInterceptor","location":"simbot-core/love.forte.simbot.core.event/-simple-functional-event-processing-interceptor/index.html","searchKeys":["SimpleFunctionalEventProcessingInterceptor","class SimpleFunctionalEventProcessingInterceptor(val priority: Int = PriorityConstant.NORMAL, val interceptFunction: suspend (EventProcessingInterceptor.Context) -> EventProcessingResult) : SimpleFunctionalEventInterceptor<EventProcessingInterceptor.Context, EventProcessingResult> , EventProcessingInterceptor","love.forte.simbot.core.event.SimpleFunctionalEventProcessingInterceptor"]},{"name":"class SimpleListener(targets: Set<Event.Key<*>>, attributes: AttributeContainer? = null, matcher: suspend EventListenerProcessingContext.() -> Boolean = { true }, function: suspend EventListenerProcessingContext.() -> EventResult) : EventListener","description":"love.forte.simbot.core.event.SimpleListener","location":"simbot-core/love.forte.simbot.core.event/-simple-listener/index.html","searchKeys":["SimpleListener","class SimpleListener(targets: Set<Event.Key<*>>, attributes: AttributeContainer? = null, matcher: suspend EventListenerProcessingContext.() -> Boolean = { true }, function: suspend EventListenerProcessingContext.() -> EventResult) : EventListener","love.forte.simbot.core.event.SimpleListener"]},{"name":"class SimpleListenerRegistrationDescriptionBuilder<E : Event>(target: Event.Key<E>) : SimpleListenerBuilder<E> , EventListenerRegistrationDescriptionBuilder","description":"love.forte.simbot.core.event.SimpleListenerRegistrationDescriptionBuilder","location":"simbot-core/love.forte.simbot.core.event/-simple-listener-registration-description-builder/index.html","searchKeys":["SimpleListenerRegistrationDescriptionBuilder","class SimpleListenerRegistrationDescriptionBuilder<E : Event>(target: Event.Key<E>) : SimpleListenerBuilder<E> , EventListenerRegistrationDescriptionBuilder","love.forte.simbot.core.event.SimpleListenerRegistrationDescriptionBuilder"]},{"name":"const val APPLICATION_NAME: String","description":"love.forte.simbot.core.application.ApplicationAttributes.APPLICATION_NAME","location":"simbot-core/love.forte.simbot.core.application/-application-attributes/-a-p-p-l-i-c-a-t-i-o-n_-n-a-m-e.html","searchKeys":["APPLICATION_NAME","const val APPLICATION_NAME: String","love.forte.simbot.core.application.ApplicationAttributes.APPLICATION_NAME"]},{"name":"const val CONTINUOUS_SESSION_SCOPE_NAME: String","description":"love.forte.simbot.core.scope.SimpleScope.CONTINUOUS_SESSION_SCOPE_NAME","location":"simbot-core/love.forte.simbot.core.scope/-simple-scope/-c-o-n-t-i-n-u-o-u-s_-s-e-s-s-i-o-n_-s-c-o-p-e_-n-a-m-e.html","searchKeys":["CONTINUOUS_SESSION_SCOPE_NAME","const val CONTINUOUS_SESSION_SCOPE_NAME: String","love.forte.simbot.core.scope.SimpleScope.CONTINUOUS_SESSION_SCOPE_NAME"]},{"name":"const val GLOBAL_SCOPE_NAME: String","description":"love.forte.simbot.core.scope.SimpleScope.GLOBAL_SCOPE_NAME","location":"simbot-core/love.forte.simbot.core.scope/-simple-scope/-g-l-o-b-a-l_-s-c-o-p-e_-n-a-m-e.html","searchKeys":["GLOBAL_SCOPE_NAME","const val GLOBAL_SCOPE_NAME: String","love.forte.simbot.core.scope.SimpleScope.GLOBAL_SCOPE_NAME"]},{"name":"data class SimpleListenerManagerConfig(coroutineContext: CoroutineContext, exceptionHandler: (Throwable) -> EventResult? = null, processingInterceptors: IDMaps<EventProcessingInterceptor>, listenerInterceptors: IDMaps<EventListenerInterceptor>, listeners: List<EventListenerRegistrationDescription>, messageSerializersModule: SerializersModule)","description":"love.forte.simbot.core.event.SimpleListenerManagerConfig","location":"simbot-core/love.forte.simbot.core.event/-simple-listener-manager-config/index.html","searchKeys":["SimpleListenerManagerConfig","data class SimpleListenerManagerConfig(coroutineContext: CoroutineContext, exceptionHandler: (Throwable) -> EventResult? = null, processingInterceptors: IDMaps<EventProcessingInterceptor>, listenerInterceptors: IDMaps<EventListenerInterceptor>, listeners: List<EventListenerRegistrationDescription>, messageSerializersModule: SerializersModule)","love.forte.simbot.core.event.SimpleListenerManagerConfig"]},{"name":"enum ListenerInvokeType : Enum<ListenerInvokeType> ","description":"love.forte.simbot.core.event.ListenerInvokeType","location":"simbot-core/love.forte.simbot.core.event/-listener-invoke-type/index.html","searchKeys":["ListenerInvokeType","enum ListenerInvokeType : Enum<ListenerInvokeType> ","love.forte.simbot.core.event.ListenerInvokeType"]},{"name":"fun <E : Event> Event.Key<E>.handle(handle: suspend EventListenerProcessingContext.(E) -> EventResult): EventListenerRegistrationDescriptionsGenerator.EventHandling<E>","description":"love.forte.simbot.core.event.EventListenerRegistrationDescriptionsGenerator.handle","location":"simbot-core/love.forte.simbot.core.event/-event-listener-registration-descriptions-generator/handle.html","searchKeys":["handle","fun <E : Event> Event.Key<E>.handle(handle: suspend EventListenerProcessingContext.(E) -> EventResult): EventListenerRegistrationDescriptionsGenerator.EventHandling<E>","love.forte.simbot.core.event.EventListenerRegistrationDescriptionsGenerator.handle"]},{"name":"fun <E : Event> Event.Key<E>.process(handle: suspend EventListenerProcessingContext.(E) -> Unit): EventListenerRegistrationDescriptionsGenerator.EventHandling<E>","description":"love.forte.simbot.core.event.EventListenerRegistrationDescriptionsGenerator.process","location":"simbot-core/love.forte.simbot.core.event/-event-listener-registration-descriptions-generator/process.html","searchKeys":["process","fun <E : Event> Event.Key<E>.process(handle: suspend EventListenerProcessingContext.(E) -> Unit): EventListenerRegistrationDescriptionsGenerator.EventHandling<E>","love.forte.simbot.core.event.EventListenerRegistrationDescriptionsGenerator.process"]},{"name":"fun <E : Event> SimpleListenerBuilder(target: Event.Key<E>)","description":"love.forte.simbot.core.event.SimpleListenerBuilder.SimpleListenerBuilder","location":"simbot-core/love.forte.simbot.core.event/-simple-listener-builder/-simple-listener-builder.html","searchKeys":["SimpleListenerBuilder","fun <E : Event> SimpleListenerBuilder(target: Event.Key<E>)","love.forte.simbot.core.event.SimpleListenerBuilder.SimpleListenerBuilder"]},{"name":"fun <E : Event> SimpleListenerRegistrationDescriptionBuilder(target: Event.Key<E>)","description":"love.forte.simbot.core.event.SimpleListenerRegistrationDescriptionBuilder.SimpleListenerRegistrationDescriptionBuilder","location":"simbot-core/love.forte.simbot.core.event/-simple-listener-registration-description-builder/-simple-listener-registration-description-builder.html","searchKeys":["SimpleListenerRegistrationDescriptionBuilder","fun <E : Event> SimpleListenerRegistrationDescriptionBuilder(target: Event.Key<E>)","love.forte.simbot.core.event.SimpleListenerRegistrationDescriptionBuilder.SimpleListenerRegistrationDescriptionBuilder"]},{"name":"fun <E : Event> blockingSimpleListener(target: Event.Key<E>, matcher: BiPredicate<EventListenerProcessingContext, E>? = null, function: BiFunction<EventListenerProcessingContext, E, EventResult>): EventListener","description":"love.forte.simbot.core.event.blockingSimpleListener","location":"simbot-core/love.forte.simbot.core.event/blocking-simple-listener.html","searchKeys":["blockingSimpleListener","fun <E : Event> blockingSimpleListener(target: Event.Key<E>, matcher: BiPredicate<EventListenerProcessingContext, E>? = null, function: BiFunction<EventListenerProcessingContext, E, EventResult>): EventListener","love.forte.simbot.core.event.blockingSimpleListener"]},{"name":"fun <E : Event> blockingSimpleListenerWithoutResult(target: Event.Key<E>, matcher: BiPredicate<EventListenerProcessingContext, E>? = null, function: BiConsumer<EventListenerProcessingContext, E>): EventListener","description":"love.forte.simbot.core.event.blockingSimpleListenerWithoutResult","location":"simbot-core/love.forte.simbot.core.event/blocking-simple-listener-without-result.html","searchKeys":["blockingSimpleListenerWithoutResult","fun <E : Event> blockingSimpleListenerWithoutResult(target: Event.Key<E>, matcher: BiPredicate<EventListenerProcessingContext, E>? = null, function: BiConsumer<EventListenerProcessingContext, E>): EventListener","love.forte.simbot.core.event.blockingSimpleListenerWithoutResult"]},{"name":"fun <E : Event> listen(eventKey: Event.Key<E>, block: SimpleListenerBuilderDslFunction<E>): EventListenerRegistrationDescriptionsGenerator","description":"love.forte.simbot.core.event.EventListenerRegistrationDescriptionsGenerator.listen","location":"simbot-core/love.forte.simbot.core.event/-event-listener-registration-descriptions-generator/listen.html","searchKeys":["listen","fun <E : Event> listen(eventKey: Event.Key<E>, block: SimpleListenerBuilderDslFunction<E>): EventListenerRegistrationDescriptionsGenerator","love.forte.simbot.core.event.EventListenerRegistrationDescriptionsGenerator.listen"]},{"name":"fun <E : EventListener> E.proxy(handleMatch: suspend EventListenerProcessingContext.(E) -> Boolean = { it.match(this) }, handleInvoke: suspend EventListenerProcessingContext.(E) -> EventResult): EventListener","description":"love.forte.simbot.core.event.proxy","location":"simbot-core/love.forte.simbot.core.event/proxy.html","searchKeys":["proxy","fun <E : EventListener> E.proxy(handleMatch: suspend EventListenerProcessingContext.(E) -> Boolean = { it.match(this) }, handleInvoke: suspend EventListenerProcessingContext.(E) -> EventResult): EventListener","love.forte.simbot.core.event.proxy"]},{"name":"fun <I : EventInterceptor<C, R>, R, EC : EventProcessingContext> IteratorInterceptorContext(interceptorsIterator: Iterator<I>, processing: suspend (EC) -> R)","description":"love.forte.simbot.core.event.EventInterceptEntrance.IteratorInterceptorContext.IteratorInterceptorContext","location":"simbot-core/love.forte.simbot.core.event/-event-intercept-entrance/-iterator-interceptor-context/-iterator-interceptor-context.html","searchKeys":["IteratorInterceptorContext","fun <I : EventInterceptor<C, R>, R, EC : EventProcessingContext> IteratorInterceptorContext(interceptorsIterator: Iterator<I>, processing: suspend (EC) -> R)","love.forte.simbot.core.event.EventInterceptEntrance.IteratorInterceptorContext.IteratorInterceptorContext"]},{"name":"fun <T> List<T>.view(): ListView<T>","description":"love.forte.simbot.utils.view","location":"simbot-core/love.forte.simbot.utils/view.html","searchKeys":["view","fun <T> List<T>.view(): ListView<T>","love.forte.simbot.utils.view"]},{"name":"fun <T> ListView(delegate: List<T>)","description":"love.forte.simbot.utils.ListView.ListView","location":"simbot-core/love.forte.simbot.utils/-list-view/-list-view.html","searchKeys":["ListView","fun <T> ListView(delegate: List<T>)","love.forte.simbot.utils.ListView.ListView"]},{"name":"fun BaseApplication()","description":"love.forte.simbot.core.application.BaseApplication.BaseApplication","location":"simbot-core/love.forte.simbot.core.application/-base-application/-base-application.html","searchKeys":["BaseApplication","fun BaseApplication()","love.forte.simbot.core.application.BaseApplication.BaseApplication"]},{"name":"fun BaseApplicationBuilder()","description":"love.forte.simbot.core.application.BaseApplicationBuilder.BaseApplicationBuilder","location":"simbot-core/love.forte.simbot.core.application/-base-application-builder/-base-application-builder.html","searchKeys":["BaseApplicationBuilder","fun BaseApplicationBuilder()","love.forte.simbot.core.application.BaseApplicationBuilder.BaseApplicationBuilder"]},{"name":"fun BaseStandardApplicationBuilder()","description":"love.forte.simbot.core.application.BaseStandardApplicationBuilder.BaseStandardApplicationBuilder","location":"simbot-core/love.forte.simbot.core.application/-base-standard-application-builder/-base-standard-application-builder.html","searchKeys":["BaseStandardApplicationBuilder","fun BaseStandardApplicationBuilder()","love.forte.simbot.core.application.BaseStandardApplicationBuilder.BaseStandardApplicationBuilder"]},{"name":"fun EventInterceptEntrance()","description":"love.forte.simbot.core.event.EventInterceptEntrance.EventInterceptEntrance","location":"simbot-core/love.forte.simbot.core.event/-event-intercept-entrance/-event-intercept-entrance.html","searchKeys":["EventInterceptEntrance","fun EventInterceptEntrance()","love.forte.simbot.core.event.EventInterceptEntrance.EventInterceptEntrance"]},{"name":"fun EventInterceptorsGenerator()","description":"love.forte.simbot.core.event.EventInterceptorsGenerator.EventInterceptorsGenerator","location":"simbot-core/love.forte.simbot.core.event/-event-interceptors-generator/-event-interceptors-generator.html","searchKeys":["EventInterceptorsGenerator","fun EventInterceptorsGenerator()","love.forte.simbot.core.event.EventInterceptorsGenerator.EventInterceptorsGenerator"]},{"name":"fun EventListener.withMatcher(matcher: suspend EventListenerProcessingContext.() -> Boolean = { true }): EventListener","description":"love.forte.simbot.core.event.withMatcher","location":"simbot-core/love.forte.simbot.core.event/with-matcher.html","searchKeys":["withMatcher","fun EventListener.withMatcher(matcher: suspend EventListenerProcessingContext.() -> Boolean = { true }): EventListener","love.forte.simbot.core.event.withMatcher"]},{"name":"fun EventListenerRegistrationDescriptionsGenerator()","description":"love.forte.simbot.core.event.EventListenerRegistrationDescriptionsGenerator.EventListenerRegistrationDescriptionsGenerator","location":"simbot-core/love.forte.simbot.core.event/-event-listener-registration-descriptions-generator/-event-listener-registration-descriptions-generator.html","searchKeys":["EventListenerRegistrationDescriptionsGenerator","fun EventListenerRegistrationDescriptionsGenerator()","love.forte.simbot.core.event.EventListenerRegistrationDescriptionsGenerator.EventListenerRegistrationDescriptionsGenerator"]},{"name":"fun SimpleApplicationConfiguration()","description":"love.forte.simbot.core.application.SimpleApplicationConfiguration.SimpleApplicationConfiguration","location":"simbot-core/love.forte.simbot.core.application/-simple-application-configuration/-simple-application-configuration.html","searchKeys":["SimpleApplicationConfiguration","fun SimpleApplicationConfiguration()","love.forte.simbot.core.application.SimpleApplicationConfiguration.SimpleApplicationConfiguration"]},{"name":"fun SimpleFunctionalEventListenerInterceptor(point: EventListenerInterceptor.Point, priority: Int = PriorityConstant.NORMAL, interceptFunction: suspend (EventListenerInterceptor.Context) -> EventResult)","description":"love.forte.simbot.core.event.SimpleFunctionalEventListenerInterceptor.SimpleFunctionalEventListenerInterceptor","location":"simbot-core/love.forte.simbot.core.event/-simple-functional-event-listener-interceptor/-simple-functional-event-listener-interceptor.html","searchKeys":["SimpleFunctionalEventListenerInterceptor","fun SimpleFunctionalEventListenerInterceptor(point: EventListenerInterceptor.Point, priority: Int = PriorityConstant.NORMAL, interceptFunction: suspend (EventListenerInterceptor.Context) -> EventResult)","love.forte.simbot.core.event.SimpleFunctionalEventListenerInterceptor.SimpleFunctionalEventListenerInterceptor"]},{"name":"fun SimpleFunctionalEventProcessingInterceptor(priority: Int = PriorityConstant.NORMAL, interceptFunction: suspend (EventProcessingInterceptor.Context) -> EventProcessingResult)","description":"love.forte.simbot.core.event.SimpleFunctionalEventProcessingInterceptor.SimpleFunctionalEventProcessingInterceptor","location":"simbot-core/love.forte.simbot.core.event/-simple-functional-event-processing-interceptor/-simple-functional-event-processing-interceptor.html","searchKeys":["SimpleFunctionalEventProcessingInterceptor","fun SimpleFunctionalEventProcessingInterceptor(priority: Int = PriorityConstant.NORMAL, interceptFunction: suspend (EventProcessingInterceptor.Context) -> EventProcessingResult)","love.forte.simbot.core.event.SimpleFunctionalEventProcessingInterceptor.SimpleFunctionalEventProcessingInterceptor"]},{"name":"fun SimpleListener(targets: Set<Event.Key<*>>, attributes: AttributeContainer? = null, matcher: suspend EventListenerProcessingContext.() -> Boolean = { true }, function: suspend EventListenerProcessingContext.() -> EventResult)","description":"love.forte.simbot.core.event.SimpleListener.SimpleListener","location":"simbot-core/love.forte.simbot.core.event/-simple-listener/-simple-listener.html","searchKeys":["SimpleListener","fun SimpleListener(targets: Set<Event.Key<*>>, attributes: AttributeContainer? = null, matcher: suspend EventListenerProcessingContext.() -> Boolean = { true }, function: suspend EventListenerProcessingContext.() -> EventResult)","love.forte.simbot.core.event.SimpleListener.SimpleListener"]},{"name":"fun SimpleListenerManagerConfig(coroutineContext: CoroutineContext, exceptionHandler: (Throwable) -> EventResult? = null, processingInterceptors: IDMaps<EventProcessingInterceptor>, listenerInterceptors: IDMaps<EventListenerInterceptor>, listeners: List<EventListenerRegistrationDescription>, messageSerializersModule: SerializersModule)","description":"love.forte.simbot.core.event.SimpleListenerManagerConfig.SimpleListenerManagerConfig","location":"simbot-core/love.forte.simbot.core.event/-simple-listener-manager-config/-simple-listener-manager-config.html","searchKeys":["SimpleListenerManagerConfig","fun SimpleListenerManagerConfig(coroutineContext: CoroutineContext, exceptionHandler: (Throwable) -> EventResult? = null, processingInterceptors: IDMaps<EventProcessingInterceptor>, listenerInterceptors: IDMaps<EventListenerInterceptor>, listeners: List<EventListenerRegistrationDescription>, messageSerializersModule: SerializersModule)","love.forte.simbot.core.event.SimpleListenerManagerConfig.SimpleListenerManagerConfig"]},{"name":"fun SimpleListenerManagerConfiguration()","description":"love.forte.simbot.core.event.SimpleListenerManagerConfiguration.SimpleListenerManagerConfiguration","location":"simbot-core/love.forte.simbot.core.event/-simple-listener-manager-configuration/-simple-listener-manager-configuration.html","searchKeys":["SimpleListenerManagerConfiguration","fun SimpleListenerManagerConfiguration()","love.forte.simbot.core.event.SimpleListenerManagerConfiguration.SimpleListenerManagerConfiguration"]},{"name":"fun SimpleListenerManagerConfiguration.addListenerInterceptors(vararg interceptors: Pair<ID, EventListenerInterceptor>)","description":"love.forte.simbot.core.event.addListenerInterceptors","location":"simbot-core/love.forte.simbot.core.event/add-listener-interceptors.html","searchKeys":["addListenerInterceptors","fun SimpleListenerManagerConfiguration.addListenerInterceptors(vararg interceptors: Pair<ID, EventListenerInterceptor>)","love.forte.simbot.core.event.addListenerInterceptors"]},{"name":"fun SimpleListenerManagerConfiguration.addProcessingInterceptors(vararg interceptors: Pair<ID, EventProcessingInterceptor>)","description":"love.forte.simbot.core.event.addProcessingInterceptors","location":"simbot-core/love.forte.simbot.core.event/add-processing-interceptors.html","searchKeys":["addProcessingInterceptors","fun SimpleListenerManagerConfiguration.addProcessingInterceptors(vararg interceptors: Pair<ID, EventProcessingInterceptor>)","love.forte.simbot.core.event.addProcessingInterceptors"]},{"name":"fun _match(matcher: BiPredicate<EventListenerProcessingContext, E>): SimpleListenerBuilder<E>","description":"love.forte.simbot.core.event.SimpleListenerBuilder._match","location":"simbot-core/love.forte.simbot.core.event/-simple-listener-builder/_match.html","searchKeys":["_match","fun _match(matcher: BiPredicate<EventListenerProcessingContext, E>): SimpleListenerBuilder<E>","love.forte.simbot.core.event.SimpleListenerBuilder._match"]},{"name":"fun addListener(listener: EventListener): SimpleListenerManagerConfiguration","description":"love.forte.simbot.core.event.SimpleListenerManagerConfiguration.addListener","location":"simbot-core/love.forte.simbot.core.event/-simple-listener-manager-configuration/add-listener.html","searchKeys":["addListener","fun addListener(listener: EventListener): SimpleListenerManagerConfiguration","love.forte.simbot.core.event.SimpleListenerManagerConfiguration.addListener"]},{"name":"fun addListenerInterceptors(interceptors: Map<ID, EventListenerInterceptor>): SimpleListenerManagerConfiguration","description":"love.forte.simbot.core.event.SimpleListenerManagerConfiguration.addListenerInterceptors","location":"simbot-core/love.forte.simbot.core.event/-simple-listener-manager-configuration/add-listener-interceptors.html","searchKeys":["addListenerInterceptors","fun addListenerInterceptors(interceptors: Map<ID, EventListenerInterceptor>): SimpleListenerManagerConfiguration","love.forte.simbot.core.event.SimpleListenerManagerConfiguration.addListenerInterceptors"]},{"name":"fun addListenerRegistrationDescription(description: EventListenerRegistrationDescription): SimpleListenerManagerConfiguration","description":"love.forte.simbot.core.event.SimpleListenerManagerConfiguration.addListenerRegistrationDescription","location":"simbot-core/love.forte.simbot.core.event/-simple-listener-manager-configuration/add-listener-registration-description.html","searchKeys":["addListenerRegistrationDescription","fun addListenerRegistrationDescription(description: EventListenerRegistrationDescription): SimpleListenerManagerConfiguration","love.forte.simbot.core.event.SimpleListenerManagerConfiguration.addListenerRegistrationDescription"]},{"name":"fun addListenerRegistrationDescriptions(descriptions: Collection<EventListenerRegistrationDescription>): SimpleListenerManagerConfiguration","description":"love.forte.simbot.core.event.SimpleListenerManagerConfiguration.addListenerRegistrationDescriptions","location":"simbot-core/love.forte.simbot.core.event/-simple-listener-manager-configuration/add-listener-registration-descriptions.html","searchKeys":["addListenerRegistrationDescriptions","fun addListenerRegistrationDescriptions(descriptions: Collection<EventListenerRegistrationDescription>): SimpleListenerManagerConfiguration","love.forte.simbot.core.event.SimpleListenerManagerConfiguration.addListenerRegistrationDescriptions"]},{"name":"fun addListenerRegistrationDescriptions(vararg descriptions: EventListenerRegistrationDescription): SimpleListenerManagerConfiguration","description":"love.forte.simbot.core.event.SimpleListenerManagerConfiguration.addListenerRegistrationDescriptions","location":"simbot-core/love.forte.simbot.core.event/-simple-listener-manager-configuration/add-listener-registration-descriptions.html","searchKeys":["addListenerRegistrationDescriptions","fun addListenerRegistrationDescriptions(vararg descriptions: EventListenerRegistrationDescription): SimpleListenerManagerConfiguration","love.forte.simbot.core.event.SimpleListenerManagerConfiguration.addListenerRegistrationDescriptions"]},{"name":"fun addListeners(listeners: Collection<EventListener>): SimpleListenerManagerConfiguration","description":"love.forte.simbot.core.event.SimpleListenerManagerConfiguration.addListeners","location":"simbot-core/love.forte.simbot.core.event/-simple-listener-manager-configuration/add-listeners.html","searchKeys":["addListeners","fun addListeners(listeners: Collection<EventListener>): SimpleListenerManagerConfiguration","love.forte.simbot.core.event.SimpleListenerManagerConfiguration.addListeners"]},{"name":"fun addListeners(vararg listeners: EventListener): SimpleListenerManagerConfiguration","description":"love.forte.simbot.core.event.SimpleListenerManagerConfiguration.addListeners","location":"simbot-core/love.forte.simbot.core.event/-simple-listener-manager-configuration/add-listeners.html","searchKeys":["addListeners","fun addListeners(vararg listeners: EventListener): SimpleListenerManagerConfiguration","love.forte.simbot.core.event.SimpleListenerManagerConfiguration.addListeners"]},{"name":"fun addProcessingInterceptors(interceptors: Map<ID, EventProcessingInterceptor>): SimpleListenerManagerConfiguration","description":"love.forte.simbot.core.event.SimpleListenerManagerConfiguration.addProcessingInterceptors","location":"simbot-core/love.forte.simbot.core.event/-simple-listener-manager-configuration/add-processing-interceptors.html","searchKeys":["addProcessingInterceptors","fun addProcessingInterceptors(interceptors: Map<ID, EventProcessingInterceptor>): SimpleListenerManagerConfiguration","love.forte.simbot.core.event.SimpleListenerManagerConfiguration.addProcessingInterceptors"]},{"name":"fun async(async: Boolean = true): SimpleListenerRegistrationDescriptionBuilder<E>","description":"love.forte.simbot.core.event.SimpleListenerRegistrationDescriptionBuilder.async","location":"simbot-core/love.forte.simbot.core.event/-simple-listener-registration-description-builder/async.html","searchKeys":["async","fun async(async: Boolean = true): SimpleListenerRegistrationDescriptionBuilder<E>","love.forte.simbot.core.event.SimpleListenerRegistrationDescriptionBuilder.async"]},{"name":"fun blockingSimpleFilter(priority: Int = PriorityConstant.NORMAL, tester: Predicate<EventListenerProcessingContext>): EventFilter","description":"love.forte.simbot.core.event.blockingSimpleFilter","location":"simbot-core/love.forte.simbot.core.event/blocking-simple-filter.html","searchKeys":["blockingSimpleFilter","fun blockingSimpleFilter(priority: Int = PriorityConstant.NORMAL, tester: Predicate<EventListenerProcessingContext>): EventFilter","love.forte.simbot.core.event.blockingSimpleFilter"]},{"name":"fun build(): List<EventListenerRegistrationDescription>","description":"love.forte.simbot.core.event.EventListenerRegistrationDescriptionsGenerator.build","location":"simbot-core/love.forte.simbot.core.event/-event-listener-registration-descriptions-generator/build.html","searchKeys":["build","fun build(): List<EventListenerRegistrationDescription>","love.forte.simbot.core.event.EventListenerRegistrationDescriptionsGenerator.build"]},{"name":"fun copy(targets: Set<Event.Key<*>> = this.targets.toSet(), attributes: AttributeContainer? = null, matcher: suspend EventListenerProcessingContext.() -> Boolean = this.matcher, function: suspend EventListenerProcessingContext.() -> EventResult = this.function): SimpleListener","description":"love.forte.simbot.core.event.SimpleListener.copy","location":"simbot-core/love.forte.simbot.core.event/-simple-listener/copy.html","searchKeys":["copy","fun copy(targets: Set<Event.Key<*>> = this.targets.toSet(), attributes: AttributeContainer? = null, matcher: suspend EventListenerProcessingContext.() -> Boolean = this.matcher, function: suspend EventListenerProcessingContext.() -> EventResult = this.function): SimpleListener","love.forte.simbot.core.event.SimpleListener.copy"]},{"name":"fun eventListenerInterceptEntrance(): EventInterceptEntrance<EventListenerInterceptor.Context, EventResult, EventListenerProcessingContext>","description":"love.forte.simbot.core.event.EventInterceptEntrance.Companion.eventListenerInterceptEntrance","location":"simbot-core/love.forte.simbot.core.event/-event-intercept-entrance/-companion/event-listener-intercept-entrance.html","searchKeys":["eventListenerInterceptEntrance","fun eventListenerInterceptEntrance(): EventInterceptEntrance<EventListenerInterceptor.Context, EventResult, EventListenerProcessingContext>","love.forte.simbot.core.event.EventInterceptEntrance.Companion.eventListenerInterceptEntrance"]},{"name":"fun eventListenerInterceptEntrance(interceptors: Collection<EventListenerInterceptor>): EventInterceptEntrance<EventListenerInterceptor.Context, EventResult, EventListenerProcessingContext>","description":"love.forte.simbot.core.event.EventInterceptEntrance.Companion.eventListenerInterceptEntrance","location":"simbot-core/love.forte.simbot.core.event/-event-intercept-entrance/-companion/event-listener-intercept-entrance.html","searchKeys":["eventListenerInterceptEntrance","fun eventListenerInterceptEntrance(interceptors: Collection<EventListenerInterceptor>): EventInterceptEntrance<EventListenerInterceptor.Context, EventResult, EventListenerProcessingContext>","love.forte.simbot.core.event.EventInterceptEntrance.Companion.eventListenerInterceptEntrance"]},{"name":"fun eventProcessingInterceptEntrance(): EventInterceptEntrance<EventProcessingInterceptor.Context, EventProcessingResult, EventProcessingContext>","description":"love.forte.simbot.core.event.EventInterceptEntrance.Companion.eventProcessingInterceptEntrance","location":"simbot-core/love.forte.simbot.core.event/-event-intercept-entrance/-companion/event-processing-intercept-entrance.html","searchKeys":["eventProcessingInterceptEntrance","fun eventProcessingInterceptEntrance(): EventInterceptEntrance<EventProcessingInterceptor.Context, EventProcessingResult, EventProcessingContext>","love.forte.simbot.core.event.EventInterceptEntrance.Companion.eventProcessingInterceptEntrance"]},{"name":"fun eventProcessingInterceptEntrance(interceptors: Collection<EventProcessingInterceptor>): EventInterceptEntrance<EventProcessingInterceptor.Context, EventProcessingResult, EventProcessingContext>","description":"love.forte.simbot.core.event.EventInterceptEntrance.Companion.eventProcessingInterceptEntrance","location":"simbot-core/love.forte.simbot.core.event/-event-intercept-entrance/-companion/event-processing-intercept-entrance.html","searchKeys":["eventProcessingInterceptEntrance","fun eventProcessingInterceptEntrance(interceptors: Collection<EventProcessingInterceptor>): EventInterceptEntrance<EventProcessingInterceptor.Context, EventProcessingResult, EventProcessingContext>","love.forte.simbot.core.event.EventInterceptEntrance.Companion.eventProcessingInterceptEntrance"]},{"name":"fun handle(func: suspend EventListenerProcessingContext.(E) -> EventResult)","description":"love.forte.simbot.core.event.SimpleListenerBuilder.handle","location":"simbot-core/love.forte.simbot.core.event/-simple-listener-builder/handle.html","searchKeys":["handle","fun handle(func: suspend EventListenerProcessingContext.(E) -> EventResult)","love.forte.simbot.core.event.SimpleListenerBuilder.handle"]},{"name":"fun handle4J(handleFunction: BiFunction<EventListenerProcessingContext, E, EventResult>): SimpleListenerBuilder<E>","description":"love.forte.simbot.core.event.SimpleListenerBuilder.handle4J","location":"simbot-core/love.forte.simbot.core.event/-simple-listener-builder/handle4-j.html","searchKeys":["handle4J","fun handle4J(handleFunction: BiFunction<EventListenerProcessingContext, E, EventResult>): SimpleListenerBuilder<E>","love.forte.simbot.core.event.SimpleListenerBuilder.handle4J"]},{"name":"fun interceptors(): EventInterceptorsGenerator","description":"love.forte.simbot.core.event.SimpleListenerManagerConfiguration.interceptors","location":"simbot-core/love.forte.simbot.core.event/-simple-listener-manager-configuration/interceptors.html","searchKeys":["interceptors","fun interceptors(): EventInterceptorsGenerator","love.forte.simbot.core.event.SimpleListenerManagerConfiguration.interceptors"]},{"name":"fun interceptors(block: EventInterceptorsGenerator.() -> Unit): SimpleListenerManagerConfiguration","description":"love.forte.simbot.core.event.SimpleListenerManagerConfiguration.interceptors","location":"simbot-core/love.forte.simbot.core.event/-simple-listener-manager-configuration/interceptors.html","searchKeys":["interceptors","fun interceptors(block: EventInterceptorsGenerator.() -> Unit): SimpleListenerManagerConfiguration","love.forte.simbot.core.event.SimpleListenerManagerConfiguration.interceptors"]},{"name":"fun interface SimpleListenerBuilderDslFunction<E : Event>","description":"love.forte.simbot.core.event.SimpleListenerBuilderDslFunction","location":"simbot-core/love.forte.simbot.core.event/-simple-listener-builder-dsl-function/index.html","searchKeys":["SimpleListenerBuilderDslFunction","fun interface SimpleListenerBuilderDslFunction<E : Event>","love.forte.simbot.core.event.SimpleListenerBuilderDslFunction"]},{"name":"fun listener(listener: EventListenerRegistrationDescription): EventListenerRegistrationDescriptionsGenerator","description":"love.forte.simbot.core.event.EventListenerRegistrationDescriptionsGenerator.listener","location":"simbot-core/love.forte.simbot.core.event/-event-listener-registration-descriptions-generator/listener.html","searchKeys":["listener","fun listener(listener: EventListenerRegistrationDescription): EventListenerRegistrationDescriptionsGenerator","love.forte.simbot.core.event.EventListenerRegistrationDescriptionsGenerator.listener"]},{"name":"fun listenerExceptionHandler(handler: (Throwable) -> EventResult): SimpleListenerManagerConfiguration","description":"love.forte.simbot.core.event.SimpleListenerManagerConfiguration.listenerExceptionHandler","location":"simbot-core/love.forte.simbot.core.event/-simple-listener-manager-configuration/listener-exception-handler.html","searchKeys":["listenerExceptionHandler","fun listenerExceptionHandler(handler: (Throwable) -> EventResult): SimpleListenerManagerConfiguration","love.forte.simbot.core.event.SimpleListenerManagerConfiguration.listenerExceptionHandler"]},{"name":"fun listenerExceptionHandler(handler: Function<Throwable, EventResult>): SimpleListenerManagerConfiguration","description":"love.forte.simbot.core.event.SimpleListenerManagerConfiguration.listenerExceptionHandler","location":"simbot-core/love.forte.simbot.core.event/-simple-listener-manager-configuration/listener-exception-handler.html","searchKeys":["listenerExceptionHandler","fun listenerExceptionHandler(handler: Function<Throwable, EventResult>): SimpleListenerManagerConfiguration","love.forte.simbot.core.event.SimpleListenerManagerConfiguration.listenerExceptionHandler"]},{"name":"fun listenerIntercept(id: ID = randomID(), interceptor: EventListenerInterceptor): EventInterceptorsGenerator","description":"love.forte.simbot.core.event.EventInterceptorsGenerator.listenerIntercept","location":"simbot-core/love.forte.simbot.core.event/-event-interceptors-generator/listener-intercept.html","searchKeys":["listenerIntercept","fun listenerIntercept(id: ID = randomID(), interceptor: EventListenerInterceptor): EventInterceptorsGenerator","love.forte.simbot.core.event.EventInterceptorsGenerator.listenerIntercept"]},{"name":"fun listenerIntercept(id: ID = randomID(), point: EventListenerInterceptor.Point = EventListenerInterceptor.Point.DEFAULT, priority: Int = PriorityConstant.NORMAL, interceptFunction: suspend (EventListenerInterceptor.Context) -> EventResult): EventInterceptorsGenerator","description":"love.forte.simbot.core.event.EventInterceptorsGenerator.listenerIntercept","location":"simbot-core/love.forte.simbot.core.event/-event-interceptors-generator/listener-intercept.html","searchKeys":["listenerIntercept","fun listenerIntercept(id: ID = randomID(), point: EventListenerInterceptor.Point = EventListenerInterceptor.Point.DEFAULT, priority: Int = PriorityConstant.NORMAL, interceptFunction: suspend (EventListenerInterceptor.Context) -> EventResult): EventInterceptorsGenerator","love.forte.simbot.core.event.EventInterceptorsGenerator.listenerIntercept"]},{"name":"fun listenerIntercept(id: String, interceptor: EventListenerInterceptor): EventInterceptorsGenerator","description":"love.forte.simbot.core.event.EventInterceptorsGenerator.listenerIntercept","location":"simbot-core/love.forte.simbot.core.event/-event-interceptors-generator/listener-intercept.html","searchKeys":["listenerIntercept","fun listenerIntercept(id: String, interceptor: EventListenerInterceptor): EventInterceptorsGenerator","love.forte.simbot.core.event.EventInterceptorsGenerator.listenerIntercept"]},{"name":"fun listenerIntercept(id: String, point: EventListenerInterceptor.Point = EventListenerInterceptor.Point.DEFAULT, priority: Int = PriorityConstant.NORMAL, interceptFunction: suspend (EventListenerInterceptor.Context) -> EventResult): EventInterceptorsGenerator","description":"love.forte.simbot.core.event.EventInterceptorsGenerator.listenerIntercept","location":"simbot-core/love.forte.simbot.core.event/-event-interceptors-generator/listener-intercept.html","searchKeys":["listenerIntercept","fun listenerIntercept(id: String, point: EventListenerInterceptor.Point = EventListenerInterceptor.Point.DEFAULT, priority: Int = PriorityConstant.NORMAL, interceptFunction: suspend (EventListenerInterceptor.Context) -> EventResult): EventInterceptorsGenerator","love.forte.simbot.core.event.EventInterceptorsGenerator.listenerIntercept"]},{"name":"fun listenerInterceptor4J(point: EventListenerInterceptor.Point = EventListenerInterceptor.Point.DEFAULT, priority: Int = PriorityConstant.NORMAL, interceptFunction: Function<EventListenerInterceptor.Context, EventResult>): EventListenerInterceptor","description":"love.forte.simbot.core.event.listenerInterceptor4J","location":"simbot-core/love.forte.simbot.core.event/listener-interceptor4-j.html","searchKeys":["listenerInterceptor4J","fun listenerInterceptor4J(point: EventListenerInterceptor.Point = EventListenerInterceptor.Point.DEFAULT, priority: Int = PriorityConstant.NORMAL, interceptFunction: Function<EventListenerInterceptor.Context, EventResult>): EventListenerInterceptor","love.forte.simbot.core.event.listenerInterceptor4J"]},{"name":"fun listeners(block: EventListenerRegistrationDescriptionsGenerator.() -> Unit): SimpleListenerManagerConfiguration","description":"love.forte.simbot.core.event.SimpleListenerManagerConfiguration.listeners","location":"simbot-core/love.forte.simbot.core.event/-simple-listener-manager-configuration/listeners.html","searchKeys":["listeners","fun listeners(block: EventListenerRegistrationDescriptionsGenerator.() -> Unit): SimpleListenerManagerConfiguration","love.forte.simbot.core.event.SimpleListenerManagerConfiguration.listeners"]},{"name":"fun match(matcher: suspend EventListenerProcessingContext.(E) -> Boolean)","description":"love.forte.simbot.core.event.SimpleListenerBuilder.match","location":"simbot-core/love.forte.simbot.core.event/-simple-listener-builder/match.html","searchKeys":["match","fun match(matcher: suspend EventListenerProcessingContext.(E) -> Boolean)","love.forte.simbot.core.event.SimpleListenerBuilder.match"]},{"name":"fun newInstance(configuration: SimpleListenerManagerConfiguration): SimpleEventListenerManager","description":"love.forte.simbot.core.event.SimpleEventListenerManager.Companion.newInstance","location":"simbot-core/love.forte.simbot.core.event/-simple-event-listener-manager/-companion/new-instance.html","searchKeys":["newInstance","fun newInstance(configuration: SimpleListenerManagerConfiguration): SimpleEventListenerManager","love.forte.simbot.core.event.SimpleEventListenerManager.Companion.newInstance"]},{"name":"fun priority(priority: Int): SimpleListenerRegistrationDescriptionBuilder<E>","description":"love.forte.simbot.core.event.SimpleListenerRegistrationDescriptionBuilder.priority","location":"simbot-core/love.forte.simbot.core.event/-simple-listener-registration-description-builder/priority.html","searchKeys":["priority","fun priority(priority: Int): SimpleListenerRegistrationDescriptionBuilder<E>","love.forte.simbot.core.event.SimpleListenerRegistrationDescriptionBuilder.priority"]},{"name":"fun process4J(processFunction: BiConsumer<EventListenerProcessingContext, E>): SimpleListenerBuilder<E>","description":"love.forte.simbot.core.event.SimpleListenerBuilder.process4J","location":"simbot-core/love.forte.simbot.core.event/-simple-listener-builder/process4-j.html","searchKeys":["process4J","fun process4J(processFunction: BiConsumer<EventListenerProcessingContext, E>): SimpleListenerBuilder<E>","love.forte.simbot.core.event.SimpleListenerBuilder.process4J"]},{"name":"fun processingIntercept(id: ID = randomID(), interceptor: EventProcessingInterceptor): EventInterceptorsGenerator","description":"love.forte.simbot.core.event.EventInterceptorsGenerator.processingIntercept","location":"simbot-core/love.forte.simbot.core.event/-event-interceptors-generator/processing-intercept.html","searchKeys":["processingIntercept","fun processingIntercept(id: ID = randomID(), interceptor: EventProcessingInterceptor): EventInterceptorsGenerator","love.forte.simbot.core.event.EventInterceptorsGenerator.processingIntercept"]},{"name":"fun processingIntercept(id: ID = randomID(), priority: Int = PriorityConstant.NORMAL, interceptFunction: suspend (EventProcessingInterceptor.Context) -> EventProcessingResult): EventInterceptorsGenerator","description":"love.forte.simbot.core.event.EventInterceptorsGenerator.processingIntercept","location":"simbot-core/love.forte.simbot.core.event/-event-interceptors-generator/processing-intercept.html","searchKeys":["processingIntercept","fun processingIntercept(id: ID = randomID(), priority: Int = PriorityConstant.NORMAL, interceptFunction: suspend (EventProcessingInterceptor.Context) -> EventProcessingResult): EventInterceptorsGenerator","love.forte.simbot.core.event.EventInterceptorsGenerator.processingIntercept"]},{"name":"fun processingIntercept(id: String, interceptor: EventProcessingInterceptor): EventInterceptorsGenerator","description":"love.forte.simbot.core.event.EventInterceptorsGenerator.processingIntercept","location":"simbot-core/love.forte.simbot.core.event/-event-interceptors-generator/processing-intercept.html","searchKeys":["processingIntercept","fun processingIntercept(id: String, interceptor: EventProcessingInterceptor): EventInterceptorsGenerator","love.forte.simbot.core.event.EventInterceptorsGenerator.processingIntercept"]},{"name":"fun processingIntercept(id: String, priority: Int = PriorityConstant.NORMAL, interceptFunction: suspend (EventProcessingInterceptor.Context) -> EventProcessingResult): EventInterceptorsGenerator","description":"love.forte.simbot.core.event.EventInterceptorsGenerator.processingIntercept","location":"simbot-core/love.forte.simbot.core.event/-event-interceptors-generator/processing-intercept.html","searchKeys":["processingIntercept","fun processingIntercept(id: String, priority: Int = PriorityConstant.NORMAL, interceptFunction: suspend (EventProcessingInterceptor.Context) -> EventProcessingResult): EventInterceptorsGenerator","love.forte.simbot.core.event.EventInterceptorsGenerator.processingIntercept"]},{"name":"fun processingInterceptor4J(priority: Int = PriorityConstant.NORMAL, interceptFunction: Function<EventProcessingInterceptor.Context, EventProcessingResult>): EventProcessingInterceptor","description":"love.forte.simbot.core.event.processingInterceptor4J","location":"simbot-core/love.forte.simbot.core.event/processing-interceptor4-j.html","searchKeys":["processingInterceptor4J","fun processingInterceptor4J(priority: Int = PriorityConstant.NORMAL, interceptFunction: Function<EventProcessingInterceptor.Context, EventProcessingResult>): EventProcessingInterceptor","love.forte.simbot.core.event.processingInterceptor4J"]},{"name":"fun simpleApplication(configurator: SimpleApplicationConfiguration.() -> Unit = {}, builder: SimpleApplicationBuilder.(SimpleApplicationConfiguration) -> Unit = {}): ApplicationLauncher<SimpleApplication>","description":"love.forte.simbot.core.application.simpleApplication","location":"simbot-core/love.forte.simbot.core.application/simple-application.html","searchKeys":["simpleApplication","fun simpleApplication(configurator: SimpleApplicationConfiguration.() -> Unit = {}, builder: SimpleApplicationBuilder.(SimpleApplicationConfiguration) -> Unit = {}): ApplicationLauncher<SimpleApplication>","love.forte.simbot.core.application.simpleApplication"]},{"name":"fun simpleFilter(priority: Int = PriorityConstant.NORMAL, tester: suspend (context: EventListenerProcessingContext) -> Boolean): EventFilter","description":"love.forte.simbot.core.event.simpleFilter","location":"simbot-core/love.forte.simbot.core.event/simple-filter.html","searchKeys":["simpleFilter","fun simpleFilter(priority: Int = PriorityConstant.NORMAL, tester: suspend (context: EventListenerProcessingContext) -> Boolean): EventFilter","love.forte.simbot.core.event.simpleFilter"]},{"name":"fun simpleListenerInterceptor(point: EventListenerInterceptor.Point = EventListenerInterceptor.Point.DEFAULT, priority: Int = PriorityConstant.NORMAL, interceptFunction: suspend (EventListenerInterceptor.Context) -> EventResult): EventListenerInterceptor","description":"love.forte.simbot.core.event.simpleListenerInterceptor","location":"simbot-core/love.forte.simbot.core.event/simple-listener-interceptor.html","searchKeys":["simpleListenerInterceptor","fun simpleListenerInterceptor(point: EventListenerInterceptor.Point = EventListenerInterceptor.Point.DEFAULT, priority: Int = PriorityConstant.NORMAL, interceptFunction: suspend (EventListenerInterceptor.Context) -> EventResult): EventListenerInterceptor","love.forte.simbot.core.event.simpleListenerInterceptor"]},{"name":"fun simpleProcessingInterceptor(priority: Int = PriorityConstant.NORMAL, interceptFunction: suspend (EventProcessingInterceptor.Context) -> EventProcessingResult): EventProcessingInterceptor","description":"love.forte.simbot.core.event.simpleProcessingInterceptor","location":"simbot-core/love.forte.simbot.core.event/simple-processing-interceptor.html","searchKeys":["simpleProcessingInterceptor","fun simpleProcessingInterceptor(priority: Int = PriorityConstant.NORMAL, interceptFunction: suspend (EventProcessingInterceptor.Context) -> EventProcessingResult): EventProcessingInterceptor","love.forte.simbot.core.event.simpleProcessingInterceptor"]},{"name":"fun valueOf(value: String): ListenerInvokeType","description":"love.forte.simbot.core.event.ListenerInvokeType.valueOf","location":"simbot-core/love.forte.simbot.core.event/-listener-invoke-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): ListenerInvokeType","love.forte.simbot.core.event.ListenerInvokeType.valueOf"]},{"name":"fun values(): Array<ListenerInvokeType>","description":"love.forte.simbot.core.event.ListenerInvokeType.values","location":"simbot-core/love.forte.simbot.core.event/-listener-invoke-type/values.html","searchKeys":["values","fun values(): Array<ListenerInvokeType>","love.forte.simbot.core.event.ListenerInvokeType.values"]},{"name":"infix inline fun <E : Event> EventListenerRegistrationDescriptionsGenerator.EventHandling<E>.onMatch(crossinline matcher: suspend EventListenerProcessingContext.(E) -> Boolean): EventListenerRegistrationDescriptionsGenerator.EventHandling<E>","description":"love.forte.simbot.core.event.EventListenerRegistrationDescriptionsGenerator.onMatch","location":"simbot-core/love.forte.simbot.core.event/-event-listener-registration-descriptions-generator/on-match.html","searchKeys":["onMatch","infix inline fun <E : Event> EventListenerRegistrationDescriptionsGenerator.EventHandling<E>.onMatch(crossinline matcher: suspend EventListenerProcessingContext.(E) -> Boolean): EventListenerRegistrationDescriptionsGenerator.EventHandling<E>","love.forte.simbot.core.event.EventListenerRegistrationDescriptionsGenerator.onMatch"]},{"name":"inline fun <E : Event> EventListenerRegistrar.listen(attributes: AttributeContainer? = null, crossinline matcher: suspend EventListenerProcessingContext.(E) -> Boolean = { true }, crossinline func: suspend EventListenerProcessingContext.(E) -> EventResult): EventListener","description":"love.forte.simbot.core.event.listen","location":"simbot-core/love.forte.simbot.core.event/listen.html","searchKeys":["listen","inline fun <E : Event> EventListenerRegistrar.listen(attributes: AttributeContainer? = null, crossinline matcher: suspend EventListenerProcessingContext.(E) -> Boolean = { true }, crossinline func: suspend EventListenerProcessingContext.(E) -> EventResult): EventListener","love.forte.simbot.core.event.listen"]},{"name":"inline fun <E : Event> EventListenerRegistrar.listen(eventKey: Event.Key<E>, attributes: AttributeContainer? = null, crossinline matcher: suspend EventListenerProcessingContext.(E) -> Boolean = { true }, crossinline func: suspend EventListenerProcessingContext.(E) -> EventResult): EventListener","description":"love.forte.simbot.core.event.listen","location":"simbot-core/love.forte.simbot.core.event/listen.html","searchKeys":["listen","inline fun <E : Event> EventListenerRegistrar.listen(eventKey: Event.Key<E>, attributes: AttributeContainer? = null, crossinline matcher: suspend EventListenerProcessingContext.(E) -> Boolean = { true }, crossinline func: suspend EventListenerProcessingContext.(E) -> EventResult): EventListener","love.forte.simbot.core.event.listen"]},{"name":"inline fun <E : Event> EventListenerRegistrar.listen(key: Event.Key<E>, block: SimpleListenerRegistrationDescriptionBuilder<E>.() -> Unit): EventListenerHandle","description":"love.forte.simbot.core.event.listen","location":"simbot-core/love.forte.simbot.core.event/listen.html","searchKeys":["listen","inline fun <E : Event> EventListenerRegistrar.listen(key: Event.Key<E>, block: SimpleListenerRegistrationDescriptionBuilder<E>.() -> Unit): EventListenerHandle","love.forte.simbot.core.event.listen"]},{"name":"inline fun <E : Event> EventListenerRegistrationDescriptionsGenerator.EventHandling<E>.async(isAsync: Boolean = true): EventListenerRegistrationDescriptionsGenerator.EventHandling<E>","description":"love.forte.simbot.core.event.EventListenerRegistrationDescriptionsGenerator.async","location":"simbot-core/love.forte.simbot.core.event/-event-listener-registration-descriptions-generator/async.html","searchKeys":["async","inline fun <E : Event> EventListenerRegistrationDescriptionsGenerator.EventHandling<E>.async(isAsync: Boolean = true): EventListenerRegistrationDescriptionsGenerator.EventHandling<E>","love.forte.simbot.core.event.EventListenerRegistrationDescriptionsGenerator.async"]},{"name":"inline fun <E : Event> buildSimpleListener(block: SimpleListenerBuilder<E>.() -> Unit): EventListener","description":"love.forte.simbot.core.event.buildSimpleListener","location":"simbot-core/love.forte.simbot.core.event/build-simple-listener.html","searchKeys":["buildSimpleListener","inline fun <E : Event> buildSimpleListener(block: SimpleListenerBuilder<E>.() -> Unit): EventListener","love.forte.simbot.core.event.buildSimpleListener"]},{"name":"inline fun <E : Event> buildSimpleListener(target: Event.Key<E>, block: SimpleListenerBuilder<E>.() -> Unit): EventListener","description":"love.forte.simbot.core.event.buildSimpleListener","location":"simbot-core/love.forte.simbot.core.event/build-simple-listener.html","searchKeys":["buildSimpleListener","inline fun <E : Event> buildSimpleListener(target: Event.Key<E>, block: SimpleListenerBuilder<E>.() -> Unit): EventListener","love.forte.simbot.core.event.buildSimpleListener"]},{"name":"inline fun <E : Event> buildSimpleListenerRegistrationDescription(block: SimpleListenerRegistrationDescriptionBuilder<E>.() -> Unit): EventListenerRegistrationDescription","description":"love.forte.simbot.core.event.buildSimpleListenerRegistrationDescription","location":"simbot-core/love.forte.simbot.core.event/build-simple-listener-registration-description.html","searchKeys":["buildSimpleListenerRegistrationDescription","inline fun <E : Event> buildSimpleListenerRegistrationDescription(block: SimpleListenerRegistrationDescriptionBuilder<E>.() -> Unit): EventListenerRegistrationDescription","love.forte.simbot.core.event.buildSimpleListenerRegistrationDescription"]},{"name":"inline fun <E : Event> buildSimpleListenerRegistrationDescription(target: Event.Key<E>, block: SimpleListenerRegistrationDescriptionBuilder<E>.() -> Unit): EventListenerRegistrationDescription","description":"love.forte.simbot.core.event.buildSimpleListenerRegistrationDescription","location":"simbot-core/love.forte.simbot.core.event/build-simple-listener-registration-description.html","searchKeys":["buildSimpleListenerRegistrationDescription","inline fun <E : Event> buildSimpleListenerRegistrationDescription(target: Event.Key<E>, block: SimpleListenerRegistrationDescriptionBuilder<E>.() -> Unit): EventListenerRegistrationDescription","love.forte.simbot.core.event.buildSimpleListenerRegistrationDescription"]},{"name":"inline fun <E : Event> simpleListener(attributes: AttributeContainer? = null, crossinline matcher: suspend EventListenerProcessingContext.(E) -> Boolean = { true }, crossinline function: suspend EventListenerProcessingContext.(E) -> EventResult): EventListener","description":"love.forte.simbot.core.event.simpleListener","location":"simbot-core/love.forte.simbot.core.event/simple-listener.html","searchKeys":["simpleListener","inline fun <E : Event> simpleListener(attributes: AttributeContainer? = null, crossinline matcher: suspend EventListenerProcessingContext.(E) -> Boolean = { true }, crossinline function: suspend EventListenerProcessingContext.(E) -> EventResult): EventListener","love.forte.simbot.core.event.simpleListener"]},{"name":"inline fun <E : Event> simpleListener(target: Event.Key<E>, attributes: AttributeContainer? = null, crossinline matcher: suspend EventListenerProcessingContext.(E) -> Boolean = EventListenerProcessingContext::defaultMatcher, crossinline function: suspend EventListenerProcessingContext.(E) -> EventResult): EventListener","description":"love.forte.simbot.core.event.simpleListener","location":"simbot-core/love.forte.simbot.core.event/simple-listener.html","searchKeys":["simpleListener","inline fun <E : Event> simpleListener(target: Event.Key<E>, attributes: AttributeContainer? = null, crossinline matcher: suspend EventListenerProcessingContext.(E) -> Boolean = EventListenerProcessingContext::defaultMatcher, crossinline function: suspend EventListenerProcessingContext.(E) -> EventResult): EventListener","love.forte.simbot.core.event.simpleListener"]},{"name":"inline fun <E : MessageEvent, M : Message.Element<M>> SimpleListenerBuilder<E>.matchMessage(messageKey: Message.Key<M>, require: Boolean = true, crossinline matcher: suspend EventListenerProcessingContext.(E, M, index: Int) -> Boolean)","description":"love.forte.simbot.core.event.matchMessage","location":"simbot-core/love.forte.simbot.core.event/match-message.html","searchKeys":["matchMessage","inline fun <E : MessageEvent, M : Message.Element<M>> SimpleListenerBuilder<E>.matchMessage(messageKey: Message.Key<M>, require: Boolean = true, crossinline matcher: suspend EventListenerProcessingContext.(E, M, index: Int) -> Boolean)","love.forte.simbot.core.event.matchMessage"]},{"name":"inline fun <E : MessageEvent> SimpleListenerBuilder<E>.matchText(crossinline textProvider: suspend EventListenerProcessingContext.(E) -> String)","description":"love.forte.simbot.core.event.matchText","location":"simbot-core/love.forte.simbot.core.event/match-text.html","searchKeys":["matchText","inline fun <E : MessageEvent> SimpleListenerBuilder<E>.matchText(crossinline textProvider: suspend EventListenerProcessingContext.(E) -> String)","love.forte.simbot.core.event.matchText"]},{"name":"inline fun <R> EventProcessingContext.inSession(block: ContinuousSessionContext.() -> R): R","description":"love.forte.simbot.core.event.inSession","location":"simbot-core/love.forte.simbot.core.event/in-session.html","searchKeys":["inSession","inline fun <R> EventProcessingContext.inSession(block: ContinuousSessionContext.() -> R): R","love.forte.simbot.core.event.inSession"]},{"name":"inline fun EventListenerProcessingContext.eventResult(content: Any? = null, isTruncated: Boolean = false): EventResult","description":"love.forte.simbot.core.event.EventListenerRegistrationDescriptionsGenerator.eventResult","location":"simbot-core/love.forte.simbot.core.event/-event-listener-registration-descriptions-generator/event-result.html","searchKeys":["eventResult","inline fun EventListenerProcessingContext.eventResult(content: Any? = null, isTruncated: Boolean = false): EventResult","love.forte.simbot.core.event.EventListenerRegistrationDescriptionsGenerator.eventResult"]},{"name":"inline fun EventListenerRegistrar.listeners(block: EventListenerRegistrationDescriptionsGenerator.() -> Unit)","description":"love.forte.simbot.core.event.listeners","location":"simbot-core/love.forte.simbot.core.event/listeners.html","searchKeys":["listeners","inline fun EventListenerRegistrar.listeners(block: EventListenerRegistrationDescriptionsGenerator.() -> Unit)","love.forte.simbot.core.event.listeners"]},{"name":"inline fun EventProcessableApplicationBuilder<*>.listeners(crossinline block: EventListenerRegistrationDescriptionsGenerator.(environment: Application.Environment) -> Unit)","description":"love.forte.simbot.core.application.listeners","location":"simbot-core/love.forte.simbot.core.application/listeners.html","searchKeys":["listeners","inline fun EventProcessableApplicationBuilder<*>.listeners(crossinline block: EventListenerRegistrationDescriptionsGenerator.(environment: Application.Environment) -> Unit)","love.forte.simbot.core.application.listeners"]},{"name":"inline fun process(crossinline func: suspend EventListenerProcessingContext.(E) -> Unit)","description":"love.forte.simbot.core.event.SimpleListenerBuilder.process","location":"simbot-core/love.forte.simbot.core.event/-simple-listener-builder/process.html","searchKeys":["process","inline fun process(crossinline func: suspend EventListenerProcessingContext.(E) -> Unit)","love.forte.simbot.core.event.SimpleListenerBuilder.process"]},{"name":"inline fun simpleListener(targets: Collection<Event.Key<*>>, attributes: AttributeContainer? = null, crossinline matcher: suspend EventListenerProcessingContext.() -> Boolean = { true }, crossinline function: suspend EventListenerProcessingContext.() -> EventResult): EventListener","description":"love.forte.simbot.core.event.simpleListener","location":"simbot-core/love.forte.simbot.core.event/simple-listener.html","searchKeys":["simpleListener","inline fun simpleListener(targets: Collection<Event.Key<*>>, attributes: AttributeContainer? = null, crossinline matcher: suspend EventListenerProcessingContext.() -> Boolean = { true }, crossinline function: suspend EventListenerProcessingContext.() -> EventResult): EventListener","love.forte.simbot.core.event.simpleListener"]},{"name":"inline fun simpleListenerManager(initial: SimpleListenerManagerConfiguration = SimpleListenerManagerConfiguration(), block: SimpleListenerManagerConfiguration.() -> Unit): SimpleEventListenerManager","description":"love.forte.simbot.core.event.simpleListenerManager","location":"simbot-core/love.forte.simbot.core.event/simple-listener-manager.html","searchKeys":["simpleListenerManager","inline fun simpleListenerManager(initial: SimpleListenerManagerConfiguration = SimpleListenerManagerConfiguration(), block: SimpleListenerManagerConfiguration.() -> Unit): SimpleEventListenerManager","love.forte.simbot.core.event.simpleListenerManager"]},{"name":"inline operator fun <E : Event> Event.Key<E>.invoke(crossinline processFunction: suspend EventListenerProcessingContext.(E) -> Unit): EventListenerRegistrationDescriptionsGenerator.EventHandling<E>","description":"love.forte.simbot.core.event.EventListenerRegistrationDescriptionsGenerator.invoke","location":"simbot-core/love.forte.simbot.core.event/-event-listener-registration-descriptions-generator/invoke.html","searchKeys":["invoke","inline operator fun <E : Event> Event.Key<E>.invoke(crossinline processFunction: suspend EventListenerProcessingContext.(E) -> Unit): EventListenerRegistrationDescriptionsGenerator.EventHandling<E>","love.forte.simbot.core.event.EventListenerRegistrationDescriptionsGenerator.invoke"]},{"name":"inline operator fun invoke(block: SimpleListenerManagerConfiguration.() -> Unit): SimpleListenerManagerConfiguration","description":"love.forte.simbot.core.event.SimpleListenerManagerConfiguration.Companion.invoke","location":"simbot-core/love.forte.simbot.core.event/-simple-listener-manager-configuration/-companion/invoke.html","searchKeys":["invoke","inline operator fun invoke(block: SimpleListenerManagerConfiguration.() -> Unit): SimpleListenerManagerConfiguration","love.forte.simbot.core.event.SimpleListenerManagerConfiguration.Companion.invoke"]},{"name":"interface EventListenersGenerator","description":"love.forte.simbot.core.event.EventListenersGenerator","location":"simbot-core/love.forte.simbot.core.event/-event-listeners-generator/index.html","searchKeys":["EventListenersGenerator","interface EventListenersGenerator","love.forte.simbot.core.event.EventListenersGenerator"]},{"name":"interface EventProcessableApplicationBuilder<A : Application> : ApplicationBuilder<A> ","description":"love.forte.simbot.core.application.EventProcessableApplicationBuilder","location":"simbot-core/love.forte.simbot.core.application/-event-processable-application-builder/index.html","searchKeys":["EventProcessableApplicationBuilder","interface EventProcessableApplicationBuilder<A : Application> : ApplicationBuilder<A> ","love.forte.simbot.core.application.EventProcessableApplicationBuilder"]},{"name":"interface EventProcessingContextResolver<C : EventProcessingContext>","description":"love.forte.simbot.core.event.EventProcessingContextResolver","location":"simbot-core/love.forte.simbot.core.event/-event-processing-context-resolver/index.html","searchKeys":["EventProcessingContextResolver","interface EventProcessingContextResolver<C : EventProcessingContext>","love.forte.simbot.core.event.EventProcessingContextResolver"]},{"name":"interface SimpleApplication : Application","description":"love.forte.simbot.core.application.SimpleApplication","location":"simbot-core/love.forte.simbot.core.application/-simple-application/index.html","searchKeys":["SimpleApplication","interface SimpleApplication : Application","love.forte.simbot.core.application.SimpleApplication"]},{"name":"interface SimpleApplicationBuilder : StandardApplicationBuilder<SimpleApplication> ","description":"love.forte.simbot.core.application.SimpleApplicationBuilder","location":"simbot-core/love.forte.simbot.core.application/-simple-application-builder/index.html","searchKeys":["SimpleApplicationBuilder","interface SimpleApplicationBuilder : StandardApplicationBuilder<SimpleApplication> ","love.forte.simbot.core.application.SimpleApplicationBuilder"]},{"name":"interface SimpleEventListenerManager : EventListenerManager","description":"love.forte.simbot.core.event.SimpleEventListenerManager","location":"simbot-core/love.forte.simbot.core.event/-simple-event-listener-manager/index.html","searchKeys":["SimpleEventListenerManager","interface SimpleEventListenerManager : EventListenerManager","love.forte.simbot.core.event.SimpleEventListenerManager"]},{"name":"interface SimpleEventProcessor","description":"love.forte.simbot.core.application.SimpleEventProcessor","location":"simbot-core/love.forte.simbot.core.application/-simple-event-processor/index.html","searchKeys":["SimpleEventProcessor","interface SimpleEventProcessor","love.forte.simbot.core.application.SimpleEventProcessor"]},{"name":"interface StandardApplicationBuilder<A : Application> : EventProcessableApplicationBuilder<A> ","description":"love.forte.simbot.core.application.StandardApplicationBuilder","location":"simbot-core/love.forte.simbot.core.application/-standard-application-builder/index.html","searchKeys":["StandardApplicationBuilder","interface StandardApplicationBuilder<A : Application> : EventProcessableApplicationBuilder<A> ","love.forte.simbot.core.application.StandardApplicationBuilder"]},{"name":"object ApplicationAttributes","description":"love.forte.simbot.core.application.ApplicationAttributes","location":"simbot-core/love.forte.simbot.core.application/-application-attributes/index.html","searchKeys":["ApplicationAttributes","object ApplicationAttributes","love.forte.simbot.core.application.ApplicationAttributes"]},{"name":"object Companion","description":"love.forte.simbot.core.event.EventInterceptEntrance.Companion","location":"simbot-core/love.forte.simbot.core.event/-event-intercept-entrance/-companion/index.html","searchKeys":["Companion","object Companion","love.forte.simbot.core.event.EventInterceptEntrance.Companion"]},{"name":"object Companion","description":"love.forte.simbot.core.event.SimpleEventListenerManager.Companion","location":"simbot-core/love.forte.simbot.core.event/-simple-event-listener-manager/-companion/index.html","searchKeys":["Companion","object Companion","love.forte.simbot.core.event.SimpleEventListenerManager.Companion"]},{"name":"object Companion","description":"love.forte.simbot.core.event.SimpleListener.Companion","location":"simbot-core/love.forte.simbot.core.event/-simple-listener/-companion/index.html","searchKeys":["Companion","object Companion","love.forte.simbot.core.event.SimpleListener.Companion"]},{"name":"object Companion","description":"love.forte.simbot.core.event.SimpleListenerManagerConfiguration.Companion","location":"simbot-core/love.forte.simbot.core.event/-simple-listener-manager-configuration/-companion/index.html","searchKeys":["Companion","object Companion","love.forte.simbot.core.event.SimpleListenerManagerConfiguration.Companion"]},{"name":"object Simple : ApplicationFactory<SimpleApplicationConfiguration, SimpleApplicationBuilder, SimpleApplication> ","description":"love.forte.simbot.core.application.Simple","location":"simbot-core/love.forte.simbot.core.application/-simple/index.html","searchKeys":["Simple","object Simple : ApplicationFactory<SimpleApplicationConfiguration, SimpleApplicationBuilder, SimpleApplication> ","love.forte.simbot.core.application.Simple"]},{"name":"object SimpleScope","description":"love.forte.simbot.core.scope.SimpleScope","location":"simbot-core/love.forte.simbot.core.scope/-simple-scope/index.html","searchKeys":["SimpleScope","object SimpleScope","love.forte.simbot.core.scope.SimpleScope"]},{"name":"open class SimpleApplicationConfiguration : ApplicationConfiguration","description":"love.forte.simbot.core.application.SimpleApplicationConfiguration","location":"simbot-core/love.forte.simbot.core.application/-simple-application-configuration/index.html","searchKeys":["SimpleApplicationConfiguration","open class SimpleApplicationConfiguration : ApplicationConfiguration","love.forte.simbot.core.application.SimpleApplicationConfiguration"]},{"name":"open class SimpleListenerBuilder<E : Event>(val target: Event.Key<E>) : EventListenerBuilder","description":"love.forte.simbot.core.event.SimpleListenerBuilder","location":"simbot-core/love.forte.simbot.core.event/-simple-listener-builder/index.html","searchKeys":["SimpleListenerBuilder","open class SimpleListenerBuilder<E : Event>(val target: Event.Key<E>) : EventListenerBuilder","love.forte.simbot.core.event.SimpleListenerBuilder"]},{"name":"open class SimpleListenerManagerConfiguration","description":"love.forte.simbot.core.event.SimpleListenerManagerConfiguration","location":"simbot-core/love.forte.simbot.core.event/-simple-listener-manager-configuration/index.html","searchKeys":["SimpleListenerManagerConfiguration","open class SimpleListenerManagerConfiguration","love.forte.simbot.core.event.SimpleListenerManagerConfiguration"]},{"name":"open fun initJob()","description":"love.forte.simbot.core.application.SimpleApplicationConfiguration.initJob","location":"simbot-core/love.forte.simbot.core.application/-simple-application-configuration/init-job.html","searchKeys":["initJob","open fun initJob()","love.forte.simbot.core.application.SimpleApplicationConfiguration.initJob"]},{"name":"open operator override fun EventListener.unaryPlus()","description":"love.forte.simbot.core.event.EventListenerRegistrationDescriptionsGenerator.unaryPlus","location":"simbot-core/love.forte.simbot.core.event/-event-listener-registration-descriptions-generator/unary-plus.html","searchKeys":["unaryPlus","open operator override fun EventListener.unaryPlus()","love.forte.simbot.core.event.EventListenerRegistrationDescriptionsGenerator.unaryPlus"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"love.forte.simbot.utils.ListView.equals","location":"simbot-core/love.forte.simbot.utils/-list-view/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","love.forte.simbot.utils.ListView.equals"]},{"name":"open override fun <C : Component, Config : Any> install(componentFactory: ComponentFactory<C, Config>, configurator: Config.(perceivable: CompletionPerceivable<A>) -> Unit)","description":"love.forte.simbot.core.application.BaseApplicationBuilder.install","location":"simbot-core/love.forte.simbot.core.application/-base-application-builder/install.html","searchKeys":["install","open override fun <C : Component, Config : Any> install(componentFactory: ComponentFactory<C, Config>, configurator: Config.(perceivable: CompletionPerceivable<A>) -> Unit)","love.forte.simbot.core.application.BaseApplicationBuilder.install"]},{"name":"open override fun <P : EventProvider, Config : Any> install(eventProviderFactory: EventProviderFactory<P, Config>, configurator: Config.(perceivable: CompletionPerceivable<A>) -> Unit)","description":"love.forte.simbot.core.application.BaseApplicationBuilder.install","location":"simbot-core/love.forte.simbot.core.application/-base-application-builder/install.html","searchKeys":["install","open override fun <P : EventProvider, Config : Any> install(eventProviderFactory: EventProviderFactory<P, Config>, configurator: Config.(perceivable: CompletionPerceivable<A>) -> Unit)","love.forte.simbot.core.application.BaseApplicationBuilder.install"]},{"name":"open override fun <T : Any> getAttribute(attribute: Attribute<T>): T?","description":"love.forte.simbot.core.event.SimpleListener.getAttribute","location":"simbot-core/love.forte.simbot.core.event/-simple-listener/get-attribute.html","searchKeys":["getAttribute","open override fun <T : Any> getAttribute(attribute: Attribute<T>): T?","love.forte.simbot.core.event.SimpleListener.getAttribute"]},{"name":"open override fun bots(registrar: suspend BotRegistrar.() -> Unit)","description":"love.forte.simbot.core.application.BaseApplicationBuilder.bots","location":"simbot-core/love.forte.simbot.core.application/-base-application-builder/bots.html","searchKeys":["bots","open override fun bots(registrar: suspend BotRegistrar.() -> Unit)","love.forte.simbot.core.application.BaseApplicationBuilder.bots"]},{"name":"open override fun build(): EventListener","description":"love.forte.simbot.core.event.SimpleListenerBuilder.build","location":"simbot-core/love.forte.simbot.core.event/-simple-listener-builder/build.html","searchKeys":["build","open override fun build(): EventListener","love.forte.simbot.core.event.SimpleListenerBuilder.build"]},{"name":"open override fun buildDescription(): EventListenerRegistrationDescription","description":"love.forte.simbot.core.event.SimpleListenerRegistrationDescriptionBuilder.buildDescription","location":"simbot-core/love.forte.simbot.core.event/-simple-listener-registration-description-builder/build-description.html","searchKeys":["buildDescription","open override fun buildDescription(): EventListenerRegistrationDescription","love.forte.simbot.core.event.SimpleListenerRegistrationDescriptionBuilder.buildDescription"]},{"name":"open override fun eventProcessor(configurator: SimpleListenerManagerConfiguration.(environment: Application.Environment) -> Unit)","description":"love.forte.simbot.core.application.BaseStandardApplicationBuilder.eventProcessor","location":"simbot-core/love.forte.simbot.core.application/-base-standard-application-builder/event-processor.html","searchKeys":["eventProcessor","open override fun eventProcessor(configurator: SimpleListenerManagerConfiguration.(environment: Application.Environment) -> Unit)","love.forte.simbot.core.application.BaseStandardApplicationBuilder.eventProcessor"]},{"name":"open override fun hashCode(): Int","description":"love.forte.simbot.utils.ListView.hashCode","location":"simbot-core/love.forte.simbot.utils/-list-view/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","love.forte.simbot.utils.ListView.hashCode"]},{"name":"open override fun isTarget(eventType: Event.Key<*>): Boolean","description":"love.forte.simbot.core.event.SimpleListener.isTarget","location":"simbot-core/love.forte.simbot.core.event/-simple-listener/is-target.html","searchKeys":["isTarget","open override fun isTarget(eventType: Event.Key<*>): Boolean","love.forte.simbot.core.event.SimpleListener.isTarget"]},{"name":"open override fun listener(listener: EventListener): EventListenerRegistrationDescriptionsGenerator","description":"love.forte.simbot.core.event.EventListenerRegistrationDescriptionsGenerator.listener","location":"simbot-core/love.forte.simbot.core.event/-event-listener-registration-descriptions-generator/listener.html","searchKeys":["listener","open override fun listener(listener: EventListener): EventListenerRegistrationDescriptionsGenerator","love.forte.simbot.core.event.EventListenerRegistrationDescriptionsGenerator.listener"]},{"name":"open override fun onCompletion(handle: suspend (application: A) -> Unit)","description":"love.forte.simbot.core.application.BaseApplicationBuilder.onCompletion","location":"simbot-core/love.forte.simbot.core.application/-base-application-builder/on-completion.html","searchKeys":["onCompletion","open override fun onCompletion(handle: suspend (application: A) -> Unit)","love.forte.simbot.core.application.BaseApplicationBuilder.onCompletion"]},{"name":"open override fun toString(): String","description":"love.forte.simbot.core.event.SimpleListener.toString","location":"simbot-core/love.forte.simbot.core.event/-simple-listener/to-string.html","searchKeys":["toString","open override fun toString(): String","love.forte.simbot.core.event.SimpleListener.toString"]},{"name":"open override fun toString(): String","description":"love.forte.simbot.utils.ListView.toString","location":"simbot-core/love.forte.simbot.utils/-list-view/to-string.html","searchKeys":["toString","open override fun toString(): String","love.forte.simbot.utils.ListView.toString"]},{"name":"open override val botManagers: BotManagers","description":"love.forte.simbot.core.application.BaseApplication.botManagers","location":"simbot-core/love.forte.simbot.core.application/-base-application/bot-managers.html","searchKeys":["botManagers","open override val botManagers: BotManagers","love.forte.simbot.core.application.BaseApplication.botManagers"]},{"name":"open override val interceptFunction: suspend (EventListenerInterceptor.Context) -> EventResult","description":"love.forte.simbot.core.event.SimpleFunctionalEventListenerInterceptor.interceptFunction","location":"simbot-core/love.forte.simbot.core.event/-simple-functional-event-listener-interceptor/intercept-function.html","searchKeys":["interceptFunction","open override val interceptFunction: suspend (EventListenerInterceptor.Context) -> EventResult","love.forte.simbot.core.event.SimpleFunctionalEventListenerInterceptor.interceptFunction"]},{"name":"open override val interceptFunction: suspend (EventProcessingInterceptor.Context) -> EventProcessingResult","description":"love.forte.simbot.core.event.SimpleFunctionalEventProcessingInterceptor.interceptFunction","location":"simbot-core/love.forte.simbot.core.event/-simple-functional-event-processing-interceptor/intercept-function.html","searchKeys":["interceptFunction","open override val interceptFunction: suspend (EventProcessingInterceptor.Context) -> EventProcessingResult","love.forte.simbot.core.event.SimpleFunctionalEventProcessingInterceptor.interceptFunction"]},{"name":"open override val point: EventListenerInterceptor.Point","description":"love.forte.simbot.core.event.SimpleFunctionalEventListenerInterceptor.point","location":"simbot-core/love.forte.simbot.core.event/-simple-functional-event-listener-interceptor/point.html","searchKeys":["point","open override val point: EventListenerInterceptor.Point","love.forte.simbot.core.event.SimpleFunctionalEventListenerInterceptor.point"]},{"name":"open override val priority: Int","description":"love.forte.simbot.core.event.SimpleFunctionalEventListenerInterceptor.priority","location":"simbot-core/love.forte.simbot.core.event/-simple-functional-event-listener-interceptor/priority.html","searchKeys":["priority","open override val priority: Int","love.forte.simbot.core.event.SimpleFunctionalEventListenerInterceptor.priority"]},{"name":"open override val priority: Int","description":"love.forte.simbot.core.event.SimpleFunctionalEventProcessingInterceptor.priority","location":"simbot-core/love.forte.simbot.core.event/-simple-functional-event-processing-interceptor/priority.html","searchKeys":["priority","open override val priority: Int","love.forte.simbot.core.event.SimpleFunctionalEventProcessingInterceptor.priority"]},{"name":"open suspend operator override fun invoke(context: EventListenerProcessingContext): EventResult","description":"love.forte.simbot.core.event.SimpleListener.invoke","location":"simbot-core/love.forte.simbot.core.event/-simple-listener/invoke.html","searchKeys":["invoke","open suspend operator override fun invoke(context: EventListenerProcessingContext): EventResult","love.forte.simbot.core.event.SimpleListener.invoke"]},{"name":"open suspend override fun create(configurator: SimpleApplicationConfiguration.() -> Unit, builder: suspend SimpleApplicationBuilder.(SimpleApplicationConfiguration) -> Unit): SimpleApplication","description":"love.forte.simbot.core.application.Simple.create","location":"simbot-core/love.forte.simbot.core.application/-simple/create.html","searchKeys":["create","open suspend override fun create(configurator: SimpleApplicationConfiguration.() -> Unit, builder: suspend SimpleApplicationBuilder.(SimpleApplicationConfiguration) -> Unit): SimpleApplication","love.forte.simbot.core.application.Simple.create"]},{"name":"open suspend override fun intercept(context: C): R","description":"love.forte.simbot.core.event.SimpleFunctionalEventInterceptor.intercept","location":"simbot-core/love.forte.simbot.core.event/-simple-functional-event-interceptor/intercept.html","searchKeys":["intercept","open suspend override fun intercept(context: C): R","love.forte.simbot.core.event.SimpleFunctionalEventInterceptor.intercept"]},{"name":"open suspend override fun join()","description":"love.forte.simbot.core.application.BaseApplication.join","location":"simbot-core/love.forte.simbot.core.application/-base-application/join.html","searchKeys":["join","open suspend override fun join()","love.forte.simbot.core.application.BaseApplication.join"]},{"name":"open suspend override fun match(context: EventListenerProcessingContext): Boolean","description":"love.forte.simbot.core.event.SimpleListener.match","location":"simbot-core/love.forte.simbot.core.event/-simple-listener/match.html","searchKeys":["match","open suspend override fun match(context: EventListenerProcessingContext): Boolean","love.forte.simbot.core.event.SimpleListener.match"]},{"name":"open suspend override fun shutdown(reason: Throwable?)","description":"love.forte.simbot.core.application.BaseApplication.shutdown","location":"simbot-core/love.forte.simbot.core.application/-base-application/shutdown.html","searchKeys":["shutdown","open suspend override fun shutdown(reason: Throwable?)","love.forte.simbot.core.application.BaseApplication.shutdown"]},{"name":"operator fun EventListener.plus(filter: EventFilter): EventListener","description":"love.forte.simbot.core.event.plus","location":"simbot-core/love.forte.simbot.core.event/plus.html","searchKeys":["plus","operator fun EventListener.plus(filter: EventFilter): EventListener","love.forte.simbot.core.event.plus"]},{"name":"operator fun EventListener.plus(filters: Iterable<EventFilter>): EventListener","description":"love.forte.simbot.core.event.plus","location":"simbot-core/love.forte.simbot.core.event/plus.html","searchKeys":["plus","operator fun EventListener.plus(filters: Iterable<EventFilter>): EventListener","love.forte.simbot.core.event.plus"]},{"name":"operator fun EventListenerRegistrationDescription.unaryPlus()","description":"love.forte.simbot.core.event.EventListenerRegistrationDescriptionsGenerator.unaryPlus","location":"simbot-core/love.forte.simbot.core.event/-event-listener-registration-descriptions-generator/unary-plus.html","searchKeys":["unaryPlus","operator fun EventListenerRegistrationDescription.unaryPlus()","love.forte.simbot.core.event.EventListenerRegistrationDescriptionsGenerator.unaryPlus"]},{"name":"protected abstract val context: C","description":"love.forte.simbot.core.event.EventInterceptEntrance.IteratorInterceptorContext.context","location":"simbot-core/love.forte.simbot.core.event/-event-intercept-entrance/-iterator-interceptor-context/context.html","searchKeys":["context","protected abstract val context: C","love.forte.simbot.core.event.EventInterceptEntrance.IteratorInterceptorContext.context"]},{"name":"protected abstract val logger: Logger","description":"love.forte.simbot.core.application.BaseApplication.logger","location":"simbot-core/love.forte.simbot.core.application/-base-application/logger.html","searchKeys":["logger","protected abstract val logger: Logger","love.forte.simbot.core.application.BaseApplication.logger"]},{"name":"protected fun SimpleFunctionalEventInterceptor()","description":"love.forte.simbot.core.event.SimpleFunctionalEventInterceptor.SimpleFunctionalEventInterceptor","location":"simbot-core/love.forte.simbot.core.event/-simple-functional-event-interceptor/-simple-functional-event-interceptor.html","searchKeys":["SimpleFunctionalEventInterceptor","protected fun SimpleFunctionalEventInterceptor()","love.forte.simbot.core.event.SimpleFunctionalEventInterceptor.SimpleFunctionalEventInterceptor"]},{"name":"protected fun componentFactoriesSize(): Int","description":"love.forte.simbot.core.application.BaseApplicationBuilder.componentFactoriesSize","location":"simbot-core/love.forte.simbot.core.application/-base-application-builder/component-factories-size.html","searchKeys":["componentFactoriesSize","protected fun componentFactoriesSize(): Int","love.forte.simbot.core.application.BaseApplicationBuilder.componentFactoriesSize"]},{"name":"protected fun eventProviderFactoriesSize(): Int","description":"love.forte.simbot.core.application.BaseApplicationBuilder.eventProviderFactoriesSize","location":"simbot-core/love.forte.simbot.core.application/-base-application-builder/event-provider-factories-size.html","searchKeys":["eventProviderFactoriesSize","protected fun eventProviderFactoriesSize(): Int","love.forte.simbot.core.application.BaseApplicationBuilder.eventProviderFactoriesSize"]},{"name":"protected open fun addListenerManagerConfig(configurator: SimpleListenerManagerConfiguration.(environment: Application.Environment) -> Unit)","description":"love.forte.simbot.core.application.BaseStandardApplicationBuilder.addListenerManagerConfig","location":"simbot-core/love.forte.simbot.core.application/-base-standard-application-builder/add-listener-manager-config.html","searchKeys":["addListenerManagerConfig","protected open fun addListenerManagerConfig(configurator: SimpleListenerManagerConfiguration.(environment: Application.Environment) -> Unit)","love.forte.simbot.core.application.BaseStandardApplicationBuilder.addListenerManagerConfig"]},{"name":"protected open fun buildListenerManager(appConfig: ApplicationConfiguration, environment: Application.Environment): SimpleEventListenerManager","description":"love.forte.simbot.core.application.BaseStandardApplicationBuilder.buildListenerManager","location":"simbot-core/love.forte.simbot.core.application/-base-standard-application-builder/build-listener-manager.html","searchKeys":["buildListenerManager","protected open fun buildListenerManager(appConfig: ApplicationConfiguration, environment: Application.Environment): SimpleEventListenerManager","love.forte.simbot.core.application.BaseStandardApplicationBuilder.buildListenerManager"]},{"name":"protected open suspend fun stopAll(reason: Throwable?)","description":"love.forte.simbot.core.application.BaseApplication.stopAll","location":"simbot-core/love.forte.simbot.core.application/-base-application/stop-all.html","searchKeys":["stopAll","protected open suspend fun stopAll(reason: Throwable?)","love.forte.simbot.core.application.BaseApplication.stopAll"]},{"name":"protected suspend fun buildComponents(): List<Component>","description":"love.forte.simbot.core.application.BaseApplicationBuilder.buildComponents","location":"simbot-core/love.forte.simbot.core.application/-base-application-builder/build-components.html","searchKeys":["buildComponents","protected suspend fun buildComponents(): List<Component>","love.forte.simbot.core.application.BaseApplicationBuilder.buildComponents"]},{"name":"protected suspend fun buildProviders(eventProcessor: EventProcessor, components: List<Component>, applicationConfiguration: ApplicationConfiguration): List<EventProvider>","description":"love.forte.simbot.core.application.BaseApplicationBuilder.buildProviders","location":"simbot-core/love.forte.simbot.core.application/-base-application-builder/build-providers.html","searchKeys":["buildProviders","protected suspend fun buildProviders(eventProcessor: EventProcessor, components: List<Component>, applicationConfiguration: ApplicationConfiguration): List<EventProvider>","love.forte.simbot.core.application.BaseApplicationBuilder.buildProviders"]},{"name":"protected suspend fun complete(application: A)","description":"love.forte.simbot.core.application.BaseApplicationBuilder.complete","location":"simbot-core/love.forte.simbot.core.application/-base-application-builder/complete.html","searchKeys":["complete","protected suspend fun complete(application: A)","love.forte.simbot.core.application.BaseApplicationBuilder.complete"]},{"name":"protected suspend fun doProceed(): R","description":"love.forte.simbot.core.event.EventInterceptEntrance.IteratorInterceptorContext.doProceed","location":"simbot-core/love.forte.simbot.core.event/-event-intercept-entrance/-iterator-interceptor-context/do-proceed.html","searchKeys":["doProceed","protected suspend fun doProceed(): R","love.forte.simbot.core.event.EventInterceptEntrance.IteratorInterceptorContext.doProceed"]},{"name":"protected suspend fun registerBots(providers: List<EventProvider>): List<Bot>","description":"love.forte.simbot.core.application.BaseApplicationBuilder.registerBots","location":"simbot-core/love.forte.simbot.core.application/-base-application-builder/register-bots.html","searchKeys":["registerBots","protected suspend fun registerBots(providers: List<EventProvider>): List<Bot>","love.forte.simbot.core.application.BaseApplicationBuilder.registerBots"]},{"name":"sealed class SimpleFunctionalEventInterceptor<C : EventInterceptor.Context<R>, R> : Interceptor<C, R> ","description":"love.forte.simbot.core.event.SimpleFunctionalEventInterceptor","location":"simbot-core/love.forte.simbot.core.event/-simple-functional-event-interceptor/index.html","searchKeys":["SimpleFunctionalEventInterceptor","sealed class SimpleFunctionalEventInterceptor<C : EventInterceptor.Context<R>, R> : Interceptor<C, R> ","love.forte.simbot.core.event.SimpleFunctionalEventInterceptor"]},{"name":"suspend fun createSimpleApplication(configurator: SimpleApplicationConfiguration.() -> Unit = {}, builder: SimpleApplicationBuilder.(SimpleApplicationConfiguration) -> Unit = {}): SimpleApplication","description":"love.forte.simbot.core.application.createSimpleApplication","location":"simbot-core/love.forte.simbot.core.application/create-simple-application.html","searchKeys":["createSimpleApplication","suspend fun createSimpleApplication(configurator: SimpleApplicationConfiguration.() -> Unit = {}, builder: SimpleApplicationBuilder.(SimpleApplicationConfiguration) -> Unit = {}): SimpleApplication","love.forte.simbot.core.application.createSimpleApplication"]},{"name":"val Application: Attribute<Application>","description":"love.forte.simbot.core.application.ApplicationAttributes.Application","location":"simbot-core/love.forte.simbot.core.application/-application-attributes/-application.html","searchKeys":["Application","val Application: Attribute<Application>","love.forte.simbot.core.application.ApplicationAttributes.Application"]},{"name":"val ContinuousSession: Attribute<ContinuousSessionContext>","description":"love.forte.simbot.core.scope.SimpleScope.ContinuousSession","location":"simbot-core/love.forte.simbot.core.scope/-simple-scope/-continuous-session.html","searchKeys":["ContinuousSession","val ContinuousSession: Attribute<ContinuousSessionContext>","love.forte.simbot.core.scope.SimpleScope.ContinuousSession"]},{"name":"val EventProcessingContext.application: Application","description":"love.forte.simbot.core.application.ApplicationAttributes.application","location":"simbot-core/love.forte.simbot.core.application/-application-attributes/application.html","searchKeys":["application","val EventProcessingContext.application: Application","love.forte.simbot.core.application.ApplicationAttributes.application"]},{"name":"val EventProcessingContext.applicationOrNull: Application?","description":"love.forte.simbot.core.application.ApplicationAttributes.applicationOrNull","location":"simbot-core/love.forte.simbot.core.application/-application-attributes/application-or-null.html","searchKeys":["applicationOrNull","val EventProcessingContext.applicationOrNull: Application?","love.forte.simbot.core.application.ApplicationAttributes.applicationOrNull"]},{"name":"val EventProcessingContext.continuousSession: ContinuousSessionContext","description":"love.forte.simbot.core.scope.SimpleScope.continuousSession","location":"simbot-core/love.forte.simbot.core.scope/-simple-scope/continuous-session.html","searchKeys":["continuousSession","val EventProcessingContext.continuousSession: ContinuousSessionContext","love.forte.simbot.core.scope.SimpleScope.continuousSession"]},{"name":"val EventProcessingContext.continuousSessionOrNull: ContinuousSessionContext?","description":"love.forte.simbot.core.scope.SimpleScope.continuousSessionOrNull","location":"simbot-core/love.forte.simbot.core.scope/-simple-scope/continuous-session-or-null.html","searchKeys":["continuousSessionOrNull","val EventProcessingContext.continuousSessionOrNull: ContinuousSessionContext?","love.forte.simbot.core.scope.SimpleScope.continuousSessionOrNull"]},{"name":"val EventProcessingContext.global: ScopeContext","description":"love.forte.simbot.core.scope.SimpleScope.global","location":"simbot-core/love.forte.simbot.core.scope/-simple-scope/global.html","searchKeys":["global","val EventProcessingContext.global: ScopeContext","love.forte.simbot.core.scope.SimpleScope.global"]},{"name":"val EventProcessingContext.globalOrNull: ScopeContext?","description":"love.forte.simbot.core.scope.SimpleScope.globalOrNull","location":"simbot-core/love.forte.simbot.core.scope/-simple-scope/global-or-null.html","searchKeys":["globalOrNull","val EventProcessingContext.globalOrNull: ScopeContext?","love.forte.simbot.core.scope.SimpleScope.globalOrNull"]},{"name":"val Global: Attribute<ScopeContext>","description":"love.forte.simbot.core.scope.SimpleScope.Global","location":"simbot-core/love.forte.simbot.core.scope/-simple-scope/-global.html","searchKeys":["Global","val Global: Attribute<ScopeContext>","love.forte.simbot.core.scope.SimpleScope.Global"]},{"name":"val listenerInterceptors: Map<ID, EventListenerInterceptor>","description":"love.forte.simbot.core.event.EventInterceptorsGenerator.listenerInterceptors","location":"simbot-core/love.forte.simbot.core.event/-event-interceptors-generator/listener-interceptors.html","searchKeys":["listenerInterceptors","val listenerInterceptors: Map<ID, EventListenerInterceptor>","love.forte.simbot.core.event.EventInterceptorsGenerator.listenerInterceptors"]},{"name":"val processingInterceptors: Map<ID, EventProcessingInterceptor>","description":"love.forte.simbot.core.event.EventInterceptorsGenerator.processingInterceptors","location":"simbot-core/love.forte.simbot.core.event/-event-interceptors-generator/processing-interceptors.html","searchKeys":["processingInterceptors","val processingInterceptors: Map<ID, EventProcessingInterceptor>","love.forte.simbot.core.event.EventInterceptorsGenerator.processingInterceptors"]},{"name":"val target: Event.Key<E>","description":"love.forte.simbot.core.event.SimpleListenerBuilder.target","location":"simbot-core/love.forte.simbot.core.event/-simple-listener-builder/target.html","searchKeys":["target","val target: Event.Key<E>","love.forte.simbot.core.event.SimpleListenerBuilder.target"]},{"name":"value class EventHandling<E : Event>","description":"love.forte.simbot.core.event.EventListenerRegistrationDescriptionsGenerator.EventHandling","location":"simbot-core/love.forte.simbot.core.event/-event-listener-registration-descriptions-generator/-event-handling/index.html","searchKeys":["EventHandling","value class EventHandling<E : Event>","love.forte.simbot.core.event.EventListenerRegistrationDescriptionsGenerator.EventHandling"]},{"name":"var coroutineContext: CoroutineContext","description":"love.forte.simbot.core.event.SimpleListenerManagerConfiguration.coroutineContext","location":"simbot-core/love.forte.simbot.core.event/-simple-listener-manager-configuration/coroutine-context.html","searchKeys":["coroutineContext","var coroutineContext: CoroutineContext","love.forte.simbot.core.event.SimpleListenerManagerConfiguration.coroutineContext"]},{"name":"var isAsync: Boolean","description":"love.forte.simbot.core.event.SimpleListenerRegistrationDescriptionBuilder.isAsync","location":"simbot-core/love.forte.simbot.core.event/-simple-listener-registration-description-builder/is-async.html","searchKeys":["isAsync","var isAsync: Boolean","love.forte.simbot.core.event.SimpleListenerRegistrationDescriptionBuilder.isAsync"]},{"name":"var priority: Int","description":"love.forte.simbot.core.event.SimpleListenerRegistrationDescriptionBuilder.priority","location":"simbot-core/love.forte.simbot.core.event/-simple-listener-registration-description-builder/priority.html","searchKeys":["priority","var priority: Int","love.forte.simbot.core.event.SimpleListenerRegistrationDescriptionBuilder.priority"]},{"name":"ALL","description":"love.forte.simboot.filter.MultiFilterMatchType.ALL","location":"simboot-api/love.forte.simboot.filter/-multi-filter-match-type/-a-l-l/index.html","searchKeys":["ALL","ALL","love.forte.simboot.filter.MultiFilterMatchType.ALL"]},{"name":"ANY","description":"love.forte.simboot.filter.MultiFilterMatchType.ANY","location":"simboot-api/love.forte.simboot.filter/-multi-filter-match-type/-a-n-y/index.html","searchKeys":["ANY","ANY","love.forte.simboot.filter.MultiFilterMatchType.ANY"]},{"name":"CONTAINS","description":"love.forte.simboot.filter.KeywordRegexMatchers.CONTAINS","location":"simboot-api/love.forte.simboot.filter/-keyword-regex-matchers/-c-o-n-t-a-i-n-s/index.html","searchKeys":["CONTAINS","CONTAINS","love.forte.simboot.filter.KeywordRegexMatchers.CONTAINS"]},{"name":"CONTAINS","description":"love.forte.simboot.filter.StringMatchers.CONTAINS","location":"simboot-api/love.forte.simboot.filter/-string-matchers/-c-o-n-t-a-i-n-s/index.html","searchKeys":["CONTAINS","CONTAINS","love.forte.simboot.filter.StringMatchers.CONTAINS"]},{"name":"ENDS_WITH","description":"love.forte.simboot.filter.StringMatchers.ENDS_WITH","location":"simboot-api/love.forte.simboot.filter/-string-matchers/-e-n-d-s_-w-i-t-h/index.html","searchKeys":["ENDS_WITH","ENDS_WITH","love.forte.simboot.filter.StringMatchers.ENDS_WITH"]},{"name":"EQUALS","description":"love.forte.simboot.filter.StringMatchers.EQUALS","location":"simboot-api/love.forte.simboot.filter/-string-matchers/-e-q-u-a-l-s/index.html","searchKeys":["EQUALS","EQUALS","love.forte.simboot.filter.StringMatchers.EQUALS"]},{"name":"EQUALS_IGNORE_CASE","description":"love.forte.simboot.filter.StringMatchers.EQUALS_IGNORE_CASE","location":"simboot-api/love.forte.simboot.filter/-string-matchers/-e-q-u-a-l-s_-i-g-n-o-r-e_-c-a-s-e/index.html","searchKeys":["EQUALS_IGNORE_CASE","EQUALS_IGNORE_CASE","love.forte.simboot.filter.StringMatchers.EQUALS_IGNORE_CASE"]},{"name":"MATCHES","description":"love.forte.simboot.filter.KeywordRegexMatchers.MATCHES","location":"simboot-api/love.forte.simboot.filter/-keyword-regex-matchers/-m-a-t-c-h-e-s/index.html","searchKeys":["MATCHES","MATCHES","love.forte.simboot.filter.KeywordRegexMatchers.MATCHES"]},{"name":"NONE","description":"love.forte.simboot.filter.MultiFilterMatchType.NONE","location":"simboot-api/love.forte.simboot.filter/-multi-filter-match-type/-n-o-n-e/index.html","searchKeys":["NONE","NONE","love.forte.simboot.filter.MultiFilterMatchType.NONE"]},{"name":"REGEX_CONTAINS","description":"love.forte.simboot.filter.MatchType.REGEX_CONTAINS","location":"simboot-api/love.forte.simboot.filter/-match-type/-r-e-g-e-x_-c-o-n-t-a-i-n-s/index.html","searchKeys":["REGEX_CONTAINS","REGEX_CONTAINS","love.forte.simboot.filter.MatchType.REGEX_CONTAINS"]},{"name":"REGEX_MATCHES","description":"love.forte.simboot.filter.MatchType.REGEX_MATCHES","location":"simboot-api/love.forte.simboot.filter/-match-type/-r-e-g-e-x_-m-a-t-c-h-e-s/index.html","searchKeys":["REGEX_MATCHES","REGEX_MATCHES","love.forte.simboot.filter.MatchType.REGEX_MATCHES"]},{"name":"STARTS_WITH","description":"love.forte.simboot.filter.StringMatchers.STARTS_WITH","location":"simboot-api/love.forte.simboot.filter/-string-matchers/-s-t-a-r-t-s_-w-i-t-h/index.html","searchKeys":["STARTS_WITH","STARTS_WITH","love.forte.simboot.filter.StringMatchers.STARTS_WITH"]},{"name":"TEXT_CONTAINS","description":"love.forte.simboot.filter.MatchType.TEXT_CONTAINS","location":"simboot-api/love.forte.simboot.filter/-match-type/-t-e-x-t_-c-o-n-t-a-i-n-s/index.html","searchKeys":["TEXT_CONTAINS","TEXT_CONTAINS","love.forte.simboot.filter.MatchType.TEXT_CONTAINS"]},{"name":"TEXT_ENDS_WITH","description":"love.forte.simboot.filter.MatchType.TEXT_ENDS_WITH","location":"simboot-api/love.forte.simboot.filter/-match-type/-t-e-x-t_-e-n-d-s_-w-i-t-h/index.html","searchKeys":["TEXT_ENDS_WITH","TEXT_ENDS_WITH","love.forte.simboot.filter.MatchType.TEXT_ENDS_WITH"]},{"name":"TEXT_EQUALS","description":"love.forte.simboot.filter.MatchType.TEXT_EQUALS","location":"simboot-api/love.forte.simboot.filter/-match-type/-t-e-x-t_-e-q-u-a-l-s/index.html","searchKeys":["TEXT_EQUALS","TEXT_EQUALS","love.forte.simboot.filter.MatchType.TEXT_EQUALS"]},{"name":"TEXT_EQUALS_IGNORE_CASE","description":"love.forte.simboot.filter.MatchType.TEXT_EQUALS_IGNORE_CASE","location":"simboot-api/love.forte.simboot.filter/-match-type/-t-e-x-t_-e-q-u-a-l-s_-i-g-n-o-r-e_-c-a-s-e/index.html","searchKeys":["TEXT_EQUALS_IGNORE_CASE","TEXT_EQUALS_IGNORE_CASE","love.forte.simboot.filter.MatchType.TEXT_EQUALS_IGNORE_CASE"]},{"name":"TEXT_STARTS_WITH","description":"love.forte.simboot.filter.MatchType.TEXT_STARTS_WITH","location":"simboot-api/love.forte.simboot.filter/-match-type/-t-e-x-t_-s-t-a-r-t-s_-w-i-t-h/index.html","searchKeys":["TEXT_STARTS_WITH","TEXT_STARTS_WITH","love.forte.simboot.filter.MatchType.TEXT_STARTS_WITH"]},{"name":"abstract class ComponentRegistryConfigure","description":"love.forte.simboot.config.ComponentRegistryConfigure","location":"simboot-api/love.forte.simboot.config/-component-registry-configure/index.html","searchKeys":["ComponentRegistryConfigure","abstract class ComponentRegistryConfigure","love.forte.simboot.config.ComponentRegistryConfigure"]},{"name":"abstract class FunctionalBindableEventListener<R>(matcher: suspend (EventListenerProcessingContext) -> Boolean, val caller: KFunction<R>) : FunctionalEventListener<R> , GenericBootEventListener","description":"love.forte.simboot.listener.FunctionalBindableEventListener","location":"simboot-api/love.forte.simboot.listener/-functional-bindable-event-listener/index.html","searchKeys":["FunctionalBindableEventListener","abstract class FunctionalBindableEventListener<R>(matcher: suspend (EventListenerProcessingContext) -> Boolean, val caller: KFunction<R>) : FunctionalEventListener<R> , GenericBootEventListener","love.forte.simboot.listener.FunctionalBindableEventListener"]},{"name":"abstract class FunctionalEventListener<R> : GenericBootEventListener","description":"love.forte.simboot.listener.FunctionalEventListener","location":"simboot-api/love.forte.simboot.listener/-functional-event-listener/index.html","searchKeys":["FunctionalEventListener","abstract class FunctionalEventListener<R> : GenericBootEventListener","love.forte.simboot.listener.FunctionalEventListener"]},{"name":"abstract fun getArg(context: EventProcessingContext): Any?","description":"love.forte.simboot.listener.ParameterBlockingBinder.getArg","location":"simboot-api/love.forte.simboot.listener/-parameter-blocking-binder/get-arg.html","searchKeys":["getArg","abstract fun getArg(context: EventProcessingContext): Any?","love.forte.simboot.listener.ParameterBlockingBinder.getArg"]},{"name":"abstract fun getEventListenerManager(): EventListenerManager","description":"love.forte.simboot.factory.EventListenerManagerFactory.getEventListenerManager","location":"simboot-api/love.forte.simboot.factory/-event-listener-manager-factory/get-event-listener-manager.html","searchKeys":["getEventListenerManager","abstract fun getEventListenerManager(): EventListenerManager","love.forte.simboot.factory.EventListenerManagerFactory.getEventListenerManager"]},{"name":"abstract fun getGlobals(): List<ParameterBinderFactory>","description":"love.forte.simboot.listener.ParameterBinderFactoryContainer.getGlobals","location":"simboot-api/love.forte.simboot.listener/-parameter-binder-factory-container/get-globals.html","searchKeys":["getGlobals","abstract fun getGlobals(): List<ParameterBinderFactory>","love.forte.simboot.listener.ParameterBinderFactoryContainer.getGlobals"]},{"name":"abstract fun getParam(name: String, text: String): String?","description":"love.forte.simboot.filter.MatcherValue.getParam","location":"simboot-api/love.forte.simboot.filter/-matcher-value/get-param.html","searchKeys":["getParam","abstract fun getParam(name: String, text: String): String?","love.forte.simboot.filter.MatcherValue.getParam"]},{"name":"abstract fun getParameters(text: String?): MatchParameters","description":"love.forte.simboot.filter.MatcherValue.getParameters","location":"simboot-api/love.forte.simboot.filter/-matcher-value/get-parameters.html","searchKeys":["getParameters","abstract fun getParameters(text: String?): MatchParameters","love.forte.simboot.filter.MatcherValue.getParameters"]},{"name":"abstract fun getString(key: String): String?","description":"love.forte.simboot.Configuration.getString","location":"simboot-api/love.forte.simboot/-configuration/get-string.html","searchKeys":["getString","abstract fun getString(key: String): String?","love.forte.simboot.Configuration.getString"]},{"name":"abstract fun match(target: T, rule: R): Boolean","description":"love.forte.simboot.Matcher.match","location":"simboot-api/love.forte.simboot/-matcher/match.html","searchKeys":["match","abstract fun match(target: T, rule: R): Boolean","love.forte.simboot.Matcher.match"]},{"name":"abstract fun matches(text: String): Boolean","description":"love.forte.simboot.filter.MatcherValue.matches","location":"simboot-api/love.forte.simboot.filter/-matcher-value/matches.html","searchKeys":["matches","abstract fun matches(text: String): Boolean","love.forte.simboot.filter.MatcherValue.matches"]},{"name":"abstract fun prepareInvokeBlocking(context: EventListenerProcessingContext)","description":"love.forte.simboot.interceptor.BlockingListenerPreparer.prepareInvokeBlocking","location":"simboot-api/love.forte.simboot.interceptor/-blocking-listener-preparer/prepare-invoke-blocking.html","searchKeys":["prepareInvokeBlocking","abstract fun prepareInvokeBlocking(context: EventListenerProcessingContext)","love.forte.simboot.interceptor.BlockingListenerPreparer.prepareInvokeBlocking"]},{"name":"abstract fun prepareMatchBlocking(context: EventListenerProcessingContext)","description":"love.forte.simboot.interceptor.BlockingListenerPreparer.prepareMatchBlocking","location":"simboot-api/love.forte.simboot.interceptor/-blocking-listener-preparer/prepare-match-blocking.html","searchKeys":["prepareMatchBlocking","abstract fun prepareMatchBlocking(context: EventListenerProcessingContext)","love.forte.simboot.interceptor.BlockingListenerPreparer.prepareMatchBlocking"]},{"name":"abstract fun process(context: Unit): Boolean","description":"love.forte.simboot.listener.ListenerAnnotationProcessor.process","location":"simboot-api/love.forte.simboot.listener/-listener-annotation-processor/process.html","searchKeys":["process","abstract fun process(context: Unit): Boolean","love.forte.simboot.listener.ListenerAnnotationProcessor.process"]},{"name":"abstract fun process(listenerData: ListenerData, listener: EventListener): EventListener?","description":"love.forte.simboot.listener.ListenerAnnotationPostRegisteredProcessor.process","location":"simboot-api/love.forte.simboot.listener/-listener-annotation-post-registered-processor/process.html","searchKeys":["process","abstract fun process(listenerData: ListenerData, listener: EventListener): EventListener?","love.forte.simboot.listener.ListenerAnnotationPostRegisteredProcessor.process"]},{"name":"abstract fun register(filter: EventFilter)","description":"love.forte.simboot.filter.EventFilterRegistrar.register","location":"simboot-api/love.forte.simboot.filter/-event-filter-registrar/register.html","searchKeys":["register","abstract fun register(filter: EventFilter)","love.forte.simboot.filter.EventFilterRegistrar.register"]},{"name":"abstract fun registerComponent(applicationBuilder: ApplicationBuilder<*>)","description":"love.forte.simboot.config.ComponentRegistryConfigure.registerComponent","location":"simboot-api/love.forte.simboot.config/-component-registry-configure/register-component.html","searchKeys":["registerComponent","abstract fun registerComponent(applicationBuilder: ApplicationBuilder<*>)","love.forte.simboot.config.ComponentRegistryConfigure.registerComponent"]},{"name":"abstract fun resolveFunctionToBinderFactory(beanId: String? = null, function: KFunction<*>): ParameterBinderFactory","description":"love.forte.simboot.listener.ParameterBinderFactoryContainer.resolveFunctionToBinderFactory","location":"simboot-api/love.forte.simboot.listener/-parameter-binder-factory-container/resolve-function-to-binder-factory.html","searchKeys":["resolveFunctionToBinderFactory","abstract fun resolveFunctionToBinderFactory(beanId: String? = null, function: KFunction<*>): ParameterBinderFactory","love.forte.simboot.listener.ParameterBinderFactoryContainer.resolveFunctionToBinderFactory"]},{"name":"abstract fun resolveToBinder(context: ParameterBinderFactory.Context): ParameterBinderResult","description":"love.forte.simboot.listener.ParameterBinderFactory.resolveToBinder","location":"simboot-api/love.forte.simboot.listener/-parameter-binder-factory/resolve-to-binder.html","searchKeys":["resolveToBinder","abstract fun resolveToBinder(context: ParameterBinderFactory.Context): ParameterBinderResult","love.forte.simboot.listener.ParameterBinderFactory.resolveToBinder"]},{"name":"abstract fun run(context: SimbootEntranceContext): SimbootContext","description":"love.forte.simboot.SimbootEntrance.run","location":"simboot-api/love.forte.simboot/-simboot-entrance/run.html","searchKeys":["run","abstract fun run(context: SimbootEntranceContext): SimbootContext","love.forte.simboot.SimbootEntrance.run"]},{"name":"abstract operator fun get(id: String): ParameterBinderFactory?","description":"love.forte.simboot.listener.ParameterBinderFactoryContainer.get","location":"simboot-api/love.forte.simboot.listener/-parameter-binder-factory-container/get.html","searchKeys":["get","abstract operator fun get(id: String): ParameterBinderFactory?","love.forte.simboot.listener.ParameterBinderFactoryContainer.get"]},{"name":"abstract operator fun get(key: String): String?","description":"love.forte.simboot.filter.MatchParameters.get","location":"simboot-api/love.forte.simboot.filter/-match-parameters/get.html","searchKeys":["get","abstract operator fun get(key: String): String?","love.forte.simboot.filter.MatchParameters.get"]},{"name":"abstract override fun doIntercept(context: EventListenerInterceptor.Context): EventResult","description":"love.forte.simboot.interceptor.AnnotatedBlockingEventListenerInterceptor.doIntercept","location":"simboot-api/love.forte.simboot.interceptor/-annotated-blocking-event-listener-interceptor/do-intercept.html","searchKeys":["doIntercept","abstract override fun doIntercept(context: EventListenerInterceptor.Context): EventResult","love.forte.simboot.interceptor.AnnotatedBlockingEventListenerInterceptor.doIntercept"]},{"name":"abstract override fun invokeOnCompletion(handler: CompletionHandler)","description":"love.forte.simboot.SimbootContext.invokeOnCompletion","location":"simboot-api/love.forte.simboot/-simboot-context/invoke-on-completion.html","searchKeys":["invokeOnCompletion","abstract override fun invokeOnCompletion(handler: CompletionHandler)","love.forte.simboot.SimbootContext.invokeOnCompletion"]},{"name":"abstract override fun isTarget(eventType: Event.Key<*>): Boolean","description":"love.forte.simboot.listener.GenericBootEventListener.isTarget","location":"simboot-api/love.forte.simboot.listener/-generic-boot-event-listener/is-target.html","searchKeys":["isTarget","abstract override fun isTarget(eventType: Event.Key<*>): Boolean","love.forte.simboot.listener.GenericBootEventListener.isTarget"]},{"name":"abstract override val binder: ParameterBinder","description":"love.forte.simboot.listener.ParameterBinderResult.NotEmpty.binder","location":"simboot-api/love.forte.simboot.listener/-parameter-binder-result/-not-empty/binder.html","searchKeys":["binder","abstract override val binder: ParameterBinder","love.forte.simboot.listener.ParameterBinderResult.NotEmpty.binder"]},{"name":"abstract suspend fun arg(context: EventListenerProcessingContext): Result<Any?>","description":"love.forte.simboot.listener.ParameterBinder.arg","location":"simboot-api/love.forte.simboot.listener/-parameter-binder/arg.html","searchKeys":["arg","abstract suspend fun arg(context: EventListenerProcessingContext): Result<Any?>","love.forte.simboot.listener.ParameterBinder.arg"]},{"name":"abstract suspend fun prepareInvoke(context: EventListenerProcessingContext)","description":"love.forte.simboot.interceptor.ListenerPreparer.prepareInvoke","location":"simboot-api/love.forte.simboot.interceptor/-listener-preparer/prepare-invoke.html","searchKeys":["prepareInvoke","abstract suspend fun prepareInvoke(context: EventListenerProcessingContext)","love.forte.simboot.interceptor.ListenerPreparer.prepareInvoke"]},{"name":"abstract suspend fun prepareMatch(context: EventListenerProcessingContext)","description":"love.forte.simboot.interceptor.ListenerPreparer.prepareMatch","location":"simboot-api/love.forte.simboot.interceptor/-listener-preparer/prepare-match.html","searchKeys":["prepareMatch","abstract suspend fun prepareMatch(context: EventListenerProcessingContext)","love.forte.simboot.interceptor.ListenerPreparer.prepareMatch"]},{"name":"abstract suspend fun process(preContent: String?, context: EventListenerProcessingContext): String?","description":"love.forte.simboot.filter.EventFilterContentProcessor.process","location":"simboot-api/love.forte.simboot.filter/-event-filter-content-processor/process.html","searchKeys":["process","abstract suspend fun process(preContent: String?, context: EventListenerProcessingContext): String?","love.forte.simboot.filter.EventFilterContentProcessor.process"]},{"name":"abstract suspend operator override fun invoke(context: EventListenerProcessingContext): EventResult","description":"love.forte.simboot.listener.GenericBootEventListener.invoke","location":"simboot-api/love.forte.simboot.listener/-generic-boot-event-listener/invoke.html","searchKeys":["invoke","abstract suspend operator override fun invoke(context: EventListenerProcessingContext): EventResult","love.forte.simboot.listener.GenericBootEventListener.invoke"]},{"name":"abstract suspend override fun cancel(reason: Throwable?): Boolean","description":"love.forte.simboot.SimbootContext.cancel","location":"simboot-api/love.forte.simboot/-simboot-context/cancel.html","searchKeys":["cancel","abstract suspend override fun cancel(reason: Throwable?): Boolean","love.forte.simboot.SimbootContext.cancel"]},{"name":"abstract suspend override fun intercept(context: EventListenerInterceptor.Context): EventResult","description":"love.forte.simboot.interceptor.AnnotatedEventListenerInterceptor.intercept","location":"simboot-api/love.forte.simboot.interceptor/-annotated-event-listener-interceptor/intercept.html","searchKeys":["intercept","abstract suspend override fun intercept(context: EventListenerInterceptor.Context): EventResult","love.forte.simboot.interceptor.AnnotatedEventListenerInterceptor.intercept"]},{"name":"abstract suspend override fun join()","description":"love.forte.simboot.SimbootContext.join","location":"simboot-api/love.forte.simboot/-simboot-context/join.html","searchKeys":["join","abstract suspend override fun join()","love.forte.simboot.SimbootContext.join"]},{"name":"abstract suspend override fun match(context: EventListenerProcessingContext): Boolean","description":"love.forte.simboot.listener.GenericBootEventListener.match","location":"simboot-api/love.forte.simboot.listener/-generic-boot-event-listener/match.html","searchKeys":["match","abstract suspend override fun match(context: EventListenerProcessingContext): Boolean","love.forte.simboot.listener.GenericBootEventListener.match"]},{"name":"abstract val application: Any?","description":"love.forte.simboot.SimbootEntranceContext.application","location":"simboot-api/love.forte.simboot/-simboot-entrance-context/application.html","searchKeys":["application","abstract val application: Any?","love.forte.simboot.SimbootEntranceContext.application"]},{"name":"abstract val args: Array<String>","description":"love.forte.simboot.SimbootEntranceContext.args","location":"simboot-api/love.forte.simboot/-simboot-entrance-context/args.html","searchKeys":["args","abstract val args: Array<String>","love.forte.simboot.SimbootEntranceContext.args"]},{"name":"abstract val beanContainer: BeanContainer","description":"love.forte.simboot.listener.ParameterBinderFactory.Context.beanContainer","location":"simboot-api/love.forte.simboot.listener/-parameter-binder-factory/-context/bean-container.html","searchKeys":["beanContainer","abstract val beanContainer: BeanContainer","love.forte.simboot.listener.ParameterBinderFactory.Context.beanContainer"]},{"name":"abstract val binder: ParameterBinder?","description":"love.forte.simboot.listener.ParameterBinderResult.binder","location":"simboot-api/love.forte.simboot.listener/-parameter-binder-result/binder.html","searchKeys":["binder","abstract val binder: ParameterBinder?","love.forte.simboot.listener.ParameterBinderResult.binder"]},{"name":"abstract val key: String","description":"love.forte.simboot.SimbotPropertyResources.key","location":"simboot-api/love.forte.simboot/-simbot-property-resources/key.html","searchKeys":["key","abstract val key: String","love.forte.simboot.SimbotPropertyResources.key"]},{"name":"abstract val logger: Logger","description":"love.forte.simboot.SimbootEntranceContext.logger","location":"simboot-api/love.forte.simboot/-simboot-entrance-context/logger.html","searchKeys":["logger","abstract val logger: Logger","love.forte.simboot.SimbootEntranceContext.logger"]},{"name":"abstract val matcherValue: MatcherValue","description":"love.forte.simboot.filter.Keyword.matcherValue","location":"simboot-api/love.forte.simboot.filter/-keyword/matcher-value.html","searchKeys":["matcherValue","abstract val matcherValue: MatcherValue","love.forte.simboot.filter.Keyword.matcherValue"]},{"name":"abstract val original: String","description":"love.forte.simboot.filter.MatcherValue.original","location":"simboot-api/love.forte.simboot.filter/-matcher-value/original.html","searchKeys":["original","abstract val original: String","love.forte.simboot.filter.MatcherValue.original"]},{"name":"abstract val parameter: KParameter","description":"love.forte.simboot.listener.ParameterBinderFactory.Context.parameter","location":"simboot-api/love.forte.simboot.listener/-parameter-binder-factory/-context/parameter.html","searchKeys":["parameter","abstract val parameter: KParameter","love.forte.simboot.listener.ParameterBinderFactory.Context.parameter"]},{"name":"abstract val regex: Regex","description":"love.forte.simboot.filter.Keyword.regex","location":"simboot-api/love.forte.simboot.filter/-keyword/regex.html","searchKeys":["regex","abstract val regex: Regex","love.forte.simboot.filter.Keyword.regex"]},{"name":"abstract val regex: Regex","description":"love.forte.simboot.filter.MatcherValue.regex","location":"simboot-api/love.forte.simboot.filter/-matcher-value/regex.html","searchKeys":["regex","abstract val regex: Regex","love.forte.simboot.filter.MatcherValue.regex"]},{"name":"abstract val source: KFunction<*>","description":"love.forte.simboot.listener.ParameterBinderFactory.Context.source","location":"simboot-api/love.forte.simboot.listener/-parameter-binder-factory/-context/source.html","searchKeys":["source","abstract val source: KFunction<*>","love.forte.simboot.listener.ParameterBinderFactory.Context.source"]},{"name":"abstract val text: String","description":"love.forte.simboot.filter.Keyword.text","location":"simboot-api/love.forte.simboot.filter/-keyword/text.html","searchKeys":["text","abstract val text: String","love.forte.simboot.filter.Keyword.text"]},{"name":"abstract val values: List<String>","description":"love.forte.simboot.SimbotPropertyResources.values","location":"simboot-api/love.forte.simboot/-simbot-property-resources/values.html","searchKeys":["values","abstract val values: List<String>","love.forte.simboot.SimbotPropertyResources.values"]},{"name":"class DependencyInfo(val properties: Properties)","description":"love.forte.simboot.utils.DependencyInfo","location":"simboot-api/love.forte.simboot.utils/-dependency-info/index.html","searchKeys":["DependencyInfo","class DependencyInfo(val properties: Properties)","love.forte.simboot.utils.DependencyInfo"]},{"name":"class Normal : ParameterBinderResult.NotEmpty","description":"love.forte.simboot.listener.ParameterBinderResult.Normal","location":"simboot-api/love.forte.simboot.listener/-parameter-binder-result/-normal/index.html","searchKeys":["Normal","class Normal : ParameterBinderResult.NotEmpty","love.forte.simboot.listener.ParameterBinderResult.Normal"]},{"name":"class Only : ParameterBinderResult.NotEmpty","description":"love.forte.simboot.listener.ParameterBinderResult.Only","location":"simboot-api/love.forte.simboot.listener/-parameter-binder-result/-only/index.html","searchKeys":["Only","class Only : ParameterBinderResult.NotEmpty","love.forte.simboot.listener.ParameterBinderResult.Only"]},{"name":"class RegexMatcherValue(originalValue: String, isPlainText: Boolean) : MatcherValue","description":"love.forte.simboot.filter.RegexMatcherValue","location":"simboot-api/love.forte.simboot.filter/-regex-matcher-value/index.html","searchKeys":["RegexMatcherValue","class RegexMatcherValue(originalValue: String, isPlainText: Boolean) : MatcherValue","love.forte.simboot.filter.RegexMatcherValue"]},{"name":"class Spare : ParameterBinderResult.NotEmpty","description":"love.forte.simboot.listener.ParameterBinderResult.Spare","location":"simboot-api/love.forte.simboot.listener/-parameter-binder-result/-spare/index.html","searchKeys":["Spare","class Spare : ParameterBinderResult.NotEmpty","love.forte.simboot.listener.ParameterBinderResult.Spare"]},{"name":"class WeakVal<T>(init: Boolean, getFunc: () -> T)","description":"love.forte.simboot.utils.WeakVal","location":"simboot-api/love.forte.simboot.utils/-weak-val/index.html","searchKeys":["WeakVal","class WeakVal<T>(init: Boolean, getFunc: () -> T)","love.forte.simboot.utils.WeakVal"]},{"name":"const val FACTORY_RESOURCE_NAME: String","description":"love.forte.simboot.SimbotPropertyResources.Companion.FACTORY_RESOURCE_NAME","location":"simboot-api/love.forte.simboot/-simbot-property-resources/-companion/-f-a-c-t-o-r-y_-r-e-s-o-u-r-c-e_-n-a-m-e.html","searchKeys":["FACTORY_RESOURCE_NAME","const val FACTORY_RESOURCE_NAME: String","love.forte.simboot.SimbotPropertyResources.Companion.FACTORY_RESOURCE_NAME"]},{"name":"const val KEY_VALUE_SPLIT: String","description":"love.forte.simboot.SimbotPropertyResources.Companion.KEY_VALUE_SPLIT","location":"simboot-api/love.forte.simboot/-simbot-property-resources/-companion/-k-e-y_-v-a-l-u-e_-s-p-l-i-t.html","searchKeys":["KEY_VALUE_SPLIT","const val KEY_VALUE_SPLIT: String","love.forte.simboot.SimbotPropertyResources.Companion.KEY_VALUE_SPLIT"]},{"name":"const val VALUES_SPLIT: String","description":"love.forte.simboot.SimbotPropertyResources.Companion.VALUES_SPLIT","location":"simboot-api/love.forte.simboot/-simbot-property-resources/-companion/-v-a-l-u-e-s_-s-p-l-i-t.html","searchKeys":["VALUES_SPLIT","const val VALUES_SPLIT: String","love.forte.simboot.SimbotPropertyResources.Companion.VALUES_SPLIT"]},{"name":"data class ListenData(val value: KClass<out Event>)","description":"love.forte.simboot.listener.ListenData","location":"simboot-api/love.forte.simboot.listener/-listen-data/index.html","searchKeys":["ListenData","data class ListenData(val value: KClass<out Event>)","love.forte.simboot.listener.ListenData"]},{"name":"data class ListenerData(val id: String, val priority: Int, val async: Boolean, val listens: ListensData?)","description":"love.forte.simboot.listener.ListenerData","location":"simboot-api/love.forte.simboot.listener/-listener-data/index.html","searchKeys":["ListenerData","data class ListenerData(val id: String, val priority: Int, val async: Boolean, val listens: ListensData?)","love.forte.simboot.listener.ListenerData"]},{"name":"data class ListensData(val value: List<ListenData>)","description":"love.forte.simboot.listener.ListensData","location":"simboot-api/love.forte.simboot.listener/-listens-data/index.html","searchKeys":["ListensData","data class ListensData(val value: List<ListenData>)","love.forte.simboot.listener.ListensData"]},{"name":"enum KeywordRegexMatchers : Enum<KeywordRegexMatchers> , KeywordMatcher","description":"love.forte.simboot.filter.KeywordRegexMatchers","location":"simboot-api/love.forte.simboot.filter/-keyword-regex-matchers/index.html","searchKeys":["KeywordRegexMatchers","enum KeywordRegexMatchers : Enum<KeywordRegexMatchers> , KeywordMatcher","love.forte.simboot.filter.KeywordRegexMatchers"]},{"name":"enum MatchType : Enum<MatchType> , KeywordMatcher","description":"love.forte.simboot.filter.MatchType","location":"simboot-api/love.forte.simboot.filter/-match-type/index.html","searchKeys":["MatchType","enum MatchType : Enum<MatchType> , KeywordMatcher","love.forte.simboot.filter.MatchType"]},{"name":"enum MultiFilterMatchType : Enum<MultiFilterMatchType> ","description":"love.forte.simboot.filter.MultiFilterMatchType","location":"simboot-api/love.forte.simboot.filter/-multi-filter-match-type/index.html","searchKeys":["MultiFilterMatchType","enum MultiFilterMatchType : Enum<MultiFilterMatchType> ","love.forte.simboot.filter.MultiFilterMatchType"]},{"name":"enum StringMatchers : Enum<StringMatchers> , StringMatcher","description":"love.forte.simboot.filter.StringMatchers","location":"simboot-api/love.forte.simboot.filter/-string-matchers/index.html","searchKeys":["StringMatchers","enum StringMatchers : Enum<StringMatchers> , StringMatcher","love.forte.simboot.filter.StringMatchers"]},{"name":"fun <R> FunctionalBindableEventListener(matcher: suspend (EventListenerProcessingContext) -> Boolean, caller: KFunction<R>)","description":"love.forte.simboot.listener.FunctionalBindableEventListener.FunctionalBindableEventListener","location":"simboot-api/love.forte.simboot.listener/-functional-bindable-event-listener/-functional-bindable-event-listener.html","searchKeys":["FunctionalBindableEventListener","fun <R> FunctionalBindableEventListener(matcher: suspend (EventListenerProcessingContext) -> Boolean, caller: KFunction<R>)","love.forte.simboot.listener.FunctionalBindableEventListener.FunctionalBindableEventListener"]},{"name":"fun <T> WeakVal(init: Boolean, getFunc: () -> T)","description":"love.forte.simboot.utils.WeakVal.WeakVal","location":"simboot-api/love.forte.simboot.utils/-weak-val/-weak-val.html","searchKeys":["WeakVal","fun <T> WeakVal(init: Boolean, getFunc: () -> T)","love.forte.simboot.utils.WeakVal.WeakVal"]},{"name":"fun BindException()","description":"love.forte.simboot.listener.BindException.BindException","location":"simboot-api/love.forte.simboot.listener/-bind-exception/-bind-exception.html","searchKeys":["BindException","fun BindException()","love.forte.simboot.listener.BindException.BindException"]},{"name":"fun BindException(cause: Throwable?)","description":"love.forte.simboot.listener.BindException.BindException","location":"simboot-api/love.forte.simboot.listener/-bind-exception/-bind-exception.html","searchKeys":["BindException","fun BindException(cause: Throwable?)","love.forte.simboot.listener.BindException.BindException"]},{"name":"fun BindException(message: String?)","description":"love.forte.simboot.listener.BindException.BindException","location":"simboot-api/love.forte.simboot.listener/-bind-exception/-bind-exception.html","searchKeys":["BindException","fun BindException(message: String?)","love.forte.simboot.listener.BindException.BindException"]},{"name":"fun BindException(message: String?, cause: Throwable?)","description":"love.forte.simboot.listener.BindException.BindException","location":"simboot-api/love.forte.simboot.listener/-bind-exception/-bind-exception.html","searchKeys":["BindException","fun BindException(message: String?, cause: Throwable?)","love.forte.simboot.listener.BindException.BindException"]},{"name":"fun ComponentRegistryConfigure()","description":"love.forte.simboot.config.ComponentRegistryConfigure.ComponentRegistryConfigure","location":"simboot-api/love.forte.simboot.config/-component-registry-configure/-component-registry-configure.html","searchKeys":["ComponentRegistryConfigure","fun ComponentRegistryConfigure()","love.forte.simboot.config.ComponentRegistryConfigure.ComponentRegistryConfigure"]},{"name":"fun DependencyInfo(properties: Properties)","description":"love.forte.simboot.utils.DependencyInfo.DependencyInfo","location":"simboot-api/love.forte.simboot.utils/-dependency-info/-dependency-info.html","searchKeys":["DependencyInfo","fun DependencyInfo(properties: Properties)","love.forte.simboot.utils.DependencyInfo.DependencyInfo"]},{"name":"fun FunctionalEventListener()","description":"love.forte.simboot.listener.FunctionalEventListener.FunctionalEventListener","location":"simboot-api/love.forte.simboot.listener/-functional-event-listener/-functional-event-listener.html","searchKeys":["FunctionalEventListener","fun FunctionalEventListener()","love.forte.simboot.listener.FunctionalEventListener.FunctionalEventListener"]},{"name":"fun ListenData(value: KClass<out Event>)","description":"love.forte.simboot.listener.ListenData.ListenData","location":"simboot-api/love.forte.simboot.listener/-listen-data/-listen-data.html","searchKeys":["ListenData","fun ListenData(value: KClass<out Event>)","love.forte.simboot.listener.ListenData.ListenData"]},{"name":"fun ListenerData(id: String, priority: Int, async: Boolean, listens: ListensData?)","description":"love.forte.simboot.listener.ListenerData.ListenerData","location":"simboot-api/love.forte.simboot.listener/-listener-data/-listener-data.html","searchKeys":["ListenerData","fun ListenerData(id: String, priority: Int, async: Boolean, listens: ListensData?)","love.forte.simboot.listener.ListenerData.ListenerData"]},{"name":"fun ListensData(value: List<ListenData>)","description":"love.forte.simboot.listener.ListensData.ListensData","location":"simboot-api/love.forte.simboot.listener/-listens-data/-listens-data.html","searchKeys":["ListensData","fun ListensData(value: List<ListenData>)","love.forte.simboot.listener.ListensData.ListensData"]},{"name":"fun RegexMatcherValue(originalValue: String, isPlainText: Boolean)","description":"love.forte.simboot.filter.RegexMatcherValue.RegexMatcherValue","location":"simboot-api/love.forte.simboot.filter/-regex-matcher-value/-regex-matcher-value.html","searchKeys":["RegexMatcherValue","fun RegexMatcherValue(originalValue: String, isPlainText: Boolean)","love.forte.simboot.filter.RegexMatcherValue.RegexMatcherValue"]},{"name":"fun SimbootApplicationException()","description":"love.forte.simboot.SimbootApplicationException.SimbootApplicationException","location":"simboot-api/love.forte.simboot/-simboot-application-exception/-simboot-application-exception.html","searchKeys":["SimbootApplicationException","fun SimbootApplicationException()","love.forte.simboot.SimbootApplicationException.SimbootApplicationException"]},{"name":"fun SimbootApplicationException(cause: Throwable?)","description":"love.forte.simboot.SimbootApplicationException.SimbootApplicationException","location":"simboot-api/love.forte.simboot/-simboot-application-exception/-simboot-application-exception.html","searchKeys":["SimbootApplicationException","fun SimbootApplicationException(cause: Throwable?)","love.forte.simboot.SimbootApplicationException.SimbootApplicationException"]},{"name":"fun SimbootApplicationException(message: String?)","description":"love.forte.simboot.SimbootApplicationException.SimbootApplicationException","location":"simboot-api/love.forte.simboot/-simboot-application-exception/-simboot-application-exception.html","searchKeys":["SimbootApplicationException","fun SimbootApplicationException(message: String?)","love.forte.simboot.SimbootApplicationException.SimbootApplicationException"]},{"name":"fun SimbootApplicationException(message: String?, cause: Throwable?)","description":"love.forte.simboot.SimbootApplicationException.SimbootApplicationException","location":"simboot-api/love.forte.simboot/-simboot-application-exception/-simboot-application-exception.html","searchKeys":["SimbootApplicationException","fun SimbootApplicationException(message: String?, cause: Throwable?)","love.forte.simboot.SimbootApplicationException.SimbootApplicationException"]},{"name":"fun StringMatcher.toKeywordMatcher(): KeywordMatcher","description":"love.forte.simboot.filter.toKeywordMatcher","location":"simboot-api/love.forte.simboot.filter/to-keyword-matcher.html","searchKeys":["toKeywordMatcher","fun StringMatcher.toKeywordMatcher(): KeywordMatcher","love.forte.simboot.filter.toKeywordMatcher"]},{"name":"fun dependencyInfo(group: String, id: String, loader: ClassLoader? = null): DependencyInfo?","description":"love.forte.simboot.utils.dependencyInfo","location":"simboot-api/love.forte.simboot.utils/dependency-info.html","searchKeys":["dependencyInfo","fun dependencyInfo(group: String, id: String, loader: ClassLoader? = null): DependencyInfo?","love.forte.simboot.utils.dependencyInfo"]},{"name":"fun empty(): ParameterBinderResult.Empty","description":"love.forte.simboot.listener.ParameterBinderResult.Companion.empty","location":"simboot-api/love.forte.simboot.listener/-parameter-binder-result/-companion/empty.html","searchKeys":["empty","fun empty(): ParameterBinderResult.Empty","love.forte.simboot.listener.ParameterBinderResult.Companion.empty"]},{"name":"fun findKey(key: String): SimbotPropertyResources","description":"love.forte.simboot.SimbotPropertyResources.Companion.findKey","location":"simboot-api/love.forte.simboot/-simbot-property-resources/-companion/find-key.html","searchKeys":["findKey","fun findKey(key: String): SimbotPropertyResources","love.forte.simboot.SimbotPropertyResources.Companion.findKey"]},{"name":"fun interface BeanContainerFactory : Function1<Configuration, BeanContainer> ","description":"love.forte.simboot.factory.BeanContainerFactory","location":"simboot-api/love.forte.simboot.factory/-bean-container-factory/index.html","searchKeys":["BeanContainerFactory","fun interface BeanContainerFactory : Function1<Configuration, BeanContainer> ","love.forte.simboot.factory.BeanContainerFactory"]},{"name":"fun interface BotRegistrarFactory : Function1<EventProcessor, BotRegistrar> ","description":"love.forte.simboot.factory.BotRegistrarFactory","location":"simboot-api/love.forte.simboot.factory/-bot-registrar-factory/index.html","searchKeys":["BotRegistrarFactory","fun interface BotRegistrarFactory : Function1<EventProcessor, BotRegistrar> ","love.forte.simboot.factory.BotRegistrarFactory"]},{"name":"fun interface ConfigurationFactory : Function1<SimbootEntranceContext, Configuration> ","description":"love.forte.simboot.factory.ConfigurationFactory","location":"simboot-api/love.forte.simboot.factory/-configuration-factory/index.html","searchKeys":["ConfigurationFactory","fun interface ConfigurationFactory : Function1<SimbootEntranceContext, Configuration> ","love.forte.simboot.factory.ConfigurationFactory"]},{"name":"fun interface KeywordMatcher : Matcher<String, Keyword> ","description":"love.forte.simboot.filter.KeywordMatcher","location":"simboot-api/love.forte.simboot.filter/-keyword-matcher/index.html","searchKeys":["KeywordMatcher","fun interface KeywordMatcher : Matcher<String, Keyword> ","love.forte.simboot.filter.KeywordMatcher"]},{"name":"fun interface Matcher<T, R>","description":"love.forte.simboot.Matcher","location":"simboot-api/love.forte.simboot/-matcher/index.html","searchKeys":["Matcher","fun interface Matcher<T, R>","love.forte.simboot.Matcher"]},{"name":"fun interface StringMatcher : Matcher<String, String> ","description":"love.forte.simboot.filter.StringMatcher","location":"simboot-api/love.forte.simboot.filter/-string-matcher/index.html","searchKeys":["StringMatcher","fun interface StringMatcher : Matcher<String, String> ","love.forte.simboot.filter.StringMatcher"]},{"name":"fun normal(binder: ParameterBinder, priority: Int = PriorityConstant.NORMAL): ParameterBinderResult.NotEmpty","description":"love.forte.simboot.listener.ParameterBinderResult.Companion.normal","location":"simboot-api/love.forte.simboot.listener/-parameter-binder-result/-companion/normal.html","searchKeys":["normal","fun normal(binder: ParameterBinder, priority: Int = PriorityConstant.NORMAL): ParameterBinderResult.NotEmpty","love.forte.simboot.listener.ParameterBinderResult.Companion.normal"]},{"name":"fun only(binder: ParameterBinder, priority: Int = PriorityConstant.NORMAL): ParameterBinderResult.NotEmpty","description":"love.forte.simboot.listener.ParameterBinderResult.Companion.only","location":"simboot-api/love.forte.simboot.listener/-parameter-binder-result/-companion/only.html","searchKeys":["only","fun only(binder: ParameterBinder, priority: Int = PriorityConstant.NORMAL): ParameterBinderResult.NotEmpty","love.forte.simboot.listener.ParameterBinderResult.Companion.only"]},{"name":"fun spare(binder: ParameterBinder, priority: Int = PriorityConstant.NORMAL): ParameterBinderResult.NotEmpty","description":"love.forte.simboot.listener.ParameterBinderResult.Companion.spare","location":"simboot-api/love.forte.simboot.listener/-parameter-binder-result/-companion/spare.html","searchKeys":["spare","fun spare(binder: ParameterBinder, priority: Int = PriorityConstant.NORMAL): ParameterBinderResult.NotEmpty","love.forte.simboot.listener.ParameterBinderResult.Companion.spare"]},{"name":"fun toRegex(glob: String): String","description":"love.forte.simboot.utils.Globs.toRegex","location":"simboot-api/love.forte.simboot.utils/-globs/to-regex.html","searchKeys":["toRegex","fun toRegex(glob: String): String","love.forte.simboot.utils.Globs.toRegex"]},{"name":"fun toUnixRegex(glob: String): String","description":"love.forte.simboot.utils.Globs.toUnixRegex","location":"simboot-api/love.forte.simboot.utils/-globs/to-unix-regex.html","searchKeys":["toUnixRegex","fun toUnixRegex(glob: String): String","love.forte.simboot.utils.Globs.toUnixRegex"]},{"name":"fun toWindowsRegex(glob: String): String","description":"love.forte.simboot.utils.Globs.toWindowsRegex","location":"simboot-api/love.forte.simboot.utils/-globs/to-windows-regex.html","searchKeys":["toWindowsRegex","fun toWindowsRegex(glob: String): String","love.forte.simboot.utils.Globs.toWindowsRegex"]},{"name":"fun valueOf(value: String): KeywordRegexMatchers","description":"love.forte.simboot.filter.KeywordRegexMatchers.valueOf","location":"simboot-api/love.forte.simboot.filter/-keyword-regex-matchers/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): KeywordRegexMatchers","love.forte.simboot.filter.KeywordRegexMatchers.valueOf"]},{"name":"fun valueOf(value: String): MatchType","description":"love.forte.simboot.filter.MatchType.valueOf","location":"simboot-api/love.forte.simboot.filter/-match-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): MatchType","love.forte.simboot.filter.MatchType.valueOf"]},{"name":"fun valueOf(value: String): MultiFilterMatchType","description":"love.forte.simboot.filter.MultiFilterMatchType.valueOf","location":"simboot-api/love.forte.simboot.filter/-multi-filter-match-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): MultiFilterMatchType","love.forte.simboot.filter.MultiFilterMatchType.valueOf"]},{"name":"fun valueOf(value: String): StringMatchers","description":"love.forte.simboot.filter.StringMatchers.valueOf","location":"simboot-api/love.forte.simboot.filter/-string-matchers/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): StringMatchers","love.forte.simboot.filter.StringMatchers.valueOf"]},{"name":"fun values(): Array<KeywordRegexMatchers>","description":"love.forte.simboot.filter.KeywordRegexMatchers.values","location":"simboot-api/love.forte.simboot.filter/-keyword-regex-matchers/values.html","searchKeys":["values","fun values(): Array<KeywordRegexMatchers>","love.forte.simboot.filter.KeywordRegexMatchers.values"]},{"name":"fun values(): Array<MatchType>","description":"love.forte.simboot.filter.MatchType.values","location":"simboot-api/love.forte.simboot.filter/-match-type/values.html","searchKeys":["values","fun values(): Array<MatchType>","love.forte.simboot.filter.MatchType.values"]},{"name":"fun values(): Array<MultiFilterMatchType>","description":"love.forte.simboot.filter.MultiFilterMatchType.values","location":"simboot-api/love.forte.simboot.filter/-multi-filter-match-type/values.html","searchKeys":["values","fun values(): Array<MultiFilterMatchType>","love.forte.simboot.filter.MultiFilterMatchType.values"]},{"name":"fun values(): Array<StringMatchers>","description":"love.forte.simboot.filter.StringMatchers.values","location":"simboot-api/love.forte.simboot.filter/-string-matchers/values.html","searchKeys":["values","fun values(): Array<StringMatchers>","love.forte.simboot.filter.StringMatchers.values"]},{"name":"interface AnnotatedBlockingEventListenerInterceptor : AnnotatedEventListenerInterceptor, BlockingEventListenerInterceptor","description":"love.forte.simboot.interceptor.AnnotatedBlockingEventListenerInterceptor","location":"simboot-api/love.forte.simboot.interceptor/-annotated-blocking-event-listener-interceptor/index.html","searchKeys":["AnnotatedBlockingEventListenerInterceptor","interface AnnotatedBlockingEventListenerInterceptor : AnnotatedEventListenerInterceptor, BlockingEventListenerInterceptor","love.forte.simboot.interceptor.AnnotatedBlockingEventListenerInterceptor"]},{"name":"interface AnnotatedEventListenerInterceptor : EventListenerInterceptor","description":"love.forte.simboot.interceptor.AnnotatedEventListenerInterceptor","location":"simboot-api/love.forte.simboot.interceptor/-annotated-event-listener-interceptor/index.html","searchKeys":["AnnotatedEventListenerInterceptor","interface AnnotatedEventListenerInterceptor : EventListenerInterceptor","love.forte.simboot.interceptor.AnnotatedEventListenerInterceptor"]},{"name":"interface BlockingListenerPreparer : ListenerPreparer","description":"love.forte.simboot.interceptor.BlockingListenerPreparer","location":"simboot-api/love.forte.simboot.interceptor/-blocking-listener-preparer/index.html","searchKeys":["BlockingListenerPreparer","interface BlockingListenerPreparer : ListenerPreparer","love.forte.simboot.interceptor.BlockingListenerPreparer"]},{"name":"interface BotManagerFactory<B : Bot> : Function0<BotManager<B>> ","description":"love.forte.simboot.factory.BotManagerFactory","location":"simboot-api/love.forte.simboot.factory/-bot-manager-factory/index.html","searchKeys":["BotManagerFactory","interface BotManagerFactory<B : Bot> : Function0<BotManager<B>> ","love.forte.simboot.factory.BotManagerFactory"]},{"name":"interface Configuration","description":"love.forte.simboot.Configuration","location":"simboot-api/love.forte.simboot/-configuration/index.html","searchKeys":["Configuration","interface Configuration","love.forte.simboot.Configuration"]},{"name":"interface Context","description":"love.forte.simboot.listener.ParameterBinderFactory.Context","location":"simboot-api/love.forte.simboot.listener/-parameter-binder-factory/-context/index.html","searchKeys":["Context","interface Context","love.forte.simboot.listener.ParameterBinderFactory.Context"]},{"name":"interface EventFilterContentProcessor","description":"love.forte.simboot.filter.EventFilterContentProcessor","location":"simboot-api/love.forte.simboot.filter/-event-filter-content-processor/index.html","searchKeys":["EventFilterContentProcessor","interface EventFilterContentProcessor","love.forte.simboot.filter.EventFilterContentProcessor"]},{"name":"interface EventFilterRegistrar","description":"love.forte.simboot.filter.EventFilterRegistrar","location":"simboot-api/love.forte.simboot.filter/-event-filter-registrar/index.html","searchKeys":["EventFilterRegistrar","interface EventFilterRegistrar","love.forte.simboot.filter.EventFilterRegistrar"]},{"name":"interface EventListenerManagerFactory","description":"love.forte.simboot.factory.EventListenerManagerFactory","location":"simboot-api/love.forte.simboot.factory/-event-listener-manager-factory/index.html","searchKeys":["EventListenerManagerFactory","interface EventListenerManagerFactory","love.forte.simboot.factory.EventListenerManagerFactory"]},{"name":"interface GenericBootEventListener : EventListener","description":"love.forte.simboot.listener.GenericBootEventListener","location":"simboot-api/love.forte.simboot.listener/-generic-boot-event-listener/index.html","searchKeys":["GenericBootEventListener","interface GenericBootEventListener : EventListener","love.forte.simboot.listener.GenericBootEventListener"]},{"name":"interface Keyword","description":"love.forte.simboot.filter.Keyword","location":"simboot-api/love.forte.simboot.filter/-keyword/index.html","searchKeys":["Keyword","interface Keyword","love.forte.simboot.filter.Keyword"]},{"name":"interface ListenerAnnotationPostRegisteredProcessor","description":"love.forte.simboot.listener.ListenerAnnotationPostRegisteredProcessor","location":"simboot-api/love.forte.simboot.listener/-listener-annotation-post-registered-processor/index.html","searchKeys":["ListenerAnnotationPostRegisteredProcessor","interface ListenerAnnotationPostRegisteredProcessor","love.forte.simboot.listener.ListenerAnnotationPostRegisteredProcessor"]},{"name":"interface ListenerAnnotationProcessor","description":"love.forte.simboot.listener.ListenerAnnotationProcessor","location":"simboot-api/love.forte.simboot.listener/-listener-annotation-processor/index.html","searchKeys":["ListenerAnnotationProcessor","interface ListenerAnnotationProcessor","love.forte.simboot.listener.ListenerAnnotationProcessor"]},{"name":"interface ListenerInvokePreparer : ListenerPreparer","description":"love.forte.simboot.interceptor.ListenerInvokePreparer","location":"simboot-api/love.forte.simboot.interceptor/-listener-invoke-preparer/index.html","searchKeys":["ListenerInvokePreparer","interface ListenerInvokePreparer : ListenerPreparer","love.forte.simboot.interceptor.ListenerInvokePreparer"]},{"name":"interface ListenerMatchPreparer : ListenerPreparer","description":"love.forte.simboot.interceptor.ListenerMatchPreparer","location":"simboot-api/love.forte.simboot.interceptor/-listener-match-preparer/index.html","searchKeys":["ListenerMatchPreparer","interface ListenerMatchPreparer : ListenerPreparer","love.forte.simboot.interceptor.ListenerMatchPreparer"]},{"name":"interface ListenerPreparer","description":"love.forte.simboot.interceptor.ListenerPreparer","location":"simboot-api/love.forte.simboot.interceptor/-listener-preparer/index.html","searchKeys":["ListenerPreparer","interface ListenerPreparer","love.forte.simboot.interceptor.ListenerPreparer"]},{"name":"interface MatchParameters","description":"love.forte.simboot.filter.MatchParameters","location":"simboot-api/love.forte.simboot.filter/-match-parameters/index.html","searchKeys":["MatchParameters","interface MatchParameters","love.forte.simboot.filter.MatchParameters"]},{"name":"interface MatcherValue","description":"love.forte.simboot.filter.MatcherValue","location":"simboot-api/love.forte.simboot.filter/-matcher-value/index.html","searchKeys":["MatcherValue","interface MatcherValue","love.forte.simboot.filter.MatcherValue"]},{"name":"interface ParameterBinder","description":"love.forte.simboot.listener.ParameterBinder","location":"simboot-api/love.forte.simboot.listener/-parameter-binder/index.html","searchKeys":["ParameterBinder","interface ParameterBinder","love.forte.simboot.listener.ParameterBinder"]},{"name":"interface ParameterBinderFactory","description":"love.forte.simboot.listener.ParameterBinderFactory","location":"simboot-api/love.forte.simboot.listener/-parameter-binder-factory/index.html","searchKeys":["ParameterBinderFactory","interface ParameterBinderFactory","love.forte.simboot.listener.ParameterBinderFactory"]},{"name":"interface ParameterBinderFactoryContainer","description":"love.forte.simboot.listener.ParameterBinderFactoryContainer","location":"simboot-api/love.forte.simboot.listener/-parameter-binder-factory-container/index.html","searchKeys":["ParameterBinderFactoryContainer","interface ParameterBinderFactoryContainer","love.forte.simboot.listener.ParameterBinderFactoryContainer"]},{"name":"interface ParameterBlockingBinder : ParameterBinder","description":"love.forte.simboot.listener.ParameterBlockingBinder","location":"simboot-api/love.forte.simboot.listener/-parameter-blocking-binder/index.html","searchKeys":["ParameterBlockingBinder","interface ParameterBlockingBinder : ParameterBinder","love.forte.simboot.listener.ParameterBlockingBinder"]},{"name":"interface SimbootContext : Survivable","description":"love.forte.simboot.SimbootContext","location":"simboot-api/love.forte.simboot/-simboot-context/index.html","searchKeys":["SimbootContext","interface SimbootContext : Survivable","love.forte.simboot.SimbootContext"]},{"name":"interface SimbootEntrance","description":"love.forte.simboot.SimbootEntrance","location":"simboot-api/love.forte.simboot/-simboot-entrance/index.html","searchKeys":["SimbootEntrance","interface SimbootEntrance","love.forte.simboot.SimbootEntrance"]},{"name":"interface SimbootEntranceContext","description":"love.forte.simboot.SimbootEntranceContext","location":"simboot-api/love.forte.simboot/-simboot-entrance-context/index.html","searchKeys":["SimbootEntranceContext","interface SimbootEntranceContext","love.forte.simboot.SimbootEntranceContext"]},{"name":"interface SimbotPropertyResources","description":"love.forte.simboot.SimbotPropertyResources","location":"simboot-api/love.forte.simboot/-simbot-property-resources/index.html","searchKeys":["SimbotPropertyResources","interface SimbotPropertyResources","love.forte.simboot.SimbotPropertyResources"]},{"name":"object Companion","description":"love.forte.simboot.SimbotPropertyResources.Companion","location":"simboot-api/love.forte.simboot/-simbot-property-resources/-companion/index.html","searchKeys":["Companion","object Companion","love.forte.simboot.SimbotPropertyResources.Companion"]},{"name":"object Companion","description":"love.forte.simboot.listener.ParameterBinderResult.Companion","location":"simboot-api/love.forte.simboot.listener/-parameter-binder-result/-companion/index.html","searchKeys":["Companion","object Companion","love.forte.simboot.listener.ParameterBinderResult.Companion"]},{"name":"object Empty : ParameterBinderResult","description":"love.forte.simboot.listener.ParameterBinderResult.Empty","location":"simboot-api/love.forte.simboot.listener/-parameter-binder-result/-empty/index.html","searchKeys":["Empty","object Empty : ParameterBinderResult","love.forte.simboot.listener.ParameterBinderResult.Empty"]},{"name":"object EmptyFilterParameterMatcher : MatcherValue","description":"love.forte.simboot.filter.EmptyFilterParameterMatcher","location":"simboot-api/love.forte.simboot.filter/-empty-filter-parameter-matcher/index.html","searchKeys":["EmptyFilterParameterMatcher","object EmptyFilterParameterMatcher : MatcherValue","love.forte.simboot.filter.EmptyFilterParameterMatcher"]},{"name":"object EmptyFilterParameters : MatchParameters","description":"love.forte.simboot.filter.EmptyFilterParameters","location":"simboot-api/love.forte.simboot.filter/-empty-filter-parameters/index.html","searchKeys":["EmptyFilterParameters","object EmptyFilterParameters : MatchParameters","love.forte.simboot.filter.EmptyFilterParameters"]},{"name":"object EmptyKeyword : Keyword","description":"love.forte.simboot.filter.EmptyKeyword","location":"simboot-api/love.forte.simboot.filter/-empty-keyword/index.html","searchKeys":["EmptyKeyword","object EmptyKeyword : Keyword","love.forte.simboot.filter.EmptyKeyword"]},{"name":"object Globs","description":"love.forte.simboot.utils.Globs","location":"simboot-api/love.forte.simboot.utils/-globs/index.html","searchKeys":["Globs","object Globs","love.forte.simboot.utils.Globs"]},{"name":"object Ignore","description":"love.forte.simboot.listener.ParameterBinder.Ignore","location":"simboot-api/love.forte.simboot.listener/-parameter-binder/-ignore/index.html","searchKeys":["Ignore","object Ignore","love.forte.simboot.listener.ParameterBinder.Ignore"]},{"name":"object InstallAllComponentRegistryConfigure : ComponentRegistryConfigure","description":"love.forte.simboot.config.InstallAllComponentRegistryConfigure","location":"simboot-api/love.forte.simboot.config/-install-all-component-registry-configure/index.html","searchKeys":["InstallAllComponentRegistryConfigure","object InstallAllComponentRegistryConfigure : ComponentRegistryConfigure","love.forte.simboot.config.InstallAllComponentRegistryConfigure"]},{"name":"object Null : StandardTextContentProcessor, ListenerMatchPreparer","description":"love.forte.simboot.listener.StandardTextContentProcessor.Null","location":"simboot-api/love.forte.simboot.listener/-standard-text-content-processor/-null/index.html","searchKeys":["Null","object Null : StandardTextContentProcessor, ListenerMatchPreparer","love.forte.simboot.listener.StandardTextContentProcessor.Null"]},{"name":"object Trim : StandardTextContentProcessor, ListenerMatchPreparer","description":"love.forte.simboot.listener.StandardTextContentProcessor.Trim","location":"simboot-api/love.forte.simboot.listener/-standard-text-content-processor/-trim/index.html","searchKeys":["Trim","object Trim : StandardTextContentProcessor, ListenerMatchPreparer","love.forte.simboot.listener.StandardTextContentProcessor.Trim"]},{"name":"open class BindException : SimbotIllegalStateException","description":"love.forte.simboot.listener.BindException","location":"simboot-api/love.forte.simboot.listener/-bind-exception/index.html","searchKeys":["BindException","open class BindException : SimbotIllegalStateException","love.forte.simboot.listener.BindException"]},{"name":"open class SimbootApplicationException : SimbotException","description":"love.forte.simboot.SimbootApplicationException","location":"simboot-api/love.forte.simboot/-simboot-application-exception/index.html","searchKeys":["SimbootApplicationException","open class SimbootApplicationException : SimbotException","love.forte.simboot.SimbootApplicationException"]},{"name":"open operator override fun get(key: String): String?","description":"love.forte.simboot.filter.EmptyFilterParameters.get","location":"simboot-api/love.forte.simboot.filter/-empty-filter-parameters/get.html","searchKeys":["get","open operator override fun get(key: String): String?","love.forte.simboot.filter.EmptyFilterParameters.get"]},{"name":"open override fun getParam(name: String, text: String): String?","description":"love.forte.simboot.filter.EmptyFilterParameterMatcher.getParam","location":"simboot-api/love.forte.simboot.filter/-empty-filter-parameter-matcher/get-param.html","searchKeys":["getParam","open override fun getParam(name: String, text: String): String?","love.forte.simboot.filter.EmptyFilterParameterMatcher.getParam"]},{"name":"open override fun getParam(name: String, text: String): String?","description":"love.forte.simboot.filter.RegexMatcherValue.getParam","location":"simboot-api/love.forte.simboot.filter/-regex-matcher-value/get-param.html","searchKeys":["getParam","open override fun getParam(name: String, text: String): String?","love.forte.simboot.filter.RegexMatcherValue.getParam"]},{"name":"open override fun getParameters(text: String?): MatchParameters","description":"love.forte.simboot.filter.EmptyFilterParameterMatcher.getParameters","location":"simboot-api/love.forte.simboot.filter/-empty-filter-parameter-matcher/get-parameters.html","searchKeys":["getParameters","open override fun getParameters(text: String?): MatchParameters","love.forte.simboot.filter.EmptyFilterParameterMatcher.getParameters"]},{"name":"open override fun getParameters(text: String?): MatchParameters","description":"love.forte.simboot.filter.RegexMatcherValue.getParameters","location":"simboot-api/love.forte.simboot.filter/-regex-matcher-value/get-parameters.html","searchKeys":["getParameters","open override fun getParameters(text: String?): MatchParameters","love.forte.simboot.filter.RegexMatcherValue.getParameters"]},{"name":"open override fun matches(text: String): Boolean","description":"love.forte.simboot.filter.EmptyFilterParameterMatcher.matches","location":"simboot-api/love.forte.simboot.filter/-empty-filter-parameter-matcher/matches.html","searchKeys":["matches","open override fun matches(text: String): Boolean","love.forte.simboot.filter.EmptyFilterParameterMatcher.matches"]},{"name":"open override fun matches(text: String): Boolean","description":"love.forte.simboot.filter.RegexMatcherValue.matches","location":"simboot-api/love.forte.simboot.filter/-regex-matcher-value/matches.html","searchKeys":["matches","open override fun matches(text: String): Boolean","love.forte.simboot.filter.RegexMatcherValue.matches"]},{"name":"open override fun registerComponent(applicationBuilder: ApplicationBuilder<*>)","description":"love.forte.simboot.config.InstallAllComponentRegistryConfigure.registerComponent","location":"simboot-api/love.forte.simboot.config/-install-all-component-registry-configure/register-component.html","searchKeys":["registerComponent","open override fun registerComponent(applicationBuilder: ApplicationBuilder<*>)","love.forte.simboot.config.InstallAllComponentRegistryConfigure.registerComponent"]},{"name":"open override val binder: ParameterBinder","description":"love.forte.simboot.listener.ParameterBinderResult.Normal.binder","location":"simboot-api/love.forte.simboot.listener/-parameter-binder-result/-normal/binder.html","searchKeys":["binder","open override val binder: ParameterBinder","love.forte.simboot.listener.ParameterBinderResult.Normal.binder"]},{"name":"open override val binder: ParameterBinder","description":"love.forte.simboot.listener.ParameterBinderResult.Only.binder","location":"simboot-api/love.forte.simboot.listener/-parameter-binder-result/-only/binder.html","searchKeys":["binder","open override val binder: ParameterBinder","love.forte.simboot.listener.ParameterBinderResult.Only.binder"]},{"name":"open override val binder: ParameterBinder","description":"love.forte.simboot.listener.ParameterBinderResult.Spare.binder","location":"simboot-api/love.forte.simboot.listener/-parameter-binder-result/-spare/binder.html","searchKeys":["binder","open override val binder: ParameterBinder","love.forte.simboot.listener.ParameterBinderResult.Spare.binder"]},{"name":"open override val binder: ParameterBinder?","description":"love.forte.simboot.listener.ParameterBinderResult.Empty.binder","location":"simboot-api/love.forte.simboot.listener/-parameter-binder-result/-empty/binder.html","searchKeys":["binder","open override val binder: ParameterBinder?","love.forte.simboot.listener.ParameterBinderResult.Empty.binder"]},{"name":"open override val matcherValue: MatcherValue","description":"love.forte.simboot.filter.EmptyKeyword.matcherValue","location":"simboot-api/love.forte.simboot.filter/-empty-keyword/matcher-value.html","searchKeys":["matcherValue","open override val matcherValue: MatcherValue","love.forte.simboot.filter.EmptyKeyword.matcherValue"]},{"name":"open override val original: String","description":"love.forte.simboot.filter.EmptyFilterParameterMatcher.original","location":"simboot-api/love.forte.simboot.filter/-empty-filter-parameter-matcher/original.html","searchKeys":["original","open override val original: String","love.forte.simboot.filter.EmptyFilterParameterMatcher.original"]},{"name":"open override val original: String","description":"love.forte.simboot.filter.RegexMatcherValue.original","location":"simboot-api/love.forte.simboot.filter/-regex-matcher-value/original.html","searchKeys":["original","open override val original: String","love.forte.simboot.filter.RegexMatcherValue.original"]},{"name":"open override val priority: Int","description":"love.forte.simboot.listener.ParameterBinderResult.Normal.priority","location":"simboot-api/love.forte.simboot.listener/-parameter-binder-result/-normal/priority.html","searchKeys":["priority","open override val priority: Int","love.forte.simboot.listener.ParameterBinderResult.Normal.priority"]},{"name":"open override val priority: Int","description":"love.forte.simboot.listener.ParameterBinderResult.Only.priority","location":"simboot-api/love.forte.simboot.listener/-parameter-binder-result/-only/priority.html","searchKeys":["priority","open override val priority: Int","love.forte.simboot.listener.ParameterBinderResult.Only.priority"]},{"name":"open override val priority: Int","description":"love.forte.simboot.listener.ParameterBinderResult.Spare.priority","location":"simboot-api/love.forte.simboot.listener/-parameter-binder-result/-spare/priority.html","searchKeys":["priority","open override val priority: Int","love.forte.simboot.listener.ParameterBinderResult.Spare.priority"]},{"name":"open override val regex: Regex","description":"love.forte.simboot.filter.EmptyFilterParameterMatcher.regex","location":"simboot-api/love.forte.simboot.filter/-empty-filter-parameter-matcher/regex.html","searchKeys":["regex","open override val regex: Regex","love.forte.simboot.filter.EmptyFilterParameterMatcher.regex"]},{"name":"open override val regex: Regex","description":"love.forte.simboot.filter.EmptyKeyword.regex","location":"simboot-api/love.forte.simboot.filter/-empty-keyword/regex.html","searchKeys":["regex","open override val regex: Regex","love.forte.simboot.filter.EmptyKeyword.regex"]},{"name":"open override val regex: Regex","description":"love.forte.simboot.filter.RegexMatcherValue.regex","location":"simboot-api/love.forte.simboot.filter/-regex-matcher-value/regex.html","searchKeys":["regex","open override val regex: Regex","love.forte.simboot.filter.RegexMatcherValue.regex"]},{"name":"open override val text: String","description":"love.forte.simboot.filter.EmptyKeyword.text","location":"simboot-api/love.forte.simboot.filter/-empty-keyword/text.html","searchKeys":["text","open override val text: String","love.forte.simboot.filter.EmptyKeyword.text"]},{"name":"open suspend operator override fun invoke(context: EventListenerProcessingContext): EventResult","description":"love.forte.simboot.listener.FunctionalBindableEventListener.invoke","location":"simboot-api/love.forte.simboot.listener/-functional-bindable-event-listener/invoke.html","searchKeys":["invoke","open suspend operator override fun invoke(context: EventListenerProcessingContext): EventResult","love.forte.simboot.listener.FunctionalBindableEventListener.invoke"]},{"name":"open suspend override fun arg(context: EventListenerProcessingContext): Result<Any?>","description":"love.forte.simboot.listener.ParameterBlockingBinder.arg","location":"simboot-api/love.forte.simboot.listener/-parameter-blocking-binder/arg.html","searchKeys":["arg","open suspend override fun arg(context: EventListenerProcessingContext): Result<Any?>","love.forte.simboot.listener.ParameterBlockingBinder.arg"]},{"name":"open suspend override fun intercept(context: EventListenerInterceptor.Context): EventResult","description":"love.forte.simboot.interceptor.AnnotatedBlockingEventListenerInterceptor.intercept","location":"simboot-api/love.forte.simboot.interceptor/-annotated-blocking-event-listener-interceptor/intercept.html","searchKeys":["intercept","open suspend override fun intercept(context: EventListenerInterceptor.Context): EventResult","love.forte.simboot.interceptor.AnnotatedBlockingEventListenerInterceptor.intercept"]},{"name":"open suspend override fun match(context: EventListenerProcessingContext): Boolean","description":"love.forte.simboot.listener.FunctionalBindableEventListener.match","location":"simboot-api/love.forte.simboot.listener/-functional-bindable-event-listener/match.html","searchKeys":["match","open suspend override fun match(context: EventListenerProcessingContext): Boolean","love.forte.simboot.listener.FunctionalBindableEventListener.match"]},{"name":"open suspend override fun prepareInvoke(context: EventListenerProcessingContext)","description":"love.forte.simboot.interceptor.BlockingListenerPreparer.prepareInvoke","location":"simboot-api/love.forte.simboot.interceptor/-blocking-listener-preparer/prepare-invoke.html","searchKeys":["prepareInvoke","open suspend override fun prepareInvoke(context: EventListenerProcessingContext)","love.forte.simboot.interceptor.BlockingListenerPreparer.prepareInvoke"]},{"name":"open suspend override fun prepareInvoke(context: EventListenerProcessingContext)","description":"love.forte.simboot.interceptor.ListenerMatchPreparer.prepareInvoke","location":"simboot-api/love.forte.simboot.interceptor/-listener-match-preparer/prepare-invoke.html","searchKeys":["prepareInvoke","open suspend override fun prepareInvoke(context: EventListenerProcessingContext)","love.forte.simboot.interceptor.ListenerMatchPreparer.prepareInvoke"]},{"name":"open suspend override fun prepareMatch(context: EventListenerProcessingContext)","description":"love.forte.simboot.interceptor.BlockingListenerPreparer.prepareMatch","location":"simboot-api/love.forte.simboot.interceptor/-blocking-listener-preparer/prepare-match.html","searchKeys":["prepareMatch","open suspend override fun prepareMatch(context: EventListenerProcessingContext)","love.forte.simboot.interceptor.BlockingListenerPreparer.prepareMatch"]},{"name":"open suspend override fun prepareMatch(context: EventListenerProcessingContext)","description":"love.forte.simboot.interceptor.ListenerInvokePreparer.prepareMatch","location":"simboot-api/love.forte.simboot.interceptor/-listener-invoke-preparer/prepare-match.html","searchKeys":["prepareMatch","open suspend override fun prepareMatch(context: EventListenerProcessingContext)","love.forte.simboot.interceptor.ListenerInvokePreparer.prepareMatch"]},{"name":"open suspend override fun prepareMatch(context: EventListenerProcessingContext)","description":"love.forte.simboot.listener.StandardTextContentProcessor.Null.prepareMatch","location":"simboot-api/love.forte.simboot.listener/-standard-text-content-processor/-null/prepare-match.html","searchKeys":["prepareMatch","open suspend override fun prepareMatch(context: EventListenerProcessingContext)","love.forte.simboot.listener.StandardTextContentProcessor.Null.prepareMatch"]},{"name":"open suspend override fun prepareMatch(context: EventListenerProcessingContext)","description":"love.forte.simboot.listener.StandardTextContentProcessor.Trim.prepareMatch","location":"simboot-api/love.forte.simboot.listener/-standard-text-content-processor/-trim/prepare-match.html","searchKeys":["prepareMatch","open suspend override fun prepareMatch(context: EventListenerProcessingContext)","love.forte.simboot.listener.StandardTextContentProcessor.Trim.prepareMatch"]},{"name":"open val parameterType: Class<*>?","description":"love.forte.simboot.listener.ParameterBinderFactory.Context.parameterType","location":"simboot-api/love.forte.simboot.listener/-parameter-binder-factory/-context/parameter-type.html","searchKeys":["parameterType","open val parameterType: Class<*>?","love.forte.simboot.listener.ParameterBinderFactory.Context.parameterType"]},{"name":"open val priority: Int","description":"love.forte.simboot.listener.ListenerAnnotationProcessor.priority","location":"simboot-api/love.forte.simboot.listener/-listener-annotation-processor/priority.html","searchKeys":["priority","open val priority: Int","love.forte.simboot.listener.ListenerAnnotationProcessor.priority"]},{"name":"open val priority: Int","description":"love.forte.simboot.listener.ParameterBinderFactory.priority","location":"simboot-api/love.forte.simboot.listener/-parameter-binder-factory/priority.html","searchKeys":["priority","open val priority: Int","love.forte.simboot.listener.ParameterBinderFactory.priority"]},{"name":"open val priority: Int","description":"love.forte.simboot.listener.ParameterBinderResult.priority","location":"simboot-api/love.forte.simboot.listener/-parameter-binder-result/priority.html","searchKeys":["priority","open val priority: Int","love.forte.simboot.listener.ParameterBinderResult.priority"]},{"name":"open val sourceMethod: Method?","description":"love.forte.simboot.listener.ParameterBinderFactory.Context.sourceMethod","location":"simboot-api/love.forte.simboot.listener/-parameter-binder-factory/-context/source-method.html","searchKeys":["sourceMethod","open val sourceMethod: Method?","love.forte.simboot.listener.ParameterBinderFactory.Context.sourceMethod"]},{"name":"operator fun getValue(instance: Any, property: KProperty<*>): T","description":"love.forte.simboot.utils.WeakVal.getValue","location":"simboot-api/love.forte.simboot.utils/-weak-val/get-value.html","searchKeys":["getValue","operator fun getValue(instance: Any, property: KProperty<*>): T","love.forte.simboot.utils.WeakVal.getValue"]},{"name":"override val caller: KFunction<R>","description":"love.forte.simboot.listener.FunctionalBindableEventListener.caller","location":"simboot-api/love.forte.simboot.listener/-functional-bindable-event-listener/caller.html","searchKeys":["caller","override val caller: KFunction<R>","love.forte.simboot.listener.FunctionalBindableEventListener.caller"]},{"name":"protected abstract val binders: Array<ParameterBinder>","description":"love.forte.simboot.listener.FunctionalBindableEventListener.binders","location":"simboot-api/love.forte.simboot.listener/-functional-bindable-event-listener/binders.html","searchKeys":["binders","protected abstract val binders: Array<ParameterBinder>","love.forte.simboot.listener.FunctionalBindableEventListener.binders"]},{"name":"protected abstract val caller: KFunction<R>","description":"love.forte.simboot.listener.FunctionalEventListener.caller","location":"simboot-api/love.forte.simboot.listener/-functional-event-listener/caller.html","searchKeys":["caller","protected abstract val caller: KFunction<R>","love.forte.simboot.listener.FunctionalEventListener.caller"]},{"name":"protected fun NotEmpty()","description":"love.forte.simboot.listener.ParameterBinderResult.NotEmpty.NotEmpty","location":"simboot-api/love.forte.simboot.listener/-parameter-binder-result/-not-empty/-not-empty.html","searchKeys":["NotEmpty","protected fun NotEmpty()","love.forte.simboot.listener.ParameterBinderResult.NotEmpty.NotEmpty"]},{"name":"protected fun ParameterBinderResult()","description":"love.forte.simboot.listener.ParameterBinderResult.ParameterBinderResult","location":"simboot-api/love.forte.simboot.listener/-parameter-binder-result/-parameter-binder-result.html","searchKeys":["ParameterBinderResult","protected fun ParameterBinderResult()","love.forte.simboot.listener.ParameterBinderResult.ParameterBinderResult"]},{"name":"protected fun StandardTextContentProcessor()","description":"love.forte.simboot.listener.StandardTextContentProcessor.StandardTextContentProcessor","location":"simboot-api/love.forte.simboot.listener/-standard-text-content-processor/-standard-text-content-processor.html","searchKeys":["StandardTextContentProcessor","protected fun StandardTextContentProcessor()","love.forte.simboot.listener.StandardTextContentProcessor.StandardTextContentProcessor"]},{"name":"protected open fun convertValue(value: Any?, parameter: KParameter): Any?","description":"love.forte.simboot.listener.FunctionalBindableEventListener.convertValue","location":"simboot-api/love.forte.simboot.listener/-functional-bindable-event-listener/convert-value.html","searchKeys":["convertValue","protected open fun convertValue(value: Any?, parameter: KParameter): Any?","love.forte.simboot.listener.FunctionalBindableEventListener.convertValue"]},{"name":"protected open suspend fun resultProcess(result: R): EventResult","description":"love.forte.simboot.listener.FunctionalBindableEventListener.resultProcess","location":"simboot-api/love.forte.simboot.listener/-functional-bindable-event-listener/result-process.html","searchKeys":["resultProcess","protected open suspend fun resultProcess(result: R): EventResult","love.forte.simboot.listener.FunctionalBindableEventListener.resultProcess"]},{"name":"sealed class NotEmpty : ParameterBinderResult","description":"love.forte.simboot.listener.ParameterBinderResult.NotEmpty","location":"simboot-api/love.forte.simboot.listener/-parameter-binder-result/-not-empty/index.html","searchKeys":["NotEmpty","sealed class NotEmpty : ParameterBinderResult","love.forte.simboot.listener.ParameterBinderResult.NotEmpty"]},{"name":"sealed class ParameterBinderResult","description":"love.forte.simboot.listener.ParameterBinderResult","location":"simboot-api/love.forte.simboot.listener/-parameter-binder-result/index.html","searchKeys":["ParameterBinderResult","sealed class ParameterBinderResult","love.forte.simboot.listener.ParameterBinderResult"]},{"name":"sealed class StandardTextContentProcessor : ListenerPreparer","description":"love.forte.simboot.listener.StandardTextContentProcessor","location":"simboot-api/love.forte.simboot.listener/-standard-text-content-processor/index.html","searchKeys":["StandardTextContentProcessor","sealed class StandardTextContentProcessor : ListenerPreparer","love.forte.simboot.listener.StandardTextContentProcessor"]},{"name":"suspend fun match(target: EventListenerProcessingContext, rule: Collection<suspend (target: EventListenerProcessingContext) -> Boolean>): Boolean","description":"love.forte.simboot.filter.MultiFilterMatchType.match","location":"simboot-api/love.forte.simboot.filter/-multi-filter-match-type/match.html","searchKeys":["match","suspend fun match(target: EventListenerProcessingContext, rule: Collection<suspend (target: EventListenerProcessingContext) -> Boolean>): Boolean","love.forte.simboot.filter.MultiFilterMatchType.match"]},{"name":"val async: Boolean","description":"love.forte.simboot.listener.ListenerData.async","location":"simboot-api/love.forte.simboot.listener/-listener-data/async.html","searchKeys":["async","val async: Boolean","love.forte.simboot.listener.ListenerData.async"]},{"name":"val id: String","description":"love.forte.simboot.listener.ListenerData.id","location":"simboot-api/love.forte.simboot.listener/-listener-data/id.html","searchKeys":["id","val id: String","love.forte.simboot.listener.ListenerData.id"]},{"name":"val isPlainText: Boolean","description":"love.forte.simboot.filter.MatchType.isPlainText","location":"simboot-api/love.forte.simboot.filter/-match-type/is-plain-text.html","searchKeys":["isPlainText","val isPlainText: Boolean","love.forte.simboot.filter.MatchType.isPlainText"]},{"name":"val listens: ListensData?","description":"love.forte.simboot.listener.ListenerData.listens","location":"simboot-api/love.forte.simboot.listener/-listener-data/listens.html","searchKeys":["listens","val listens: ListensData?","love.forte.simboot.listener.ListenerData.listens"]},{"name":"val priority: Int","description":"love.forte.simboot.listener.ListenerData.priority","location":"simboot-api/love.forte.simboot.listener/-listener-data/priority.html","searchKeys":["priority","val priority: Int","love.forte.simboot.listener.ListenerData.priority"]},{"name":"val properties: Properties","description":"love.forte.simboot.utils.DependencyInfo.properties","location":"simboot-api/love.forte.simboot.utils/-dependency-info/properties.html","searchKeys":["properties","val properties: Properties","love.forte.simboot.utils.DependencyInfo.properties"]},{"name":"val value: KClass<out Event>","description":"love.forte.simboot.listener.ListenData.value","location":"simboot-api/love.forte.simboot.listener/-listen-data/value.html","searchKeys":["value","val value: KClass<out Event>","love.forte.simboot.listener.ListenData.value"]},{"name":"val value: List<ListenData>","description":"love.forte.simboot.listener.ListensData.value","location":"simboot-api/love.forte.simboot.listener/-listens-data/value.html","searchKeys":["value","val value: List<ListenData>","love.forte.simboot.listener.ListensData.value"]},{"name":"val version: String","description":"love.forte.simboot.utils.DependencyInfo.version","location":"simboot-api/love.forte.simboot.utils/-dependency-info/version.html","searchKeys":["version","val version: String","love.forte.simboot.utils.DependencyInfo.version"]}]